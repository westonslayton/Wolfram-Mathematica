(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3529935,      66526]
NotebookOptionsPosition[   3479953,      65702]
NotebookOutlinePosition[   3480384,      65719]
CellTagsIndexPosition[   3480341,      65716]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", "\[AliasDelimiter]"}]], "Input",
 CellChangeTimes->{{3.8269786129284143`*^9, 
  3.826978613967627*^9}},ExpressionUUID->"6d7cfeb9-0265-4d83-8d5b-\
6474f93e82ee"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.820916819751409*^9, 3.82091682127348*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"fc59e670-00ca-4ffe-aa2c-431bfd188179"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 29 Jan 2021 08:47:01\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "1", ",", "29", ",", "8", ",", "47", ",", 
           "1.675533`6.9767279746704105"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.820916821698758*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7091e677-8720-4cf6-b556-d4baab2eb702"]
}, Open  ]],

Cell["\<\
Consider the ellipse given by x^2/16 + y^2/36 = 1. Generate the curve with 3 \
different M-environments.\
\>", "Text",
 CellChangeTimes->{{3.8209168227164917`*^9, 
  3.8209168617399807`*^9}},ExpressionUUID->"637efe06-cde7-4cb0-8b19-\
5ab151e881f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"6", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Circle", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.820916862831031*^9, 3.8209168880378933`*^9}, {
  3.8209170627152767`*^9, 3.820917069709476*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4d9c7975-9b62-4e90-a703-ff8bd010ea66"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw123k4Vs//P3D7crs51vuUSiqRkqSihWZItiRUpIVUKipZSiWkUrylshOR
ECplDdlm7Fmz72Vfs++73/lcv+vrHx7XOW5nZp6v18z5w5Yrdw3MWZiYmO6x
MjH97/v//+KH//fTFRmZDctrBOx2DbQb/eYGxKMSb49T/ig14/3vWyBgBr7T
bZQHVO8I3cn7CFZ+1iflUpaouMPT8S0GHE57EhNG2VpsNzz57hvgynlXY0f5
b4FVuHFeIug5LLtfhfJlb2NdrvQUYPNEq5yDcgeP7UTitzTwKG8huGCVgBEv
zlSfjcwAPZtPhTtQHk8NOzAVlA0ygy607aC8MjOXpKaBgZjQvlO/VwhYHzRd
x5OXC1TP/5u/Q/lEbkBUpVI+sBR738xGuW8hodAzrQAsG52CG5YJ+PxN6KuF
uGLAGuNRFLxEwAyeDQ9jpEqAgqScqyBlQ64bx09FlIKiozB6aIGAge5VAq8C
K4Bk8yTtBOXIdZ/OiQn+BnGfPsREzlPjU2jlPKteBbbFef6nPEdADy+u+Dpc
DW7xSvx2niUg2OolxudcA+6MXT2ZPkNAxuQS77EjtcDBKHxaaJqA4r/1U8J+
1IEzEWVTd8YJ2HhqSmTdl0agnWzMZjNGQDcNn8c7bjSBsSyNU7dHCcjm1zQu
L9EMbG8e8z8xTMD/zAwNDoS1gAe/xAfj+glYvvnE4JD3H7DIxV1n00dAOXCq
oEj3Lyguerok20vNr5YoCOFpB4d7LzP7dBHwbajo9wDVDpD5oWdisY2Ajy5t
DJzP7ASWzwxKn7YS8BSvt4u6aBd4rb/YydRCQDsreRavh10gS8u6qr+Buv/i
PluRA91gWe9ryrkqAp6jzTzr/9YD1DwOzxblEnA0zM/YL6wfTHIG2MUgAj68
9yH0IdsAWLkp3+acTcDfDeyshpYDICA21kbwJwFffrmQvXRgEMSqP0Tl8QQ0
Xt+Cx8qHQPjSW+c3IQTcLhj49vLCCCixyF77E0TloS7oeInJKDBpOvZAIoCA
m5JKTkgXjIK3Fxx1ArwIGLYe1VW+GQNG2wWieV9Qf3+p2bDBexxkRw5Vn7hN
zdf7nSIV2ydB+cXaDTwWBDTSy9px4NwkODmYZ5FrTkCm87wrgR6TIJfXUUTI
lIDn92h9Pzk2CQaOnyzW1ifgzoW1Dw/Sp4DClVf36PsJOJR8Sean1gxgsKU4
dkzywb91f8Pf3JgHMrnXvpaP8kEzkzzeQf95UGJ8elviEB/0INcbKxfMg6kJ
tqkrXXzw4eTQxVrxBQClO2Utq/lgzmbWhuTmBaDmxMbF9Z0P9lzXd1DSXgLR
Zq/E/zPjgyoVuWobJVeBUcXWIJeLfND10rzS+9Or4HaGnZO1ER/UExX/JPx0
FWi26AUcOskH93waDBxtXQWbhEskbA7yQc+vl0qPe68B8U3mzfa8fPBIyAN8
xIkJftynLt2XyAsFXFCxTjczjPkrv8QTxwtt2YWU1y8ww4pz1gk7o3mhkoDP
1U4+FlgV8azUIJgXSobtjb92mAUePdjXc/IZL/wiyh2v4M0Cres158b1eKF1
kmQh61FWeElCkn9mgA7zZyMlxPzY4OVs7h2Hu+hwEX9KNfzMBp2aQk8/bKXD
COe2Mx45bPBh+unh9go6xMcDPnYNsMGKpjT9i0l0yL5ZadRQmR3+C2gx5XGg
Q//40wNavexQjvHssS4bHQ7LjkKFvZzwfPEme+FlHpjudsXdVYMTpi7u8KyZ
4oEepSyg/BInzJjvEFLs5oFectEdGh6c8I3ku9qPuTzw/MDi8bEuTujn8Via
yYkH5rFu2bbgwwWlDNt1JkZokHHiz9+KEW74vVvrKuqhQTWTOWp4NHjNZrj7
RSsNpjt310Svo0GLpmOyy79oMCSDbnjlGA2WXwyRexNJg7bPhbRcgmjQpbtT
WduIBss+XIwyUOGBEtEsjw785IZ9fgXJUq/pkGg+uj8/nhvuuLQ0fyycDkVn
N4drR3NDfo3lA8bJdHimT9xX3Zcbro6Fulo10+HtqUipqdvckK331cSx7bxw
IHRkw5bN3NDVbteCfyYvdA99xdPpzAWzhkP9U6ncmRbSH3++xwWdJbZ1Dkzz
Qc2w4IFbllww93CntxAnAW2bR4r/nuWCGwk5AYNdBOwhwF9HGS7IXfiOZmdH
wGiznKj3TZyQ44zVC3Fmfhh3Iz/HUYaaV4/WC3Oe/JBDQJH5gzgnnB2bbNEO
4Ie7xV8EZghzQtcbU17vPvBDyx+3Kv4sc0BJhamAHUn8UIZ5JKeunAMe9RfB
9EZ++M/YIN/tFgeMNk3Z/2+zAIx6MMm1IYodRuisuzz6TQDmm0l6WwWyw43O
0ZGRqQJwc3fU30wPdqjOPlJ6GgnAy+07m47ZsMPDVaEZUVUCcJ+RaRz3UXao
eiGriWtKAJYFXCGtG9jgui2wr1FBELqG3j2Wx0Llbh1d0yVDEG7f0GnhN8MK
FzcFZNzIE4R/dGxZzQZYobr81xmtUkE4axAVNljBCk35krNWmwXhDx/rtvQg
VihRLK8vvSAI07fPJhvsZoWS8e4JLgpCEHukCr0xYIEHUbWD9DchWPNgW9MP
NRZ4WKCh1TxFCMo+JdybFFjg2ZOiee8zhSB5suYn3wYWSEu8xFgsEYK5u05V
H6XqMniGNdq2j7rfdL1ioi0zvKZnH2ssJgw/ftt9afE1E9wp9RBP/CcMG4J5
Bp64MMFD9T1ZNC9haPYz7x6zHRN8KxmFxAKE4XBdefi8ERP0mTxUoxghDG31
5sPStjDB7c4dLLIZwlDjnMCO2ZtrIIKP/ZT0oDCMNg6RNvm+AgKf82boHxOB
NMVRF3ufFXAupi/nl6YIFNv4IsHNfgXIq5mGHtYVgVYu/yX7HV0B7uL/OvmM
RWDH8wCO85XLQKym6dojKxGYphdRGzi8BBrCn+89G0T9vp3vHCGxCLoy5rdt
HhCBwRZXbbrZFkGlcaiP4YgIvCUn7RrfuwA4YkCB26QIVPsgGrQ3ZgGoWgdY
Ni5T1wdibf9KL4COE+HBuwQY8KBSVW7X7nnQ8SJEPfogA35Pr/1aJzcLcpvY
xFufMeAulfSwcv5ZwF92Zr+mGwN+y36unTM+A/w0Gtq/v2JAoKQz8SZhBiy5
35m76ceAnbVWj/v2zABPhj6H1ycGjHnA8dJ+9zRQuczrF1vEgKZHPYfPS0wC
17PD55ZYSfj+B9P8L/ZJcO1qWeYFThIyP3/wSr5/AszbDdxMpZGw5X7+zfnP
E+DXNY+w8wIkfHXyfvWpPRPA3tjpsokYCeOGi1n3HxoHe0bUPQ0USThT1LjZ
RHQcnMk/LW90mIRq6S8ec82NgQ6nRRFDZRJqffvvyH+Px0C0nZiv6jESVnGV
/bfbdRSIK+rqNeiS8MVdrXI+v2FwyNJKceAaCeVu9t0dOjsMEmvXmXndoJ73
QR8dkcMg661ktrwlCT1dMqxPh/wDO0OquK/fJWFYVNbbnRFDQKz/bvfLRyQ8
4zWZ8OE7tY9PbOJN9CThrVcHdwhaD4Dw2nyB5TckjJXR8XLeOwD8SjmAijcJ
tSVGrY+n9IOnTNsFMvxJWPftn+Trn32gef68q3kYCW9/G2MSzO8B12z2yUV+
J2HCA72oGy96wPpPtk0vE0jIf6XlarpGDwh08Wm9lkTCRnMF2xPl3eBD/7dx
IpWEY+4DNw7Vd4GoLnntrdnUddur7haBXcDL6GR2Uw4J09VzDvsbdwGP/r9u
/2ESCiWwerX/6QRuMuVbWvJJyKQY+E6lrwMMfGy7pFhKQrOI2t5TsR2AqTH5
KS4j4X39oUPnLTuAQO/owrEKEmZdvm1R1NYOwn3F+w5VkVAvrkbCa/gPOLLt
e2RnPQkNs05m1dFawEpWroV4BzV/fjd2ubxpBkIarl91O0nY99Dx+XbBZnAm
y03pQRcJAx6Jm5usbwKGjIMn0npIuCJkKuMp1QD6YLPQ1AA1f1/PbKF9rQcX
TPf/mhqkPn/UYfiZbD0I4sktGR0i4VAJ3dH8QB0Qln6aXDtMwus9VmhCtQbk
at/YYDxOQmI97ZNWUTUQlObfJzNBUv3wvG6oFuXN8gELlDdYjV85qFcFIgbF
jj6fIqFKn4YQU8xvsHf81TMwTcLpwN/1bt8qgattqsAs5doyntinGeXgtlog
YTBLwsucX2SncRmIiFl0mqPcBZXWXS4uBZPf7isEzlHjbd7Csr3uF2jL2/Ci
cJ6Emm9uPXJuKQYzxauiZxZIKFHpr1LTUQSOXLJYbKNs3e2WZDFSAJ6LnfH/
s0jCG6wHuez+5gOB+pjDpktUPnI5y+x/54HVbVnbWyhzFi6p38e5YO2tlaHu
MgnnZUV/WSViMO4SVp5JuZu3fn+xGgI9Krvdt66Q8KzWP6FYyWywi3nV/Rnl
TJWyTv2hdGAStWQsu0rljamAaWN5Krh2dl7agbLI3NuM9m8pgO1Dw1FEefnh
iZjQt0lgj/jzoBXKBg+FTQ1tEoDKhWGFA2skFMsSnhaOjgMrP1hEr1NuzQoR
v28RC949SlfxomwbwnyvUiYKZNUwf0+m7NVMKqt1fACu1XUmVZSvp7N+7Loe
CNwtpM/0UX54Ln5guuU1+Guz8HqG8i3/dyYHqx4B4U+Qvkq5krkrkmnXZaT0
cblyjfLirzmTkBVX1N0v07BIWVyv4NzBeR+07m/NljHKx7fkxYfahKCb5ROJ
bZRDfk58dpr5iP7+ffMynzL9uI6tlHw0Yt2e+CGScvPRL0xlVl9Qs7fZiiNl
7skiiRtfv6PWpS8fTlE2aN9jtGKXiOY3Br/cQLlUIVhB1ScZ+fkoJ3VQ8+OQ
/zzoacIP5Pjn09YPlBXP/O7JqExDA2a9jYaUPW6bPR8Z/onu3+Cv4aQccle8
bR1PFtqwXlkgiVqfttJpQyXpHCTz4rn/WcrGXj3fvm7D6EToiskktb4Jh45/
TpHPRVcUiu+4U3aQ8qtOV8lDH7lWc0nK+xxKW9L08tHd+NwL4VRe/EWaTT9Z
FSJ47sHlUCpfudu+HvN1KkIdTEllApSjdM41OXgWo31lNKcnVB5tL2r3HPhS
gmprs5LUqfxK9kgqnu6tQM9yGXddZ0h4xNLUgGO6EiXpSvPnU/VhaHre9Bxz
Fdol2Ti/SNWTfaHL7hmiGh3a2P/RcJLqBz+v7pyWqUU1/9kaZ4+S8HlrVr1k
Si3yCBlWLhqh6klOaPH0kTqUWDR36xdVz57BNEaoVj0S3NDxKZ2q9x7movt9
5o1oE+uhd5p9JIw06jrU0d2IInRv7JDrJeF5m2M76syaEN3AvVOA6ic7/H5x
fbnUjGBIZk0+1X/cJboe0862og3ZfemdbSSkXRU7UFPTiloNwj8Et5JQd0vC
Vl+9NlTUHpl0soWE26sWNzPp/EGinr9NIhpJuIt8r/FctR35+M41sdeQ8Af3
gIYAbkdv9A7s8qL64e6Dz/LLxDpQ3bm7ccK/SRhh5bZN/X0Hem+vo0wvJ2Fg
olIGd2AnMg+WivxRSO2PAUN/cl51I5WW0caJNBI6munFwNJutGznrLmZ6u+c
sYYh2Vw9KMH7yah6Cgmh96Gi2Bc9aMvhT22u1P5wdFXXUfVJL9rhdV83M5aE
b/PdRext+pEhzW1aMIjKW9PNj3b6/1DfBd05a1sSfn5eIHLH7x8iKxWl4qn9
7dyW2Q8mjf+QnqxpaN9tEgafZv8sfWkYVfuEmKpQ+6M94Xjv0s0RhP98NIi+
QOX/Y8fuXU5jSF1nJF6W2m9pr21YQ9EYapkqjGGGJCy3P/GXhXkcsR54NVWh
RMIyzeSiS8fG0dolDw8DBRK+uS2g3Vo8jnZefFPFI03thzC6bPj3BHp9+T8/
wEv1c1Fvk6bxCZTzLFQ5lpvav4TvleUITKKNPIraNA4SSpeb8jqenkQJ67f5
ZKwyYOvcb+m0hklEb72+WDbGgMqTUh5SbVNIp5Vvc3IVAy6zKJvHd82gnTb6
8cGvGTBir4LhSZZZlPVbMVL9PwY8O90u17tlFu2Rdrgw7MqAA9qnXVjMZlE2
7N203ZEB/bc/9p38O4vWfOzpOpYM6j3rzWh48xxiDdgfY32cAS9t/Dm1ULKA
uJI1ujbNicAp9h7dgoEFtMVvrpGNOq9FtQc9ceNcRB7jTZm9wyKwizsYzKst
Iie1ttP+XSLQpUxZ5xlaRNO688NfK0Sg6O0qub3JS+jndBB3eoQIJANrziO/
FWSif/yeIXXefBg58t07YQUdP2jB6FYVgUGf4/9eLF9BA5uPhlgqi0B11tup
f1hXUWMWMLCUF4F3H66+crddRVlPfgXLbBSBrrq8a466a2gbkszPHhWG56/d
vmvswoSd3oSLbqTOyyw200Mlr5nwfROVNE4PYXjwi8AthRAmbMvKc3X0uTDU
Gd9ymzWVCV8zmB+JeyAMp/tvkXf+MeF/wsGLoybC8JzWTTXHs8w4erlG2V1G
GFa3yGXYSbLgnWZ3xUULhODjIpPd9vtZcIeTrUdzlhB8dS/zkZ0qC74cGWzi
+0MIrvyWeWNiwoLnrQNPzkYLwbhvdoqz/iz46F4tl0f/CcG2wTcbd7Cx4pzc
bt4HJ4XgGJ2N63EbK67/DIsuVQvCttu2gtWDrNjLVtzLqkQQSp/Ucdgyx4qP
7eDkdsgVhKc3yZ9OFGDDmbRh/qeJgrApKg57qrPhmXsO6ae8BWG+bIf6nng2
rDpYcH3ilCA8cdHtMLcjO34ZefmNYYkA3KOkvVruxo6/T2UqnskVgA/Zjti9
8mXH4V/dXU7+FIDlvYLm81/YsX2g2bz8ZwFoH/OH9GlmxwH2Wekl7gLQ8Kza
wbwDHPj9tgmlHRoC8J9ucyjzEAc+sz/OOw3zQ77zG9gZMxz4ha+y0O50ftgV
5JQvwcSJ51+H3Q+L54dmn7IO72VwYndP2HsvjB+yCEoXs6ty4qWes1/HH/PD
0VuPl4ODOLHoqfcJ2xX44RGHeq2rKlw41q7aVfoUASfPx4cG63DhPQ3Her2P
EHDH7rGBUiMuPCp69siEFAHn9b+fY1hx4cuh/O1+TAT8k7Wsei6YC6sGRUZZ
J/JBqR3SD19McGGJCTvZJwJ8UPyKmuPdYG58+6jgtHgZHcZluoahKG78T2Dt
iF0qHY4/e32GK54bvxxU35/9kQ6DjgtaP8/nxpW9PScPPqRD3QyGoPgwN66t
KK8ok6BD+6xA2/EjNPxe4/OJO4488J5r1Pvmehp2L0kQLtxOg9pm5TSedhpe
6TXVcOanwR+q7xf2D9DweaNz++WWuCFcXtK1XaRhS43RM85V3DBvU6y3jxgP
rv4cZlTgwA3PzbMcv2HOg4f6Nn9cruCCjP/SjuuN8GDriR8hmnc5oe+P2BXP
GR6cz6qcJ2HMCe3qPQdyV6jrt/jNF1U5obgZp64wHx0zRs8f9GFwQsWxvesu
yNLx4XjR/HvZHLBBeTTZ6g4dL7autNJoHPCBplZ1WC8dD+fdp8eEsUH5l8/u
mg3TsVLorSea/7HBc245nJum6NhGvmCmx44NWlxN3fyEiRe7HDBnJrTY4MxG
bWptePH4w82SO6ZYISO10MRBlxevu7FZ0U6dFa6r/qByMIEXL9xQUvEeZIZh
t7wYZCovvs55ViO0lhmqZ7qnjGZS11+pLERlM8PDL3qPuxfzYudjo/djvJmh
8xn2wGt/efHrhIM3Hx1ihpb1p3IwjQ87P2LqPOvOBKtkrzSvXOLD5JHxH7vV
V8HJBga6dJUPn6nN2+YksgrCnx2YT7nJh/9TObyU37MC2vSDTbTs+LB8YqbY
wefUe/Lj0Wpudz4s1kHPyUTLIPLTSdpAPB/en/HbX0lxCexm3nI/K4UP15qt
28HNsQSizklsdP/Jh5MWY1gr6xbBfOGx9ez5fDjuSF0ltF0Eprf2fPGv58Nv
pK6B8rgF8PeNGjP/Ah/u4LfueCk+D0pG9byMVvjw1o4dEX9H5wBffK16ADOB
oy6svtmTPQcUea9vX+Am8NHEzK3ZxnNg58xdtzOiBJZIF8DuPrOgsXe67fIh
Artva1UbZZkBXblLKr+sCXxy+3ELw/YJsH5kYVO2HYE39htqaCRMAE1tW8kv
9gTWHP6Ys+/pBLBkH/p525HAAuw4Zm3rBOjy5G30dSNwk4lJ3LXr4wDt0NG3
eE/g6R/y/7U2jYAD6bUfO8II3CNoe/uIwwiwfrpeWO8jgb1+TS/4bhgBXrL3
L5DRBI6WW7bZYzIMzD+NX9OIJ7CN8qqFYPcQMP3i2iuDCSwemScW+q8fXI1+
yiuZR+DkJ0YpPp794ARhr0sWEPh9Ru2dZ7v7gffec+u7ignsobD1q97dPvBd
aqZw3W8Cq5UV9n6Z7AHBir6xNVUE/oMO7b3n2wOqJp6Gu9YQuGBs/tLB/T2A
dieysqqewDkMiYzE+90gUzByHa2NwHmNa8K35jvBa2Ae7PqHwFcGA1j43nUC
fP2U7NxfApu/l30bd6gTiBXKvCroJLAn0Otpc+gA9rK2BFM/gX99M5AVXfwD
JsrK1x0ZILAtr8iuzUf+gK75qL1Wg9R6TFV2bnRsA9n6YV5Z/wg8n6l5hHW1
Bfj/qV9aGKM+X8+r2oW5Cdxuefx+fJzA+SKDLILqjSB9v/+79gkCK226GBnq
0QDeKoDY6CkCj6f29EQJ1YN/3Fd/Ok9T63U+pl38XB146CMueWqGwPdP/F0O
fF8LNh+IFGieJbCJAb/Bw+01QFCU5uUzR+DS4tzuTotqwKKta6E2T2AOhTMn
NL5Xgb9KRbu8FwjcMSf1gW5VCdbf+iIss0jgZ4Zrr/BsOVjKKDdClLlavF/d
eVIGzqXA4colKn9O09IpXr9AnqW+8ollAn/x1HXUXV8M8i+KDSDKt+0faHZ/
LASBka+GZVYI7PhFccB2ZwGokXmi7UOZo+Hcj5WkPHAro4N5nLJDxSdu1yO5
ILvrnaD6KoH3jNY50d0R8OEPcPSjXGvZf4n7XRbY+jwPtFLuixC7sfb5J9io
y3dRdI3AceXkybGMVBBtbFmtT1kqwCa/uSwZmF8p+fCU8vf5MifUlgCcFzYX
f6ZsLu5lqtr6FQS5XtMopSzQToiuLX8CHcpvxbsp/xu66JMqFg449wcbTFPu
eOloWufiB05oP/2zQvmV9pj5HfenwPqgau4a5fHjYj6a+TdQoUfbysL//v4j
zWP8lq+RRIS+7zDlrWZBcZE2wWg0OeppI+W6Fg3bjWQkIkpbfmVQ1gxzcroy
E4uW8hZvBvxvPEIxXhG139EXfd4rlpT9wkHEyLkkFLyyMUWBcs/DziB2zR+o
bKuC6RI1H7efBz1cp5iO0ieuX02nbHWz8PV2yUx04S7Cdygr7C+VkBHJQdvu
6z/YQHkEsBeKPMNoKkHOLZeaf5vKGVfvhVy08ZPtuCll8cuW81w2+aig1+n3
C2o9U+WSfQZNi9Cfi4+P81K+KjbNbtBYjO51HhN5TeXBJNCnMEW3BE26JeXd
p/LiPPU774ZyOZqwDwn/S+WLw6pPJy2lAr3lrW8ClBcqtLLWdv1GUkO15/5R
+Uw7tjyhxFuNfoYNhR+gPOt27V79r2rE3jR97CGVZ5nn8z8sXGvQt5rgkD4q
/9rJ+/Jdl2rRLVG/gBtUvfDLbRdzGWxAI9tPFJlS9RQv2raxOaURqfjEzetS
9cZmdufuLpcmdEcx6rrgCIGtTxzclcloQcXMt613U/Xr0OmV6XLsD5r4YpHz
p4/Aq0f2kGF8f9FwaY7Ai14Cp7zgX0lq/ovEWGdL0rsInHjHSaVTsQPh5tpX
KVQ/4aks2fCzohPReNOITa0E3rI1vmbrvi4k+wq+d2ym+pmFgqVbUBdiLd1U
Ld5AYEsZ9hJ4tRtBNdu0lUoCy+0bl7SZ70HWmnpD3IjAScOf7OK3DKBXI7wH
urOo/lX8svHnywE0VjjllZxB4NHbe85k/xtAPZ8SnA+lUvlVFZeM/zGIfo8X
H2uJo/p3+CD/Ea1/aKOQNY91ENV/mPRkWq1G0SdD9vQMf6pfj9hUWNSOoiun
frks+1D9tcE2d0xxDLE/GLcwf03g9N92QdZM48jqGHti+VMCd31mfrWrZBxt
nD5VPnGTyr/m5a2ZxpNIjMkpvs+cwJMfTCpN3SfRgLBDR+0VAl/0uz+2ljqJ
XGIHZQMvUs+ToHhVXngKte/b7Zt7itof6s9Um1ROoZ9Cg7ui91PznU+rLFOZ
QW1877XF9xL477tE263WMygqgq/AZzeBY3i2NdiFzaDJvQmllyUJXPZk5SvH
0gxKX58NPpJU/exmMvyXPIuYazr9U+b5MD/v1sxoiXlUyStZkTLNh8OHV5cj
DebRZamFO9/G+bCFaIRmiMs8ymFTGXcboPbrsF1VD9rmUdOgrVBXIx9u5JQz
7/ddQIX39TN3/eDDPa1itQHMSwhuDZTeaMmH/SSw7UDjClK/o3Qy9xofNgzU
bGzmWkUt2R8TLpny4ZEtnAF5h1bRbH23kuMZPnyHtX7wUcgqGvEzDNQ7yodx
GYeZs8kaevA+PcuInw8vll+TsLBhwsJEss+/b7y4xomxd+skMy70dup4HMOL
Ax4ULbHQWPDb/pdRrB95cdRKvd/fLSx4+3xZwIIvL27bFsJ4qc+CdV93nXvy
iBcf/lwU5J/Agu8qXWaeVuXFOWOT7xPusGIJ1nN1b3/T8epmsDWmmw2vWrUV
H/hFx/So7Wo3F9lwHt/nnFpMxwXsmb7bqENB34ZTOXOJdCxumx7hfpQd3/uc
Bjp86dj2Xf5vnnfseP9zly0HDOn4vU7y4LgOB/a6uMV9pY4HO6mH+NASOLH1
f/acseU8WHRDvz57ESc+Gtn1W7uABytHnHi40MqJ6a+1jz9K5sF4C0tXBScX
Fr78h9XBmwcPhLA+kTTlwj8sdnXTdXhwVPltP286Nxbpl5T/L5OGa2pdD22/
QsMnEz+/7kyi4exrr1vr79Owjgfjwb4vNCzToSTq8h8N95ULLOcH0XBKpN/5
3AQaXlYO5Q6i7mMODL4yu0rDzzzf8vPJ0rDoeJa1ZDAPFu4JpalQ7we9Tzv/
OpXR8SfnYL3fXtx47wF/ZuO/dFwa525p5EY9x+o6md0TdFyyYLrt7D1ufCz7
6kvM4MU72YwHOXS5ce4m6WofM158z16t8jgTN56ulqjsnOHFCbM33VQuc+Hx
QzoKtPXUueyEMEP+LBc+nHXy+lMZAn+elszaoM2FtVYcssYAgfWSN1xo2ceF
25a1ChOvU31Ko0uJnZqn2K0d30uTCTxsAi4Ix3HiN+xZVL/nxy98JvJkJzjw
hvpNRnKZ/Hi/6lknzV4OPLLORdC4gB/XPfFPu9DMgS1b5HmcKvjxov3Bn1a5
HNgpQ/pLajs//s6ipafhzYF9ZbkMx1kF8IWGwIrCPRyYKfuS1OMTAjjQ8NNV
/pvsOEE6n/NPgwAuvdm/evAiO75UEyLd+FcA66Rq6l/UY8cm8iHt5X0COMxF
Ssr3IJWj97JMX2cFsLxk3WAuFzum7y9p28sQxFo7RK9KxrLh4eP39W6eEcS0
oRJp8W5WHMx8P9eyQhAXSNvbfGpgxfuNWuNq6wSxznRk1fZSVpzm7jmm2CaI
m6q7O8lEVryPzcVuckgQR0/UR+c6s+J72Uh1D5cQ3vbL8b7selY8LClyq0hF
CPPqvT3yXJsFjw4ru5okCmGV9QoPkpVZ8Fdt4QB6uhA+ujv4YrscC3a+kDz3
I0cI17lVyu0kWbBM3WzkYpkQtkt5e8azm5naX13unegTwo+FOA+/eMyMQ3jS
grhFhfFdw6oDprFMWLqkTWXESRgffer8iRbChDdIs+uzuArjGsl7W5NeM2G/
pQdPBD2E8RPuAb0ZWyYsPv1ov0SAMGZyZG/WUWbC83taG+jfhXG1rm3+y4g1
xIhXxxNtwjjh1K78kuEV5PiV7sSkKIJX2hpKGypXEH980/MRJRH8TknDoTWB
8sXAoDpVETzjwjNZdm8FeR436PXSFcH8J9LktJeXkWFR159ccxF8yqxYN597
GV0bIbpYfUWwaqVqVLfYIjK5w1BbGRDBrD1XhWbXFtCVHRKzO0ZF8LH6fUeY
OxeQyORLV90pEaz0wLOROXIBfeX0kHNboa4zayh8k6Sus4SEfhdg4MT/3u1K
kZlHbv0HfeoOMnD/atY5vG8Wyf8i7OyeMfDb1EfVGxiz6JHE3x7PlwwcVXhq
wGZ+BqVMmjSHezBwb+Y+Xr7sGcQR+EQ93YeBBR4ErHKozyClrmyRTxEMbHmi
ppnZaBrl3ApNuJ/LwH69Cs9170+imfdSV4YXGVjrF3szj9EkqjawMDqzysBn
1qJTCw5OIoNamaRUZhKzqfdKSi9PoJ28o36WXCRus9rzJfvZBLrRGTj/RoTE
spKXUze8HUfo5tLLElkSL7YktyCtEeT+7udjpkskFq/hnKZzjiAgNvZwxJTE
GXG7s/ULhpFT5I2C2iskvnD86te8o8PIXbVa1fMmiZ87ShJq+/4h0VOoKM6O
xHbyrD/rRQdR48C6I1/dSdzl9rskunEABQ/zZMu8InH4WbVsa78BtFm53SXm
NYm5JqTejfEOoLf/6Ze5+5DYakUbhjD1o6w7y0aLISSOcxjfndnTg5jyn2YG
fSPxidMX7LZ97EFpY0607/EkzinRrXpxqQetMPd5ZSWSeM8jdbFDDd1oc1i4
SuEPEsN3ItIXi7tQIkvW1hfZJGYiDbUCn3ehIAGOTdcQiV2VFDdWgC50REJJ
WymXGp/qCynp9E6kbqp/pKmAxCWSGtNRsR3INrjKIqeMxEdpj0rSrnWgXN9N
I9crSOqcWTBcKN6Bbhie/sD1m8QPeFgaY/e2o4C4928Ua0i8tex2/UOBPwjL
0T2PNZG4Oatz0ed3E5I/NRMp1E09n1Bgh5JeE/KY9FQ83EPiZQuOlI6qRsSv
31h7vpfE/GdORDJqGlDEffPtHv3U+uzVEgN1dUhQp1vi4z8S7y4JG848U4dq
tJ/NBg6T2DPjWMy++lp0Tj670n2ExJsS2y8LN9Sg/bGkz7kxEr9IMDULa6xC
5EFpk4RJEntnSvLNGlWhTuEbJg+mSHxRUUPHN+E3Sn3639WD0yROsX8tW5pY
geyzsx7HzpC4Iu365fNJ5cjko80bo1kS7+IsvNGdVIaugNOfmOZIvN/m6GxH
cgkSPTbzF86TODhsevlsyi/0L9GcuYlyW7t5U0FKMdoxckXKYoHE01tz6d4/
CtFRnXtOjxZJfMfDoHf0RwHyt1L7Nk95e+KIt0ZqPjI7v77DZonEPZ/Drg+l
5qL5FWNdg2UqLwrX+Q6kYZTw5fV/Pyknfz8gNGeFUD7NsFh0hcRFmnJyjnez
UV99MKc95XOX708t3M1EGarHtcsoe06iNmvrn6iRA74VXaXykFR+q9M6DdUZ
Pmi4Stmx31hcx+YHOtbXtDmG8l9dKYdEm2SU3X/6Vg/lq6sz8wK2iaiX3py+
YY3EJ135D7X1fEc3X57nOkn56YxqiWfvF8TFVm78kDJe5YlQ6ItGfilbv4VS
zl+byWvpi0Azx8+yZFMOf7XeaLoyFMn0XjBuoFz1NiN1V5U/OnNULmmQctfX
eo3MiFcoyrGCPkdZS07sgZz2A2StLWexSvnoeo8ehStmQLrasHiNsq41S5C8
oSsw+QmllihzMiz3Dkr7ALxzzH2csvzh769TdgQD0fJrw+2U2XyaErKEPgKj
/E/6JZTh6q5GUaFPwPlHWnoc5W6O4xl2gp9BfNHHLR6UrUKDzhcJfAOSwbc9
zSj//qjb5u6eABQMti7IU/4QY2650z0JHPeqvLFKzdesT6VRsVsKKLvn3JRP
2SmrWMLULRWc+gBPPKfsW+ClP/EyHVyT3Y6VKHOKB5WxvMwCYXdDE0Kp9co4
tMfQ4XEOuIa15tQpv3rYq3H/IAb2p8cfD1Hrr2l/OrB5dx4wv/0SiFPmjg3R
f7EjH7x3jHZOovJz9Xqqrcy2AlDWvWX5KGWZm2j+1roiELsanKRO5U3Ky6SX
VagY6GrX/cul8pm0U14zgPcXKNvYcVWRsnZG35PPLKVgJG2GX4DK8y2xvm3P
hytAcrHg1SdUfaiVusgO9FWCtx+qAsqp+nklZlR5vPM32BHrTROmLDsWNzo9
VAX+tPxO8qbqD5WcOH2jvQaUzNzi0aTqMzPSpufhxVrwrPmm2o1REh/rmfj9
orkWjA5N5LhQ9Rz6b0rZu7YO7NRyexRB1f/STPvuW8UN4CnzNp6PVH+Q1UrW
OqPWCFQzWg19+kisN9fzWzG3Ecg0M/c5Uf2k9btT5EhGE7go8PH3Mar/5JR7
iAt8bwEqs/mNHn9JfIRLV7N0Zyt4XWyvrvuHyv+FkiHHmFYgYli1yNNGYq/s
vTsqw9vAqYffD9g3k7jxuiTY5PsXhF7rXmavI7Gi//JsGNEOfgm+/RhC9b/w
XM3D6z3bwc9q2ze7qkmsbNN5/7FqB9BUPa56uJLEzusFW6WPdALIwtgo9Isa
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
HHrUkvX/AIUWHTE=
       "]]},
     Annotation[#, "Charting`Private`Tag$2852#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->CircleBox[{0, 0}],
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-3.9999995325406914`, 4.}, {-5.999999155687228, 
   5.999999269646931}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.820916890640005*^9, 3.820917070183858*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"4a57d21a-34e4-4e61-8318-738b4ea3b0bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "/", "16"}], "+", 
     RowBox[{
      RowBox[{"y", "^", "2"}], "/", "36"}]}], "\[Equal]", "1"}], ",", 
   "\[IndentingNewLine]", "y"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8209172134746923`*^9, 3.820917228988709*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"393b68f2-b7ba-45cd-8497-44ea1591f357"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      SqrtBox[
       RowBox[{"16", "-", 
        SuperscriptBox["x", "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     FractionBox[
      RowBox[{"3", " ", 
       SqrtBox[
        RowBox[{"16", "-", 
         SuperscriptBox["x", "2"]}]]}], "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8209172295421133`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a953b77f-75e3-4eb8-909d-fb84389878de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      SqrtBox[
       RowBox[{"16", "-", 
        SuperscriptBox["x", "2"]}]]}], ",", 
     FractionBox[
      RowBox[{"3", " ", 
       SqrtBox[
        RowBox[{"16", "-", 
         SuperscriptBox["x", "2"]}]]}], "2"]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.820917187963088*^9, 3.820917189635992*^9}, {
  3.8209172519114313`*^9, 3.820917310820952*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"695c2289-5114-415b-844c-545a7daa0ac4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$3050#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$3050#2"]& ]}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-5.999999824609752, 
     5.999999824609752}}, {{-6.283185307179586, 
    6.283185307179586}, {-5.999999824609752, 5.999999824609752}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.820917293293942*^9, 3.820917311286775*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"1fcd29cd-f014-416f-afca-0ee7ab7970fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Blue", ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.820917435917616*^9, 3.820917506869364*^9}, {
  3.820917553022147*^9, 3.820917570294702*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d0eb29e0-b1fa-46d7-8d9b-6d4a166d4c71"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 1], CircleBox[{0, 0}, {4., 6.}]},
  AspectRatio->1,
  Axes->True]], "Output",
 CellChangeTimes->{{3.820917461149263*^9, 3.820917507215736*^9}, {
  3.82091755736467*^9, 3.8209175708805237`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"2a82fcd9-d2e2-4ca8-8c98-50876285ae6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.821536071357464*^9, 3.8215360716887197`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8cddc374-4472-4650-a9e3-18fad3f35813"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 5 Feb 2021 12:47:51\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "2", ",", "5", ",", "12", ",", "47", ",", 
           "51.928659`8.4679820828163"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.821536071963455*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"2bf0edd7-3514-4f2e-830a-ce2fc85a9be0"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s generate a scaled version of the \
moon\[CloseCurlyQuote]s orbit around the earth. Wee need the radii of the \
moon & earth\
\>", "Text",
 CellChangeTimes->{{3.82153614102531*^9, 3.8215361539956293`*^9}, {
  3.821536231246038*^9, 
  3.821536252666851*^9}},ExpressionUUID->"aec3614f-8b9e-4e1a-aad9-\
12e304675856"],

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8215362065004787`*^9, 
  3.8215362283121862`*^9}},ExpressionUUID->"821ffb0a-0b0a-437a-be7a-\
97df41d6893f"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.821952903764853*^9, 3.8219529042111683`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8080a522-bc56-454d-98d7-8f8f50b185b8"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 10 Feb 2021 08:35:04\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "2", ",", "10", ",", "8", ",", "35", ",", 
           "4.749839`7.429253877147155"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8219529047789392`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f2f98d45-259b-4f6b-95a0-ab0e74c7eff9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "5"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "5"}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"thing", " ", "to", " ", "rotate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Pi", "/", "9"}], ",", 
       RowBox[{"(*", 
        RowBox[{"amount", " ", "of", " ", "rotation"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"center", " ", "of", " ", "rotation"}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "5"}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"thing", " ", "to", " ", "rotate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"2", 
        RowBox[{"Pi", "/", "9"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"amount", " ", "of", " ", "rotation"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"center", " ", "of", " ", "rotation"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.821952913840559*^9, 3.821953252479144*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"14feeca7-93db-4b4e-929c-4c95b22c5b66"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}, {8., 5.}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{
     0.9396926207859084, -0.3420201433256687}, {0.3420201433256687, 
     0.9396926207859084}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{
     0.7660444431189781, -0.6427876096865393}, {0.6427876096865393, 
     0.7660444431189781}}, {0, 0}}]},
  Axes->True]], "Output",
 CellChangeTimes->{
  3.8219531090732107`*^9, {3.8219531471583853`*^9, 3.8219531897084017`*^9}, {
   3.821953238298123*^9, 3.8219532537901897`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"aef59944-a541-4e73-91ba-6dad728559ab"]
}, Open  ]],

Cell["\<\
Make an ellipse\[CloseCurlyDoubleQuote]flower\[CloseCurlyDoubleQuote]by \
spacing enough ellipses at 20\.ba intervals to wrap completely around the \
origin.\
\>", "Text",
 CellChangeTimes->{{3.821953348634932*^9, 
  3.8219533783716097`*^9}},ExpressionUUID->"8de2294d-df72-4e45-ae11-\
4aa9d28a0336"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", "5"}], "}"}]}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{"thing", " ", "to", " ", "rotate"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"k", " ", 
         RowBox[{"Pi", "/", "9"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"amount", " ", "of", " ", "rotation"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{"center", " ", "of", " ", "rotation"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "8", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.82195339649671*^9, 3.8219534629016323`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"78dc75b0-e6af-4320-a929-db84f764507a"],

Cell[BoxData[
 GraphicsBox[{
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{1, 0}, {0, 1}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{
     0.9396926207859084, -0.3420201433256687}, {0.3420201433256687, 
     0.9396926207859084}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{
     0.7660444431189781, -0.6427876096865393}, {0.6427876096865393, 
     0.7660444431189781}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{0.5, -0.8660254037844386}, {
     0.8660254037844386, 0.5}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{
     0.17364817766693033`, -0.984807753012208}, {0.984807753012208, 
     0.17364817766693033`}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{-0.17364817766693033`, \
-0.984807753012208}, {0.984807753012208, -0.17364817766693033`}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{-0.5, -0.8660254037844386}, {
     0.8660254037844386, -0.5}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{-0.7660444431189781, \
-0.6427876096865393}, {0.6427876096865393, -0.7660444431189781}}, {0, 0}}], 
   GeometricTransformationBox[
    CircleBox[{0, 0}, {8., 5.}], {{{-0.9396926207859084, \
-0.3420201433256687}, {0.3420201433256687, -0.9396926207859084}}, {0, 0}}]},
  Axes->True]], "Output",
 CellChangeTimes->{3.821953469023241*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"db0f66cb-3865-4b9a-9ba6-52dbfb6c50f7"]
}, Open  ]],

Cell["\<\
Turn this logic into a function ellipses[a,b,number] that draws the given \
number of a by b ellipses, rotated appropriately.\
\>", "Text",
 CellChangeTimes->{{3.821953544658782*^9, 
  3.821953574074155*^9}},ExpressionUUID->"c402c173-c4dd-40b5-adcd-\
4ca440e25e53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ellipses", "[", 
   RowBox[{"a_", ",", "b_", ",", "number_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Hue", "[", 
          RowBox[{"k", "/", "number"}], "]"}], ",", "Thick", ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"thing", " ", "to", " ", "rotate"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"k", " ", 
        RowBox[{"Pi", "/", "number"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"amount", " ", "of", " ", "rotation"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"center", " ", "of", " ", "rotation"}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"number", "-", "1"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.821953575177533*^9, 3.821953666786706*^9}, {
  3.821953854305275*^9, 3.821953862123817*^9}, {3.821954034789329*^9, 
  3.821954222607564*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"da475827-d494-4923-8a69-56e3fbcb137c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ellipses", "[", 
  RowBox[{"8", ",", "5", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.821953670280632*^9, 3.821953682357944*^9}, {
  3.821953737504899*^9, 3.821953769941725*^9}, {3.8219539214873*^9, 
  3.8219539239094543`*^9}, {3.821954041002749*^9, 3.821954041695327*^9}, {
  3.8219541508879747`*^9, 3.8219541510941772`*^9}, {3.8219541982696323`*^9, 
  3.821954198477027*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"0c303397-d754-4e26-bb24-6385218f1f5c"],

Cell[BoxData[
 GraphicsBox[{GeometricTransformationBox[
    {Hue[0], Thickness[Large], CircleBox[{0, 0}, {8., 5.}]}, {{{1, 0}, {0, 
     1}}, {0, 0}}], GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[1, 10], 0.1]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{
     0.9510565162951535, -0.30901699437494745`}, {0.30901699437494745`, 
     0.9510565162951535}}, {0, 0}}], GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[1, 5], 0.2]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{
     0.8090169943749475, -0.5877852522924731}, {0.5877852522924731, 
     0.8090169943749475}}, {0, 0}}], GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[3, 10], 0.3]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{
     0.5877852522924731, -0.8090169943749475}, {0.8090169943749475, 
     0.5877852522924731}}, {0, 0}}], GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[2, 5], 0.4]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{
     0.30901699437494745`, -0.9510565162951535}, {0.9510565162951535, 
     0.30901699437494745`}}, {0, 0}}], GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{0, -1}, {1, 0}}, {0, 0}}], 
   GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[3, 5], 0.6]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{-0.30901699437494745`, \
-0.9510565162951535}, {0.9510565162951535, -0.30901699437494745`}}, {0, 0}}], 
   GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[7, 10], 0.7]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{-0.5877852522924731, \
-0.8090169943749475}, {0.8090169943749475, -0.5877852522924731}}, {0, 0}}], 
   GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[4, 5], 0.8]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{-0.8090169943749475, \
-0.5877852522924731}, {0.5877852522924731, -0.8090169943749475}}, {0, 0}}], 
   GeometricTransformationBox[
    {Hue[
      NCache[
       Rational[9, 10], 0.9]], Thickness[Large], 
     CircleBox[{0, 0}, {8., 5.}]}, {{{-0.9510565162951535, \
-0.30901699437494745`}, {0.30901699437494745`, -0.9510565162951535}}, {0, 
     0}}]}]], "Output",
 CellChangeTimes->{{3.821953674731999*^9, 3.8219536826092577`*^9}, {
   3.8219537387364388`*^9, 3.821953770563141*^9}, 3.821953924212234*^9, 
   3.821954042085371*^9, {3.82195407446949*^9, 3.821954101841836*^9}, {
   3.821954145683384*^9, 3.8219542247973146`*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"32b0b568-ce15-49a6-99d0-a2ea401b5119"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.822567462789826*^9, 3.822567463425218*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"acaa1312-3551-475b-b3d8-53732c2fbf50"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 17 Feb 2021 11:17:43\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "2", ",", "17", ",", "11", ",", "17", ",", 
           "43.829941`8.394345863477007"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8225674638573837`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"e780d607-729e-4fbb-a53e-f7775d242c98"]
}, Open  ]],

Cell["\<\
In class notes, we thought about the hyperbolas
(y-3)^2/25-(x+2)^2/9 = 1 AND
(x+2)^2/9 - (y-3)^2/25 = 1
plot \[OpenCurlyQuote]em both\
\>", "Text",
 CellChangeTimes->{{3.8225674649448757`*^9, 
  3.822567517228364*^9}},ExpressionUUID->"2dfd7190-a0b0-4f20-922d-\
165bc04334ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "3"}], ")"}], "^", "2"}], "/", "25"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "2"}], ")"}], "^", "2"}], "/", "9"}]}], "\[Equal]", 
    "1"}], ",", "\[IndentingNewLine]", "y"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.822567520632564*^9, 3.8225675742903633`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"05da17e1-691f-419c-be5e-e8ca8bd9999b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "-", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{"13", "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{"13", "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.822567566193699*^9, 3.822567574642233*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"ddf423d2-7cd5-48d1-bd71-fe5b8ce796bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "-", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{"13", "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{"13", "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.822567614099436*^9, 3.822567659481203*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"585d0ad2-5940-4c72-8279-243547ee04f4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$5836#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Hk0Vd8XAPD7nmeupzK8UnRNTyh5okTYpEKDqXwpopRGTV8UUeZKiiSZ
MhaiL6GQ4pwmKZlVNKDJ2IQkz/B+x1q/v976rHXXuffss8/eez2lnYftdzMp
ihJhUNT0r0dhzE+BgIMtXtxNy8vjgsy4PNdogoP5L0Ui1XO58GTtDRffvxys
XMbPu36DC9yOe8+//eLgexbal9LSudA/43NW+0cOTtAIGLwaz4Uj+/WdSh5z
MOtOCudyCBdOqb3Fnmc42Nb0e37JVi4kJavE1rE5eJFI+e0sSS6kdZ49bCcu
h9Uy766K9VADuUYHGw1ZWXytLDvKsFYVamwdLGrVZHDuZoPMe4aqYKmh5q2i
LI07bPqm5l1XAcMCl+yGpXOwhbj3IEtRBfiRntK6GrPxqWUPhcrilGFk9PqV
7eqzsPxiqX/YHGV4ohyrV+XFxglfV9YJ5yuBkfDpEq1dM3BUvsdcaTMliIMV
K8wCJXDjgdsOzX00CFX//FDrI4HdHcPmxvXScGx9bpjjIQm8pK8+2bGHBjvH
ec0H3CSwyeyXHR++0MA+OH4w3kwCH7gQ5DrSScPZqyhzQFgCR60M9rV8TUPA
j3Xs+IvimJkx2h70mAaPFKev/Wli2P7ioK1lOg0xd3qMW66K4Qbz+g7VNBqq
XvrG348Wwy8ro9yYqTTIT8atizothunIbkOcTEOja9PNJW5ieCc/cse6qzSY
LLQ+dERRDB+yky0OvUjDvEyj0ZEUUbzAo8W7NJCGtRUvbDriRLF2u8lwUQAN
3s3OudVRorjvKOtQwUmyHvOE89UAUbys5ZFznh8NER537hu4iOJ0a9acAh8a
fqsuCTo5XxQXHHtm8dWLhoYcRXFGkgiera6SJeNGg/t3zPCOFcHV4ZInTLfT
MKTrwe+OFMFvj9roHHClQaYqZ+DlSREcsfDJ+qfbaHBq1alPcBXB3ZSNXpgT
DZ+o1Zd1lESw01ATf7E9DX+c9yi45wpjW5GGWq21NJxJE5drSRfGVuvzj/27
hoa5X/PZaxOFsfDWHUIPLGgwOvJLoBUpjJVCFT/brKYhKMLv0+gBYRwjtjgj
BGiQKDmfE72UrGe710zGiAbFGbd5qJSFb/uHOPbp0HDoy6L30QUsfKzsb5oZ
cdWDjAj3bBZOLPnNTF5Kg6vX5XeMeBaWCt8iZ6dNQ0q9b7iFDwuHVF488UKL
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
f5zXWBA=
       "]]},
     Annotation[#, "Charting`Private`Tag$5836#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 6}, {-11.24000586002071, 17.24000586002071}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.822567627154703*^9, 3.8225676597965384`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"95f2864f-7269-44ca-b3c3-820340945a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "2"}], ")"}], "^", "2"}], "/", "9"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "3"}], ")"}], "^", "2"}], "/", "25"}]}], "\[Equal]",
     "1"}], ",", "\[IndentingNewLine]", "y"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.822567723452126*^9, 3.8225677274131823`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"4d85c2ac-45b4-452d-9c28-601cf5518fc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "-", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.822567728033794*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"01a77111-9d19-43be-a033-156388da480b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "-", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8225677340486603`*^9, 3.822567751512628*^9}, {
  3.8225678191144133`*^9, 3.8225678214905987`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"141b789d-784c-4d84-b4cc-6106a5e7c9ee"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwBQQS++yFib1JlAgAAAEMAAAACAAAAY6+Q7///F8BqKMTlqI32vxT7GiY7
/BfAQFuV/qZn9r/ERqVcdvgXwHWo1oOZQfa/Jt65yezwF8CFGBSIW/X1v+oM
46PZ4RfADbYAXFFc9b9wajVYs8MXwP0XJ7PyJ/S/fiXawGaHF8AaJmoWdbXx
v5qbI5LNDhfARbY2LNdH6b+qMJmhtwoXwNDsDH2T7ei/usUOsaEGF8DwGOHX
JJPov9rv+c91/hbAJcdkJsXd578aRNANHu4WwEVzPzfxcOa/m+x8iW7NFsC1
Hdbymo7jv5w91oAPjBbA6sAcNPtH27+f34hvUQkWwFXZg0XtY6G/YAsIz4AF
FsAAerDwnIGWvyI3hy6wARbAqkoy/G5khL+mjoXtDvoVwKoiL4b4EI0/rj2C
a8zqFcCAqEvfLxywP7ybe2dHzBXAAN0pUA7FxD/aV25fPY8VwCD5QheHo9c/
nIPtvmyLFcAwqUjGc37YP16vbB6chxXAaiYL9EFa2T/iBmvd+n8VwOoo3+WQ
FNs/6bVnW7hwFcBKTVTvYJTeP/gTYVczUhXAxRJP0S7i4j8W0FNPKRUVwCJW
w9ifhOo/Gc4n12sRFcCaJNZOMQLrPxzM+16uDRXAar+tpYSA6z8hyKNuMwYV
wGKBJv6Bf+w/LMDzjT33FMBdLwxyV4fuP0Kwk8xR2RTARU28uoVh8T9FrmdU
lNUUwNIWCf+Mp/E/SKw73NbRFMCusDarIu7xP02o4+tbyhTA4LpyOgl98j9Y
oDMLZrsUwAC3rws+ovM/b5DTSXqdFMAtuI2Y6A72P3KOp9G8mRTAnohohTFg
9j90jHtZ/5UUwPbobftmsvY/eogjaYSOFMDc8POXvFn3P4aAc4iOfxTAOjwB
dzq1+D+JfkcQ0XsUwJ7aJmkMD/k/jHwbmBN4FMDACRoAKGr5P5F4w6eYcBTA
IaHQvnwk+j+ccBPHomEUwAQ4fVGyq/s/n27nTuVdFMCtuIQY4RH8P6Jsu9Yn
WhTArR7kvQZ6/D+naGPmrFIUwPH77aO6UP0/qmY3bu9OFMB2TzhHlL/9P6xk
C/YxSxTAgJNiz/ww/j+yYLMFt0MUwDFGJtRJHP8/tV6Hjfk/FMDQ/YTzp5b/
P7hcWxU8PBTAXcx/m0UKAEC9WAMlwTQUwB7L+10kjgBAwFbXrAMxFMDo1Itz
f9MAQMJUqzRGLRTAqE7SXH0bAUDIUFNEyyUUwJJOn6bOtAFAKpgSpbwhFMCD
fzaXPQ4CQIzf0QWuHRTAZnhRDiRtAkDuJpFmnxkUwH0rKI6u0gJAUG5Qx5AV
FMARWZTchkADQLK1DyiCERTAMnMWGSy5A0AU/c6Icw0UwBgoTTqvQARAdkSO
6WQJFMBYryvYkd4EQNiLTUpWBRTAWCXh8SCkBUA60wyrRwEUwKVSvwdf2AZA
DM/fFBAAFMDd+lKCg74HQBSLCas=
       "]], LineBox[CompressedData["
1:eJwVins0lGkcgGeGoRVTbvNlCPOJdan2bChk+71ZsoScEdGqrFSzHZfWSkVy
ySUO25x21CLFrixCUWSryVs0TVYpl3VWbccZclniG+aSMdj2j+c8fzwPNzqB
d4RBo9GCPvG/VxtMj3BoFDi8dh6rGdBFduSgm4hJwfpbDZtWxDpoQ3ey01+m
FMS05EXsLGciMpltOWtLQXS7J3QMaSNr69a1q7ZS4BPvtL1uhzay7ArV4u6i
QDDqTItr00IWSQqFexgF15yJ4mdIC3Esiyd4RylQHGsY6uhjIHZi/4vsXAo0
niH8+rUMZGKRhMsvU+CdKr3fc4+OjMTGd1qrKRA2NlVnHKYjFifklwkxBZz0
AW22mIb0O+cK6IMUSBNnnq85S0N68ZfSOOMU8J7WsZpcaEjnyevoAF0ZVDuu
0bRGrMDy98GbbvvKIGBNocnbo0ugMaasnu+TwVe/MWUimQbUootG0mMyqLJ4
ruORrgGlYY/K+IIMgpN0/XmVizDzR+CTUxIZBH7RS9ouL4DtZ8+SUgdlUCQs
yMmpWIDIcPR5+pgMUtj3Rnd7L0CXckthrvYcDIjHX0kufoQbzuvCitEcxFnv
9lO6qCCyQTrZ3DYH5T+a5Z9slENXxSnDmZp5yOzMfc93ooBOUR2ye/MQmBQU
PN0zC25wPFkhnoeMGTVvwW8Wqv+JfKMZnQdBwtXmPjQDmRyvG6u5cnj1Zejc
vNs0uAn13R1K5LDu7tdmfwZNQHVeZVRMvgJaOhg+nqphiGqKu1VfogCedPjg
4tlh4LxxX5bXKiDqxcy5YK1h+Glzb1lOlwIEDpLsGJt3kDzAGKxerQSfxiyp
+fEh2GUTEzhZpARX+6yMcPs+GHtk5xF/SQWO1/a4+25rAVvlTePTZQsQmmn0
g+X+/vZ3zVai7fwlYJ5bucqpm20PvTJ8YUpAQ6Ee7Cv0qIX2azcKRQGXGYiZ
Jv3omkXH2t/GfWCe0Ub/ntZ3fv+UiV9G1f7Oy9ZBDKtfS4SuerjFgHNAFbsK
cYauFzdsY2G7Uu6EboAe8vO9f2K9jiFWJ2cv3QzRR+E+1134LGM8pTZn1bix
kNeZB85mUya44lhev7nNWuSjiT9UOs7Ggp3dhWa2hohfNWQo71uHWQk3vTpM
jVCLzVnDpRIOfuTdJmrlGKPNjWXbDmZa4KW4Q1vDWCYoGjs4RnhbYrpub4nT
kgnijxikb1i0wlu/SXziT2MjTDyOUk5aY/Xb+gnTOTZyFK0INz7lYu9YiSBQ
yUaVS5sqNBIuLloccctRf/oT3v7c3c3F1hzzfDmDQA3McZfYfi723Zfv0GdM
IDOrDwfrRrhY+PrIcYErgeS05EiSQeLNYstpvTMEat4r9qMDiU+Hegi90gi0
5ap/yksvEj8eDfVMyfzUneqEZbtIvFerqHAyn0Dq2xvyXINInIoWN0pKCbQf
28fwD5BYcn8wLuchgaQZ0bpdqSQ28p83FWEC1dvHDhWnkzjyb9YjeSeBmMHy
K9+dJ/GsyocV84JAdro1vR8LSMx2vdvo9Y5ARuw7vnalJI7q7AlLkRLoxJg4
QVZO4tqQqeWmMQJVxdRkPawksWciuYc7SyCDgkU+r5bEufQdqvB5AsU3ZXiu
byDxK0HEdYGKQPp5avX4bRJzrE/6ShYJlPkgsar5LokP3xLMrqwQaOfCnFta
G4n/A5+rUTE=
       "]]},
     Annotation[#, "Charting`Private`Tag$5951#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVkHlQlHUcxjGO5Nhlj9/7vrC4TECAmmQIDRUwfj3Ag5EWMEBQQqHFWFyW
UDQuEeUwVlgsGy7lCnEUVxZSAVG+QYbUqmzQrq4HoiFiHO6YxpW0/fHMM5+/
nsNpV3LoF2+ZmJisM+p/j7ugmFpYYFBglfJxYr0QyJzAzXeewf7whq6xciH8
HNiwPW2aQeHZV7FihRDcHrb3jb9g0MnC/HF4lhCe2zypvzvMYK6HSQSJEIIs
8cPI1h4GTX7pa5q3FEK2qx7FBQzmH60I2LFnCVRUuhy/yWbwhjZ/ZHapA5z9
oLz2shWDFSdrk1uEDtBxna2qtTDmucxXxPMcQD81c3vfGxpHytQ/tM0JQLC+
n+U4SePuyVE3x1sCqBzPPCq9SeOlnqiYgRQBVPlrc2zlNLLVa1oP/mgP1UOF
ySGWNLa8XaTvdbaDWOvFt3PMaUxvflF1iLYDZ5+C95sX0ehqn+2zysoOThfn
TbBnKZQ+6zy838CA0j9Xon5O4Q5NLpR0MdBZmZGwQU2hnSr7mG4bA/oI6ef+
JRTu6S8q7s2joerwxLWkIiPvq+yxO0BDzIUkx6oCCsu3dD2KTqThsYXkwexB
ClNYdYZLwTSMXUyIbpNRuPyKlaGdpmGavzPCK5TCM0Kta0c9BXR/2KfLKAr9
ToyaJV0gYH/LXSfhUpjk66ptryawRD0Xo2RRyNu4WTJVQsDpRr3Uy4LCwZW+
aCsjsAJfHvP/hyBJv8alVhJY2/ytOuQuQeW4qPRUIx8ClAlbv/uDYFCHPy75
ng8bm3zvazUEB8NWfbb/CB+2nHnyV/SvBDeGxKmuxvIhssbLWnyFIPBIlozh
Q7JiYFP6SYJ/l96/G5DJg6+KGzWd5QTvPGg49TKBB3vlGdsWThDsznt3jTiM
B+mFLl8eKSbYZ2qqVyzjQX5OamHxQYKG5tW7VL9z4Wj2Bo4mg2Dkpksjfp1c
kGc6lPEPEFRkzSzsa+BC6YGexjIZwTZdUP+jNC5Uyfi9dTsJvlHVSPgUF6ql
o8EjO4z9NQ/bC+Y4UJd0ReseRXDrdL4oe5gDjbvjnjaFEjQ7ZBahOceBs2If
6VQwQedxz0mBggNN8davPYMIvhPtrsZUDrTEtppfXkdwr/T1NxMfceBiTMGx
mdUE5ehoGi7gQNv2aMrPj2CdV058xytbuBpp6vqTN8Fhb7O6eym2gOG6JlNP
gnbv7ZXnrLCF7q3nvAM9jPtUHvW5f7Lhhihs/W+uBPeoYrd5BrFheRmvodOJ
YFZO3+5uAwvkQxpzpZBgeYHScO84CybdSsXV9gRzB3UpIR4sEElFvQqK4ORp
icvXXTbQctF2aS6X4E352NOBQBsg/94qTGURfKZruS7qsoa09cVj8ZYEz4gG
3aVO1nCnaMvmcHMj6x3ZQ9FW8MmAzbkNiwhGnYfpGndLsLk9RDgmxn/Mz2dl
rlkM/wERD+Ik
       "]], LineBox[CompressedData["
1:eJwVyns0lHkAxvEht1wm4zIvI2I0k9u8W22Edfb3sJXWopYorUqWUoe0VkM6
pCWXDu2sJSmKtkToogu1WLdmJWqzytlSR5TLkbyDGdu4rf3jOd8/no9VaLRf
uCqLxfJd3P/V0fswwGMx5AXdYbrdTgtCfo9zvTpD+rf6dbFclmJlh9j+hTFD
Cr3iSxtCtcEXcy3GBQwpQkujm0AHlpb39LWcGPLgl+7WgCYdWLQHLLHaxJDD
Zh0LOZ66WB4rl7sEMmRvx/BB5z90wbPIG/bbxxDts34CNwc9cGO6O1PTGKLW
UpnvP64Ho+WxjUVnGFKXar5x9WY2DKSGt++VMiTyW9+g44VssHn+Z4elDHmf
bDcz4rIMuq0Tp1R6GGKezXFiUpZB+1BOIm+IIVWuATLfx8ug0fws1FtTRgId
Z5Fjq4/5A1tFNz1lRDTbq9xcqo9ZQ2bFo+0ysjq/IUXSog9l/c8G/ftl5EWt
T9KaPn0oOE+nDTNk5AM/KaqC4uDjfZ/muDYZcYj9pkaczIFg6Z+xx3pkpHdn
0YU3+RwE78Cq44Myste1S2PsOgftirVZaWoTxIstfazXy8GVz00C8zBB3q2v
impea4Dgqv6R6toJYvLb/aLQbgO0F8dxPpZNkj7fC1KB3BAqDNMiq5kk4jWK
I6oaRnAmB8Vy6SRZfan4eSPXCKWvg1/Nvpsk7JjKzPfrjXCC53FFx2qKSIPu
nngbv+hzdV1sC6ZIYmZPoVCx6NNLQsIy5STz6p44k7fGCLkVdaOyQE7uDljn
hjDG4L1ymZ8ql5NtQj6Tt2CM03TX+ZPtcrIv8XbNI3MuxM9Ve0p1FGT58x73
3UFcbLIO8xnJVpDE19NxCZ1cDDYIXQ/lTJOMJt4Av4KCQFFhGH/+EzG24QyV
bDTFm+oV9V9EzJHG8Yv+X8nNEJDflzEqYSHv9MNw1g4LXLiSVe99RhXuF52T
skMsofZd1Jj6UTW4WrR4H/3BCk9Cyq/6pWqgMT1CGJ7Nx1093q7pSC2kKfaH
j2ZbQ3jOaljTWxuXrXfVslNWQilOnavw10XlpS28dekCjCrN2GXObJTUvS7I
OiJE8f70bjNrffCTaj7r/HEVJO4dWaYCDtb5jWkpD9iAHV3h0WJsgJechox5
b1s0bKitv8czhElPp9kN2GEuao9TINsIa/qM8hz49lDR7CqwnzPCHVkayZmz
h9PmmGYvFheNVFOIYsQByt7KYeMJLuzqF3IdHoqwIbJN4qPgomROVDzbJkL2
zIDzSeWij+79taNDBEueWeaUKoUq9aF1kd0ieG7PtP3bkILpirHd1wZEyH0W
flDiSGGKJQ7mq9KgpRYftI9SqN4m/VqF0IgPcM31SKSwttAr4YkHjaZ3AW4J
JxZ/+2u55zfR2LYkO2skk4Ly5sp0R18axzDj0HaOws5Gm7CIXTTaHvREnayj
0J8cqtl+jIaB16RxfSOFSpvIl3nHaQT/w26YaqWgvnUqf28KjfHpjeywTgpC
zbKuf0/R4Dreue7xhoIB97an8ByNkNangQn9FA4PSqNlRTTK/Ufnbw1SuBxW
9lNdCQ23GP4Wq3EKeqdmIvzKaaSpfDm9Y5LCoVvJbuZVNP6SBF2UTFPQTVcq
h27S4Fke8WyboXDi95jL1XdofH9DMr6wQMH904RzYi2N/wCyYDER
       "]]},
     Annotation[#, "Charting`Private`Tag$5951#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 6}, {-9.360330371532315, 15.360330371532315`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.822567747782271*^9, 3.822567751898574*^9}, 
   3.822567821773151*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"93f2de33-61d8-4688-ae3e-3417187344aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "/.", "#"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{"#", ",", "y"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"y", "-", "3"}], ")"}], "^", "2"}], "/", "25"}], "-", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "+", "2"}], ")"}], "^", "2"}], "/", "9"}]}], 
         "\[Equal]", "1"}], ",", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "+", "2"}], ")"}], "^", "2"}], "/", "9"}], "-", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"y", "-", "3"}], ")"}], "^", "2"}], "/", "25"}]}], 
         "\[Equal]", "1"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.822567909984473*^9, 3.822568023713451*^9}, {
  3.822568083671191*^9, 3.822568095884584*^9}, {3.822568172322041*^9, 
  3.822568186595179*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f62a2088-035a-4c44-b773-9cefa1579bd0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"9", "-", 
      RowBox[{"5", " ", 
       SqrtBox[
        RowBox[{"13", "+", 
         RowBox[{"4", " ", "x"}], "+", 
         SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"9", "+", 
      RowBox[{"5", " ", 
       SqrtBox[
        RowBox[{"13", "+", 
         RowBox[{"4", " ", "x"}], "+", 
         SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"9", "-", 
      RowBox[{"5", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"4", " ", "x"}], "+", 
         SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"9", "+", 
      RowBox[{"5", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"4", " ", "x"}], "+", 
         SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8225681874536743`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"6c531f7a-7739-4e48-8df1-b0a221963456"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "-", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{"13", "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{"13", "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "-", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", "x"}], "+", 
           SuperscriptBox["x", "2"]}]]}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "9"}], ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", "Thick"}], "}"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Opacity", " ", "@", "0"}], ",", " ", 
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "8"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      "Red", ",", "Dashed", ",", 
      RowBox[{"Opacity", "@", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"InfiniteLine", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"InfiniteLine", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "5"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.8225681981937923`*^9, 3.8225682052740192`*^9}, {
  3.822661345689446*^9, 3.8226614003060083`*^9}, {3.8226614431217937`*^9, 
  3.822661551475749*^9}, {3.822661586449368*^9, 3.822661619967905*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"d763c970-e7d4-4c69-9d61-eaef61f3a929"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
A1iohP0=
       "]]},
     Annotation[#, "Charting`Private`Tag$3463#1"]& ], 
    TagBox[
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
FDyPiPE8f3IaOTx/PCenTvImmmfHiu9TaEX7rahiHbJfJM5rrimaRHlGyg/F
TSn4EL3RZzh9Eu1FHc2jxAXHL93PuTqJyuTQ4xYzkueOClLsg5PIWmyzy4P1
5HlImS1KyUyirW0Lt/dYUnA8IbxuKmQCWYsObhPcQgFv/GxIsd44ypYZtXrg
TPI5yvJJqMI4cvH5s6nEheTBsT/7VguMI7NmlaXmfWR9Oci55nSOIUabGyV2
gOyPkibWKVfGUFXA4fg4TwoSr52UPftrFPFf7ij8cogC5avTJZZZI4hWvN36
USTZz4KOxuxNHEFN7J2yX86R85lDr8PRqBE0udHScvnvpN6kPvWk7BtBGXdE
b56LJvV9p0BiZtkI2s231zyQnKfO2f56u390CD1pbqL+SCDnydBeplHiAGra
MPUp7yGpl7qv+X1tvcj54kzq5xbS31FaRf+zXlSipqtwvpXkmQSrYSCmF90w
BB6tdgpWOngOjRj2orDZffKRXygQa/yhOnu9BxmkyO00/kHqt+VnkpBtN5r6
N9BxaJT01zl+SrP4G2pOp/F6i7PA7vOy060GHejzi5nqHVtZ4BkxWJ+xpwS1
JDlt2F/Pgsit26t+uVZbuB8/fLDWVQkUe3U4ubxdFpc/zm1/yqsM/eZ1e29E
/7TQPqhgsjVX+f/P+yMWnIwLOttU2GAQzmmxCxi12HGLHqTiwobBu1/bUNiU
hTN/0cjiKhU44nW9Pk533sJc4kY1b5cKTBQlOBxUocE5pry4SqEqSF93NzCM
ZUDGFVVG9gU1SKdpfhP6ygvGwhsfFjiqw+PE7oWbfgJgGIEPlppoQPJsmmRD
lRCUFplYaq/QBP7zOxMqnUTBM/p9JjC04Ev60lf0WRzCbWz+FhvRgn9s96ww
SJaAYnlTd/uP2tC7WzXQ+19JML0Tf+9dpQ6c2DJd/ktyBYRKmK77lasLf8da
nwtdJwUvW0wvK10n73/t4iGu56ThiVdEiJ6VPuhJtXomP5GBIuW0NPVifbCL
mZvoeiEDq1M7nA1K9MFvTjFG9W8ZiP/MVYQ3+pDa5ZHzvFwGDBzGq5zK9EHi
8a/x6lYZuDc7+jCmRh/GrLjREwwmBKUXpP5s14f8MNUseycmhGeZmRXM60ND
v41Jwn4mPMsu8ilf1Ich10PvWz2YsHUyIvkjVx9UNz0b9jrMhGvxpeq/eDhw
U8LUODyKCbE9b95Rohw4+cj+XWYOE7LqTFlxihxIVAzaN/CMCbZf6haTV3Lg
2dX4QU4BEwZNXLsfURz4eeKT5GvMhF2l9s2VbA64bPBwaWxmgmUVzXhJmwOh
+ecHZDuYkDbVcEhUjwPx6plnD3QxIe5MWLY8hwM14r/SfvYzYXkl22atIQd6
osQM9UaYsF6NnWW1lgOMSb3q45NMkFH+LuFowoGVfjudi+eY0L/M9YKnGQfM
Oo7/4nKZkL75Cu+x9Rz4H+AMBe4=
       "]]},
     Annotation[#, "Charting`Private`Tag$3463#2"]& ], 
    TagBox[
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJwVjXs0lHkchyfDVHZlDr93xm2GGbWF3NpQq/V7M5FKhZJsVlbJJUrFsOjC
6UK7yWUSXSa2kqPR2oST4v2mdEHHWHQwrbRGCZUx7sbM2j+e8znP+fzx8EIP
+4Vp0Wi0TfP8v+KYmnGNhgd5pOO6ASsuDL+VTt6a44F/jUOsC48Lrt4fpzfN
8qALN2w/a8SFTmukzp3gwZIhGdNyIRcMBmIYKz7zIHLtrGi3nAPnQnlsn24e
nF7sKawQcyA2IH1N4QMevP4Sx1luyIH163clk5E82ER/GzQ9YwoNv1X2/91g
AXLTLd3qS8bADBW1rrW1AFgnjH3iywbN0gjCzd4cYqsCEyf0CSg8ZucrGeRA
7VLVww9ZBtDSpbz49JEZQLmjB8OOCWBL5p84ZgqDTUmMlQu/gVmnJa7OjibA
tEnuacvVgaf+st48bWMQhtnGo7U02LrP3udqHRtIk70FGUol9e+fUzrdD9kw
9y4aztUrKaHqySOjSjbUmO9yPZKtpMSXdi7Pu8uGKL/wBB17JTXy4ld1Vj4b
4hMSFLaRo1TuymeSs0fZYNKiMN3ZNUJ1je9efPQ7Ntz2vT2u2DZEhaWn1Xtl
ssBpo6pfWi6jGmWVUTcyWGD9qG9Lf3s35WD/yWDiNAtKs5vvh051UaqO7ftu
JrOgMuzu5uwfO6kcS462OoIFUZMOyzKgnaqrq/aoELCAJqazyW1NFGt8+CVn
mgB/ARV3Nz8bp3hZHIkbI6D08buhyf2F+P3VHcZNX+f9eRe3VbsES9xrIhM/
ENBxQfTcu6wCu2ed021rIwBoqZ6x+U/wIRu+d/o9AkKOzv4RTEnxi18CWkb3
EUD4zvCMX/RiubScIQ+ed9m3mRl732MaqevWEUgAGXXo1Kep9/gHbq2kejsB
FqLSg5l2fVjSzT+f4koAvyV8kCjux1k7vmxgGBJgpCf192wexJL6jSmTegTk
EEXOncIh/MqxqGJgEQFpS18+b+MPYy3mTn6TGsF5K4H8+5OfcVzzQ83FQQS3
NN2f4peN4ECPMzXG9QisDXu33uAosfBBj0K3FsGF8OTItFQlzrFcY6WqRpBy
oMSs8IMSNy8YutxThoApLyHqH4xhtzqf+JsF878O2bMndAL/ZFsqEYkQBP5s
t6OxdQInXKPLz1xEUKR/7C+aYBKXJ1X5RZxBwLUMIWxspjDfxczB9giCMoHY
qZ2YwW7F8eHcaASsgsnKjrwZvIdoEeuHI/j91ipmrcksFilT9UaDEKQn3RlY
tlKFy0NlG/oCEOSs0L9uX6PCr1tXp7T7IRD3XOlY5T2HGeUfB6u8EFz3+ce5
6rga883X80sECGLT2w5bczUYZ14JLHBDMBIccTXjmQYnRm99mbwaQVh+0Hki
l0ZekhVrou3ne40n/B8raOT9zTSXYGsEWqsXnRT6LyCHVlTcJi0QvDmVPOXh
oEUeEBmlppsiWBw97DBapEX2ao4HSVkIpjsDGNUcOrnnYJ+LkQECheWhEEUx
nXzzxsswRA+BmZbTtXCBNunrfu/LnUUI9NxPFlJqbbK5zLDxKx2BcGzuVcy0
Dpkr3e9pRUOwYbmIzrq8kPwPMPk8LA==
       "]], LineBox[CompressedData["
1:eJwBsQRO+yFib1JlAgAAAEoAAAACAAAA7SFLlAoA8D8QTgNaceUHQEONyTFs
CPA/xGAy0MuEBkCutHA6DBvwPzxGhxk0WAVAGdwXQ6wt8D9tWqnGS4wEQIQD
v0tMQPA/LZF3lxXnA0DvKmZU7FLwP/E9MhldWANAWlINXYxl8D/JbrJZ0NgC
QMV5tGUsePA/aELLtWJkAkAwoVtuzIrwPyOFzFeP+AFAm8gCd2yd8D+lj67L
pJMBQAbwqX8MsPA/yoguH280AUDcPviQTNXwPwy8+qvHgwBAR2afmezn8D80
RAFfHjEAQLKNRqKM+vA/khqZ0UDD/z+I3JSzzB/xP4ZH91mdlf4/NHox1kxq
8T/eD37mPm78P8MyQKKCfvE/ncchwFPi+z9S605uuJLxP8IsEXblWfs/cFxs
BiS78T8CTE64eVL6P6s+pzb7C/I/tni1tLxj+D8iAx2Xqa3yPxGgp3KW5/Q/
sbsrY9/B8j9iwAjsSX/0P0B0Oi8V1vI/0bGwiVoY9D9e5VfHgP7yPyjvfK1Y
TvM/mceS91dP8z+1i315YsjxPxCMCFgG8fM/Uqyc0orX7T+fRBckPAX0P8Vh
v+UDKO0/Lv0l8HEZ9D+qo7sGAnrsP0xuQ4jdQfQ/PZVid18i6z+HUH64tJL0
P0WMnDR6g+g//hT0GGM09T/Vj3jkbH/jP+2d39m/d/Y/CgpkyxVg1D8EZb4V
m4r2P0CahxS8VtM/GiydUXad9j8KIHvBnE7SP0a6Wsksw/Y/ALh2J/dB0D+e
1tW4mQ73P4DP0k/7bMg/Tg/Ml3Ol9z8AYSaFtEqxP66AuFUn0/g/AN0noNmH
xb9uY5HRji77P4DNSFbFZeO/9LiTUWclAEC1xPZvnEn3vxWRYDQ1iAJAmLTZ
1JFhAcCjACriCd8EQKhfby3FpgbArZTl/JZoB0D1KAZzjRgMwJv5ohHSxglA
KhRh1+Z+EMAGg1KTxVcMQPqKEHZ4EhPA3aP+37/cDkDkmONus4oVwMxKVhM0
mxBApZ5El5LNF8DnVSZtZOERQOoCeYiUNxrAdUn3w+sRE0AZgcCJBXEcwLmI
RoB2PBRAydXaKlaZHsA72g5zXYAVQDYDHGJ1dSDALxTYYpuuFkDR4hE+H4gh
wEyH+vTgsxZAWYDbJeWMIcBo+hyHJrkWQNCJ0eeqkSHAoOBhq7HDFkCYpJ76
NZshwBCt6/PH2BZAWiM7XkquIcDyRf+E9AIXQLFyMDFs1CHAtXcmp01XF0B4
Ld2flCAiwNLqSDmTXBdAik5G+FUlIsDuXWvL2GEXQKXEli0XKiLAJkSw72Ns
F0BGbUAvmTMiwJYQOjh6gRdA9jD2kJtGIsB4qU3JpqsXQHwmsd+ZbCLAlBxw
W+ywF0BVWx8QWXEiwLCPku0xthdArVy4Hhh2IsDpddcRvcAXQIxsudaVfyLA
WkJhWtPVF0AI5hq0j5IiwHa1g+wY2xdARRMD2E2XIsCSKKZ+XuAXQFDFsdoL
nCLAyg7rounqF0Ceba98h6UiwOaBDTUv8BdAppgkHEWqIsAC9S/HdPUXQByy
rJoCryLAHmhSWbr6F0B4rlr4v7MiwDvbdOv//xdAMHNBNX24IsAKGjUT
       "]]},
     Annotation[#, "Charting`Private`Tag$3463#3"]& ], 
    TagBox[
     {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJwVkH0803kcwCfdzmEz2/e335aRrfI0Ur2aVrr1iXQLlUpJIaFw0QNJl3WX
SqhXEepQR871cJrOJSXi9UnPuKYHvbB0nfSkkpunZLbr/ni/3v++X29xxJbl
G8YxGIxFX/jfRfE1g0ajGH1PCewGiBTeP20Z/m1MjC6hguoTHCl4+r8eWTQq
xg/FXY7ellJocyGG3CExZgzGZxw1lQL3TTzT6YMYq07u9nXVuUB6hJgO6BBj
w/hJtcEaF9galCE/dUmMG5NrjuRmusD8+atSIFaMp002X1CNOcOtQ1UvH96y
R93hKfHGRifgROQ9mO1mj+F2ntXPzzmCcXIMpXCfiHKt69zRdAc4lTh1mbrH
FsO4hpBE5RTQtPdn3agVYXhbvsSUngzoBvk/Jtrg54tFJk3XJTAqY3t6TJ+A
NxuLhgeixHBjpfb58fFCDA32s/Vh28PiSPeAE/U0Zt8O2tilF0HXH5++6rhK
I0Nu01fSJ4Id+uu1gioae9Nbl4R0i6DoWKDj8fM0Fj5uD73eJIK+Oz8YsvNp
7OwMVfkViiDX9ab6QAKNtxP1zJUeImgfXP1NggONsrJLimexNrAhY2+D8ggf
E26uY7NqhdCorfq+OJOPFz3rA5eUC2Ga+1vu0H4+TrjnKj1QLAR969LI0hQ+
rrlcRtr3CSFnku14Qwwfd1ityDHzF0J9/RWfSm8+9omqGQkdAuAPvr9rO0Jh
HRwKjO6lQaW037Z9gMID4MTx+JuGf06sEDZ9pDDBvyF0SEOD2qsmducrCu+W
v2z2/ZMGr+x080ePKPw83LR7biINm6US/4wLFHYoWyjzAT7cWR+k0UVS2FmF
WtFrCrpbKpjdYRT+EqW4z35MAQPMFa3BFFbP0Gm6kII5dnXqK0spVJUfnDG1
kAJ1h+SgypNCEbPS61s/CrJX9C5g8igMNfjIks8QUDd8pxpmUbi4Uzoy+SiB
e9NLKt+YUbh11CH9dAqBcZxASZOB4P3C5H3CAALbm68as3oI8iEz7dchHgT7
pNUIGwjKRtNd8+U82HHp2b/mdQRFDiUbiifyvvyTO+uvEFz/qvVTEJMHzSbv
fn5WTlB/+9guzUMuKOoDkkoLCJYYtpjFRnNhjVuZOi+P4O8xMzcd9uNC8knT
7rQsgoK5pY/muXOhYtfl5TFpBOXDZ+fIBq1BMks0zW0bQbIlX3dwlzUoziRF
28URrBHuzfFdYw1rKU2RVTTBzlX9tQGzrSGvP5WlCyEYJn6SNjTAgYoI7YIX
QQS1smuC7Q848NeDmarHywmuVhb49qs5wKx43XNZSbDtvDIhJ5wDkonzJee8
CXbbWkQlyTkw70hhcIGC4II3Uwo62RzYGbf4bspMgoXRpUk9cVZwTHvGGOdO
cKcstcybbQUXfRmzwlwIjjUN78ksY8M7p8rTYE/Q+af9X9doWLAxT5CaYUNw
KJenYYWx4Llxd0gLnyDT8dyIsssS1m56MUvAJch+erSYHWwJT54oeeGsLz1j
jZH51yxgmdeF3rNmBHV1e9aBiQU0l/MaP5oSzLQY55HDNIfclqiFzgyC19o2
6d/GmMF/O3cUDg==
       "]], LineBox[CompressedData["
1:eJwVkGs0lHkAhy0lFWPGXF5Jtw2VzDtsOBXr/yuZLbfKSTLoJCll2Cm5bKko
J5OlXGaLnRVNi5VLprSNOq1tkRVta4psONRZFKqXJqRi2w/PeT4/z5Ld3/qF
6+vp6Xl+5n+/WuKlmKPHEEb9seishRHcM5ocpEYMcS14IHI8OhuV1bK1xvMZ
Ul+T0N9cMgfzuij3ciFDsou2r6mOmYsUg1ovbzBEGy2PGDQ3xhvbvduG/RjC
+uNBv6rEGBI/k5D0cIY4Z/kUi5aZoOG76nC7BIbk3nH0zFeawP5SUHRLGkO6
j6z6RTaLBeWf+vHSfIZIZFsdg6QsGDKlJ4yrGOIU39qb2cxCl9tEpncbQ3Tu
M7etTjTFN3sL8oYHGNJye6rw2V+muJYhVqVPMiSoJq9ZZMqGvEtxvWXRCFlI
nyzNlbDheMSh3fvACDFK3CWW/ctG3VdQnTw+QszPjptGzuLAb8g3WpM9Qh5W
H1WdXsGBLFhqaHV7hExLh7NCIzkocytx/jB3lGgvabXsAQ6+NFhwobRilHyk
todZ3DOD+vbKsJ67o2Tg4acUYa8ZcHitiN8+StIf5YS8fG+GnX0BjUlTo8S5
vvDxfjsu8hqzxwM2vyVm+YWhAxlcsNONdhiOvCWxB8qLWB48FGygrFxn6kgj
d+OpaQkP9Cdr5uA8HUn7fnltrYwH72h3efc6HdlRweVUK3lI3XJcU52tI/HR
0prMNzxM8XTmYY7vyMzXsjCzTD5e5ff8Uxs/RnbVbro8VSPAjPDf+Mq0MRJ8
+qab4r4AFnb5W+Pyx4ie74tVgk4BxLckTXZ1YyRJIc/o/SDAxfY2TR5rnKTs
T7bOdaXga9pyIaZonCTuHRK23aJQmaTxX/Zogrxw++KBW7k5osOyWs/SH0jV
vKYrGqkFdJqcrfus9SBUf5q/T7sA/Kxdjk5yfdhEOcfu2bEYl/Vsn8/umYHB
J0Fe6tIlqFD0fTwfMQtfp90NXmq4FMr3Ko723mzw06oiY4gVDE/55TQEGOOY
h5GL6xlrdF+e6qntYuFQy8GbgQ02aPHcznVUsuG3WeXV1L8MA/42UXuecRCb
7Lrh/vwViN00XjfE4SIDvfUnV9uiRi5OinPloe9AFL/MeyVcnrJiQpL4cDaw
3B0bawcRr2O3slKA1ucct0VyIbxTJ3W91wUITOq07ksXImLSMtXm89e/z7QO
XMkSorA3tExdJ0DuzxcnnZRCsCuG3jZ2CCBZ6rLTs1KIUY/pFJ0+BfUhewfp
YyFuxNuU+ARQSBB2FygW09AOblyTE0whzVc84W9N43VIZHNHKIWi+vNCypaG
zYaqN2FSCuIoiPJW0TjPXrv6SDKFMfuxTKWYRkKpT1NxGYVEG3VPnpSGwlIW
NFxFwT9oETvwII2qc9mvHH6lUBGsWWgeR+Nl7BPOnd8ppEtr2n84QUOyPlTy
qI2CUb9F9blsGnE3Tg2bd1Lw4Bp0+Fygkb28+PjOXgpbGtRP5/5E4z5rSPVy
kMLFqKuJqUU0+pNNnEQMheJcK0uPKzT034kaD7+jYHmt/Ef9qzQWRvgF3pr8
3Fspmai9TsOl8/DQ9DQF+5h1Tsc0NP4DdFUUHA==
       "]]},
     Annotation[#, "Charting`Private`Tag$3463#4"]& ]}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    Opacity[0], 
    EdgeForm[{
      RGBColor[1, 0, 0], 
      Dashing[{Small, Small}]}], 
    RectangleBox[{-5, -2}, {1, 8}], 
    RGBColor[1, 0, 0], 
    Dashing[{Small, Small}], 
    Opacity[1], 
    TagBox[
     ConicHullRegionBox[{{-5, -2}, {1, 8}}], "InfiniteLine"], 
    TagBox[
     ConicHullRegionBox[{-2, 3}, {{-3, 5}}], "InfiniteLine"]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9, 6}, {-11.240005764476916`, 17.240005764476916`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.822661602177959*^9, 3.822661620371332*^9}},
 CellLabel->"Out[9]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQn871O1///JdzjHIU00mA4JKSRTkVLGSqHBkFJyorouueXWvd1ckqKS
KdJIGUNSSsk8hCRzhiJkSBRyDOFwPr/93Hu91me993d/B5zu7f9/XI/H9zjn
892f93utPazxtdZ++wd3+8gOO39wt4/O+uBSG3/8g7t+5KOzPrHURh/7ePpo
6Fm93nxX8rNUj7/3ez39Mfjvav6In0z4wQ/y34f6O+64o35dfrHM/w36v0H/
64NGfcxS/18g9/8G/YMHPc9+8dhjj/U/+tGP9g866KDec6byxefmv470//jH
P/bXWGMNhGZ/ZGSkf9FFF/UWmsoDnmO/+PnPf95/wQtekKXufPnPof7iiy/e
v+eee/KIBafysGfbL5588sn+f//3f/fnm2++3rA9bJlllulff/31U3/YgvaL
v/zlL/0NN9wwP0YP22yzzfp/+9vf8ohnT+VhC9gvLr744v4SSyxhjyl/Dg0N
9b/4xS/2586dO7VJn2G/OPjgg/Nkx4e9+MUv7p977rl5xHOn8rDp9osHH3yw
v9VWW3XYfMMb3tD/05/+lEc8byoPm2a/+O1vf9t/+ctf3nnYv//7v/fnzJmT
Rzx/Kg8btV8cffTR/QUWWKDD5nOe85z+ySefnEcsXD9sIN2eZY949NFH876O
9LzqVa/q33TTTXnEIlOhZ8h+ceutt/ZXX331zsO23377/t///vc84oVTedh8
9ouf/vSn/ec///kd5qZPn97/zne+k0e8eCoPS5898cQT/U9/+tP9Zz3rWU7U
y172sv6VV16ZR7xkkufMtc/+/Oc/99/0pjd1mHvHO97hu/35Nq5///3+3ZFJ
nv2kfXbeeef1X/KSl3R4HR4e7u+33355xAv07EMPTZIl7d6rruqNTvLsOfZZ
Ojz9fffdl8PkdC+66KL9Cy64INCdKH388X7/Ix8pz+Rnv/0mfcfj9tl9993X
f/vb396Zm/XXX79/9913d9+RJEZ/3XXLM9Na9o85pjdtknc8Zp/95je/6S+9
9NKdOUpr2t99990RazZH6R3XXNNPA8szE5/9X/+6N32Sdzxqnx122GH9adOm
dd6B7EUGD9YhveNHP0picMHyzDXX7CdZ0Jt/knc8Yp899NBD/fe+972duXrN
a17Tv+2227rv+Pzn0zF9VnlmGp9OUW/GJO942D677rrr+q94xSs679hll13S
Ej8e3jHc7z+cvrHiiunQpVO3776TSf+H7LNjjjlmjNx59rOf3T/hhBPyiBfa
uP7NN/fTOc7/muzZs+2zlkBaaaWV+r/73e/yiOUmec4D9tnN6d2rrbZa5zkf
+MAH+o888kiYgkTj3Ln+3SjJj7ApQmMi6e+44w7k2PyNV/7NPvtR2hXPTaez
lljf/va3u69Mj0xCv99/3/vss/LKr9nv//Vf/zU///7772eN/BQjEXfaaadk
BaTfps/+5V/+xUX9tAZd99ln6JZPfOITnalAAl5xxRWBrrTjHkiT99a3FnqS
9kwDOvpI9LE8vOfee+91+uCdzz784Q8n+rCShvh7/uySSy5p0nevfXb77bf3
X/e613Xoe9e73pXIeaBL34039vsrrFDoWTgpt3PPbc5fpG/IlhEV9LGPfSx/
nkyw+ezjCy+8MH/08Y9/HD0/2qDyr/bZL37xi/TShTuri41x4IEH5hELi8oz
z0xm4/MKVWnjpp3YUcTjUzmU7RM+SzLNZ/Yzn/lM/uzss8/utei7xz5joyIL
o2m35JJL9n/1q1916Uu2UVIuhZ5krSW+O1r+8/Y85O13v/tdftLq8eeQbE6b
vPH5OPbYY/NnP/jBD3xc+nv+LOnvJh9322foDHRH3A1vTbvyr3/9a9gNo0Vf
7bDDQF/9139xmKONIVa+//3v51dxbKbZ4TF5MikrqAQ+O/PMM33cGWeckT/7
yle+0mTlz/ZZS61j037hC1/INu0ievtPflJonj+Jl+OOe3GDBbQDK5l+Egv8
WTTJVFjYZ5998mfJxPZx6Qzkz/bee+/CwnT++Uf7LdKGb0WbIdrPL7JxiZN+
2ij5X5HqifZ4eqNOoVPz61//On+25557Nif0TvssPae/ySabdPYGNhm2GSNW
myIN2EN8lvhxGnT20uI0abjDPmMVZs6cOcYO4ZwmW7O3RqFB7tv++++fVW9y
IAtde+ZfTOufc845/aOOOip7UfyHNK/pxI/hsyT5nc5TTz01f4aMbdF5u312
wAEHjPGBkF+yZRbWGmIDJMXYv/zy3sxCe/FPR7JPZo9IVs6a2PeFhz2MBzQS
74b2JJ+ac/3DH/4wf/bVr37VeTg02bF8duKJJzZ50D7EtsbGjuu91lprZY0x
4CHJNP696qpl7bFn0uFasvAizxfxIf9SbvTzkpg+5ZRT8oj84t1tMHLuy1/+
sokK/pye917874Ybbsg0fyTZzElTSaOgtDQNt9xyS4u7W+0zJOxLX/rSDnco
Illpzl06q/0Xvahwl/R2Mu+0UuLu2muvbRrHu+22G+q/yx2nm90ebYnAXa+w
Mr3/rW99K9P9+WSJ3ph0L0GCdEJ1Sloq/Rb77JBDDhljSGMaYSYwYhGxlhRM
GlhY22CDfvIkekvFTTiEFZSjCnGW1l57bd8DgbXh/qWXXipJD0vab7jwWECD
9RxK6uK/dPaae/AP9tns2bP7W265Zef9OLlpccMqpSckPzMt30Af7bwzny1d
uHmuPS2pjDGnEg/jZz/72dhtePrpp3NsEPTmSo5moY8I+OY3v9k/4ogjso5J
7E1vcHCTfYanu+yyy3Y42DlRR0yrs8/wZN/85r7bf9/6Vs+CZAqDoTbqKA37
7D//8z+z8MsvPrhBy4322Te+8Y1sE8cHLLTQQkiCPOKFtpD9d7+70LFI2irn
n/+yQoZ8bA4zNkHk6PWvf33/zjvvHMzigQ0yfhc2RO2EvfrVr87bvB8V3K23
ln2ZJJ8E5mWXXSbVq0ieLHv52sl398cukjjAdnS6DmjQdYN9dk1yXuvwEAIG
r4gRK9v0cI7mT9bCW97yFs63kbGIPeX888/vL7bYYuOqqPzO/RtkXG+fHX74
4f0ZM2Z0HrBg8nex6xjxKtsxGEcYNL2SFSLYoymRD4go3XjjjTscvfGNb/To
WX7xfg1arrXPmOr3v//9YxxC5G/fRUlaKmINn/tcZ/mI+xhtzgd6V+8owUcf
zvJhnkSz54UvfGG295zWLzdo/W1YvhWShxJpnTVrljudbvDheSXbPO/wAw4Q
Cwh+fNRILmEgOZAWUC2qtd+346uZRqTX1mZyBrqr/qUG9dfYZ0TW2FTxAbj5
3/ve98KLklxIlnz6RaE+SeJkfvnh4GBttNFGY56ByOoPDgxzgOOddLvFNsQF
5n8dVF533XW7+2XfBhdXhf2y7bbbdh6wYrIJiIkM1mC0vD9pM4+xbLcdUypG
7rrrrmRRrNphhL2AqcoIi0czHTy4CgaJG5yyvfbaq7OjxgiEfRrcXBl2VC0Q
CKl2d9RIseIkM9OJTIrGTwauTm0c4P8rxmvR8KIFW/EznQ+OTr3DkCscM99h
X2hwc8UkO+zII4/s7rA/JgtwlVUKDc9JU33aac4NRqnyIXoGxqnyIRbEmU+P
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
KF9gnLnHfh7UgU61VnYgBJTYmGrVrPa8Lu7AWR6hY0avXP2oN0x86NXtYop1
thPVGw/K2y/ROnQrj0Ux/cfq02yX2k2B4gVt/ieuVf7H1W+LCzoBcgta+kkU
8+eQbvKbMhdTrvP+3y6W55K6ONndYvlJ+gpspu0weTcBxUan2ENgos4L2MYa
/jYjcJz4/lT7LbzOHtPqsnD11Vf/MRI1tjfGQklYJpPDLZNG94uvaKYm73Sh
iPFk/S1uKUSdYsMn63myiahrdDXZX7+bYgcT5Qkm61tycyRx3D42biQ1OtUc
qN9NsSvN6+1V4/SisTn7sX1z6p2J1tH6qQsRGYaHHz5Y229edxyK9nuBTVpI
bUhNuTrD2425tEyx4dahmtApNrkakDtRQ6vk8dwcqRxVdzv/se52z/HHXStC
ptgkriak3RDOUDp5RLksvHeyDefOsal1hlTbhShNdQ/lZF0WB2TqBrcgU5r4
3RsjmaNjQuV0HU5e4XP9uWuKEm6/oOT0wQd7krh5pe2a64knUdThYL/2ta/t
UIfBYzf8iLqpdi4drK+c/Kn2MB2QpnZkU+xmOtU2r4MZVNxnTMPXAw+ccsPX
AbkL28JN3PpVHXLrWJN1yB30jfP87FPslVtlUdWmbIq9ctVjOIQzmj2GB9fO
qqq3Dwj/GXYbHkymjJYp9h3+52/e/E/S+Jp7oKvG1zqEk3UL30hnYIo9wje0
8URe6yVsdAafasv0R/XKRqP0DW2Sw32W+afbHn2SrvBzdLi6veDFDh5AqwP8
YyZurQP89214q1l3FF5uxYeW/HItY2t9zf5kDfV/W15/nA2f7DqGN2k2G5cw
OBnhhG5sc9e6O+Giiy4y5o+1b6JULDDmb7ebPPKIwZUsE13n8fMGHfPmGo5r
uuTOmxtkFD+L5EpzPLN7X64u5Eo1zZvrin4xLrlP84ah5CjbvB5tD5tn11+d
3qDVu7XG0oandIcVcQVdH35Vl/LWde7xKrWa8jGXqp3ZoFj5yA7unVTX7beH
i7+XsG+27kgjOCMpfmWh+Cgb3nLFAGbo5YtWFA91buk7q0HuqMhtXLE305+2
pH0zFL/4++NlJCXD3jvShiOf6iQ6To1uhlzMX3B7gzS/mJGMVXUx45JjSJvs
isbLC2nfC8MtGtkRXrrAdPEJSRvn6tABVTPtS5NdIlpRhRFWz2+8NndAlTZQ
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"deca1173-ec0e-41a9-aa61-51ecbf255604"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.822662484983096*^9, 3.822662488873753*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"238bf795-b729-42fc-92e5-e6f292afd768"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 18 Feb 2021 13:41:29\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "2", ",", "18", ",", "13", ",", "41", ",", 
           "29.521433`8.22271241600301"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.822662489550602*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6fa75068-7e6f-4c96-a55b-7df6b60d35b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"3", 
       RowBox[{"Tan", "[", "t", "]"}]}], "-", "2"}], ",", 
     RowBox[{
      RowBox[{"5", 
       RowBox[{"Sec", "[", "t", "]"}]}], "+", "3"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.82266249071411*^9, 3.8226625103721123`*^9}, {
  3.8226627841137*^9, 
  3.822662794070345*^9}},ExpressionUUID->"b206b095-7ca7-426c-9cd9-\
b9392d2f6856"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
oZdp
       "]], LineBox[CompressedData["
1:eJwl1X001OkXAPDvvBmD0UitQuYZr8tOoSTZKZdMhURrixJ5iSKGktkmpZTK
lrz86A1RVEqKXRuTVHdTiiQVEjK2UmRrI9sqYr97fs8599zz+efec+/94xGF
xPwQxqQoKp6O//LWA10ZXtHHUN7ZP0d/XxEcYy9bqG23D6unNjjolWSCpE8n
pzphJxY2+s+RpKdAjtZq7aV5ctz0xmKjTuseMEzjFQv/kKH6jAsbb1Uq4IzH
TNvKkkgM8Q2bZWknB59Xc7K5ig2YJ8v1aTsYB/qt5147fwzBdaXzHwWkxkDz
V/3F4kh/XN7jZarRHA572GYpGmWrMdrhr7S3gWHwYf5OQZSlHy7LruWF6q8H
qVOLh1HeSlR76fhZ+iUYZExN23ddK/CmO3ezUVUAfK5qjdUocEdFWv/X+Sar
oNF7Yn9sgzNaf+NedPy4J9g521YPPZiL5on63Ra2LqB0HXkmzP8Wb85KT3z9
yg5cD5rGyPpF2G51tkQC1lC/t7iwd8gAV9UO1oSEW0IX80SEuoYevnpQyk9R
N4fTC64nBNfoYpCnbUztmAm0BVZEO30U4N2xqLxChTHop2sXDPcLcNW7pi/M
eGNo7Xx6ubxHgOzQ+o6IWGNoy9Wev6BJgN0dys/uG4xhOK/9/LkLArRNjixb
vdIYzn2tqC8PFuCHoCqD07ONIdnaJa6kdBJq6nkP5A2KQJz1fGdsAR8vF36M
Kt4lAlm7W8pwOh9jVP/brtghgl1PHhgm7eaj3/Aox1shAq347JKKYD46xgYk
acSJIIqXdn+HKR+3S9UTfgsXwVsbXWbWRS28HT1C2peL4M6tqSVbbmqiOyNe
tsBYBGcsCm68K9dEQmy6jwhFEBi2tTqmUBOt1/TOGzIUwRT/ZoeUfZror2F4
olJPBIdM63gayzSxMjmzKJovgm/mL6eWdGjgxkVSReZnAi5mNiWrR3ko4HQr
j7YQwAZL+eY/eVjQK8qf+5jAXaW0Pv05Dxu/zTzW/pBAz+C2x6qbPBwsGq+0
uk9g3rxm3cZkHk5+sNZx4ncCHuvvFzVM4uHM13mM8HICMTXJvXwrdURH6RWd
DAKk0CNSZaCOyvsjbHEagfZda5iVfHWsaRgecUslMKCqct4yyEWj8nu/Z6QQ
+GGhaZvZVS5+UimS3ZII6NoOuMa6cfHeLNcVYXEEICnMZFm0GqbVFyfMWUPg
ecem+CNBaigvVwy3+hEYbQ03euGjhoH+ed4JvgQillj77nNUwxnfl1xs+pHA
hVOLs4a4aviTddW1Y14EeF4Dd4KLOKgwm3LvFyndT2IjeH6Ug33dfxUnudLz
yldI/A9y8HpmqPePiwjsrqudEbSZg1nNfw8znAkIcoacDjlxsLuwIyRRQuDK
goq+oC42nih1Tv8yh8DtXwbUuc1s3D89wu3TbAJ9J1h5ZbVszBjZcWXYlsB4
V9ME9yIbH5VK8z9bE7A/2MJoVbBxN5mZbiIm8PeK5cIOPTaODY/0fDIlMNtI
6HlGk41bxpZazKCtet+3N3aChd0tJ7UWmxA41ZcypP2Ghfmd08sLRAQKsu8I
QytZOOXw9gVbjAg0+UjMQleyUN1o7tGsaQTOr+t5+WIJCzsvPZ1o0qPrTeKW
rndk4dHidTl82tmdVvYyIQs9xLEB2VPp/R/mwPF+JkY6vB69O5nA16YnfhZd
TNSMetFoSLtnppO9somJsTPe3tmqQ2BQ+chQVcFEYdkk8SwBgU6zyRchkYl9
z+SX6vj0fTTavnTFMrHkoazIjvbWDZvubw9l4nRV59WzWgSSX8seVC9lYuqB
866ZmgQyDwdGeugy8Z9Bs2uHeQQarKa3DXGYKB+/fnIK7RP9d3fljjBQors5
J1+dgM3Z5k0fnjPQq9NXdY1LoMzj2Y3i8wyM6tqTbKBGYKVtxGy/XAb+aSI2
u8YhIG57cpqXxsDdVxo7AmhXtQf4xMQx8IyqZk8pm4CO/dR9JuEMDPo4FudH
e67l08x2PwYeWjR1G5f2qOyWgXQhA11rX1bKWATqD2SnjNkwsM6//IM57bU5
t8p+M2HgvImk718wCbQEHtey4DEwQ3iEGUI7Xe8f2z9GKTxXMznRnPalMuFg
7nsKLQr5vPcMAsqFnoa6LRQ2iC2W7af9bnTKtod1FJ5KKGb50pZ+/c4z9SqF
Y6Eb661oS36VZ7mVUjgzyvwkg3ZVfocLt4BC7brCxE6KgNmShT53Mik0Wl4U
raR92fDnmr3JFBYdHIo4TntbRJHc5ScK+0rWxSXQbpHIFYxICvfsv/FzMO0o
34EaXEthRd6bUnfaR/XeOez2orBZV9llT/tUWHivkwuFt5U6081pa5xyqZ6w
o/DkeEfwNNp1B6LLblpQKB4fr+TTThU/qdmlT2FNfPQ0Ndrznq3rcOJT+Pie
/n4G7f/+UPrh/xOBfwGF6DgX
       "]]},
     Annotation[#, "Charting`Private`Tag$2489#1"]& ], {}}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-22.670732268233944`, 
   17.868213569724414`}, {-31.63096729273775, 36.80820646848939}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8226625114530087`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"872e8a0e-52d8-4050-a42e-568261631b55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.823343470756331*^9, 3.82334347114001*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c3aee596-f814-4d8c-90e8-74bc3967eb13"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 26 Feb 2021 10:51:11\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "2", ",", "26", ",", "10", ",", "51", ",", 
           "11.712669`7.821230856457891"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.823343471735477*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"58d7c8e2-c2b9-411d-95de-26e1d7c21dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "+", "r"}], ")"}], 
         RowBox[{"Cos", "[", "x", "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"R", "+", "r"}], ")"}], 
           RowBox[{"x", "/", "r"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "+", "r"}], ")"}], 
         RowBox[{"Sin", "[", "x", "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"R", "+", "r"}], ")"}], 
           RowBox[{"x", "/", "r"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"2", " ", "R"}], "+", "r", "+", "1"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"R", ",", "2", ",", "10", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", "1", ",", 
     RowBox[{"R", "-", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.0001", ",", 
     RowBox[{"2", " ", "r", " ", 
      RowBox[{"Pi", "/", 
       RowBox[{"GCD", "[", 
        RowBox[{"r", ",", "R"}], "]"}]}]}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.823344635958622*^9, 3.823344825833638*^9}, {
   3.823344924901664*^9, 3.823344939323605*^9}, {3.823344979936586*^9, 
   3.823344981502851*^9}, {3.823345027269302*^9, 3.823345061120503*^9}, 
   3.8233451029274893`*^9, {3.823345783400448*^9, 3.823345835561994*^9}, {
   3.8233458727386723`*^9, 3.82334587641707*^9}, {3.823345916826303*^9, 
   3.823345920549259*^9}, 3.8233459647053957`*^9, {3.823346005200223*^9, 
   3.8233460713794537`*^9}, {3.823699935293126*^9, 3.8236999358442507`*^9}, {
   3.82370002505774*^9, 3.823700031741695*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"00ca7bf4-44c8-40d5-9f39-ec2f79bfea3e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 6, $CellContext`R$$ = 
    10, $CellContext`z$$ = 10.246272112396182`, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`R$$], 2, 10, 1}, {
      Hold[$CellContext`r$$], 1, 
      Dynamic[$CellContext`R$$ - 1], 1}, {
      Hold[$CellContext`z$$], 0.0001, 
      Dynamic[(2 $CellContext`r$$) (Pi/
        GCD[$CellContext`r$$, $CellContext`R$$])]}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`r$$ = 1, $CellContext`R$$ = 
        2, $CellContext`z$$ = 0.0001}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{($CellContext`R$$ + $CellContext`r$$) 
          Cos[$CellContext`x] - $CellContext`r$$ 
         Cos[($CellContext`R$$ + $CellContext`r$$) \
($CellContext`x/$CellContext`r$$)], ($CellContext`R$$ + $CellContext`r$$) 
          Sin[$CellContext`x] - $CellContext`r$$ 
         Sin[($CellContext`R$$ + $CellContext`r$$) \
($CellContext`x/$CellContext`r$$)]}, {$CellContext`x, 0, $CellContext`z$$}, 
        PlotRange -> 2 $CellContext`R$$ + $CellContext`r$$ + 1, PlotPoints -> 
        100], "Specifications" :> {{$CellContext`R$$, 2, 10, 1, Appearance -> 
         "Labeled"}, {$CellContext`r$$, 1, 
         Dynamic[$CellContext`R$$ - 1], 1, Appearance -> 
         "Labeled"}, {$CellContext`z$$, 0.0001, 
         Dynamic[(2 $CellContext`r$$) (Pi/
           GCD[$CellContext`r$$, $CellContext`R$$])], Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {248., 254.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.823345037022623*^9, 3.823345066540823*^9}, {
   3.823345103493289*^9, 3.823345128223968*^9}, 3.823345804124483*^9, {
   3.823346022836965*^9, 3.823346031931288*^9}, 3.8233460721648293`*^9, {
   3.8236999239366198`*^9, 3.823699975537113*^9}, {3.823700032504052*^9, 
   3.823700036750317*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"5430ecf6-2ed8-4982-bfe7-ca3e4eb3f9ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.823603808762908*^9, 3.823603809068317*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"99f3fcf8-d497-442b-a16a-272af8526060"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 1 Mar 2021 11:10:09\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "1", ",", "11", ",", "10", ",", 
           "9.393392`7.725397433164463"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.823603809408122*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a5906023-b4dd-4967-9148-2b12ec58b424"]
}, Open  ]],

Cell["start plotting curves in polar coordinates", "Text",
 CellChangeTimes->{{3.823603822757411*^9, 
  3.82360382930501*^9}},ExpressionUUID->"068d2c01-920b-4233-89d6-\
c33926245fdd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"points", "=", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"N", "[", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         RowBox[{"Cos", "[", "t", "]"}]}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "Pi"}], ",", 
      RowBox[{"Pi", "/", "12"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.823603843865671*^9, 3.8236039029073133`*^9}, {
   3.8236050728695793`*^9, 3.82360507402205*^9}, 3.823698217285818*^9, {
   3.823698312179543*^9, 3.823698315219051*^9}, {3.823698454581399*^9, 
   3.823698456384639*^9}, {3.8236990409549713`*^9, 3.823699058023902*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"58780760-d99d-4222-91b3-aa59660f8a85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "12"], ",", 
     RowBox[{"-", "0.9318516525781364`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "6"], ",", 
     RowBox[{"-", "0.7320508075688772`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     RowBox[{"-", "0.41421356237309515`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "3"], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "12"], ",", "0.48236190979495863`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "12"], ",", "1.5176380902050415`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "3"], ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", "2.414213562373095`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "6"], ",", "2.732050807568877`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "12"], ",", "2.9318516525781364`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"13", " ", "\[Pi]"}], "12"], ",", "2.9318516525781364`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "6"], ",", "2.732050807568877`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "4"], ",", "2.414213562373095`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", "\[Pi]"}], "3"], ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"17", " ", "\[Pi]"}], "12"], ",", "1.5176380902050415`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "2"], ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"19", " ", "\[Pi]"}], "12"], ",", "0.48236190979495863`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "3"], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "4"], ",", 
     RowBox[{"-", "0.41421356237309515`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "6"], ",", 
     RowBox[{"-", "0.7320508075688772`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"23", " ", "\[Pi]"}], "12"], ",", 
     RowBox[{"-", "0.9318516525781364`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[Pi]"}], ",", 
     RowBox[{"-", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.823603875564748*^9, 3.823603903564302*^9}, 
   3.823605074716515*^9, 3.823698129675102*^9, 3.823698217755892*^9, 
   3.823698315675456*^9, 3.823698457073107*^9, {3.823699044080852*^9, 
   3.8236990592241507`*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"c349f793-eaf4-4e67-8f4b-60be15b61e89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"2", 
     RowBox[{"Cos", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Point", "[", "points", "]"}]}], "\[IndentingNewLine]", 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.823604990861424*^9, 3.8236050052781677`*^9}, {
  3.823605036712422*^9, 3.823605096255375*^9}, {3.8236982348974323`*^9, 
  3.82369823647364*^9}, {3.823698322137475*^9, 3.823698387778323*^9}, {
  3.823698527092978*^9, 3.823698609534553*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e3bafeee-200d-4abc-bc54-9973f78e69f9"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
Kl+QkT3TMU7f/jmQeWDzPsyZjBgP5exm0s+DnMYJN/23ZHRcqu/zids4X+d0
+PUBX9/wcnfS+jwkah73Cokmo8Hv4iLC/CS4a2AZO/KVjMSiFJKy1EiQ+N+9
84LxZHTj1Ym8uUgSFCj/zbFNI6OB6S/PX/It4OsfVlUuIaPN+fBl74oFEKaL
pPvTTUa06s38gsQF2DWBX8x9ZCRz9fjLipkFuEVFY6Xwj4yk1I5ZsB5chPsC
fwnPx8joaVX/rwnzRQg+TTzKtkhG61EJXsmvF6HVxLW0aZmM+nj6D9h+XAST
2VT0ao2Mvsm2bO8tXoTnjFq9X8hkZEBa8H6xfwn2vOYlctJTEL2vj5Kh4BL4
VBN3rxEoiBRlJqUiuwTa0vTDT/ZQkFegicsJ4yVw90Blzvso6OCL3HwexyXo
PSv1y4KFgjZIqTOcfksQnGF+ReUABZUa/6Q5lLcElPyda/UcFLTHv+w3T/0S
2B0qzrTnpKDDtW9VTgwuwVfyk9S9hymoYH3movLeZXAlbSvScVNQH61dkN7R
ZXjhndZpxkNBIbYmJrbSy0ConJ7M58XX52O+kmK0DBQGrddC/BRkMebGFPZ8
GT7wxJ7XP0ZBZo413z39lsGl8r+rLwUoqL65a/3l92WQFlqPcxekoN0335dt
ipbhz6/r6i+PUxAncHlYti7D2cNs5/WFKKjLWzD48eQyPH5y/KHQCQpq/BHD
bLm7DA+Znv3uw/lJh9mANecKbBVtPXAVpqBTcHP5hfgKNHzvFt13koIyJURl
3JVXYNrwvMB7nFkPwqeguyvgt6iDpnEejm7eirVbgcgJzzcXRCgo4wqXdt6H
FZBQOddrjzP/ym2vxm8rQIn+dzMS58tssu8n8lcghP5QbzLOfZ8sL9I1r0Cc
lPvzBJzn+MICBcdX4OCzPm4/nMf33nt2dXsF+JNXa+/hfNzHsN6CYxUuPs1y
5sL5Tq7YhyDRVZjfYhKvwOPZ//1BWKHSKuQrsv7VxZnL5f3AqP4qRE4OvWnD
93coTFiD7dkqdOgUHJLDee3Nn0ZF71W4m/LvWwCeDz+eqev2X1dBvreAsxHP
36lSuuzEvFVg/l74fA3Pr8Tp4PnexlXY/9GqaC/Oaa2002xjq2DD/GxoD14P
5pyaoOuUVbip7zyxjNevJla1yZN9Daq/6Nb+wesrzL6/eEdxDSrEqDmk+CiI
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
7E+o+c9LE3tFAmyybKqTlnxGpeBS6VB1AubxPZYYun5G//x3HSsPEmCadcg3
Sr4bv3zv+uLhR8BXxTZu9+FutJo5Vc2/ScCzJ5XaKv7d6JW7u3drNAHeKW8d
ytu7kZ0XIiecSQDrSqNz6e0eLIO5A7xmArbknD0kKO7BDDV17XCSgIe7hvvl
OT34UcZ543gfAbyngwqXdHtRelpy/dKvBIh6R+xljfei4Ye8mRApEnQFjxgC
WRamfAjb0yRLAqfGLWzKkIXLKyi5vnUkhIjfC5lKZKEWo4s6v5WEdrTeI6hh
4VfWhh+DO0j4VpV2pUfAws4NMe3quiSsKllKdCj0ocHzTo31xiQ8S5FPqN7e
h2WPDzQxTUgwFj2en3uoD3VYohcOW5CQ+8rZ5fKlPsz+ovjnyVkSvm4V6jQP
76Pz3SMaYU9CXpXKJvXUPgy//dxslwsJ91/OihN1fShi3vX5jxcJ8dGZ7und
faipYqOz8jIJGQld+h7jfbgl0Vz6lx8JaocOcCkZNha/c7qqfoOEBfvqA7I1
2CjF9FMJvEmC7UEXOdv9bPRlD8bcDyXhhs6PZRXn2ag/saNj5x0SjkwFqdsF
s3FmRWtrRRQJX2JODM29z8bV5/a0LI2l1/dabUjNYaNzaf+nrXdJGJYIqNOq
YqP2TicxhXgSfDuLS2o62DiyJM295x4J57zFyaPDbHT3ylzumkCCRG+MeNss
G3f7vV5ek0jCY94pMJWk+ba0+7XRJBL04R+z90r9uHDa2ak/mQS3nNMqu3X6
Uds9s/dJCgmLJWZzMo/1I8P0yIzOAxI+xJVXLnToxyMzFU2pNLZArpGrXz8m
rox2ZdJ4XfRHlTd3+tEvJZb7P1yb+PuIZFo/Bj9tMHtEY1KpMd66uB9VPX1r
9WjcfLhy+GF9P6auXmyRS+ubEHFQ7+7px9BSLclh2h4bWwvjZRP0flmm1CRt
b0yAlgIIc/Dcux9eTNqffa8ZCY4yHHoO+qMTQPur0h+ZEKLOwXXlzpGTdDxs
ZSMXpBhwcHGg4BLQ8dqqeqs25yQ9p++9ueQUHc/YAOvKIjcOshzMPA3oeKfs
EyKKrnHQ60hJ9k86H/wEj4mcfzkoZG70KYTO17KY7B/JWRwMyG5c3htOQs1J
ZuvNcg4+1jfyFAmj9R+b87d9CwfXpI8KzQmhzxc5oSs2xUG/KwmbHa+SQITO
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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$5436#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[0.02], 
    PointBox[
     NCache[{{0, -1.}, {Rational[1, 12] Pi, -0.9318516525781364}, {
       Rational[1, 6] Pi, -0.7320508075688772}, {
       Rational[1, 4] Pi, -0.41421356237309515`}, {Rational[1, 3] Pi, 0.}, {
       Rational[5, 12] Pi, 0.48236190979495863`}, {Rational[1, 2] Pi, 1.}, {
       Rational[7, 12] Pi, 1.5176380902050415`}, {Rational[2, 3] Pi, 2.}, {
       Rational[3, 4] Pi, 2.414213562373095}, {
       Rational[5, 6] Pi, 2.732050807568877}, {
       Rational[11, 12] Pi, 2.9318516525781364`}, {Pi, 3.}, {
       Rational[13, 12] Pi, 2.9318516525781364`}, {
       Rational[7, 6] Pi, 2.732050807568877}, {
       Rational[5, 4] Pi, 2.414213562373095}, {Rational[4, 3] Pi, 2.}, {
       Rational[17, 12] Pi, 1.5176380902050415`}, {Rational[3, 2] Pi, 1.}, {
       Rational[19, 12] Pi, 0.48236190979495863`}, {Rational[5, 3] Pi, 0.}, {
       Rational[7, 4] Pi, -0.41421356237309515`}, {
       Rational[11, 6] Pi, -0.7320508075688772}, {
       Rational[23, 12] Pi, -0.9318516525781364}, {2 Pi, -1.}}, {{0, -1.}, {
       0.2617993877991494, -0.9318516525781364}, {
       0.5235987755982988, -0.7320508075688772}, {
       0.7853981633974483, -0.41421356237309515`}, {1.0471975511965976`, 
       0.}, {1.3089969389957472`, 0.48236190979495863`}, {1.5707963267948966`,
        1.}, {1.8325957145940461`, 1.5176380902050415`}, {2.0943951023931953`,
        2.}, {2.356194490192345, 2.414213562373095}, {2.6179938779914944`, 
       2.732050807568877}, {2.8797932657906435`, 2.9318516525781364`}, {
       3.141592653589793, 3.}, {3.4033920413889422`, 2.9318516525781364`}, {
       3.6651914291880923`, 2.732050807568877}, {3.9269908169872414`, 
       2.414213562373095}, {4.1887902047863905`, 2.}, {4.4505895925855405`, 
       1.5176380902050415`}, {4.71238898038469, 1.}, {4.974188368183839, 
       0.48236190979495863`}, {5.235987755982989, 0.}, {
       5.497787143782138, -0.41421356237309515`}, {
       5.759586531581287, -0.7320508075688772}, {
       6.021385919380437, -0.9318516525781364}, {6.283185307179586, -1.}}]]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.823605005732448*^9, {3.823605076281106*^9, 3.823605097023636*^9}, 
   3.82369813693629*^9, 3.823698236764864*^9, {3.823698318173833*^9, 
   3.8236983882613373`*^9}, 3.8236984613391027`*^9, 3.823698531949057*^9, {
   3.823698562687038*^9, 3.8236986108486147`*^9}, {3.823699054649631*^9, 
   3.823699061119891*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"f6a197f0-7110-48b8-a7ee-d90c82348951"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.823699073667913*^9, 3.8236990773444*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"2cccbef4-f5ca-4c2f-884e-973dffca0c36"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 2 Mar 2021 13:37:57\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "2", ",", "13", ",", "37", ",", 
           "57.651151`8.51338295598024"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8236990776677027`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"889a574a-ac9b-483e-9899-484afd1561e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"N", "[", 
       RowBox[{"2", "+", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "Pi"}], ",", 
      RowBox[{"Pi", "/", "12"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.823699078485463*^9, 3.823699119457131*^9}, {
  3.823786464822822*^9, 3.823786469703524*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"1869dbb7-3cc7-42cc-a073-4c2a8372b7bd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "2.`"},
    {
     FractionBox["\[Pi]", "12"], "2.5176380902050415`"},
    {
     FractionBox["\[Pi]", "6"], "3.`"},
    {
     FractionBox["\[Pi]", "4"], "3.414213562373095`"},
    {
     FractionBox["\[Pi]", "3"], "3.732050807568877`"},
    {
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "12"], "3.9318516525781364`"},
    {
     FractionBox["\[Pi]", "2"], "4.`"},
    {
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "12"], "3.9318516525781364`"},
    {
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "3"], "3.732050807568877`"},
    {
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], "3.414213562373095`"},
    {
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "6"], "3.`"},
    {
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "12"], "2.5176380902050415`"},
    {"\[Pi]", "2.`"},
    {
     FractionBox[
      RowBox[{"13", " ", "\[Pi]"}], "12"], "1.4823619097949585`"},
    {
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "6"], "1.`"},
    {
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "4"], "0.5857864376269049`"},
    {
     FractionBox[
      RowBox[{"4", " ", "\[Pi]"}], "3"], "0.2679491924311228`"},
    {
     FractionBox[
      RowBox[{"17", " ", "\[Pi]"}], "12"], "0.0681483474218636`"},
    {
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "2"], "0.`"},
    {
     FractionBox[
      RowBox[{"19", " ", "\[Pi]"}], "12"], "0.0681483474218636`"},
    {
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "3"], "0.2679491924311228`"},
    {
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "4"], "0.5857864376269049`"},
    {
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "6"], "1.`"},
    {
     FractionBox[
      RowBox[{"23", " ", "\[Pi]"}], "12"], "1.4823619097949585`"},
    {
     RowBox[{"2", " ", "\[Pi]"}], "2.`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8236991200397663`*^9},
 CellLabel->
  "Out[28]//TableForm=",ExpressionUUID->"671c556e-31fa-4676-acb9-\
0d080c68829b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "+", "r"}], ")"}], 
         RowBox[{"Cos", "[", "x", "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"R", "+", "r"}], ")"}], 
           RowBox[{"x", "/", "r"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "+", "r"}], ")"}], 
         RowBox[{"Sin", "[", "x", "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"R", "+", "r"}], ")"}], 
           RowBox[{"x", "/", "r"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"2", " ", "r"}], "+", "R", "+", "1"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"EdgeForm", "[", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Thin"}], "}"}], "]"}], ",", "LightBlue", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "R"}], "]"}], ",", 
        "\[IndentingNewLine]", "LightPink", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"R", "+", "r"}], ")"}], 
             RowBox[{"Cos", "[", "z", "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"R", "+", "r"}], ")"}], 
             RowBox[{"Sin", "[", "z", "]"}]}]}], "}"}], ",", "r"}], "]"}], 
        ",", "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "@", "0.02"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"R", "+", "r"}], ")"}], 
             RowBox[{"Cos", "[", "z", "]"}]}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"R", "+", "r"}], ")"}], 
               RowBox[{"z", "/", "r"}]}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"R", "+", "r"}], ")"}], 
             RowBox[{"Sin", "[", "z", "]"}]}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"R", "+", "r"}], ")"}], 
               RowBox[{"z", "/", "r"}]}], "]"}]}]}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R", ",", "11"}], "}"}], ",", "2", ",", "12", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "6"}], "}"}], ",", "1", ",", 
     RowBox[{"R", "-", "1"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z", ",", "37"}], "}"}], ",", "0.0001", ",", 
     RowBox[{"2", " ", "r", " ", 
      RowBox[{"Pi", "/", 
       RowBox[{"GCD", "[", 
        RowBox[{"r", ",", "R"}], "]"}]}]}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8237002156312017`*^9, 3.8237003183603287`*^9}, {
   3.823700349773697*^9, 3.8237003537259417`*^9}, {3.8237003931449947`*^9, 
   3.823700400924829*^9}, 3.8237004712702*^9, {3.823711571342782*^9, 
   3.823711578161223*^9}, {3.8237116640301933`*^9, 3.823711909368965*^9}, {
   3.8237119471087027`*^9, 3.8237119576651907`*^9}, {3.823711990437705*^9, 
   3.8237120054345627`*^9}, {3.823712042206396*^9, 3.823712098161373*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e97fc047-7fc1-4683-bec2-78ef0b403a63"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r$$ = 6, $CellContext`R$$ = 
    11, $CellContext`z$$ = 37, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`R$$], 11}, 2, 12, 1}, {{
       Hold[$CellContext`r$$], 6}, 1, 
      Dynamic[$CellContext`R$$ - 1], 1}, {{
       Hold[$CellContext`z$$], 37}, 0.0001, 
      Dynamic[(2 $CellContext`r$$) (Pi/
        GCD[$CellContext`r$$, $CellContext`R$$])]}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`r$$ = 6, $CellContext`R$$ = 
        11, $CellContext`z$$ = 37}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{($CellContext`R$$ + $CellContext`r$$) 
          Cos[$CellContext`x] - $CellContext`r$$ 
         Cos[($CellContext`R$$ + $CellContext`r$$) \
($CellContext`x/$CellContext`r$$)], ($CellContext`R$$ + $CellContext`r$$) 
          Sin[$CellContext`x] - $CellContext`r$$ 
         Sin[($CellContext`R$$ + $CellContext`r$$) \
($CellContext`x/$CellContext`r$$)]}, {$CellContext`x, 0, $CellContext`z$$}, 
        PlotRange -> 2 $CellContext`r$$ + $CellContext`R$$ + 1, PlotPoints -> 
        100, PlotStyle -> Black, Axes -> False, Epilog -> {
          EdgeForm[{Black, Thin}], LightBlue, 
          Disk[{0, 0}, $CellContext`R$$], LightPink, 
          
          Disk[{($CellContext`R$$ + $CellContext`r$$) 
            Cos[$CellContext`z$$], ($CellContext`R$$ + $CellContext`r$$) 
            Sin[$CellContext`z$$]}, $CellContext`r$$], Black, 
          PointSize[0.02], 
          
          Point[{($CellContext`R$$ + $CellContext`r$$) 
             Cos[$CellContext`z$$] - $CellContext`r$$ 
            Cos[($CellContext`R$$ + $CellContext`r$$) \
($CellContext`z$$/$CellContext`r$$)], ($CellContext`R$$ + $CellContext`r$$) 
             Sin[$CellContext`z$$] - $CellContext`r$$ 
            Sin[($CellContext`R$$ + $CellContext`r$$) \
($CellContext`z$$/$CellContext`r$$)]}]}], 
      "Specifications" :> {{{$CellContext`R$$, 11}, 2, 12, 1, Appearance -> 
         "Labeled"}, {{$CellContext`r$$, 6}, 1, 
         Dynamic[$CellContext`R$$ - 1], 1, Appearance -> 
         "Labeled"}, {{$CellContext`z$$, 37}, 0.0001, 
         Dynamic[(2 $CellContext`r$$) (Pi/
           GCD[$CellContext`r$$, $CellContext`R$$])], Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {251., 257.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.823700173288438*^9, {3.82370024576615*^9, 3.823700293517324*^9}, {
   3.823700395022646*^9, 3.8237004059832153`*^9}, 3.823700487520822*^9, 
   3.823711586729686*^9, {3.823711677451582*^9, 3.823711702062477*^9}, {
   3.823711736840556*^9, 3.8237117587797003`*^9}, {3.823711836632781*^9, 
   3.823711912559022*^9}, {3.823711948503574*^9, 3.8237119579640083`*^9}, {
   3.82371199482969*^9, 3.8237120988346453`*^9}, 3.823786267007456*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"20f1f8f7-f82a-47db-9c99-66f1ecc1ffe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.823786778233029*^9, 3.823786778583477*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"edb9238e-ec58-488d-9e98-4a379bc6b7bd"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 3 Mar 2021 13:59:38\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "3", ",", "13", ",", "59", ",", 
           "38.767526`8.341043065620681"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.823786778798696*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"005d423c-81eb-44f2-90dd-b715716374ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         RowBox[{"Cos", "[", "t", "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", 
         RowBox[{"Cos", "[", "t", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.02", "]"}]}], "\[IndentingNewLine]", 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.823786307034018*^9, 3.823786333768846*^9}, {
  3.8237865294353657`*^9, 3.823786604341157*^9}, {3.823786643997493*^9, 
  3.823786645933216*^9}, {3.82378670875624*^9, 3.823786720780295*^9}, {
  3.823786928803669*^9, 3.823786947594187*^9}, {3.82378703933333*^9, 
  3.823787075179266*^9}, {3.8237871236484756`*^9, 3.8237871449881573`*^9}, {
  3.8237871956399593`*^9, 3.8237872825296392`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"820b1770-841e-46e6-9fbc-cdaf461d90c8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Kl+QkT3TMU7f/jmQeWDzPsyZjBgP5exm0s+DnMYJN/23ZHRcqu/zids4X+d0
+PUBX9/wcnfS+jwkah73Cokmo8Hv4iLC/CS4a2AZO/KVjMSiFJKy1EiQ+N+9
84LxZHTj1Ym8uUgSFCj/zbFNI6OB6S/PX/It4OsfVlUuIaPN+fBl74oFEKaL
pPvTTUa06s38gsQF2DWBX8x9ZCRz9fjLipkFuEVFY6Xwj4yk1I5ZsB5chPsC
fwnPx8joaVX/rwnzRQg+TTzKtkhG61EJXsmvF6HVxLW0aZmM+nj6D9h+XAST
2VT0ao2Mvsm2bO8tXoTnjFq9X8hkZEBa8H6xfwn2vOYlctJTEL2vj5Kh4BL4
VBN3rxEoiBRlJqUiuwTa0vTDT/ZQkFegicsJ4yVw90Blzvso6OCL3HwexyXo
PSv1y4KFgjZIqTOcfksQnGF+ReUABZUa/6Q5lLcElPyda/UcFLTHv+w3T/0S
2B0qzrTnpKDDtW9VTgwuwVfyk9S9hymoYH3movLeZXAlbSvScVNQH61dkN7R
ZXjhndZpxkNBIbYmJrbSy0ConJ7M58XX52O+kmK0DBQGrddC/BRkMebGFPZ8
GT7wxJ7XP0ZBZo413z39lsGl8r+rLwUoqL65a/3l92WQFlqPcxekoN0335dt
ipbhz6/r6i+PUxAncHlYti7D2cNs5/WFKKjLWzD48eQyPH5y/KHQCQpq/BHD
bLm7DA+Znv3uw/lJh9mANecKbBVtPXAVpqBTcHP5hfgKNHzvFt13koIyJURl
3JVXYNrwvMB7nFkPwqeguyvgt6iDpnEejm7eirVbgcgJzzcXRCgo4wqXdt6H
FZBQOddrjzP/ym2vxm8rQIn+dzMS58tssu8n8lcghP5QbzLOfZ8sL9I1r0Cc
lPvzBJzn+MICBcdX4OCzPm4/nMf33nt2dXsF+JNXa+/hfNzHsN6CYxUuPs1y
5sL5Tq7YhyDRVZjfYhKvwOPZ//1BWKHSKuQrsv7VxZnL5f3AqP4qRE4OvWnD
93coTFiD7dkqdOgUHJLDee3Nn0ZF71W4m/LvWwCeDz+eqev2X1dBvreAsxHP
36lSuuzEvFVg/l74fA3Pr8Tp4PnexlXY/9GqaC/Oaa2002xjq2DD/GxoD14P
5pyaoOuUVbip7zyxjNevJla1yZN9Daq/6Nb+wesrzL6/eEdxDSrEqDmk+CiI
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
7E+o+c9LE3tFAmyybKqTlnxGpeBS6VB1AubxPZYYun5G//x3HSsPEmCadcg3
Sr4bv3zv+uLhR8BXxTZu9+FutJo5Vc2/ScCzJ5XaKv7d6JW7u3drNAHeKW8d
ytu7kZ0XIiecSQDrSqNz6e0eLIO5A7xmArbknD0kKO7BDDV17XCSgIe7hvvl
OT34UcZ543gfAbyngwqXdHtRelpy/dKvBIh6R+xljfei4Ye8mRApEnQFjxgC
WRamfAjb0yRLAqfGLWzKkIXLKyi5vnUkhIjfC5lKZKEWo4s6v5WEdrTeI6hh
4VfWhh+DO0j4VpV2pUfAws4NMe3quiSsKllKdCj0ocHzTo31xiQ8S5FPqN7e
h2WPDzQxTUgwFj2en3uoD3VYohcOW5CQ+8rZ5fKlPsz+ovjnyVkSvm4V6jQP
76Pz3SMaYU9CXpXKJvXUPgy//dxslwsJ91/OihN1fShi3vX5jxcJ8dGZ7und
faipYqOz8jIJGQld+h7jfbgl0Vz6lx8JaocOcCkZNha/c7qqfoOEBfvqA7I1
2CjF9FMJvEmC7UEXOdv9bPRlD8bcDyXhhs6PZRXn2ag/saNj5x0SjkwFqdsF
s3FmRWtrRRQJX2JODM29z8bV5/a0LI2l1/dabUjNYaNzaf+nrXdJGJYIqNOq
YqP2TicxhXgSfDuLS2o62DiyJM295x4J57zFyaPDbHT3ylzumkCCRG+MeNss
G3f7vV5ek0jCY94pMJWk+ba0+7XRJBL04R+z90r9uHDa2ak/mQS3nNMqu3X6
Uds9s/dJCgmLJWZzMo/1I8P0yIzOAxI+xJVXLnToxyMzFU2pNLZArpGrXz8m
rox2ZdJ4XfRHlTd3+tEvJZb7P1yb+PuIZFo/Bj9tMHtEY1KpMd66uB9VPX1r
9WjcfLhy+GF9P6auXmyRS+ubEHFQ7+7px9BSLclh2h4bWwvjZRP0flmm1CRt
b0yAlgIIc/Dcux9eTNqffa8ZCY4yHHoO+qMTQPur0h+ZEKLOwXXlzpGTdDxs
ZSMXpBhwcHGg4BLQ8dqqeqs25yQ9p++9ueQUHc/YAOvKIjcOshzMPA3oeKfs
EyKKrnHQ60hJ9k86H/wEj4mcfzkoZG70KYTO17KY7B/JWRwMyG5c3htOQs1J
ZuvNcg4+1jfyFAmj9R+b87d9CwfXpI8KzQmhzxc5oSs2xUG/KwmbHa+SQITO
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
       "]]},
     Annotation[#, "Charting`Private`Tag$2493#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[0.02]},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.823786605098753*^9, 3.82378673655663*^9, {3.823787046827776*^9, 
   3.823787075986093*^9}, 3.823787142541998*^9, 3.823787235383134*^9, {
   3.82378727484298*^9, 3.8237872837325153`*^9}, 3.824199271943825*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"894dbeba-3199-49dc-8607-3867c69f8c22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.824199473591049*^9, 3.824199473917824*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4cb5827a-c7f6-46bb-8c1f-6f5d4b4b95c2"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 8 Mar 2021 08:37:54\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "8", ",", "8", ",", "37", ",", 
           "54.136542`8.486065485964021"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.824199474154146*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"e592c3f0-080d-4272-8cb0-6dc866f6d93b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PolarPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "x"}], "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", "x"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "1.6"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"250", ",", "250"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.5", ",", 
             RowBox[{"-", "1.5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", 
             RowBox[{"-", "1.5"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.03", "]"}], ",", "Red", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Point", "[", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", "x"}], "]"}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"4", "x"}], "]"}]}], ")"}], 
                 RowBox[{"Cos", "[", "x", "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", "x"}], "]"}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"4", "x"}], "]"}]}], ")"}], 
                 RowBox[{"Sin", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"2", "Pi"}], ",", 
                RowBox[{"Pi", "/", "12"}]}], "}"}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", "t"}], "]"}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"4", "t"}], "]"}]}], ")"}], 
                 RowBox[{"Cos", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", "t"}], "]"}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"4", "t"}], "]"}]}], ")"}], 
                 RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "x"}], "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", "x"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".1"}], ",", 
             RowBox[{
              RowBox[{"2", "Pi"}], "+", ".1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.3", ",", 
             RowBox[{"-", "2.1"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "250"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"2", "Pi"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Red", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Opacity", "[", "0.4", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Point", "[", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "x"}], "]"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"4", "x"}], "]"}]}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"2", "Pi"}], ",", 
                RowBox[{"Pi", "/", "12"}]}], "}"}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"Opacity", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "t"}], "]"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"4", "t"}], "]"}]}]}], "}"}]}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "5.9"}], "}"}], ",", "0.0001", ",", 
     RowBox[{"2", "Pi"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.824199486917239*^9, 3.824199494419724*^9}, {
  3.82419953064852*^9, 3.824200318550517*^9}, {3.8242003597239037`*^9, 
  3.824200372305936*^9}, {3.82420040644538*^9, 3.824200535112783*^9}, {
  3.8242005756018143`*^9, 3.824200588392297*^9}, {3.824200621015717*^9, 
  3.8242006217373533`*^9}, {3.824200657112774*^9, 3.824200699161121*^9}, {
  3.824200753190256*^9, 3.8242008265699368`*^9}, {3.8242008795091677`*^9, 
  3.824201016913821*^9}, {3.824201150702065*^9, 3.824201150834323*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b6fd5a50-cfd4-4f71-92b0-696ecd341c8a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 5.9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`t$$], 5.9}, 0.0001, 2 Pi}}, Typeset`size$$ = {
    750., {123., 127.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 5.9}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         PolarPlot[
         Sin[2 $CellContext`x] + 
          Cos[4 $CellContext`x], {$CellContext`x, 0, $CellContext`t$$}, 
          PlotRange -> 1.6, PlotStyle -> Black, ImageSize -> {250, 250}, 
          Ticks -> {{1.5, -1.5}, {1.5, -1.5}}, Epilog -> {
            PointSize[0.03], Red, 
            Point[
             
             Table[{(Sin[2 $CellContext`x] + Cos[4 $CellContext`x]) 
               Cos[$CellContext`x], (Sin[2 $CellContext`x] + 
                Cos[4 $CellContext`x]) Sin[$CellContext`x]}, {$CellContext`x, 
               0, 2 Pi, Pi/12}]], 
            
            Line[{{(Sin[2 $CellContext`t$$] + Cos[4 $CellContext`t$$]) 
               Cos[$CellContext`t$$], (Sin[2 $CellContext`t$$] + 
                Cos[4 $CellContext`t$$]) Sin[$CellContext`t$$]}, {0, 0}}]}], 
         Plot[
         Sin[2 $CellContext`x] + 
          Cos[4 $CellContext`x], {$CellContext`x, 0, $CellContext`t$$}, 
          PlotRange -> {{-0.1, 2 Pi + 0.1}, {1.3, -2.1}}, PlotStyle -> Black, 
          ImageSize -> {500, 250}, Ticks -> {
            Range[0, 2 Pi, Pi/2], {1, -1, -2}}, Epilog -> {
            PointSize[0.02], Red, 
            Opacity[0.4], 
            Point[
             
             Table[{$CellContext`x, Sin[2 $CellContext`x] + 
               Cos[4 $CellContext`x]}, {$CellContext`x, 0, 2 Pi, Pi/12}]], 
            Opacity[1], 
            
            Line[{{$CellContext`t$$, 0}, {$CellContext`t$$, 
               Sin[2 $CellContext`t$$] + Cos[4 $CellContext`t$$]}}]}]}], 
      "Specifications" :> {{{$CellContext`t$$, 5.9}, 0.0001, 2 Pi, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{795., {168., 174.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.824199539067761*^9, 3.824199557950204*^9}, {
   3.8241996778036137`*^9, 3.8241997045175037`*^9}, {3.824199778458158*^9, 
   3.824199882792275*^9}, {3.824199914492848*^9, 3.824199962348104*^9}, {
   3.8242000596092*^9, 3.82420006793227*^9}, {3.824200108926737*^9, 
   3.8242001453299932`*^9}, {3.8242001756439466`*^9, 3.82420019848428*^9}, {
   3.82420029591358*^9, 3.824200318745875*^9}, 3.8242003725640907`*^9, 
   3.824200407768669*^9, {3.82420045889018*^9, 3.824200492765129*^9}, 
   3.82420053554738*^9, {3.8242005715537233`*^9, 3.8242005886762743`*^9}, {
   3.824200622167754*^9, 3.824200699504184*^9}, {3.824200756909667*^9, 
   3.824200826862042*^9}, {3.8242008800107117`*^9, 3.824200986191964*^9}, {
   3.8242010176876783`*^9, 3.824201046045659*^9}, {3.824201151143626*^9, 
   3.8242011631597567`*^9}, {3.8242013059297037`*^9, 3.824201306639387*^9}, 
   3.824818731877555*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"fa33f627-9703-4aad-a7bb-b114a0808bcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.824285672632077*^9, 3.824285672980208*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bd258423-ef56-491c-bd6c-21619405e46a"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 9 Mar 2021 08:34:33\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "9", ",", "8", ",", "34", ",", 
           "33.450038`8.276971595631586"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.824285673467463*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"d28fa7de-cf4a-45c0-9f1a-dafaacddf5f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PolarPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "+", 
      RowBox[{"b", " ", 
       RowBox[{"f", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "21"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Point", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "+", 
                RowBox[{"b", " ", 
                 RowBox[{"f", "[", "x", "]"}]}]}], ")"}], 
              RowBox[{"Cos", "[", "x", "]"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a", "+", 
                RowBox[{"b", " ", 
                 RowBox[{"f", "[", "x", "]"}]}]}], ")"}], 
              RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"2", "Pi"}], ",", 
             RowBox[{"Pi", "/", "12"}]}], "}"}]}], "\[IndentingNewLine]", 
          "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "7"}], "}"}], ",", "1", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "10"}], "}"}], ",", "1", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "Sin"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Cos", ",", "Sin"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.824285966764556*^9, 3.824285972530046*^9}, {
  3.824286027049592*^9, 3.824286052856037*^9}, {3.824286118266727*^9, 
  3.8242863375364656`*^9}, {3.8242864085699797`*^9, 3.824286412032772*^9}, {
  3.824286457309173*^9, 3.8242864574790163`*^9}, {3.82428794759571*^9, 
  3.824288064362612*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"9e3d1ce0-5cca-419c-8004-152be457320a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 7, $CellContext`b$$ = 
    10, $CellContext`f$$ = Sin, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 7}, 1, 10}, {{
       Hold[$CellContext`b$$], 10}, 1, 10}, {{
       Hold[$CellContext`f$$], Sin}, {Cos, Sin}}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 7, $CellContext`b$$ = 
        10, $CellContext`f$$ = Sin}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      PolarPlot[$CellContext`a$$ + $CellContext`b$$ \
$CellContext`f$$[$CellContext`x], {$CellContext`x, 0, 2 Pi}, PlotStyle -> 
        Black, PlotRange -> 21, Epilog -> {
          PointSize[0.02], 
          Point[
           
           Table[{($CellContext`a$$ + $CellContext`b$$ \
$CellContext`f$$[$CellContext`x]) 
             Cos[$CellContext`x], ($CellContext`a$$ + $CellContext`b$$ \
$CellContext`f$$[$CellContext`x]) Sin[$CellContext`x]}, {$CellContext`x, 0, 2 
             Pi, Pi/12}]]}], 
      "Specifications" :> {{{$CellContext`a$$, 7}, 1, 10, Appearance -> 
         "Labeled"}, {{$CellContext`b$$, 10}, 1, 10, Appearance -> 
         "Labeled"}, {{$CellContext`f$$, Sin}, {Cos, Sin}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {248., 254.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8242868118109417`*^9, 3.824287986519155*^9, 
  3.8242880671428223`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"9a6978f3-d2f1-4f42-91df-b576172089be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PolarPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"a", " ", "x"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"b", " ", "x"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", 
           RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"60", ",", "60"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Ticks", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Black", ",", "Thin"}], "}"}]}]}], "\[IndentingNewLine]", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<r = sin(\>\"", ",", 
          RowBox[{"b", " ", "\[Theta]"}], ",", " ", "\"\<) cos(\>\"", ",", 
          RowBox[{"a", " ", "\[Theta]"}], ",", "\"\<)\>\""}], "}"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Italic", ",", 
          RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "7", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "7", ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TableSpacing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.824287335769812*^9, 3.824287518657563*^9}, {
  3.824287801400745*^9, 3.824287848522656*^9}, {3.824288074448786*^9, 
  3.8242880827665577`*^9}, {3.8242881651135817`*^9, 3.82428817043992*^9}, {
  3.824288209686387*^9, 3.8242883582534027`*^9}, {3.824288396567878*^9, 
  3.824288397480156*^9}, {3.824288433416853*^9, 3.8242884659435387`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"523f2950-b643-4578-84b2-d84849d66a95"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
/gdWi8m7
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4778#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{
        "\"r = sin(\"", "\[Theta]", "\") cos(\"", "\[Theta]", "\")\""}, 
        "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
Q1cSOkiU3N//9P4dGg5M01e/aCYx9KBaYuUOGnh0E4OtKkm8v+muuXcxDZV8
EtG2JSSUqr/UgzGAEqfs+e15JL4qCj5Y92YAf0YPbq1JpPhl/Bpk3BoAkTgl
m/CBRIGt+/Y3xwcQpmOxRO09CW3bgo4KDqpumSl9Cqd4FQpxdjjc3w8e045S
UzcS9W577sZk94PB8UK+/yGVLw+Xzh+y6kc5b2/fNMV701et0IQ2qu6veJfJ
VCVxxNvXJiKpD5XO5w2tlUhYvf7i7fG8D76zDXmpu0j0nnwrtudgH3oUzjtb
CJHI9W6qmonsxRGlDWXeXymeNQ0Yo9Y9qLbS2Mv9kA6jeuu8pVo9+I/sEH9h
TQcpX5koLN4DI189dsNlOso2dAsf7OzGl+Vm396Ajtv0K59ND1N9P+CzxX4O
OqLLjsW1rOzCovHVhzvu0ZD3rOH+yNdOnPa/+MDRnAbtrKMyK8s70fH3vy2k
Lg2KA0NaJg6dUE3oEfhH8e75sEn6HNkBKM2/dR4YQMS76KTZjHb03imY7N4/
gLVc4aMffNoR1OC57r/NAxAqmjthdKMdLVWRxz7zDMAvSk73x6Z2EBYvbJkU
r4VJjyQ/e7bh+ftdZZEuVH9LTFqaZdGKu62ZDpHFfSgxX3CVOdeEUzvfVaVR
84FIW733obVNiNGd9sqZo+aNUwkGj9obUScW4P6O2YMGvZOVr/QakbThfOrf
5B6cqFuRyq/fALmA3Yu2qfUg8fJ/Wf8u12HX8I+68OvdkM2r734RUQ1rbivn
/0I7sTfZYm3O1Wrolz/4Z/G4E8u7/w1J7ayGuOvEgVrTTlxq/CZZm1+F2PXj
qfpbOrGs85yzUk8lDl9d2PkouQOhhYmWqyUq8N89AbUXBe3Y3zWlHNJDoHR6
h1lBXStuHwmwTLYlELFJ82JdfCsyCh0lHRYTuLi2oLrteSt+6fC07JAvwViD
hkmzKqWLR11W7w0rgji3nceLghZcXP51YverfAwIMX8v0m/G02sdbow9+TCI
HX1RuaoZn68GNJ/syMMNAcEbL+qa8Dhs9ZyZcB5Gzs7SxVWbID0n4fAkIwe8
P5sji/c0Qj3K6k3JoizsVzxo/lGgHpm3X/JZZWSCnfS841BLHX4I0vK7TDPR
JdA2+O1lHS6/qu/7TWRgX3f9O78ldeDN+N1x2CMdXFv3ft0x+xkasiJyy++m
QPJ2+f3E79VYWrXKYp9xHNrvWw1Pfi/HpPe98+t+xUJwec+mobRyLOIbYB52
j8W3fLYor2M5jLz3XTNMj8GIrazoBHc5MhqtbEPXf8DFrhtjN8TKUHCi3/Kl
RCT4q++o7q8tQU7L6x++/hGw6Pv03uVSCVKu78q1YYYjZ9llK92xYsTrnHh8
0TMM++Xb13huKEbsaSmZtN8hqNgwwe1+uxA3BgwzexTfIPnd9EuBI3ko5ff/
EpwYhNOMXV4PBnLx67HqYKBoEBIuGlY+uZ+L68rtpvv4AzF17BOffXYO8nXO
HUpZ7o9aU0uD5fLZSMnbvnFH60vU7+yuunU2A053BpdMzHgjjM+F+/FsOgZr
ro5VSnvDriG55eiHdEgO1qdeeuUJgckJ3/GJNIw+SZB/7vscxPfrJodUU3G6
0edHAJ4isNd8iatyIv4tS74/H/8Er05x5ifFJEByVY7yZ8EnKC698+kyXwKY
aQJXUscfQUyCV+7it4/wMLzJ97PpPgw5FF0502KRzvGzrKfTCVaLZHeFbonF
1L+PX6eYjvjF9eZQw/sYas6c0n7J54Bfx5cmzPl9wCbVJ3vWpt1GXoGdWpNn
FI457tyQOGSPO+byNRdWROFbzS8OloQ9tnN2n/Z9FYnmwp+8Q4Z2kN6Q5c9S
jsAZV9qGP3OW2Ot8py/vXShmrTMPBUpfweBCZIrjdCC49PZ9llUyRX6wdQWf
fCCsV3jGqEcZw0DCsGvH3QAQZ98nf1G4iFiF3mt/5l5DtGa8wlv6HPRD3WP0
bvvC1cE+6maDPvanGyaelPBB6eSu3XYueujuC0+53+uNpYLOoYGrdTF6lb7L
6bInjFVuyJkWaEFscMT4dZEb+Iu3fl3J1IDqTLLd27hnqKTvlS+XUMeC/2Dc
+FtX1JCs+sCRI5gOFXiZ9+oJtrpBvGBYBU2KFv+d2+2CmqGnHQtSh2D/uH6a
+9QjVLP2nNberAhfbfXjPdn38bGt3SykZz+M9oSpruBwQtKKtxrKBXvxeugB
TcrIAUlLmXH/+nehN8FyUkTpDl4qHe5vfbAD/9m7m/GU2MPY+qib+eVtSFlY
eWpM7xb6Tf+lNzHFcdxcXOiN/k1UHlv+X2/YZojZrWhjRt/Ab1P+ZUqzG2Cb
ZyOTIHgNn4VX8KR1CeLm/O63E5/MwT/HYau4fQ0GaR3fmq9eQcJ2Pm3X7pVY
YX03zeu5MS4NM448lOWBW9rIz6IXFxA1+tBDcN+8yrm74dOHzfXBH5SRHyIx
pVL/+nRvkrIusvz+c3yv/ktl5SphV81cHcz0n/W2nB5WiW7/vvvScw0w0huF
Ry8NqlR9KliewT6Cr59v8jb+6VLR9nuSlx9zAJVtF1nelg0q84sLW2nhe9H1
WqG9aFmpisPdA62k3XZ8+jl3cCQyVSV5aPV/20tF4dbs7vV16TsVyyHuyeWb
VkPhyvr+0rn7Ks62PN1hfbMqectaiOUNR1Tue7T7RLR1qCjYMgsuu44VW/+5
H3zXIFKF+cqs/iS/WcmjRr+LSZ7/qWTWC29cnehVEv5s57zloyW4ZdzgdkIu
puRg31sVHk8hpHqHXZ2KyCnhXr6Mf26bFDpcjQZlL1aVjPiLfHpfKwvdx1N1
2TxtJROLboqEdsjj7ktV9eMyAyXSWvFOWuaHcf+Tqm5YBbvk6svLxHkeNXzS
0dTcofWjZI3Iis1GP7XQuqFOK2jkd8nc3V/9vuYn8YGeYqBkNFNy9c1I0Vjm
GVyjDQWNcXESa02EZ0P+ncX6rtfN9zwWExMmzddyfc8jUDtn/NxnXkI/Jfaf
/PVLMDA86txvyU8c5LpZ4qpmiv+0ivfT+gWImE2lacsczbCVk8dDpUyIMEt1
mdjSZAGh8oTTy8VFiCG5KJ7GY9cx+Ybz9SIFSWKPjuMT33hrfONd+SNq71Zi
gaZa9crHDlz7pL0fP9hObDzh3jSpYw+r6HdNk867CbVdhjN4cReHNJaoPFtx
kFjN1/YuvfMhjipxbX8+fIjYb6a9s7HjEYy7H+/g+QvCfN/suMEXFwzSDSP2
XlIj6rVH6VqbXGEiSxiLOx4nnuy2bkPfc3TKNHpx1Z8kCk4k7Zzb/AKbaBdv
5IrqEs6vGk5rWnuisvJdU2S1HvH19Scra7GXGNsmcJn3+3nC67Ga4/apVzBV
gG/FswvE6k0Xg7ekvIZw7t8SV9lLxON3DkurbvhDLM9uzCLPhKhysbrEHA7A
8USfbfbt5sR86US02tq3OHxxoWB22IJQe5BltHT4LQp2hYYb8FwjtNO/LjMg
gqGgWeAldvUGwTd9QdLDKQS+dYGPb4XaEB9f57T2rA1HI/nh+nduO+LH3cgT
QYsioK257VeB8i2iV/rDZOlUBJom3MXkSu2JhetVTjITkZTu0onvWXWPkB67
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
TCIbpFmDcPB8L34/6zeWjWFjP+cbx6G9fUjd/EvXI5KNd2pPx2tP9CFoLmEm
6z0b219/T3e51ofkPzVCfoFUfPZeUzB914dA2hea8isqvqQDN3hlUHV9YR1n
iTcbSwWdHrnVU3XfeWaZGpUfN8NCVnyb60PZ4W2Pwx5R348VvJcq0I+8uPN2
7VQ+hVzcsPb4jn4c33rmQpstG2Iuq99xGPYjNqg9LNSS8hefftsGm340ibb8
OmJB8S1TMLzkWT8skgbNxIzY+BlMu3AxpR9FE0UNF6h8DyUP8pVX9MMvJIxh
f5KNakkuvdmefqj2r4lROMqGX4a/MptrADKChf82U/VjfmFp+/OzA3jdsGaD
mhgbO4lDO+7fGIDenLikxgY23seFBig7D2Ak73ESi5cN7aMa1nIfBrA6fqOW
3wgLoZHqvPU/B7B0R+SLj2wWqo4Q5fKcNAjfGxaIGGDhvZYlbAVoGHobWriz
gXou/cJaS5GG0QHXEzUJLPjlPRUIcKZhZraqix7JwnRB6VULHxqu76va2P2W
Bc1Fmcac4TSEWfT6WLmzUGjWoB5WQsO5oD1mEiYstMor8Bn8o8FNkWdG/RwL
Z7eMlzxaQQfftcXN2sdZkA213WEnTEdRS/DUjAJVn+3fnUpRomPb+fuVHCtZ
aFJxS317i47qNWTlQS4WPAUvCS99TMe+kfy356eYWLn46ksVbzreGNi4HRlk
QpUjJWNRLB3MLm75mkyq/9w5kDbcSUeOzSPXLVT/WdBrI/0H6Ti5lfuY5Xsm
aK+FArl/0HHnltOaaDcmrtaV9ylyk7BzNA6k6zNRueKA6tedJK7LzbubajJx
UYfnQIAiifldL3SqlJho1bnGN3OUREBy0XWlTUxkui2NmDr3v/u6Vae0+JjY
L/vwn48JCWXnu1sOcjKhLsRwp98gYfnPpKyBPQi90gfWyQ9IJB9YKWTTNQj9
yrr7Ms9IqPkffjReM4ibC0f5zL1JFD5NDU9OHMTLlW9V5kNIPC04NsIKHcT3
Ub/XV6JJWHxabcfhMwhBq6/0Rwkkfi89rfzDdhCms6XDjP/9f22qe30J1d89
Vt65sa2YRPlMjr6D7iCqytg3tlaQyI11UFh3dBDnlvU20T6T+OPQtjx8zyBu
CZ9/crKJRIZz9uZVEoPAf6kW99pJ+M8qFVxbMwj+4LsW53qo55ZX89rGGRC5
OGl8eJCEYqVwxhCTAYldKns0vlD85HqZsdsYCF6+rGnRNxIcmuGCDeUMnCs4
LeU8QoLx7IZQeAYDKbr6Up9GSXw+KJb1v/vjo0/CiP/dH5d/KarE5c/Aij6O
b3J/SLADmKOBTxl4xv0u0H2KBH3ZEmkBewbMf9fl+lNzkxhbY9cjUwbsNmto
G86SEPn78ET7aQaeRi8caZ8j0RUa3iYIBmasDgUvmSfB1CRWaMgyYHnaQ/sX
hTfvW3bsyiYGzuzM0Q343/3vf0Sr1QoG+CeHE0cobOXl/LNiksR4lafBPwqP
vx9e7ttB4trgCf0qCl8+0vhmfwYJg8Ld0eoUttAx2pHnR+L96CONh9T7dYLp
VzbYUH5Xqjli+Y9E8anmnvM6JAxNvgWvouxr3lC4w3EbiVip5WdvzpAYsT7x
++4iEou3ht13+UuivVyjSY+KY6NCozXHKTvqaI8NV5fQYd2sLt30m8T3pcwd
6SF03Mz4VM3zi0SEviV7ryMdHkNSMzM/KH8MCIu91aejbcivJeY7ZQfP8gd0
OTp2Da81WvKVxMfa077LqDy9HygVI8oi8R996fT6YRrohGPFGJ3Eobe6ql8j
aFBv3ttQ0EnCS1DE6ONDGu4cvk1mtpCQ3VqvcMqQhmVPP2y8Wk8idedsjt4q
GtKvB1iNESS0Z+1ep38bwG2TS5l1+SQqQxKjpysH4PJtx8vLmSQuuPr3aD0c
ANcDpnlyLAmnW0yTqvMDkJC3dhwOJ7HEOlt8j8IA9v7Tyf7ylpqbF2xPdY71
w1V5XnSbJ4lN5oIbjK/2w3ad/uRnKt+O8k4dvajaD4furyHrTanz7XwYpCPa
jx9F98xkDCn/TI+mc/b2wdKlajhEncRy42kb8ngfrPfEfY8VIam4uxjyULoP
nY59eWvWkOCc+K975eI+1N9h0tWWkvj3ZY/DupJeHDR4SP89RseBhC2lVXJU
X33qG+BXRofShdaypWt6kNsitophSIf7ni1vVH52w+5q0tV4bTpMHYQ23anr
pvLQXFZJmY6aGVHxbtduLONq+5uyiY5DtRNcwb+7IPQseXiBpGG7j8pyi85O
sEx1C69eoOGp552LyemdEDE43lp2jIaKOy7Jsz6d+N5kduabAg33ZRZvStDs
hPmY1qfQNTSU7rF5oJ/XAflFYRlBNQOQFBmW0wprx+3J/hXi0gN4s/Xp3uoH
7WhbXT1ECAygQ48eoXu+HYGJp5t3L1D97MNNbU+BdmiHVC726uxHsnhYVKBX
G8reupVKPOlHlbb5ohsPW9GXttxIvrEPznZm5+uNWrH0zqEDwjl9uFC0W/CI
UisO7JS40BPehzehSfImf1rA1A0p7bXrg9licvjRrRZ4mt/+zcXfB08N2TyB
ziZMuijcgnYvhv/bePdCYBNYxyZFKime/c4u7W/Sb8KE/Znu//2+LZM9sF+t
vRGMzXKzT5k96K6qfX+zowHJ1059/ni/B3HDZsvUGHUo2uJixBndjc9CmV1c
EjXg2iW5vYLWCQ4VxRIFVjWG7Rmc8iWdWDvvfiE7phqSWsbiPuGdUFrswRsk
XY2CKHnrceNO3HdJO/pzXxXi+uOaIukdWHU9nvnEqALsNaEcy/vaYfDzrWS0
aAXMF7ijpPLbwWdQ+HzdUDmy3u4M3BVMPXfRejZzpxyuJz+U8Rm0w6w4zaMw
oAxq8Qm3trS2YdU3m1V/qwmMlHHFrK9qxdRRAQMuYwKzncp7bT60Yog5eZH4
U4LFjnWWBU9bsZbdKXl2Wwm43T7vPqrSisFTL+Sm/Ysg8sr+I39uC76+zouN
e5mPqPWzjx11m3F1kVipzoosZK7c39S0oR7PbnwQ4yzNRNNOBc7r/XUgOj7M
XLqbiZshfUcFwuqwZMfV44vJDDjNtOR+EqvD+/z7v9YXpaNlx/bJSelaNGze
q+q9IxV9lZkPalVqIKPieTYmLgU55NVYAa4aHIlglC+RSoHx0WTySVU1tAdu
msZJJOOR2659n09QerX2y6CG3CeYsTuXSl2uQu4vMY0Q94+QuXt0ut+9Ar+E
vPwE1n2EvJqaR+XxCjR0Pfna+DEOTBX1cPrq//1e+kYNV3Ms8nyf/UgML4e1
royA4c4Y+K2afFVU8H8Vmnc8le8bx1UaVpG0UGlS2b5JxpXRQKGQyMiIZGdG
MhJlFkJSyN57JldGhIxjnGOd5ZzMNElF+Z3fn+/X/Tyvaz7PfX3u190EV8ZF
bjFE0uEep5ML5zKCYTSj+OBEInz+MDnMY1cHa/cfLjdQT4Tc3unYPX9qgaZL
sjyQkwBcW14LTUTVgmjVa58or6cAs46mj2pqwNqHi/uwXBz8MPnvbxR/NTxN
TCOHXYyGjqSbJ3m/lkNmuu3CtEUUKP2y2yUZUw4G71S8V70iYTo0SGaPZDnc
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
Q7akBP0vwVRIrHno+XDXOP7XdVx+9gkVxnXUAk69GsfQ0uZhziIqZMU9ET7V
Oo7T7xf1FSuosCybRjg8OY4JQsLfJeqo4BSdEfNOjIxpHbOKFq1UsM7qyPDS
JuNvc+mG5x1U8PMVmNjqRMZa3aJNz3uo8EGC9xtnKRn5Lavq6CQqeGTkdN0g
kFGgTvuP6DgVhooUmHnfyZhrexxlaCx7EeVI5KegA73k1z8GFV7F/ZuYk6Pg
4xPCSVFTVBDj5B6YNqTggmp+DGWWCiMrH7Z1e1Ewi+HX/22eCpSdCuJJiRRM
lc42aP9KBa4Q3XTNWgpyZh/nsvhBBUbVzp+0YQrSNdd+ql2kgo9ebqnZbwqO
j3F8HlyiQvDvPVdwFxUbfwhwVPxm+Sdb6LD+FBV598/8p79Mhc0Kj70kTaio
xH3CuWqFCl/6hVeUfKn4LSS1cOT/98flGoLEk6k4mVb7Cf9RoXFoOpKtnopb
3rMfu7lKhQxNhYyqESrub1my6WexhaCZ1oXfVHR+t5j0j8Ur/VvYrbhpKOSu
3/b/86+9S3LSm4Vo2MEwnE9h8UmVVy75x2joky6zZQuLw5Mdg08o0vBjxhYJ
dZY9oWf1x8u1aHjs/LqLCix/dHTeSQub0LBXY5vrN5b/fid5KU23aPjOOHD2
3B8q3Dessr7sR0OBc1diDX9RwVIlwrMngob2Np6uu39S4cKdsLb/UmhY0bEp
JoGVv6+jyPGwkIbMfWG/O1j5dZxy+N7aQMOnbuUNlaz8c8pOyn76QMN/k4mT
V1j1ed5cFPR3nIakmJjQ0klWvA52Mb8+0fDmTqWipgkq5MtQeckrrPjuhTuG
U6iwsYijPp+bjruaykico1QgmK4HSyE6Lj6QWac+RIVMXiEDtuN05EUiu2wf
q19OtxaFKdKx7UzZj9FOKuy+E75Gx4SOdwsaly8jFWI2Bt2ItKej0kKA5gFW
/9qRGuhlPnSMdI6bLyinAj+N/qs0gY4cO0dLJjOpYKsDq4+y6CgU3sf97AUV
KgS7F85X0vHe05fK7AlUkIDOUG8CHQ9eVcpeH0qFfekejyepdJzT+n44xZ8K
woffW5/6TMd3a7R5PnlQ4VrKfY0YzgnsTnuUX2tFhXnrY5smVSfwpyehk0OR
Vb8mfW933Qn8/uU6v6sUFcwkBNwYphOo9lNH5MkhKqyGcc3ae0/gdr8yA/Yt
VDi/rnc8IGQC63fP066so8IxVW1V7ycT6FTJz3ZjiQK+x8Y0OQomUERFuL+S
9f9RK/tknVEzgZ6HQhd/EijQolA1Jtw6gW8WGJGLrRTYb/RloHx8AndMd60X
y6eAmKJJqCE3A8+QLky5uFEgtk/h2NwOBraYz9xMsaKAFXexgMUBBr7SXGMS
pk+B1ftLVTQFBuqrtr58JkeBvbo2/Bo3GNjGfymw5gcZkrQbCK0uDOwnXlSn
TpDhakbroIgvAwuD/7xuJ5Bh3yV6iUs0A62shDeOF5Mhs1V4rUEVA3927e7b
bUuGF7LN8lsbGXiRVqcVa0AGapVBRkkbA2t4CvsG1cjwVcHbNIzEQI0Lp3c1
7CFDpOuGY1lLDLxRVfJAcHAc3obvnzBaZWCcaLbyj7fjwO3scXV6AxPPq1to
JxWNw0urtT3pAkwc+e2aoh06DkcfcbPdlmaiW9lSscV/49Apl0HgOcnEuEnz
vPx940CUCF4bqsJEuftnvN5xjcPsqsIIpzYTe3WMBh3oY/CgPOnYjktM7ElF
nl9dY0AgXTixeoWJf1f33DKsHoNlxU39llZMDNU4ywwJH4PWC1Vbx+2Y+OWJ
UKmRxxiIENkdpJ2YqMTDvrxiNgZBT5XaHL2ZuHDlm9tbqTEwmylaEgln2bNO
a5MbHIUzG9VbXKOZ6Em0uJnF2p8lpu/7PItl4ufkL1ZzmaNQ+WKJ1yeZiR0/
xMd/eYzCxc3lReIvmSj9xXBXk+ko1NWK5jSkM3FUQOX4dY1ROGcsIGqby8TG
xctGB/lH4S9HmGNgARMPnxWQ1fozAtIpRWHuxUxUnkKH8/QRiN64zxjKmPje
JN9m7/sRWNsy+ZZRwcRfPO+DeotHwO3q3dTr1Uy89CH7iPHTEaD+7B6qqmWi
mJTT6wa/ETDOSu6dbmAizxdlDf7zI8BpLGPU1shENrP7GzZKjMCo59tGv7dM
5LQ7cInIPwKUeu+ZTc1MHF4SjQxizTuFRLbXTi1MVFWU2MdBHYbP87478ltZ
6/9MvJxah+HSvruMN++YKMBr/as4bxg+cG1lz2tjoklSCG9P9DCI6zSbO7Qz
cZ13qFiXO+t99ogR9vdMPP6sujj76jDYaTNMPFlspTvNZak8DLI1rzsaWOye
frvoj8gwzPTf4xlj8XSqBJvHhmHYmci3uY/FMSxd2z1LggD6QMVzFkvN7XXZ
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

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4800#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\") cos(\"", "\[Theta]", "\")\""}, 
        "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcWnc41e/7RyENNIxUpKSQrJCiu1LS+EgZSfYskaIlEYWojMjM3uvYK+u2
zpGZfXCOvc5BJTKK8jvff3/+cb2u53nfz72e13O/rusIm9nfsGRhYmJqZGNi
+t/////nevQa8wjhKXBsvLxvxmDq9EDv3y+FhDdgWah6hGTADnfP1WjuqPkA
/T8143erC0DvZ5npTYRQsBqc1ZE1OAwXv+7jSwuNgsworeIckIUqj8qY71Vx
4CZw3SVB7SS8KkyfrC9MBNv9HLeMR87CwkxgiE56Cjz9U3Rk7NZF2FR8eOp9
dDqEHM3yL33/H2Ra4XbzQAKQJKzFh5RvgKEWMXXyXA686bG4YcqtC41vxh+a
lOfC0X+hPk1n9CGl+9/rcPl8aBtp/G9DqxFIFm93e59VACNfC2mLFFPYJTxc
9TamGN7XsimkalrD+oEsjXd8n2GNXF+qqmkDu3606En7l8L0qaDAeRc7kKmN
97rhUgGUg5uvR8o4wJivMTNxoRJYOjsFbmx7BCxf9bTGjleB+E3P6Yn1x7BH
YOsemfRqeNiUVf5Y7DlsfHO87plFDRQZ51vdNHkBnoV/bVwEa6Ev4pbVKMEV
hPRNDud/qIM3D/bXGZDcwWEj66jXo3poLi5w75V4A508J5dsj36BrsCE1R1x
3pCurrh7dewLSLUuspkIv4U/Z6dkWG80QkBjmNcWVV/YqDIT5S3WAppD2+1I
GwOhrat5q/VgC5grm5wWngmEooEytr7AVuB8fNqL0hMEVi57X9r9+QqqQyc2
3KwMBtJZwd0cZu1wMm2Ss7I5HIxChv9LKG0H3e0aI3cHIiBAVF39744OsNK1
6ji38AmaVK4lztR0AOc6j53JsWiY+SBE9RfqgvETHxerHsSBDzGURG/sgeuP
J/j1IpJBly1T9u8hMtgfMLh25lYKyIymJWa5kaHghpAuXSAVNNcTmieO98JV
n2op6+Q0cOdb53AJ64Nk9gZB+4FMKP1Z5ag31wdv6Y2PynIJwLws+5p0sR9+
G/tdCPfOgou6s1w6i/3gdGXvnhXBHAj4adbNc4UKjksB8RJjucD6yVvTJIYK
ikwOiyo382BU8HGm7AIVyn1fzbk258GXh37dd8MH4NbOedGXpfnQY3NJ8t/Q
IPQHvYnjTSyE9jWNXTrpw7CloMjnSfpnODbZrXe/bRjyD1tLkqRKoaDqX+vZ
pWGYe6TXylFUCkT+E7t4zo7Am+ZvVwyJZdB4iVBo2DkCCdtkPYnfK8DBOEuC
ZXoUnsaQcl4fr4YMTsMm1y1joLzsZNjrUg2kz4+tCEfHgGDrwuVVXw18vTfK
BO+PQfhOpIzdroE7f44+vfBtDF60Gn67510LbFKKOReo4/CiX76t/DsRbOOz
nn1dGge/Y+e97yuSYOjoYBDX9gnYIpQ3rOFGgmCB8Ljc8xPgdvzzYtCOehhj
PvX6ceoEXPI5ybx64gv0jDmfSa+agG7hYN5vr75AwfNbckG9E7B346/8f81f
4LH3KZIb+yTc5c6YfGbaADPF/Wp1ppNQERX1KehdI6z2af738ekkXJ3Itr7a
0wjbJ9XqeX0n4TLlqxWPcBO4urJqyhZPQnzlrFpbUROc0zeNrmSfAk7+vAf5
o83w83XU+U0RU3BrIMfa5eRXWPBlMpxJn4JnsRVHrnt+hfFaZ2fXsinIMtq+
j7ftK/warjQroEzBwqkNPwpl2+BX9H4dA34a0NZYVL3r22AwN4qzQpQG3ukR
HZ9m2+DglL9Iy3HGun7c6djt7cByl1Vy9RoNMrdg+9Pb7dB2kfOx7ysa3C6f
+af2vR1unSpttvajAeXJ4FsS4x5Uq3rK/wynwf7X6xelFDtg8t1n6e05NPAU
3ONd8rIDoldnq1NKaXBBweUQOaEDTnJ2mn6ro0Hxe9oRSn0H6IibUDx7aaDP
kxHpz9UJfeNu2DtCg9aCCYnTcp3wNFCtvn+aBuaSa0atup3wVzLPanaVBo8c
3yz6R3WCEVf+iYsCdAjtLZp1EesCjcMqwgv76Yz+uLTD4UoX+C5plF8/TAeh
tG8LZ+26QOveTr3DcnTwSDno+jCnC+ISeF5Hn6DDPD+nw9f2LmDmUyn8okKH
DIX6EtaFLqigbwxUuEgHn8K3g8vHuyGY3/bh8yt0MOov4crT6Qa45FH98Bod
2K6wnzj7pBtOjX2P2atFh+jSr68SQ7rBzDdUwlmXDlOWRnspRd1wUjzfw/cW
Hdi3LsuM93RDQUtls5YBHQJG+n5WLjHWM11FW43o8NFF/Z0Nbw8c3fC3cM2E
Do1Vb49NyvdA9R/v2CEzOngXLWyV0ekBS/fCrU8t6OBmP6l3+VEPeO/XO1Br
SQeZnv4LMkE9sNT4ZnOdFR3aXphtmsjtgfzETz+crOmQbSHZY9HWAw51Yn/H
GZheyTmZ/b0Hwr+zmrDeocOZZOYHxK1kWLl0Ro3CWBftkCQkipOBl1NkyIqB
E87Nkq+qk+G0hMLtVIZ9pYkmiQpLMqjPys3GMM5/Khsy8esVGfYGbif+x/BP
pU5LdSGGDJvpK7vzGP6/Hdf0KC4nwyL54v4WRnzluw7Qz/SRQZfuxxnDiP+g
b2q+3yIZ5Fv99x5h5KengPdw7PZeYKWcen2Hkb+ED7/ePJLsBXfXvBcmjPyy
SYvs3XKpF/zy4Dw3I//sGybFzS164ai1Pu8zRn2WTg2sOb/sBbupeOkwRv2+
7N5F1Y7ohZITI+0PGPWVkWba9a2gF/R3702/epoORfeYavXovfDV0MRCU4kO
n6xP94pv6ANzR9HMbcfpcOeT76vPe/tgWEtiufAIw14X/xjHtT54TcjwijtA
h83SbqqN1n0QaSRZfnEvHd49u+l73q0P/hq0qBA5Gfbbas9Z5PSBa/w3wSh2
OrRosllu+tIHUnZcbdJMdJAy2jNoPtQHOmTB3vdzNOBr7Nc6va0fGrICm3Vo
NJiLl95VfrAfvPy4mylDNDhqX5z3XakfdM0TZfe3Mu6PPa/IA8t+GNrgBUOM
+2akzPWl4nk/bP++McGgjAZJ/7nPVvj3A0HBqy4ohQYTy3y2nSX9IBjnxP73
BQ3c2jqiVNkpcLyDb6HqAYMPHMrF0/dQINcqh3bSgga79Icu50hRoE1A6euN
yzToetobH6ZLgQy1bXk/lWmQVXgwwOkuBQqEol6pS9HgssMn52VnCiyMOw4K
7aQB3aWwqz6GAtYX31rGbaSBluOXrbtzKeCh8qudujgFe5p+kjfWUECO2cP4
NXkKludG+9JGKUC88cvzR/0UHLaNnTOdp0AVq1okX8kUHE+w1s9jpoLTi+Ts
qNApWEwUZxUQosKUDHvZmtcUfNgprCwtSYWuqomO3U8Y30/vy6OepMLOpDjN
AK0pYO+fs1zSpkJPqmnL9Nkp4G1VzjEzpULvJUMPVukpiEpyv2FuR2XwL3u/
y5YpaE26RBbyoIILZ04odWUSJk+JD/T7USHsoFvL34lJ4Cyscz8STgWjDYbb
RjsmYYGbw2hTAhVC9PZM++AkqDp1bnueSYWMa87LixmToLH1h5RLIRWYY0Qa
RcMmgSuI32p7JRVYxo15++wnQS5VM3GmhYE3JlTcvj0Jaaap/6S7qRBX4+OZ
pDYJtyBpOxuVCvx3WdmLZSZBUnbU12aUCq6xPZSAvZNwzOKPqBGNCt4GPtFy
jPdqg8G7oOFvVNCteTAd83MCpLco+v6cp0LOloTbPRQGrk9qC1imwierRT8y
cQIkJb33Va4yvm9fFk7MngDruTAFp3Uq7P81l6ccPgFSQdEj1SwDQP7VNxz3
agKcNttNhbIOgP4V/Std9yZg4MrUzlX2AWALqA3s0p4AMRKTwgzHAJirb9NL
UJkAhbpKoTtbBuB7TpvyWdEJ0C1VSn64dQDEPM6PZXFOwIRLdBz7tgEQwhPf
Zxnv+X/WUt/EGNjFfAfz2uA4XDa6YN3L2H9GsR6ppHEwa9P8uYOBNV/1tfpn
jUP2h377vs0DMNSg1ckTMg6VKR6NEozzh3zqHOxdxgH/bZ7lYPgXPKukFWUx
DtWbztc4bhyAO24qe2KvjMPhi8Kn7zIPAPvs14fPZMfhWGW21vRfRv/EWfwT
3T0OUTf4/yz9ZtTbd+BO5voY+G2PlfBfpAKl0esWx+QYaJilTuTNUUFbY4fT
6eYxuHwg+4jZDBXEg4MeXM0bA9kMjZXICSpM8gf5LrqMgf+Ta7cLe6mw+0QG
k67lGGSSd3hxdzDqIS4aE3J1DJIr5WzYmqjgrPDSp1RgDOR0xaJryqjQf9tt
Jpp5DN40Ze30yafC34siSZa0UXj9ZN53Op0KEV6J/0UWjsKF5IVF1zAGHubS
3hY5ChUTx/bmMfpXelZ+xOzVKKi8PlDixuhvaRatqgqNUbg0P0eZu0+FBwIi
s2cnR6DHaYuwMFDhyOZS98mmEeA97i57XJYKv0tymB/ljsAJ2bIt4yJUKHAu
WrjyYgT0t/lPC3AwzrvuwLrOPQI0zX+EmWYKCFf8mJ9VGAZzHh8brXMU0CqN
2Ge2Zxg+GpRlaDL4Rad89NeH9SEIm+Tb/oPBPxsNr89TAobg4vkBAvevfhBV
2+KrnjcIGwT5Hv6M6YcHPFqhT35Sodjl2dlXk33QyRRyZvdnKrDJlx+paukD
p0MK/jlujL7dfKkuqaAPTj05fKuaiwoTIl2sNu59cISff7+PJAUcHfUSxnn7
YEBHfDbiTh8szYpp88v2wqukiCl1iT7Qk5jc7814j7pCy4T/fuuFz83XrCLm
yCB2eusDF8deqC7dYJ9GIMPJkehFppdkmKLM+b05SIZVbtdw8fBusD3IVrr2
rxvuJTkOdBh0Q1Bq0ePF3m4Iz1k5ELy/G/hE3m6PzusGN6EX1rapXXC5zDeI
xbIbhF9kG3p97gRW2ZsDsqQu2Bp0utRytB1k6iT4Njl3QmCcyQnF1HZg69Vg
eqjZCaIV9ITj99uhvErjdvihThjb0uJY/KcNOhvq3x/92gGx77WbfvO0QWR0
7vnnQh0wpfzAPzazGVY22T5MKGwDNc2Lxo84SLD/z0eV+ZdN0K6vtj82iQjx
nkdX4/c3gabItIDeOSIUrybq7q1uhKOOR844uNSBmLQL7SFzI2wt31v66E8N
+Gn/Jk69/AK36k1dm7mrIGp7xfm1x0QwkLjjlmmLMMRvfPHiLiIkuDBXrpdU
QqrnFdOXeXUw+XRrpZ1OBRCrf3JXfa+Fr3n2DTFRpbCx9N9krVUNHDLNsF+2
LYTisesZ+YRKaFh0pdCbC4ApvyaZZ7oC6lkGdE8cK4B47j2vP4lWQKBcyeYf
v/JgVqzg+KHYMmCx9iNPBeZABFvy65zgEvAmvzLZIpIKhoe/TcQyhokFgTCy
/dsAsNpQuKPc4BO8TTjk/rncF773fFneUBAGpxw3n8q4/xb8ZXm2FG4LAakN
/GE9c69h84D2X+8vAUB+mPuM6bMdzBJ1baofO0GVELNjkfVLVA7Jj3kw/A55
vry+z3LvFbpkkV1EbAMwlnfDuiS/J95236rSMx6IoTExfXHab1EwqiZbrzkU
bWs+ZZ+SCETylxrKmc+xWEfxXTl59hNKQDvH003puMeANVxAIxLLc9TyiGIZ
eDvC6ZyYbhQukxzD+S9lYqGD+NDozRj8S+MWKHTPQm2OptY9H+Iw/E5tNr9d
LnoVvPN7uTEei/2rt3su5uK+Z4/vvHscj7F5cccGX+ThtT/UokTNBGQi95pd
9c7HsqvPcoVnErG22a+w40Mhyu7/Sea4moQj1U1VRtuLcMsOEktWehIWxQY3
1/oX4e1Uiavypsn4szDDl8unGPl1+tP98lPQ9HPfiJ3dZxQV/hOWxJKKKfO/
ZtzHPuNVT7aP/tdSMfTf9w2GeqUoOJ/GQx9NRaECw5/Gp8vwuknkqy1zaehT
v9XJeLUcT6YJcyvKpaMhj56F+4MKTOe+7DfvmI6RK1mq+8crMDtq7af493Q8
l3HdoolUiZxnD5JyDmegiqLwxk55xE/+tda9Rhkooi6io5GAyMGu/1aIlIEX
72nENSlX4f22/DvqSxl44OGnK9IPq7Bbk956SCQTJ2oLvRoTq/BmRqHrdqdM
7N8jmfyJoxppciJ+YrGZqPre4GPbyWq8zl6Uw0HMxPCeLYcV71Ujzwc+VYVN
BKyWe+ob3FCNJflF/e9FCbiuGBf+brka49oIXXiOgHRzubJskRpszeo37TIg
oH3G4X3M12vwkYxm5ddHBFQ5bjPn+qIGmzT2yxS/JWDL8uC9Iyk1mFV3aGtA
NAFXT1o3r7XVYPP7lgzjHAJuokxqr/6uQekdw08kqghItL+kcfBALeaKXR5c
aSEg7dwb9keXanGldcKgpY+ASnvTu2fta5Ej9dzTrDEC5oy27/QNrsVEzftl
cTMEPLhD6aB2aS0m25dXZf4kYASr0r2zg7VYGep3uHuRgBy8Gre0mevQdnFP
+P4VAlr57jF9f7AOx5tO1H9kYLqd/RrtfB2W1eyzVVwm4Ittahl3LRnrrFKX
OX8RUMizZWGbZx0OKNVKCP0g4Llfd8y6E+qw68L0qD2N4W9ovg9W16Hpotwl
tmECBhe+ZmkerMPPjk+A1k3Avlvf7v35U4eb4j8S9jQS8Pn0+XuXeYn4+fL5
V8nlBBR4L5xZJk3EZ3JdeX4EAurcNh7+7zIRc7nmT/ZHElDNSbiKyZyIMjoP
9voz8nt5ppOj6zkR135tMc5/QkAZDclX9R+IWPFbhvs/UwK6GUj/6k8hIn0b
8ZzZZQIyqUvKcFYQ8fDMKOdvGUb8kzXcpu1EnC9I+8DHz4gvd+hB5zgRWc/8
na1dy0TJsBp5y2UiJqlfvbhxOBMPpK5e4uUg4ZlwnabB6kzkf20bPbmbhHcO
fku5FZ+JRZnq4j1iJKRureZyds9EtTSemfETJHTKE1S6ZJyJHT/Sx3dcJGF8
fLFh4ymG/WwZYRNtEhp8sCrdyMfAViK5zSYktLr4y+/fXAZ2aGhk6NmS0NaP
uq+yIQNfRzYe3fiUhPv27sy8FJeBDr4bbn11I2G2yxe3lKcZyHIt91apDwkp
rFITA1cz0LCw14j4gYRbEEQW9mfgKVJD9FwYCU3NX779tpCO/byCusoxJPQz
qLXsJKaj4t+i+tREEh6JlbLvDk9Hp1rewh+pJOTcLcb30zYdA2Y03j/KJKHQ
e6KbBKSj1syHQMVsEkq/sPvqw52O5uS27Uq5JBR0yxPdPpKGV1591nPKI2Fz
4qF0Uk4aHnQtKF1hYC+qpEv2yzRkYx7zL2Zg5heDNW3/peGmzL3yRYzvV0kt
UVJ70vCE/Lctiwz7LL4zUu1TqSj368PzRwQS5pJvRpTmp2Lf9eWZ4+kkVM5Q
+jvnmoo1AkVfFZJJ2N0f/NTpUipSC7gjnseR0OHnocO3dqYi24m5WqZIRn6l
pY4EU1Nw+u5IY0MwCcmJt4Jlk1KQOWq7TI8fCde137xRsEvBbw5XXETfkFDJ
K4Mn+XgKSr9aOFnmSsJ7++K1vVaT0XJo45+Pjxn1EGC/Sa1m8KnPtmsF90g4
LskpSXiTjI7l4p27TRn+P9Qf/3s1Gbv2s4qQdEgYuvxWSK4nCQdI8p8XlUn4
0NEpRzgiCamdDteeS5Ewr/uhcqJhEsr+J6urLkzCKLPhU05jiXhvF7ytZSHh
7auNX75NJ2BqON68wujn5rxnJ9gzE/C/29R90ulE7KNbHKXaJmC0uNBDixAi
Rrzg4mn+Fo9if8X3oy0RddcF2a58i8OP7LsVdbYT8XmRQGd9Zhxunfwy2LpS
h7scC3xEbeOwJ+no+ZihOtRuM3wZOR2LNo8HpdQz6jBvujSsryUGl1XdSD0n
61BHMTli6UoMgw/PPD+wrw4/JNkbCDdGo5cCVaTlXy2K0Bz31pGi8NKdzfWq
VbXodrdET7HmE/q81FroPlWLgZouD+82hGLdEZ3VUN4alLuaN/1dIxTjotKF
Reeq8d6dKwdZu0PwwFHPXUcZ/OzsEbfIPBaMLb9fWiQ6Mfj5K7vxVvaPmPHx
lKtNVxXqzMd4Tn0IQpWEtpr+tCqcW6iY990XhE/XmI+1uFZhL20kUE8xEL1E
UwZVDlehQFqBU+LjAGwrC5GaHq9EuvKjkXD2AORFnR4l70q8fI6ZV1jeH4W9
tVYSxCuREn/dXOGNL346yHes07YCle9nBKVeeIvAt439x2QZWt37YrpFwQPr
priESwtKMMbUNJv08jXykJeYea6UoL1U/r7Tza9QbP1qbOlwMUZ39ZJ97Nxx
ZxCNNM9RjNKhulZXk1zQ2ofd5YF2IUqwMxunW73ACm612ecTBbhvXlhl9zFn
VPwYPU5/XIC4xs5n//UZfnoyEM0SnI9dp6yeNBs+QrJp35kXzbko4UI28rzu
iJZbBCbZb+XiqJOeVtsVB/ysZNGwYyIHC6Z8iTraD7CcR7vGejkbzVolmPSI
99F/aLotbms2XivY9TL0hy1uJ7onL+7PQvvZ6c0KdnfxQIPjMbaLmWhoK2RI
qrJGa0pMbpteBpaOa527esAKmX8LRLXdTccbvUuEQC5ztNRk93jvk4orKb3H
XD+ZYnj4lSe6YSn4csBaoVDeBGdkZSofJiejQucR4WTx27jWW2ZTUpWIqzoL
LdHuehgQzntItiQBU5b47//4o4O6Nt8OMGXHo9LnOZPqEC3svCL9QCIpDstm
IxtO6VzH67v+21cREYs615/uYbfTwE2Vgy4vhGJQbLNO6pPHl9H8sxvFfhNj
LvMO8vylp4rNnpvbHMhhGJtbR39y/AweS12ZTa4IQbsrqbOvCCcxOUtDiifh
I/JtNWpidZPHywdLaV/fBCLNQa6jcVga3WwG7On3ArAYd0edjBXDvGuRQIt+
j8Kql2ddIw+gNOvh7I2W3nj7t15Qmt1upEeqL1wV98C9g+7dDyq58NqTj4Sm
gZfI5fSj491eZsxYCLtBs3yKNUlrf9T7Zyqvr2/97dBvh6rihXlBHXWVKzPv
jA+23ULuhJksR92AyoacvFvr4mfg74He0Vc+lMqu/acU7v+1gF8/y/RWXyxV
SrOlsOUvO0BLWPI4jzc77uM+us7xwBkynlG9w0R3Yf/YJcnPC+7wY5XtoDFJ
EJs6CCfbj3mB5u0Wml77Iby/ck3/yN23EHlEP9zYUBLbV7bXhcf7wfvPMkYW
G+TQ8wnvbTe7D6BoVxj5elIRoz8KnNrrEwQ8tk4TFTdVsITGKcaZGAxdnb/O
GGacRfru6DbVylBgsbvc/e7neTxlnzSaTg4HP3GlC/Ku6iihWMQjM/cJtn4+
GSd0/Sr2soWK1rFHQ2rc7VNs8prYZWU2e4QrFjZf57xrYHEDtw04rY7tjoMT
fH6x94u00W2xXmyzSDxcC34zzStxE3sXoy0CJRPg1t+HaV7OBrjX5XRT4ukk
MN+Tu3FZ1xiXJZ1oe9WSwTdsJfawuClSy2MXO66mgL+SuvnKLQvcFtu82nUz
DQ630OTeuN3D0znztQrmBKB56dN/Otjhm66DlxLNs6D89+EHdo/t8d3d1eBN
5tkwLdlstKn7IWbLNCtdys6Bsds333BbP8GIuPPFlIQ8kFe6/l949FMMV0sP
dRTKBzaD9kchA8+weve8jEVEPmhz8M+EP3TGoYc7Ak/7FYCZO7dJ1lM39OKv
YzazKwK+X2SO2IPu2E3g4LSlFIGW4SH1Vx3ueNmu+E29ejEcyR+l/zjxGq0V
jJ9YCpfAn9ofMpcOe6HeRkuBkYbPEObCqRpB90KF9ggNAdlSoJ2q/eaZ9Qb/
bWBtfBteCoKVLfH/wAcdlIcoG63KoOtSermo23vcYXL7DutiOeS8ebltXccX
XxnF5sbqVkB5aX4Y9zE/ZL8Xr6lfXAGjozGOGeP+GDYg57z3SSWQzUraDxV+
QE+jGTEfGgLXxaPdnpbBqDBWw3f6WjUUfXFJZBsKRn6ve6LXnlVDWtHPnXK3
QrBozNCnN7Yawv+KrNhfC8XO3l0brs1Vg4HwNqboc+FoHt7qluxdA883pT+P
rQpHGd9DPTqEGrjBf2cfF0TglW1CFxzba0DobN4ol8onnJsQ+LjAVwvwoF+u
UDkKo3wWS2lRtfDtcKaYVEUUVgmgz1RFLYzp/iO1q0Rj5z1u/isDtbDhVvf+
+xCD7iS+rcoCdXCwdkXJKy4WMzU8tVLe10HscHTI9EgsElsM2bJS6iCaUlkD
B+Iw+Ufstu01dUAhF15Lj4/DY6NZkrRfdfBIv9B6PS4e6xX2C1fdIILteTAq
nYxHWotU9W0bIvieee6lKJGAIpZnzhxzJ8JSuLyeSX4CfqvY5+mYSQT2T5+n
1pcSUE1+77HxKiJob7Z4fOlkIpq98nvxposIfv68PDWYiP7USS6z30TQfHRk
cJw5CWOWnlmFbiaB7JvxneGqSTizd8JzVYAEe4q//YkkJqGWa9Drq0okGCNc
PTXMmozN1IF4xYskuOY2wxZ5gTHP6Apt09AmwWYzTSmL2mQMiEry+n2PBHHZ
1/6YM6eg66E97L5PSFD345Fk7ekUvJz1q0DdjQTvw62eOjunIK2CtVfChwQ3
DNpfexWn4Bl51Ur5DySIeB+/OjCfgo73v5RZhpFAsfScp7NkKmYco4qXRZPg
6v22Oj3rVJy7t3hPPpEEz7luG9jHpjLmeZzoTCUB//S+2ZLeVBQJ3s8akkmC
Yv2yHVLcaSg2qaTinE0Cz93P7JrU0rCy3Z79dS7DXuKTsDcv0nCw6t5YZh4J
PhHnjxnmpqG32v6bjHkVdiq6NF2YSMPdmc3fLRh4wUBx0yn+dFTTZFKZzyFB
4m6ulwqX0xnvVVR/TBYJHIr+NMg4p+N7xUEruwwSfB4+/lo0Ix1TX2q90U8h
wXLJswuc/elYEDAzZRVPAqZ5lcxR9gzU+zB/MjCSBBvWf2lFHc/AVyo8StRg
Evz4T7Vf0SQDA9nM4877kSDyPQxmvM3AclZNpSZPEhxeJjAt5Gfgo6qiZvsX
JOAmKI+zUTPwR2WfpKwDCXi2VkmOsGRi2y8L+R3WJJjeZu/hfCQTn63er+G6
zYgvVSjw69VMLBF8Xiquwdgv8XoD2T4Tl04+5jA/QwKWWDPvdx8ysdiuPK5E
hgRPhCmdk7mZ+C509wuJAySwkYqIHG3LxCM5daFl2xnxrO6OevY9E5Vmzf/c
YSIBR9pAUPxmAu4u3JIj950IAj4EVf1DBNRyON20h0IED+h0DD9NQPZDsxbC
9UR4Mawzd0uXgIrdDyPP5xFh9bf822BbAta0hYV6RhJB910an5o7AYPKg1+N
exKBn3bzkeVHhp57yh5gep8IJI9g929JBJxqXVxZ0yECLT1GtLeQgDfY2taK
lIkQurNXU6iOgB+k7o34HyDCqCXTr/I2Au7XZVp4w04En9DHmzMoBJR9Ie4R
M1MHd4/dCx4bJ+Aem/FvPa11IGgiGmUyS8D0a17+x3LrYJFTSWbvPAFPnqht
TQ6sg8pH0awsSwTM5t7F2+1YBy9/fLSTYOhrj5v+U0e162Bil9lwIANHPFQp
zJKrA4v5aaosQ2/H97Es6++ogyIhOp2VobcPMUWJy87Vwo5UoRA2ht5eZYnp
PN5SC3Nf/J9JMfR2nPJ9Z/O0WjjkQZB2HmLo9/TTuZUetVC68aPVeBdDj0ty
bb5ozOCzTqUmyy8E9IxO2v/3RC3cGUjk//OZgEoVb4NHttcCy1nBHZFpjHyt
sHIt0mvg8pylh1ooAbu37VY6UV0DkbyTF369IqCKizMxI7QGVl5Xnr2gTcBI
Zhea6Lka4B/kuD2oxIhnbfafFG8NDPH0uVvtI2DJb9WntvRqEE5AMenBTOyX
EW965VsNud3sQ9ZlDL3bbK9lZFQNgtNhm51DMnFH89+QB8eq4dA+w7T9apkY
8OHKpHJzFVy+IpeZJpCJRI+fjSvhVTAW/fv86mwGbs2M2fvDqgo8ZMypE4z7
8LbEib7vL8K1BvdBfcZ9S4n9of7gUiU4jkc9S7dLx5HeWz/qeyuA32FcOUYy
Hf2WZJWTrCqg8cq2t9bJaejywWH5t0s5WFDaZJidU1HlEeGpxqdSuPBo5DO7
eCpuFqh/xyNUCmU+8XeDelJwl6hC5uO4z0B+FaojcSQFnW7Gvd4SXwIkjl3X
VzKT8K+zcUNvIOM95tCKrbmYhJKRuxXztxSBVZRcz+IQY6795eGv/LoQxrza
N77dlIj73z9OsL5fAOdU+57tOBmPnhPiLQ7yeXAk7+F19RORmGhc9UdiRwZ8
SDhV0CLxCSutyra9/5kGqfwHDTwFInDnYsGV362poGys6+9CD0VXYUL0do9k
+G1ZoqbwXxBO3wnz6yXHQRizlFDkjVcYMjXgU6ITACeCIngvnnyJLkOuV3YW
v4Nd56MmHpU5oaZs9m/zci/IvypxT3SjHd4xcuun33GCYQWXD6+rTCF/wvDg
x3f3cdOR7Y0q+b4QNeYU/DAzDGV3Xbht7hEA6uIWBYe1PuGunHf8R48HgvDi
XU6FtSi8GZWzrSE+GMq8D70LTI9Dm6Ghy/vLI+Hnm1tWVtwpmNDEPyH2Iwle
svGFkzbm4jO5ySOxj/KBe4I1Y9OZckwz/iDDt7MA1PREj3OwVuC7zC6e+bwC
iI7LKpZrrMDD8Y8ILUuF8NbSuG9BG7Fx+Nfxn34lkP4r/WSrfDUKvrN7bbte
ARv+rDMVXa1DTtHKWwb5laAi91+VTXYd1u1drgy6g6ASfSWTcwcRD3z0Vr9z
rwru2L8OESAT8WHncrrwSDWEWCnHM5nU4+KP01ef0etgZ9wGuWWbRryd6mcg
9B8RkufqbD2aGjH55CUT3VwilI9NalMkmnC5UO/9fWcSuKkqLFJnmjAwTEdL
kPcL6B6SlPhxpwWz6z1lhC2aoPC4+NU08TbkV2xLt5FoB/IDlfctCx34LVMw
r9ekHQ6qjw4S9nQiaeCHgV1IO2QE0AX1VDvxfp7eVXaWDqDJugmzB3Yi6+hm
lsn+DpDT2f2h5GgXPtoguc83sAsk/vm9KtHtxnb92Kh/DV0wI2t7tvd5N/oc
Um7wZu6GNAH2R4XR3TigJP1g7EE3DPwlqydNdOPFqcauUM0e8HLKDVV70IMX
f951OLyzFw7eG7356ykZp7tK+fOu9ML2mw3bQkPJaPeqdZuaRy/cbp5Wmy0i
Y+K7oDHPxV7wpfDUZvwio3019a96bx8M9HA12dn2otxUVs5yFAVOZMu4O1/t
w/fTqQJRPRRouuf537pVH64aeRmf4qKCXvOzZ0fd+1A6pOC0kRsVEkLfT7gV
9GGXoPh7IbMBsDSZstvI14/fyBc4Yw8MwbTQrWCupn7M7ftg9dtoCLir07wy
RvrxWp/aZoVPQ3CUP06vb7kf3xAz2tM4hoHJZGMZ7QAFJd84e625DYPxYf+Z
BkcKrkQQ++OjhyFaee00zYuCJWl2p+XLh2HnrYDVj+EU1My7bblneRiS4vZL
hVVQsGI92qvv3gg0ynOnnmKiYpLVQEaz9wgE7z58s5aLivXd1meTk0agQGMX
9ghS0dBN8RvH0Ai81fWIijlFxdws50+BqyNAE+b2075ExYLVHdP/+EaBPPZG
4qMuFfPN5sNeao6CXFeSR549FaGL/CHQdhSeie3oCnCm4i4NbQMv71EYKv+9
vOJFxdjn7WHbqkaBy9t8k1UkFb+8j0uMoYyCbG5YvE0yFUOTcwq5lkehVCnX
diWbitohz/e9kRwDRXINV3Y1FeW7G7l81cdgyu9lDrmBil+l/E7fNx8DJ7tU
bp92KnZdOLci5joGqjOX99b2UnEwsuAdho1BiGxpjecQFefOsKsfyx8DJT//
pbYJhn8WhS8et4zBCqYTEmeo6Po31Onj1BggyI4w/aTiP+tpv7fM4zBrFuQ7
sUhFvXWNbTf3jMPavVd5N/5QsbS888Lv4+Pw9tWfG+r/qLjQvuTzQGMcXgep
PCYxD+Bt1QyJcutxGNzddaBl4wA6uxm6UNzG4fnX93cM2AeQfXW5vSV8HB6r
vdB9xDGAfOVTLwLzxuGzzdr6ri0DOLa8v+NI0ziwzmY4n946gOdiDooGjI0D
BNiNzTGwxo/1lvrVcThx31r76LYB7P6nL/R15wQMcrP8+N+64SXHB0kSE9Dy
aqrnf99vOHGI/7LqBDieY5HjZdj3SPlhV64/AR8EX0g+ZZxfem+lYfXhBDxY
LV8wZfhn0cbtye4zAU5ud4t6GP738ZauDMZMgG+WaVo3I76GObGX7kUTMGuE
G4wZ8bcuazh+b56AxvSudQdGfpKEu6UPjU1A0SlxyvYlKvLKiO869HsCCB4u
PacY+b168NXzb5yTsH28Uv4nI/+G4ZRqF5FJeJ3FdUZ2koqXTm+81K00CdEH
qmCdUT8NHjPPDxqTEKwI7571UXHlpCKVx3wStjiwBL3qoKKzk06x6f9+b8em
lryviYpWbMbuj95NwuiSLN/lWipudGxM+i9mEjZ8pZ7cVMbot7DJgNm8SQhR
h7t6eVRsu1jxwKlvEkTUQ7VzYqjosf7wnNXsJHBOLX0tCabigFfnR971SbjI
P9ih/Y6KPL4hL/HgFFhwhmy59JiK6WrX1orkp4DHJp03/i4Vo/ttauwvToF7
Ur1WgCEVs94d+nfAZgpqXyRIHjtPReaz88Z7nacgT1K4aFCBipN2HmNd76ag
9Z6QuqgYw7/GRDn3zCn4Vezn+mIrFdeKCb8cy6cgLqBD5P1fCgr0Pas62DwF
Jx/L9x7/TsGk5lN2JdNTcFaI/EarlYKuvvZXIn9PwS6md58aGXww82D82KlN
NLB8cmaGmklB9kshW1NFaDBLaH7b7UPBLYJCIdL6NCC6uz88DBT8NH+PY8iK
BudOFP/2lqDg7RWm7POONGAdCQl/y0fBhubeSrl3NEjiC6p88L0f1/jkVctD
aDCuzBau29ePT5l2HvsTR4N10Xr5odp+FH3U4vSxmAa11zqcKaH9eDpWfv1H
NQ28JhZ8Nd37sXRM+fh6Ew0MNm86fs+mH2fvcrMqDtHArqH98MdT/Ri9oNJm
RKOB6JmzPxMO9uOjfZ1pJ37S4GnoVjWDLf3YVH5liYmFDtZxZvENfX14oIGY
8J2DDiOqY4puVX24Ytjf9X47HaAq9tFoch/6udiKU/jp8P3lvkM/3/fhEl+X
Wp8QHe7t2sRPcOjDW03DLV6idND3kxfk0+vD9E9Ui7GjdCghftosrdKHx/NU
jFNP0MF41Wb2IVsfhv3J28V9mg6dl6QCI6d7kSdU2fWQKh3E95NdnVp78bxg
jjrtIh2OPE7058jrRXcRuwN6V+nwzqsn4b/gXtxXZFz2SJPhb3lCpNqzXvT/
wkJU0aZDgbuc4aJ+L1rGm83n3aSD9KawRn2VXjxyUmilU58Orpu+ND0V6kWP
blZBR0M67P5clqqzoRd3bLB+98WYDsstO9mXJskYMd7G1mVKB44EQvKtRjJO
cW7WCzanw1NKjbo7gYzuvDvVt1rSoaN+PNsugIz/eI7EnbCiw4m65RghRzKu
StYcE7Cmg43fscFQHTIW/guryGHgX0GsMmRFMqrtSdyzxsCEE6dNBncz8JO9
/P/DOjz9x7NWe3Ct3uX1//aXH+N1ujjQg2zf30jtZmDTQ1Yr6ZU96H3+zA95
xnkrhvYv+2J68OXKfAgbw59rBzZSO916sEjr+Npbhr+6ZYIDEaY9SGEeXaxh
xCPkQb0hda4H1zVEDLIY8f5afMYZeKAHNYztN/3HyEcJQX20loVxnolHdzQj
X/42BXHE0W78kOsQk8DI5xrrceGwmm4c3ByuepuR71TLSwrK8d1IC06OJTLq
MWXlXJzn3o2x8c1seep04F24bChwphu7dYc65c7T4TjTiNw2oW68kf51xBro
sNfkeX/33y40Vh3XnTxOBypxinW2tAsvGma/l5aiw/axbedPhXfhE/+U2KNi
jP0s7XXmT7tQ74wy18m9dPCokth8Xq4LdZUuqV7hYcTPV+/3l7sLQ3ssN3Fy
MvpBYa076HsnPuKLZ0/9R4PwxPTj+mmdKH7cyfEolQYBzlK81vs6UYncgV86
aBBDUPUV+tOBeWOu53kbaHBKoJxe1tOB3keCxusKaKDhqjCX4N+BelVB/z3w
ZmA1kZjLTB1YZl61P+QFDbZO/Eg9RW1HtOqUsHtAA475c8N8Je2o0D20Qeom
Da68P+cRbN+O/37xVLMI06Cl9a09DrRhdJWdzHLSFPRlHHp60v4rGgSZ1jcE
TYEaj4TpYaGvWFXG/u+M+xTs1PIxY/vait/HW0b23Z4C49bfRxOPtWK9W/vf
4M1TMFYdZBf3rRkb75qzBS5Ogvbv0ijTqGY82eC4+fjwJJSGH54S/a8ZOW2m
e2wKJmHJwfBcY2YTXu/ZmJamNwkHx2Isi2wb8eDHhRTKmUmoc3EnjOxlzMes
EU8LjzD43ztgRaSlAbU9M0NNlydAVSzv35pkAw7R7dMTAiaAxnHP6PjPejQw
jMnfmT8O1wt557+8JGL9Q8r1yeBxsAgJXnonS8SLZnMdls/GwfPTyQ3vJ+rQ
+PsxFjvlceDyklG5ypj3h/5m86dUjYFcNfn3ln21SBgz4jhSOgoO9/luPW2p
wqDknxv/hI7CIYX6MzyeVfj6zJ+ql49HwVgpUm2nShX+jIizS5Uahck5t6MP
DBBH/6N+ehE7Avve+axViFfgucTW9KRHw6DvKnOt42cJutbwT3loDsNZ2zn9
hKclGLq8vl3s6DA050X1a/0rRnpchIIHcQhOHlfxMuYsxpgLfUI+EYNwdmXD
4ydKhfj7p1ZErsYgvKz+fCyMVIAxO/c03mMZhMfPA0xytQtw8+Zko/A7A3B6
+ElJt2M+9u/+bb4kRYWvfdPR8pW5uIH10KuGYQq8PhmZYaaVi+ICJoUKHygw
vPVtZBQ9B88Wb8kdm+uHA8M3hi/uzsHwd3K1yRl9UP6UN+/+FgKGP5+OaOEi
wzaxVd574il42rt9vb60B35XON6afJaMZ/xrU+5b9oB0t5FDc0MShp+s8yZ+
7oYg18s90w6JGOx/y7jMqAuapa9m0UbjUGBYPk6JvQs4pmm35C7EYXnv7UG7
7E6o0EgM2Zwei922o+f+/usA58/7O6lL0Ui9eailP6Id7oivpEw/j0DSIdNl
ibPtENFWXrjvbjgqRK1Lq0y1wZa8Ia4kgzCkvdyymCjbBk+Y7PObtEJw7YzD
zG3fFmC7Y3Dr2OtAzCzj8L/Y0wyHJQ4alkZ+QLWLXvxfBJshMGWXdEtZAG6k
WdoEZjXCwNLO2lM8flh4S04npKEeKmJDyjaQ3+BWxW8re3bWg5rO/K5JGy/c
nS3Bf82ABI7bavKLOTzxoljiz/pvdeDfU9tx+c4rPDJBqt2hUActsi9y9h5x
x/P6h8/yuNYCq1by3r8TL9EoiPDiyrYauLCF+cB+bWeUlftg6KFdDc6knN5P
R53wfAGP1MtPVfDB5PedB3ueYrvpiW8+1yshm9tvRVfZEdNsNWXEB8tBWl16
q/v9h8g9GMtmblMG/OOcqnfu22Ou2naJfPcS2M5Hn67kv4un7IkjXVuL4dtO
s5YeGSvc9jZ1JSG0ECqvLry49swczVyDUw4dKICY03dnlGZNMNGn/7BxZh78
zaoburLHEPuO7y/QUcgFR8Xh9+c/66H6q1jufW7ZQOp0EXLK08ZfAr9r9gVl
Qgt6x7GwX8dv39+tFielAXNAe8MPuys48NDrxFJxMvzRXGCleFzANw5ff482
JICcgVDJzI0zyF3RVeVNiQWNIlEDjxxFTHmYu3+87xPsVK5+/UtMGgW/v+y9
sRbM0M88lgQREYx4VpHnIBgA8swbxFRTeJB+QOBxrpsHbF9i4v73mhmtxiLn
rL0fgod4rCU9qq9S0Ce35GLtTXwTVcQj/ialUr5Tx2Xprgv+ccy4YMA2X+n4
T6lO7+FbLF+3ppQd2IY1Dy4UZ/AGofoaTU/ESBCNhXmDrH6FoeN77c11C2KY
yyI0U98ejfJnU1rONMlha4PGbcOb8RghMbnZeYsymk4/WP54IQnJNx2Kjw2c
w68f+y66yaXipaOtI9331HFnaH/TLuEMTPKXfxKQq4GPVKw2qnNm4Q/N2c97
yDewhby/9I1LDjoJiBV8zdFFk5g9mjkLuej0R+dE84Q+2monvgm7m48DH07v
W35sjMEqHj8CtYtQ4SrpSF6nBQYkXSJENBTjq3JytFyiNeY8zjj83+nPeBtq
RrfG2+Cj0I2uUaLleGx7YkpF4AMUGZD5JR1Rgcss038cdRywXDX8tv42xLVL
XvmEY4/wz3vyQcnfVSiqs9T0QuQZVvEon9qZV42l74Te/j7zHLk5Hy5+tqlB
B+cBmy+OL5AiJMgBlFpsbZLI2OHnhj+MeBaHSkj49V+Jw74yT3QqiqD8c61H
3jnWEtKZN7ilI3ik9PwX3LqsdlO90xt9Li9a/G1tQI4JyRPJgu8xT9X2+Y3B
ZvQcbPD7nPwBZefnXJniWpCwJC9zPjIQ52xMdsqat+KuCPt+9rAgJDSa6+yc
/IqPVRPP7YsPxpfz+iZlDu147Ob8u4z1cJyLvdr/q70dte+zfxEX/YQ1hmsZ
Y9IdeEe15nnijUjUnD+nTPnWgadnE7MtKqIx2bOwmN2iC59R9Mz8ZuNQn/b8
AscZMlbn3vNwD0hBuc5x8ng4GbXm/qs3vZ6KvN+5JY0WyCj83uLF3K401Lry
0E0kqRe3G+6tYElMx7ZHd2d7N/RjZPaFLr0RAmqNCqc46/dj2bzMgy3FWWi2
w2V/bk4/HrrM6q3in43LCzK/W29T0JOzJfF1Qg56WP99mJtJxb+xEk/xbh5D
n2efIa5Tsey74JjKYB4mrvuYmd4YwJm0hLOjWvkI1ywiJJcGMNzy/WX/cwXo
e8Dm8oLiEJZHNo/vlixCs/viuz62D2Oz2Uxwu1wpBtwMSgn7NYzW8U/MBHJK
UT/VfcGEbwSZPjZsk5Eswwz/iIWTBiMYMjz8oEysHFWslt5tGhvBkjLQn5Go
xFyPpTzC+CgOCx+O+XGkGoPZuYLKNozhc2sb+2rbahS6eT7b68AYHl2aXhrK
qUZpc5/DWsZjaKptqbmmVIP2LfXHyrrHUGTv8xr3a7XY/07N60XhODKdhDsK
XkR8rssmKt82jr9fK8uytBLxnv9IXdL0OOZMnHf6x0PCUxphgwTBCTx/74eS
ezIJb77dM3799QTqPOMzedFQj43hHeU5pydRd0n8YSZPIwrJ5h5v1J5ENvvH
KQnGjQx+E6kLtZnEqGCPJkJaI+6wETPRCJ5ErqW02wsqTXh6X/JNkalJnJje
t8hp3YxPtXWVNF5MYWyk3vuRz62Y4rz2ZoP/FJ7oDgsx2vwVfVxbCg3iptCN
89WJVv2v2Kqse+BP3RQCb0q88+pXlJj/0jXATsP8RN+Biag2FJVuS8zio+FN
cTfeFmIbkttG7Q4cpqH60Mn1hG9tGNP/MGr+PA1FPu3h26vSjovaR6vkXtDw
Fdfcyk5KO95mxzABHxoGKpip3WTpwMm/S8yJwTSs3W5R4SbWgRLbTJ5GE2io
e1bG3v1pB+aqrLhxfabhTIfkNd3oDtQoZ+E9WEdDpkDJhK3EDgyoI8zL9NFQ
Nd37N/+OTtQevXRRcoyGwq2sKbYnOlHq+39nm2YZ6z79glFGnTjg26394x8N
SxqkW/zTO1Ewp+3tY3Y6Wo23F15r68SEhf0x0Vx0fGYu0DK12ImHvpJz+gTp
GNKSu/TpTBd+097ZP3OIjoflj9QWWnahpO8VpbijdFwwS5JNeNuFnEek6L9l
6RisyXzIPLsL+fJvsC2doGPxjIrzr84uPHpZKjv4NB3hmD+f7koX/lQW3tin
SkfeY+YDXnu70WSDoMqV/+gocTfa6bpFN/6LP3/v+XU63rG9uo/+phudjxX2
/adDx0+RAp5XMrpRcYtoHlGPjv6Xt3962tqNoWWH94/epqORW/xl25/d6C97
8HqCER0rWnPdjuzqwaU9eo84TOkoyB0pkaHQgyd3U0p3mdORTRhOLej1YOl8
0E2iBR1bfJnj1p/34GrFqZd7rOi4T77/2tfIHnRd0b/DZ01Hx6GbyqYMfWYe
evHKZwYWbko1KBjqQZatB82Y79DR82h8aj0TGU1Vemk/GOvB8fW7I4TJmPFk
9z5PBj4TcyND/BwZay4bna5m2A+sVdJ/ZkZGou2Ib6IlHc9JnTj06hUZN7pG
a0gx/Kmu7dp6MZ6hP9uuEU3N6Civf3cnqZqMZcK2J5RN6GgzK6byb5iMsaoi
c5WGdPTOkQj4vk5G/zoThWl9Okodtt0VItiLaZ6oW3mTjj/39HYuKPdi2KUP
0ae06TgceqOf7XYvupwgG5hp0nETqUy+laG3z3HuVbx4lY5uA89HkKHHWXhX
z/ddpOP3hnM9Vgy9jsNT3fyM+i2Si47XMPT8O7HBk2yM+tqK2gq1M/R+vLkx
KY5Rf0XCj9JAtj6chQfNM4z+aFFolmQ70IdLJV0x70Xp2MfVpbJ+sw/79mfs
HRdi5GMHyL526MMVv+2OM/x0vMTll1n4vg+Jx8v3bNlMx6Bx3ZUDVX0oVyAv
JsJCx2/bp2QM+vowXSvR6/tvGk78C6w+M9+H0Q4visNoNHS6atK06WA/PjV+
ct1piIZHjPfj9Ml+fBzg9mVrDw0tT5xfe3SjH7+XCkz/V0PDiM5uo5du/Wgy
fNJqrZiGwY27uP+F9GNTpqeZMeN+NvBaHDhA6EdWFzvf86E0NJQI+3Sztx+j
954Kq39HQ6WfB+Ksv/Vjw10/CpMbDf3Sdl4QYKEgpeF6R6g1DXNLN1dZiFMw
m2h93EKOhpdDwhxfPKEgS/PDrKRDNPzjU3LV35uCab9vccYx+CZqNrEAIijY
/OC2Xf2fKTxmc6zvSTkF55VFrRZmppCeZ/NgrZmCFaYSJyjUKdzc8PnKvgEK
huug9XDFFGpcj4s9tkZBX/H1+n+EKVwnjnIIbqHifeMuNkrUFGq5BoQk76Zi
ULerzFcGX2pzrfK6y1Mx5vbHI7R7U/iuZYSr4xwVhcNLdlXrTyHhib9C6TUq
pi9/+1agOIXKnxLlNe5Q0cbt9ve2Q1NoFC0i9tuRilVyPpuzd04hz3C8m9JL
KpKrXtTnf59Edus7Oc8+UvGV+YXXFMokxvPuKX0STUV2aA6o/zKJR16nvt2U
SsVs1V0j3+Mmcft1NZbJz1T8bsqmJuE3icPB9j+la6hYtMp99thzBt/bpCty
NjLe2fu2liuWk5iwLunm0k5F74KDF99en8ShrJ1Orr1UvOrG7TyuPImycKuT
e4iKLXrkEPYjk5jLNXbu+AQVA7LGpH/tmER9aVdX2jQVb303H07/O4F3rUZB
co6KA1t69sTSJ5BFRMg37xcVFWhu9tbdExgp/8++Z4WKnO0NN5mrJzBRwbAo
bI36fxVcdzzV3xunKNmriIqKhpQRFeEREZWGFBEZ5ZuMhMgOkR0yyt772ns9
1r1lZc97Za/QpKLwu78/369zznOec573eZ/z/uPzwRz2+JtWuTNIo6Alvvb/
d8A+65G8qBm8TH+24Pe2UfzTKGXd5DmDadsiGcPpR/H7LcPQXMsZ/GUHez7u
HMWutqmaxzozmGysmJu2axSfrR232VSawQH/mQw+plGsSuGWeHRyBqXUa2ZF
mUeRmbDmmMkzgz/M36hRqPiedGIH0s7gpX/O+cdYRjGiSp6QtziNVmstWxxU
bHvWNvpZ/zTW0+8WfEvtL3HhMs9unEaXHTJrVdT4oYcl04MypzGj9I69E+Mo
Vv791zIWOo1KR/peDjCM4mA3hZ7ZeRqXZfW5O3eMYmGh4Sjng2kcYp3e84Bu
FH81PO1buTqN5BtJLyJoRzFZ98aTIulpXAjhVjPZpKApX6jk1QPT2OdOZ9qx
TkHFv3tTGndMo85B9/7eXxQUMhVQ3fN1Cq98G35j/4OCn1QOJl0anMKjq4WJ
pctU/u6dl9HGKfz0cXEjZJ6CBrMgz/V6Cm9fcK3ZN0rB9wZFJfX2U/g5cvvJ
jgEKUhbSva4ZUNuX1Jj5uijIWPn4IsvJKbTc5XLNr4GClWWfLwL3FJJGO3ty
qHwr0FGruvV3krqePAbzQgoeP8J6+EjLJBbP901jAgUjxN8emcmfxLKj+XW3
I6n5VMujb+Qk9hGlC30DqXztJ3S7m0yiz3NNQ5IDBS01Cff61CdRivWNcbcF
BR+piyawiU+isFUvg5MRBel2ClrJ/ZvAeAWrmVR1Kv9LO8Tc3kzgqOLd4Ye7
Kbh2gN6Gx3ECSXX7Zo13UlD78M6SGAOqNDMp7d36Q0a+tTW9/45PoJ/2iU+7
yWQUH+SW5asbx2mC7Mcmqn4UXZT61PZhDMsYB7ruM5Axj9OPWTZoDF3xyu6a
HyNowNa7I+DmGGr1DazlUEZQ90MGcWT4E9ZdMfZQyx9Bmg/rvNoLo/h4wgo8
r4/geuO+i1/oKLh/UtHuicswMtc/GTr+gYz0X7VylQ2HcUbxrYd+ABnVCNMq
JcrD6Ee4o1rEQUZXZb5TlruG8WhHzAfpAyO4orxd70bIEIqkFmo0nh1Cj8x7
o88DB3E2N2mS9+8gptVNuz58PIgF6fndznWDqKy+trh2aRDvGZ9JNFcZxBEa
stH+bYM43DU/wK01gLebMoIe2gzgafBhj3rWh2p/S3dVKvdjH3N016XuLtQj
4Zu2/B6M+n2z92RsF34fOaJ05VUPnrPOSJD/rwvTy5gbogx60PVtbnA19R1Y
VhD5Jpq5BwcNBBMtdD9i++G/HvdNu/HRjF7S9PE29Hc7X5HF0YXl22NcGfiJ
6MseUM0d04pce07c46trRlrXF4Jliq3ov9UxkGPUjKHWYd9EZlswWGaLRzO7
CVvvn3kcKd6CIxechVsvNKJ/ucv+7Kb3aBhb2BrNjfjzpETp0+lmjMris21n
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4822#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\") cos(\"", "\[Theta]", "\")\""}, 
        "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
hW1ArE5BVXdEwKk7BHy73mAyS0yB2k32ddUGjHq44j+7J3wKhrgfsDSqEHBU
KrYPLKcgWrXCUFWOAI4+1WFexnx35+OX5j9CgOcwi/nn35Mgu/vEkVZGPZ5T
ZXaZG5iE5rO79F9uIODYrVuk5PxJKN/vsL7pBxV8crYYKJhMQqGWnjg3Y08K
W7sUY9wwAV3U6/J5oVQoerF9u2bCBDyk3W4Ve0KF0PiN8n/sJmD+52ve32ZU
YHW78fuNwASUP04RTJanQsWF+v9sXMeh4OzVbaufKGB+J8Ll5eVxaO0VRMkW
CnjmtHHFi42DStKTnZV5FJBYsy5YNzAGvwXPxw8/pkD6nmaxarExGJ6oqTPa
RAFVlaFO77VR+FqVftSM0c/sJ56GCPWNwuJ2akVbO6OfFv3Aby6jYDos2p0d
RAYR39pLKzGfQINjRWmOhQxcCQuX3pOGgVtsmcL2sR9MD0++zn84DFr071Zn
S/vB7vQrQXeeYTBu7kgbD+6Hg/xtPPW3h0CjKpbv3n/9oH/185/dy4NQZSTT
lhTaBx9ucwXcOEAFolZtWzdfL7SoblazITH6ZFnke+eFHjDZdbLBz5ECnPw7
vxfX9cCtyR/ivR1koJdsciOb9sDTx8aVGxhzhikf9v280A32iaGlWUQvUKD0
6xvxDvikLsKx2ZeBJw7/oteRwOvPm58hUr0wE6HFZWdAAur5K0ycQT2QV7VT
4apfO8yMqOw38uiCN50eVxuorSD3Vsi/1LwN+uzs4opuNMGA+9L0eEsrFI4Q
cp5zjXC97pVOjGgr1D+tlal3bIT5ddyDz2ebgT385IX0sAYgHVbhsHjYCAnD
CjyK7+ugX1YmWfUswv3R+c5/y+9B3eibmaxsNnTufT9G/fkaLBuvR10azYJP
cKtnMzkTHBJ0JCJDMkCAfcd9z+J0IMrmTWu+p4CyzlX3UMsUKMnIm/o1FAZj
WicMF4zCwPDAJt2v1yKRVeBk0b28SCy5bqqj7/Acd2jS/hC/nqNKgE/bvsAX
mNx+qSFcKQFP1J/epHIhFW0KErIPzqXiZn2O9R58b/BulFVrkF02upK1tCem
3iLbkvI3/9xSLLk0+vtYUwmm9PNXyVSUoeLeDI6R1FJ0HZO4L9lQjoNuyKap
W441L9I2UCnvcH/vH+MTzyuRLU9ti/D3ahxUflwtr1WLl9PqqC3/6rH2j+Z2
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
qTE=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4844#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\") cos(\"", "\[Theta]", "\")\""}, 
        "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
Egna
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4866#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\") cos(\"", "\[Theta]", "\")\""}, 
        "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
+P/3dNePXdD5//d0nZkeOe8e01DazlJqrZGKM5WKtXyM5/1TWnw0uZuKIYbv
KoZv0jDra1HFVyoVX/RferVgSkOWa7/Fir4xxg+r2n3lLA3j8gIC9vyg4sGk
JKftjPq5ZDPpuuc3FSN27vDZc4iGEkr3IgqXqSjkZXjFn1Fv122NY2j/qOgh
FsqpwahHFv8S0/h1Rn6nC3UJjHZPKnKy5xnxL6mK6OROKhaXHfkwsMbITyxC
WT+LipFz/KcurlIxIF0ilPiciufvqHy0+UvFEbvyObolFe/pme3cvEBFUk1E
zSxjXscjt8zpzFJRLedpYMlWKkqE9wcKj1HxzZ240muTFIQKHlu/ASrGh22Y
GyihYJJq517fdsa6YdLPPx5CQZEG3huC1VRcVrXJcbSgYL/AY5pWARXZineG
RchQcGGDqdvmFCoG/ejtSSAPY0F7RcE9XypG8ZOrXscP4x3mNgc2Ryq2Fga/
87EbxsMH9jucukrFybdy3tc3DmNx5C+TZ4epqJyvZnyplbGuRF+txe6goiVz
SMK1qCEsMnhlb7xMQWGevIBU8SFUPmi6Ka+SUZ9htK5CxUEMZnMnXFOlIC0m
JKmMaRC3aWzLFhOloD/97sz2+gEML70pV786jJnG50Lw/ABjfyw/npY/jIPd
8/qB1/vxy4X6TfyM9ec8aWP/6kYvnmNyynH/NIjRSlkufiK92HbDrWrDg0Hs
E9LT5hnqQaonYSVQfRCXr5w//s2kBw/8uJz5oW8A/TeZ9Cuc6Uae1MTz55f6
8YfGDs5Z3k6U59bxPrG5D83IKyks7R04z5rwV6itF93Nv7rNB3Tg+rE/R2Rf
9OKKefGw+RIZI0aO+m5g68WX9erXRwdIuN2yPtrzRzfa87xJklRoxU29gh2H
kzvRdeoGxybLGtz35+dqrHorHtuiNr0wUI0a9+UJN+JaUNpBMPb2BUasaZvs
v9SMZ1sEfDnPVqGx+empbZlNyGNasm9UsQJ5nh0z4dnagHYa1e77PIqxwFd1
U2RtFQaLh7d+eFaEAtPFKnuEqrBStjXua0ghBre72rxyrMTw342E+rR8vJJd
P3lQqAITJ/IEd/7KRvP5J55pNCLa3fwsXtaZhOuQcD5PPRttFg/w+Ih9wBSZ
r8+7vmYg8xGr3eiWgBQ/qlWV2mdUmj3Ak3IzFl1kp87FsKTgxo1HVqNvB2Pw
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4888#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\") cos(\"", "\[Theta]", "\")\""}, 
        "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
XYW+IEqvGpIq5MSUguIgh/rStVcFZTCagI6zlCvqtUCx7L6MUpBXpul4wRUL
qZfyOwlJ3yD8XIianOlH+KTm8R9HVDH4/2xeJ+2PgAbueBvJ8AJIDjp8c5An
APhuLX2dJqTBhWjLTr4/fgAyky/EV1JBtCUklWvEF5LvhUUf40oBIu1DQ/pW
L9DljBiQcUsEsyf7jakCnKEwpZLmB0MUnNbP23zrKwK8QvP0HMc14GNQjAXx
hQQ+PsTb2yx4D5Xkn7szXlHDAs2YVwWCNuhSssnnnWeIvx7t2tV4yhsNcXNt
RdMaf5akMJ14E4olSjkK6Xq2aLy4HZvIF4EVJ6tO0ynaI8F8tEUh/wPmFt2T
j5hywkp/EoNzUgyCu63Ahb1u+NYpL+OAeSL+EvEzPVPqhgsf2RqKPJKQRjkh
aZe+O9qd7rDbfPsZL3jW2P73ygO9PlR/Ofc+BRNChiXtdnvikQsmTAfepKLi
lM1tY19P/L2oiWbOX1D2+y15SyMvvMKwXWgkm46zy1dPjNZ44ccN95RfHBm4
wE1v/5zLGwtu2YiPzGdg1dbN++ZPvZFeq5LpaEEm0tcEfprM8UajwyoBWfZZ
eLGG7Mv03RsbPTxNrh3KxgeMrRsH+XxQ9d5q322rbNw8vUtNSNMH+ya9x4Lq
srF2WuGJm7MP3iKLps6x5WDsm1Xewggf3NWmSDf3MAdPcKe/7MjyQWvcwSGa
noP5Yp9at9EHRd5us1d/z8FDV8bqnzX64OinptCPIrmoKkw0ud7kg3y/Mq2q
zHPRrVbjX1mDDw6+s5oWTcnFzMO2h7bLfTD8wGmf70O5aCPu43WJEl/G4a/I
1t48dORMuhYd6YM2FxqP37mch/2Xmd5pv/TB2KyZmd2meag271Uffs8HOYfb
DA8E5eHyuSKjt2I+6GBYUueQl4cM59LpzHb7oN+69EexzjxMET350GDQG0+o
zVfqLudhiMnxS5HJ3piqTzIcoctHkfmrmtfNvbHimDBVG1c+avnccf8g7I3D
P9Kenj2Tj76sg75VS17obMDRsEMqH7up7PiXU7zwXXqb761r+agZGrVbVd8L
vaY5rTiV89Gl8CSBdb8XLlZ8efdMNR/t8td6n1V6ovGBFbUbFLup7KPvKzNP
3H3d+07RzXz8kM+28/1BT9Qzc8iouJqP7OPBVypLPdDzSXywqWQ+Rl66QH3Z
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4910#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\") cos(\"", "\[Theta]", "\")\""}, 
        "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
wlbJi4pWYwiCT+kEtrc1YejIN6cnMwiyb7L+pi02oScO/ng1T3tuy/Gkk7cZ
C4rV6tIXEf5oZLV7QDOe2TJRxLSC8ElbMbzcoBmx8r248xrCjl63w3ZvmrHa
ZSpbYAPhxro5UZrYjHu2xBVP0tjkIi+Ta2MzXi8WavlFY40nBSfIE82Ye6jM
bnkdobU3uSBkGwnNTcxVztP0ZJzfsE6KkDCsiqumaBnh5zbmqDI1En5NE3W8
T4tnbxpfP8d/JOx9OrldihZvxKvpC6NeJPQ+LsoItP1kDbSePZNEQve7j5ft
aPvN49TX2FlHQqyP/zBD86NY8+Hkk0ESvqp1vh3UjbD97pj3GToy/tbZRW/X
ijASJlfmw0dGBqW5Q0GNCINWowsPZMhYscr3ZA4R/G0qijM1yWjazmjpmYdA
dv0V8Po5GRtrzBbuJSNMz0Rsq/UkY7Wpm59VBEJPSMYXrxgynlhPWWvxpeVr
nXm1sYSMJ/99HjF1Q+g+Nun7pp2M8TzidLesEPiKf6+WTJFxdVfwhrMRLd5G
5q/PNlFQ7gZr2JI2grpTFLuCGAVP7yzzb6SdT9m38Wm6KhQknf9tJCSIoPm0
iHf2LgUTbu1u7uBEkOCz/7duTsEe3USHbxvlMNk4M/bGg4L/jXEqi0yVQ6vp
fx/dQimIiakjHZ3l8M4y02c5nYIs5Dih71Xl4Bn78oZaOwU7C90zJz6Vg7fT
vf8ERyjo197ove5YDgFs4/6WixS8/XWr4osn5TBlerDfag+BCUWjKq+ky2Fg
w9pc6CiBgwLnVHftK4d2teqpK9IEhm7e9GgXrZ6vsJ70+aNJIKO0kvw1ShkY
rgy8DdAnMLaAbo9JbhnMhYuFFz0j8NDHLs3tIWUQ7zLz+ZENgZsvHnhx3LEM
FP0qrwa6EkhOPT7/9WEZfKw47a/2kcAtY1r3Vi6VgWVelKJHEIE1L0ekU0TK
IKxLXfhjCoHDRowacXOlMGAUe0A3l8DfmBU+21YKG8H840mlBL6+smzdmFcK
RW4WD+1rCDRz8npy6nMpmF6TffGtmUAW4c5/R2xKQSN+4E9OK4EpT/cXpOuU
guKJ6m9cXQQ6pd4RbZQpBbMptpWVHgLpPsmPWO8phbbobrXHQwTSr/Kbly6W
ANtRvtyb4wQWfd1yL+hbCZytSj5QP02gMneiDGteCZgZgVPZHIFRddK+fP4l
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
TVbB15VSgJX2Gll/AkwzXzn7yJXBmsjuK40eBHjQyf3Zq1sGuYnf/OrtCJil
TB3ltC6Dm/KPWyRMCRDgrDliHVAGHZ2ZihwGBIj6aSwrZ5XBOY8zPHdvEqD9
8UOmI7kMOLWOx+xRJmD17qT2/vEyEM/Oq+gVImB9UrPk3b5yePnqfJH0HgKC
3hx4+0u6HO58m49mYqHVx4/uZwEa5WCUVG24aYQCgZclxYSdyuHNWE+nZDsF
koj+V0yfy2E8i+NJTyUFhDcSYxXTyuGv3k/hT6EU4NH/Z1HdWQ5OkyabEzwo
4F3B771tqhx0nm7WOmFBgXiW6BfJG+XA/dTrxcl7FMh50qkbwYlQUSda8EWF
ArOkPx7DhxH6tji7h9P6wyVJXkUHKQSpqqdnt/FRgJ75dsXjSwiX006yak2T
4f7ux+cPGCHwhJlMi3eQoc/x2bdpS4QXvQw6H0rJMLSD4/YmN4Sr3QbFBrFk
aGrJ4jPwRcgQVnPL9SID57PO50wRCO5FlUKupmQ4fVUxduoLwtMKzr3ETTKk
pfay7c5DOFhLoQTJkuF10DKLEyLceNdQ2cdPBsfffJNHGxFYVjlNEunJkGUo
ysHeiiDDuHF1eogEwjdMu051I1x7uHcou54EVRmBce/7EXodjmYtfSEBdaSy
48AYgsceYVl8R+NI39bJaYQGlusMm01IsNXzCOPUb4TjEwyBLVdJUL/9ZOv+
RYS0kg47vhMkKN5OTX2zjGBh++H8JCsJ9jioMPKtITSm7LU7M027H7bWXOpf
R7gz5Zezk9QMbVHB1LYNBF4DGafnyc1wfbnQ/DeNrcRNrK55NgMvd6uaPI2Z
qHnHcw2boTrt7lIqTa9iIg+izjWDtE/80sUVhK5gUZWd+5thYxOZ2LSEoNH1
e4h1pQlWdnUxjs0jrIst5fl8a4KD5EL+mRlafNxKd8OymsDn5dUvXOMIIWy9
DqffN4FUvrnk3QEEnd7FCo3HTfChnPlmNc2v8rTC5mVogvQrv4OVaX7e2qFz
+dTeJmAuOBU53ICgxcc5MjfXCOcGO9cjyhF2GAtqKDU1gt3pA9ovchAEt7ZI
88U0ws3bzy7fSUR4GE9RddRoBJ7scF+z9whJb5z6Ngs1wq9DBnLB9gjBZxwb
Dqw1wKFbSwLtJghRea62zEkNsM4Sbm+nhpDJ8ri0/XUDFBRy3B2WQUhsvnRR
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4932#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", "\[Theta]", "\") cos(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcWmk41e/zLiK0yJJWIoUIlQiVCSWk1BeFypo2JCWlFCGSomRN9j1LtkSW
sZ31I9k5yydbUipRQin+5/f2743rvmbOPM8sz8zc5zpyTh7/ufAtWLDgh+CC
Bf/7////hvdV7/KN9ICJuKHGUIU+vbD/7HQ0Iv3A5kaThYnCvJ7Xxm7VQwUh
oPvSrdvsnhgkugbuF30SASua0mIObt4A0ufES2XfPIXtfYlf7lsqQdTjxEd2
ebEgf13uhWDQdthzTXRG7XkCHKMc2e3WvQsirg2+8XuYDHdsaD375AC+pacc
3VCbCu1qj8Q3lRjC/cdl1fmv0mHFWGN/krkxfBi+J9KXnwm79nxIGz1/GGK7
ejcVpGfD1+yGJ2N3jkFHx6OZZc9yQc7ERGpTiCXcvtvuNRORB+taoOlv8wlY
7XZ+m9HNl5B+tlhri5g91MplFxx6XQSSNx+eTQlxhB+aivyKxcXguEc1Xj/T
GcYWy3wZSi+FWrt/a/7tPg9/Tjn5Vz8vg/gtdx0nyi7C6FU/jmb0K0g2XL1I
3cwdNo8Yzs0EvYbDQsw3sRc9IbC6oVfHtwJSHBaqOw1dgTKL30nCVyuhwWn4
oryrF4QvalLdb18FlcZ7J49nX4c7sYuTc7cjqK1S37eg7Q5s+FoldFW8Dnx2
pyotdPAHnTX0NbSwOvgu4ru4ye4ufG5Yu+L+7Xpgi0lOfvMMBGO5E43bTjdC
2dMHfNxvIbCqVl9Bv7MRVGPdh7xlQkFqDV1hyrQJsoOCu0SOPwAhq13BB3ZR
4MHdgA2/WA9hQmB9t94SGmR0t3p0rnkCLst3b9Pxo8GL/cro+fYJbBLOPU/7
QQPL555d9kGR8ItfTS+2lw5LxfitpP4+BblSgSAiiQk7H+zz1BOPhaIy4jNV
ogW8nV0dXnYkgsUbdWn50Bawn9um2tCcBFF1hlT2vxa4mNx5QpeRDPJntnH/
G34HgU6fqWs+pkCEeCdLrLsVjDf6FcT+TQMXrUcPli5vg9y8uaktwekg4Dca
kXegDe5en5s5IJYBNZ6qou2lPLnJO3eBrZnw/bBfcmpYO4x+DXsoeDUb+ped
z0yua4c/Jrl+h4RyIN5aVFnnVzs86Lks8y0pB+4997uie7oDpNTay9Rac2HD
R8sBa6VOWJWU58pnkA/xo7cZm150wVpN97SqwiKQM0r87NDbBUGNs5w2vmLY
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
2FyGxzKz6oarevDHz4h/axlleG2FPZ+deS82LRxefk6yHL8Nbg5SvtqL9G0D
4+xz5XhzsZHn/ZheXMn57RBaVY4f6nTMpzi9aKXlufeB82tUaRD49MCRhbUD
VH/GqwrcKrgVN59g47obgeppDlX437pr95lX2XhBprrftrwKFWdud89EsJEu
Uqcls7Qaj8u+OzlOZaOtLyO04nU1ftu9VGKfOgfpT2V9h5fXYqh+48xmYw66
f9wulnimFu0WEzaRDhysbOSPMnpTizs+JGj/i+Ag+5/6mJML4u9A1zTxzxws
XOxE3Xm6DtUn9j6Qn+Pg9q/Gcfkhdeh6kRVUIc7FaM77/hUlddjxMqTQXZeL
Sy2bIuIE63HzyfXGc4FcfOOc7XGjsB7HTUuUtkRz8Zqw6iKl3nq0WrX8RHcm
Fydil/i/XtiAe21Cv5RTuNjmefqjh2UDvhkKzX04z0Wp6ueBa2cacOX0+gjO
MhKbPf3SFmxqxPaX/T7R60ikn9mgWmLeiHH/Ln4y0STxOm34qUdWIx6uJnX2
65P4rHHqxvW2RpzxZ6nkmpEoGv2GY/C3EZ3dFMtKHEk8heaa6481YdB7xs4T
riSGL1u4R+FWE5roRCuf9SLxl8+B/i8ZTWgQnPa0z5fE4N1VW11bmrDnbKJn
YxCJ71duU02bbsIBl0aG2EMSWVeLx8JlKaiyfSiDGUnihlvP/dRNKPjvzUnR
sTgSrVcXfr/rScF4w3VrfJNIPM8vcTQonoJtpkldXukk2lRdL91ZT8GsC2Mn
e7NJdPFZrfbkEwX5JVOpWXkkFq9t64oVpWKBQbdGfyGJBxeoNhhpUdFaYBcl
qJgXjw/eS5+foiLfv5/JUaUkumfT30UH8PhEbeNX0Vck9ixZt2VHDhXHpAd6
pnhY+5LVLo+3VFRxFH7yv98NXnQ9ve7QDyo+O3XzkBAPu/oqzDRK8frM9fG9
Gjz9jqD6Hz26NCyIyUhj8uy3W7jtuGdHQ8qUyesW3vk7V6X2M+7SsHV4SQ28
JFGobvOWjAwaZruFzUjnk3jGep2uOI2GJ95ziy/kkMg2WbZf/DMNvx+9t1M+
g8StUQtuponQ8dT89XemySS+/RkgVq9Cx31REl398SS+mq40cDOj45/TGxKG
n5IoJXjFOM2NjuOu9Js2j0iMNFd1cHxIxy3RSa17gkl0KtrBzM6jo/H5J38j
7pC40u854yqPr0oKfHO08ObVi/G5jMZPdIzuO34uxJ1EmRv+6dGCDGS7Mb23
niFR91un+Cd5BiZURv8zsCURbtnrV+5jYNaolRthTuKo1a67i08z0Dn7pxZ1
P8k7J0mx7QYDT15K7tTQIVErRvSRZBQDp/M0vC/Ikrg0xX0xH4OB69Y33Ngh
QSKp/ZXMGWTg2oS0Q5cFSJQ4XDbVwOP7nN4d3vLTXNQ9t63qiCQTxSMXBJp9
4mJc5Yk4061MTD1Cmf/Sy8WPNVVzZYZM5F/idJuPwUXJ6minh7ZMjNv4X0tM
NhfZ+5UEfYOZqBCxqGNlDBfv1YnrP0lgona/4e7lQVz84DnhsayIiT8vX8n2
9+Si2/Kla783MnGz9dwbdzsuVsqnMnf2MNE94NT6blMu1gz/WEF+ZuLTCv5r
b7S4uHDAwv/jLBMDLX7W/V7KxS09yntWyRCYIFTiUD3NwUCoZU6oEhhNN3Hh
G+Rg9EjNhOpeAgd9fvg2ExyUPfjRlXmIwFn5SOt1rzio5TY3TbEhUOHL67zv
ibz+1TloveEcgcGzMVtNgzlYsfWxVddVAjeTTolRVhz0+77a4r8wAufuVwkG
7+GgRPW3KakYArfHPHu8QJ6DCyYifTVSCDzPXT23SJiDq84Y1mXlEqjq0iEZ
NcZGxV1xaR4lBGYPDz8v7GDjDyJS6NEbArOUhh2sKtgo8iyL86+eQNMLLNXQ
52w8/bFBuJ5OoFOSdoepPxtXnTp1r6uFp1/evzHBmY0Vwd4HdDsJHKeITdw0
YmP71oIDY70ENsqfl/yixMYrYXuDx7kELrzV7fJVhI0UT9Gl+/oJ3Ekk1/l9
ZWHVntp+ziCBsSeP8WW9ZaF7Sap44wcCq5KrRRwKWThZ3V02OUzgheUTVYXh
LPy/Cq48HsrvCxftCyKKVF+tUgiVtDjRQlLIVkklkcoSolRCdiV7pMiWPfu+
HdvMmHnt66wtsiSRipT19/7+fD73zrnn3Hvuec7zue9nPBZpfvz/u13mt/1T
obYsvGtVlKVEYr55/szV51j416jmBJDz5c7Ml26WZeFT/h+0kC8E5iSNCTBW
snDuYYG5zGcC1bUwcvU3Jlq/dNVc9oHAdbdvHx+mMXGKUZAh8//v9F/z8d94
x8SqHgYtuItA7zOJ9AdPmZihq8pVaSXw3Cbr5zJXmRi3JFF2O4McV3+o/vAw
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
6fUN3+xGk+wUKQFFAoSsHgx0Bnajn+sMXlQjwMPljVk1sxvPbT+z5qMpAXf+
NInUzHZj/frKF+J3CNj61D7EYUsPHn0Z4pp0n+Q5qwt3+273YM07quP7FwRc
oFaKJr7oQbHTq6z2vCLgzc8vAoJ5Pcjwd0qZTSDAcbe9x84uEu8XyZfKJICz
zSt8eLKH7JP2CL0qINdXLb17SYKJzhJHNG9UEBBQLX/M8QjJG0cGv3rWERC+
Ikhu/xUmavjMeP4leeZ6+cpbb92YqNpunV1L8lAvJ/v5yjgmNqklshmdZB0v
a2ZJVTOxQ5tntpfkMa+nai8+f2SiybEu3m+ShzN7rg+dnmci5Rz/sOgnkndM
RPZc2sTCI7ejdkWSPMwvUxW15igLPy5zOfqA5GHWGVNHOxNSd3UoN5eSvLp5
25OFji4sTDos5HuZ5N1zHScDNkSycJTvs5gZiY1DnYysClgYnrhjbwM5/8li
u5wLbSw0T5/wCyXtxfoc7BseYWH233F2NbmemqUHSK1gY85P4y/6pD9XtyWv
+budjbWhzOvaJC8rxxVk2Kmxke2cuzGDjKdI9e4138tstKFEcu6SvLxzmZGX
6n02RqwqvBnbSkBLRZxNeAgbFyyND95HEJDxUfueXwYb3581kd5HIUC3RPKX
OIWNTyZOLIqtIvGZN+qaH9g4uF5i1qGY3H/N7XXCk2xcdW54ND+bgEtjve0P
BDm4Zfm6UrMUAkZHu9pddnLwzrC6qmssAaayzO2iwMFN8wY3lkYQcPhV3F4t
Iw6u/2S9duEzsq/ppV5cb0P2YW3cQ3fcyb5wD225mycHB2q20E45EbC7YnGG
6ysOCh76nBF+i/QnuD1NJJuDH48wPxiS+WgqvfQRP4uDtvxM0QPHCeCLp8tf
HuEgay5vrTHZV26t6F6itZCLIkqXjX+QfadIsc6f3p1cvHUiocp/GZlfzPkF
gYe4uEygZyLwLwOuVfoLM7S5qBY7FbH6KwNC/QRPTttxkfelw9CTwgCl9YlW
o+5cPB/4K/YReb+YfKeiHEK4eEasNvF3HNmHv2xV3pPLRcUED72bDxlgFLu0
/Fo1F3Xys1QsLBmQnPrr7rYWLs44/DEZ1CPv6/7RPONhLjpv2/nt8U4GOFve
MKf+5eJSJ8n00DUMMPS6GlS7mIeONvu0Fabp4D8aUWa2iYfXedpTq5voIDb7
7ge/DA8bqJK25wrp4JA2tFJxP6mLlsSEScbQgRcq8GQvqTuMlI7wLO/QQcHO
Z8MCA1InmrIf9evRYd9vc/lLpjw8Vypa80eZDi0Wwuaqljz0Da/68XojHaLk
1a5n2pI6RrhFu5uP7FtEB9iJzjwUVrq+OWWwAXjm4LrtCQ+XNqbnCDY2gMHa
7mlZbxI7fzuzJqcBrHhuK6uf8TDI1kr1fVgDLHi6M/xiKA8fnNlhZHuvAcq2
ifZYRPFwV4/hbJkBqevMAlz7SB28/MPV/vB9DXCJw7+vi9R539adrJ0VaQCB
v4fTlVN4KLM5WGvyFw1MfWXDVmbwUMxYQ9mzjQbPDcTe6Wbx0LD2w/HEbBqw
ElxeLckldT5jl9zFQBrEhG+RlSV179EJ7aLk26SudN3xXz2pU9tDsmMDNWhw
RHJwP0HqWGedkQzBbTTYSF27X53Uud0ELUluAQ0MHHMGpUnML7z+/HcOFUoq
Vm9wI+ffXFX9RKuYCvPVnW9PkPaWf3s9qRVKheRxfi0XUvcO33d89sOaCtOc
n2OSpO7l2gyvOKRBBZ3sc3bypO59nOOsuUeKCvuHtifmkLr+lJ/G+oYpCmRV
fbSJe0fq4qZjuoKdFLjroV4wF8fDhSsGafzvKfB32PEK8ZqHjFC9CyneFIgx
njJe8pKHlIgN3GlTCphxK4Oyg3j4+z9Def4DFIi6tPwv1Y+HKZvvyeNqCuja
PvPR9uBhpO7JcoX+elAN6J+NJ3Xtz99+k2ph9eDcuPaLPalr69Xwzpdb9SBk
LjOYTeaLo9Ka3+rH6uH2li23nTV5uErVqfn49zp45RC+YP4IDzVakka/1tRB
5ezq/om95Pl6rSrTj6wDbm7ud7l1PBwpWDruoVYHnbez1O2X8zDg7O79p8Xq
YJG5sfaWaS7mFPpRed9qwf5T0+I2LhcXNpZ6O4fVQm58Fn9LIxfn7FICntys
hWQtM70jFVxkK/QFmhyuBTvJ5hiLV1wsO+Oj9qa3Bg6G9fL/I+/ze+dSTVv5
Gvj97pX9/YNcnPUqlDbgqwHpEvsVN7dyUfjsertNXdVwfYPVcPQkB4Oqintv
PqyGt01dN6+Q9We7SJbbMj+EhDXRu1Nq2UiVX6j5X3oFmO/1GjJJYSOz72HU
LYMKeL71TNarZ2w0atXvLZ4rhwM66d9zz7PxZbB7vJ1+OeSNXdtpxmEh41jx
1vjZUiA2RU7cqmBh1GGJuJuppRCk66c1/4aFHtumrp/RLwXzDfec2y6zkNtn
UuacVgJBaVFcqR4mxvRuEM8xLgas+9X1poDks+VW6gX8xWAwf9ouNYSJFQIH
rEeyi2Bp7cpyRy0m+v/h3VqxvAgCN6rRvhX1YJvWgRmoKoBtXxfH9T7qxmUm
dkvElPOAeq57Jut8N/7xblCoGcwFm8+aX0R3daNt5PoHzVG5MPfjn0hRZxfO
/di8XmImBwY71n7T39mFK9a6C7kHZYP8Z//by6Y7UWb6ytrAySywOml70LS5
Ezd6Tjn5XcuCtcu3Ur45duI2h8HSK/vfw8aTm89mlHXgqJvOrOhwOkQHMrru
P+tA0auPvm4xSYdLYTM/vpl0YGN868JTjWlwt8F4c8N0O+rtdBn4nJsKe7N5
lU7K7RitGH9gPCAZjHSK7l9524p0y82vHz9IgKbKm8d5N1qxKvfiaN5IPPwK
jBCZ29WKWYvys2NuxIMQlnUZWrYgHpsUTTGOA+ljNw5nPm3CUwlNZaeS34D0
qXxNkWVNmN76Ybv8+9dwhOLt1vG8ERdVubR1F0fDBKkmb4cT6Bz4ZeNzZhSI
+RsWq76h43YVtY5YzQh4Lduzu0KSjgf0P6WE2obDrH4NX9qbBmSXvuCFRIXB
TJgvcKNpmOBfpt31NwSuvfSN/BdMwWrrGJvC7kDoMWtJVl9NwdDFl91kLJ5D
gev7E8L+9fjMYF/zwZkASInYzqfnVodzmvmZJif84LbnzmVxljW4skFlGlQ9
Id3F4N/dj9XIVdiycKnIU/CKrrP/ZFyNcaGmX9vH3IEhEaJ3LqgKT8wE3tAN
coXCCzdWLn9SiXp2gtuCPR4BH6VEW9y6Ao2bl79S8nGBxvvVa/RPleGC/Z/0
J6lOkKG48o+fYikuDUoKVOW/B6Lv8rbIbipB/Z025srnHUBqSaYa63ch3jtS
37lEzxZ8XHTyR3gFeLmaMTR69Q68t4u940/LRz0Uiq4Mt4IfE6s67F7louI9
lWMed82h3XRcguaRg1IXr4ZkrDMDq4Veha4dWTh1foPFOYYpTAb9YZQlZCJ1
ppEnmncRvuH8f+ft0zG6ungRc8AQVMYrLXUhFTcJzipUWJ2HTfMXdGpXJeNc
vKVKk905CLLJDClgJeKiM3b5Y6maMJT3c1ApOR6TvZUKN7keh40POjdF98Xi
R2m/PHHWUZD4LBws/jgaU61pHztH98PJY0dT54Vf4uo9Pyc87svBqaLZHxZp
Icg/IdV/yn0rFI2VDRBPAtDiZLBZ55goOCXvfaqY7oEXrmvNCXnwg+2t6hSL
dHs8feam93GPL6pLL69V2pFcU6FpGuDdfN9T5X+3sgMq
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4954#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
yf4PWCFNbQ==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4976#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
31JxbD+37I7jw7jjTRkxNicN9SPSFXdnDWPNjw+vOG6l47uAXdubwj7imZZn
nz59y8CmVgfpbQajeKDP5Mfw/mysq6lOUW0cRevsU2GB69m4O3Pouv+xT0hu
i0qQJrxBi/MXtxhuHkPdT47Bx5/l4NajOtGvS8bxk2znayfBAnTL3a99VmgC
fwXyixowF2KK946wRd8JdFu8pFn7vRAZH6XKn9CdRHRik/z+pQhfNk7oJNya
Qhn3XxLjIyX4X4rhE434KTwnVeT7zLgUD+b1brZpn0J/pvVfch9L0Xwz1X1N
bBpZu3UtHo6WYdbn3bbGw9Po3+75tO5LBeaMPHzgwziD0emXdsTfrsRKyXib
rUdmMFOF95TMaiU6P7my08F3Bs9uYo9+wlKNM4LbJMl7Sfhq952mZKkapDz7
5P1HjYwNEtNrM2GI7o8MbLdcJWOdT9waB0c97phobQ73JmOc1nKAvG49Vi3/
evypmoyVXj2fGvvqceXdn7/RhygYYTd19PhIAxIJMam8GhQ8kjfIE7SrEWsf
X77+04KCzHdWZoct6P1ZjPklewQFFdpK/XRnGrFlI9hbaJ6CLSllBSJfm3Dd
tHyDzEhFXzHaSqtUM/qEVeYK7KSin6Gl6BmnZlScvBFepkZFoZtvj9V/a8aE
Kj0dYUMq/riy91XpsRY8HR15+tsNKk7MPWVzcWnBvt+r6q3BVJwclVtRWmrB
FMmGja5EKh7aMbtT7UQrGt4/ZKWQR0UuEuEew91WtIwLadHooiKhpfXo68VW
PCr/b1aSkYabzA4c4PvahuEdZi9tt9BwICTCOESiHc0P/uxiFqIhk4PB53Tb
duRm9pf1kKbhK25J5lfj7fi9uD7zvCINeZ53RjwU7MDKqiHBIHUaMsqreX01
7MBTw2+bZA1ouMemMftWZwduNjO/lm1KQ2tqicB95k78Y9U15GtNQ2nf9FOb
VDsxoV/LptGOhmvm8t3cbp0Y25Fx0dGJhrwzFbYvCztRaPrIF++7NGRNk8VY
WifOmeU9/uVKwwe/Wl9u2duFS5uN70960nCvc17+2uUu3PF7aNdRb/p4jH/P
xdAu3PRVbozqS8PUVo82/sYubPaj7dn8hL4/izv31da6cNas7EKcPw13Zp4s
75fqRrHuuunIABpG3npzt82qG1vuul1co+se4cXkXS+6MS02dnsHXRflvDrW
3dKN1ueFKtno+lQr9fDQWje2Wci+L6WvP7v6PlnuUA8K/9Mr6fGjocge7tiv
Jj1obMBy2MiHhn0xU7LfgnqQp5i94fxDGj6eC0o9Vd2DkxXHt5S701Bndx/r
JK0H7x6yLw+9T8Msc/705u29mJ6UbTF4m74fd9/yb+q9uO/zTMlzexpW5EuH
W9zuxX92PDfe29IwYKv+E87EXnSKfvG324KG40osy087evEE66kNBSMayvof
Thda60WJUJLBpgs05J7zMGza34clpxcZJDRpyBzlNPXoYh+eXHdlyVWmoe+J
cEktut8KPMFvH36c/v3bU8V3v+7D7+omL9120dAh7aje+HIf7hayf+7DQ8Om
2rej09wEer1U1Z2l55uZ+otdgyIE5G45tVSzQkX5WhKXlgwB9Y9zli7RqMhR
amcsp0nA7THnGiNGqFiwqFaUZkTAGckG09hOKj4q+dsbaEfAA8Mr0qQcKkZc
3+6KgQRM9ar5J5lAxU1Bj1O2xNLXH0vwnnpGn3/7UO+HTAI+jb3DzOJGxaSk
7bPcZfR4/pYtxNtSceTpGXJNAwF3Tt5MTdWjYpRyc/FYLwFVuRkfC6lSscqj
1PD2JwI6a4VHOm2nYsrqo/PUJQKGPWHK1WGg4seSyQ/tf+jPd9MN0VcKLt4i
RwiyE1Eqsem+8wAFDZTNyoZ5idgec1T6XS19XC/ZjXEXEcedF54+yaLgvWMp
e+L3E/Hrcy3u7nAKJjn9XkqQIqJjiKJxjCsF709yXmCTISKY3GKcptcb/5ML
4eOKRFSz5MwtotejqZ8v9+5Roz+v1rPCIkVBNe6Jey2aRIx7hsEzWym41TOE
Y+gsEVf5YIf2KhmT6m1uXrhIxLqLE9oKn8gY/lRm31EDIv4yvDBchmSsLRzt
v29ERHKjlidmkLFiwkhknwkRF73uLZgEkpHVvOedrBkRPxw3WA6wJ2OZTbR5
oTkRq9sPXdI8T8adH5U7wy3o60WSOuKlyehpEtP/ga6fWv09HMBLRkJDzQVv
ur7s4qLN8YOEf5mE9oXT5+9XjVmQGCAhl7OLEhN9/c6dnCszZSQcOT/5fNyY
iNqlr0+qxJAwf21abA89vgt+ukGyD0hoctSCtVGf/r5fNCLBkITX5pJ1uy8Q
8UqD9iLPSRKOhlnsUKHv/1wWR8cyHwljTZujeOnnExPnedrv+wza33FYOwf0
+B881ansm0EBbsuABQUiDl8IypMImUFyR8Tl65JEXK5x/3L95gwODYldUN5H
xFdr9S6XNWeQ517OmLsgEa+qH1O59HcaPb4zJR5mJaIeHr5tNTqNidJpAxm/
Cahn9LNXomIa40ZrKv0XCdjbILZ5znEaa7q0GZ5+JGDbcq51vDa9H3ZaKlK6
CLhbonjvZnp/JA3IHaqoI6CAAzj+NzqFB0MvSBWl0/Nb41eXiMYUBn7fWr/L
loDhXKR+YeEpTM75c3evAQE3+RmLTX6bxGfuq72Jpwgo+npuQtRoEt86Hshn
3EPAhxpaV/j2TuCZiabrlxL7UPJx22ImYRxrMm8ribjQ7/MHvdE/fuOY1BT0
+YdmH06rqWzeTB5Dy51m9sVzvcjFR0v/l/kJUzcrc3w42osaif+Wq8RGcF+D
eZ/xs27kO23jaTHwEc3sf5S3XezG2VQHLSb/j7idKhvkuKMbnwnoJlmThlFA
6F3BjbQuVFJQjSekD+HBe7+0Aws68VrL8Z+vJQZw5OHpU7/ftGO8HTPLtpEP
WKUzFJR6vR3Znfg+1wZ/wOaeMO5a0XZsyno70bfQj19dC6ad4trwoknLwNl3
RFyf3diQ9m1Fu02Hjb439mL4v7af1/5rxqZ9RCYhpV489ORx45v1JnyUo3eN
saQHjb7P3XhX2oSjhQGOB153I1eY6Fe9Q014zPOHp0JUJ96qm0tr42vEQo47
1/zjW7FUpXXnzhZEhvJjJi9n6pDqFvtF92AlWvwpf2jLW4cuLYf9wtMr0FS3
crRAvRZ/ZVcx+u2pwLInRXF9eTX0ulrlEb+9HPfnTnwae1WF4uNtsZE8pVh0
eEUxiqUUqzn9GittCzB/4fjYylAGFgSV+udNpuJNoaaqCUI6ggj/Nz6+VKwo
/qBXRUzDoqS/P2UiU/D6aXzxkvAKNyb+r4Lzjqf6++O41TTKCpGQhiIyvjIP
lRSRFTIqs7KibMqWyCyjhKzslT3f9rzXvdfMXncoUjISye/+/nw9Hue8z+e8
z/u8P8/XP0fz9ufgZLDidPV8OpAENDzs+zyG44GoxDPVvxwOZWc2LDOfh8Hy
L/1XTW/CIOXxpjbxaSgsWfT9fGsYCtKOuSJKz4OhlRS73i0eCCnWgxGKA/5w
5xa7/XNzd4iQERVqP+gG775+M3Fy0IOgbufTAt904VqSgCpjngaUzzwYEz2o
AQ5xzq41glcATbv5ynWpwtv0IMXhI+dgwTMxVqn3LByB3DzmG+wgEthjli3M
DgRMUVmOxVLTjr7wu4e3lpqinecmA3mamviOVodLCjU1LXvlqfqUMoBHaaN6
HIaBej/NXxr7CEDuaQF6+0wB2LZT2wk6cgku+tnaWWlegqoSJZdy5uvQHnXO
dy38Olw9cPZTDekBHPvzVP93tAU089s/k2WMgnn4fuVgWQzstsnfFuGNgesD
Fw4/+B0LAUs/TCzlYiHybPfG8s03ULV3WNIq+g14stl357EnACP92KRVahJI
vNunkSP3AXT5n8k3HcsAySSOfLDNhojL34crDpdCcZ+J5ffLFXA5x4GLK7QU
bCc6T2G+VkD03NLJD3RlcL9hp9A9pRKuC3669u1fGSg5fv3Jx1wNXXO5yYn0
FXBn/xLLWeY6eJgeYn1BpgZyol7lgFozBNZGn5f2bYYH7+YeieZ3gbgr88eW
lmZwSMzi5abyXMAyjYnWgRaYlhmw2sjqBpcZ/QTtuBa4pHOfxTWzB5SmDOcD
cloho4BF8XBBH9zgX5060NcOjvLDLWWzOBC8yDobxNIBhnenWvRl8LC5+0So
QbcDHG7xnsr0xoMFi0K+7mgH2DfJ+MpQ+x/Fz+hY1nQn1BPWv84JDMCxJD6V
d+Pd4CFOF8xuOQSZt34IHuXugapZoV+CBUPgud+16sCdHuApNZ02WR8Caxtl
BXtsD5Tk7DKrvhwGNp/BjOzqXsD7BG5FF4+Af1WAKPcTDDwSHKyqpBkDh4J9
yWyZGNDUczM+pjkGEQ9TTE1HMGC0esTwWfwYTJaerMTIY4Gn843HsfPjgN98
FbKwjYXozLr7RXoToDQ5/KP4Dg76z2RGe6ZOwd3BPkqJPw5iWnMKrL5PQRVN
7+uyfBycaXUSZlWcBuJ75ZzCHRywfLZ6mfllGhYUj+mm3cDD7VZBNb4Ds5DQ
oRRMY4KH3CEUbC02C8PfxLq+2OFBhySp/UJ/FriFvoZ/C8dDsmdGFX/aLJSm
Dod4teNh74u046TUHPwuRi5eBCrnnE574208B3sRJYFfp/AQOHmwddx3Dp6q
vTLh2sBD+cDnV2Ptc8BuMTQ+uIeH9qa5266LcxB979f67iECLH854dnDOA8m
xtojSXwEUJw8ZpKsOw+J2D/ZB08TwPL+uhaH6zzgme4KEEUJwKepw62SMA/v
9t2cPy9NgBejxyf4auaBjz00blKeAEWPLOtyx+ah92fh3BaVO+SN7Cfntufh
OK9CuN91AixmdT3u5F2AwA9ROs6aVK754BRpoLgA+ddJdH1U7qgzH3INN1sA
GWNTr2gqd/Rr0urY+i6AQfTX+Ebqf/2wQ54uOZmq8yyv3aFyR0LW1ZKD9Qvg
ddvZ25DKBRnzAul9YwvwwiVatoXKDYLCQZZiWwvAxcIUEk/lio/WFZdEjxEB
+/iv2/+546n9CZ1OKSJkViic9fk/d3ib0W3rEIH2pDW8ps4PmzCN6XAkgt69
bqeD1PiVWo/UzoYTgZTu8GSFyh0Dt9SdT3wiwuutfwyI+n20slpWn1qIkH4W
57tN5Q6y5jPX5kki7K11iAlS9/c0xHH38W8ihE6ZepZTuePazWbTdFYSbGpF
d5ZRuYNudfinNZXTmhXGI/io+Rs+xyFUTuU4Z9WzautUrmM6tWocTuW89POd
nnJU7qtIO0j/1Y0Ex3/fr1qmcmFdp0QcNpIEXHe+JbAIUzlyMMr3v2wS6L15
35BG5UrLNwWKQg0kqDt4MYqNev4aHSXKvosk2BNSKtz4h6fmXec1ZZcE704U
rmms48HM52YXjo0MgYrc0uxf8aBgdCVA6iwZCnj2Xb9NrbfBpw06rApkCNvq
O0xDrccbXWcID7XJIPcu3OEMtV6PfviZIWNBhqVDA+OjuVSu2E8YvhRCBkKI
//yDZDzQ33sToRBPhuEP2ZOukXi4JM7a2JNFhiZWtzwOPzxYST+3mCgng1HN
M3FVZzwENwm7Pmmlcvb2I9OdB3hIW/JZD8aTIemIjsA1XTx8LhchH5+mxqsJ
ux8igYcJUzvV9t9k6HHSmPY7iQeILu8apqeASEzTPyYWKletjWxZUX1IK+tm
pukWDuILzq04Un3trMTwVOcgDtS9XDt+CVMA1j2I5sU42Es8mL56kQIvo9L/
CoXhwPRRc87jyxRIv9tSqCKHAy2hQ19bblKgofjfvtSjOMhndg77qEuBD6MH
1yQp/fCsqY5vw5gC+OXwH7SN/fBxnwCx6T4Fyn41BDDH9UPq/o+CuzYU0CEq
yRvb9oNzPPOJEnsKZCl/LyfK9cMpK65TQ84UmGRuf1PJ1A8KWzoh9m4UuP6i
KAw7jYUyX4X3rl4U0Fi/pyleioV/t7QbV6i+cbBAPHXKHws/TPe0x6i+kmf+
x60JHSxgHvRVSAVSfeFrEL0ggAUDgtLdXaovDU0l8uJXMHAvZ6tAhupbh6c+
0mIbMJC9Wi84SdUJWgf6hcMxYCDuKP2Tqo0vELzGDTHA5c5v5ULVMyGS+1eF
MHDDklPyPtU3OzgU+9qv9MEEnnC+lrqebN23lVu1fdBtyTH5guq7+QOC3JOC
+iChhzhW8pwCP9inpXW1+qB+MrFRk+rb1St29LyP9UGgx/BpPaqvzyNp0nLN
9ILUydSqVhfqeg9feJzP6YXzLjo8KQ4UcJ80WK926oXPxsV/Z22pPpzLtbFV
pheuM81zRD2ggLWAzEntvz3wnRDIm3WXApfm3RzMW6n/m/B3OCE9CijGPf63
9rIHmhmyNw5pUKC395E0p1YPTLCnGt1VpcDOUsjZfSPdIGdWySZBrYd2QfPm
8Xfd8Ib5Jm/1KQokDelU3DDvhpSZ+qZsbgpoaz9P25nvgpG3LE9raShQHLub
rJ7dBS8f1ZtPr5FhG9uxK/ewC8wYyMl2ZDJk4svFBL51QldRBkNtDxmqJz2E
eQs6wT40W9anjqrtTQm99p3wPv9wfxbV5+rfZew2XO6AOT/PZxdfkYH+ZpPs
y2/tYFNmS3MSkeGUTEMIZ1Y72Nfma9qJUO+Do+lxJ/N2wDgq59Kzk2FqnHEr
BtcGCx8vzQsSSXCB3U9I6HMrMBw+KMz1ggTVLtfFXtq1AvktipqyJEFvwpEn
k0Kt8OEaj8PGdRJEj89l2L1pAfnawQ5eZhJ4DL1jTHZtBnGDCheDWCLY39s6
dECsGXA/I9qqnYmgfe13BFsfAGUoacjlNrX/dkQ0dRY1wWwPx+Pvh4ngJpJQ
veDeADf6OuyPey+ApFrJKw6BGjg2naspLD8PQpIJnziSqkGuNHTR8sg8TBC0
jg4frYYyoy+WB4lzUIdm1OsYqmDh4ZmV1xFUn0STE8r4uxx2sXKYj4OzcPdt
Uya9eznVR6jHymfNwr8P9s9pNz/DeviHKTXXWXgclDEn/qcMpBYLJ6vYZmG1
SDtfibkU2LbfMN+NmwY574ftb8+XwJZI1MjW+Wlw+vExW0GpGGK0+y+9bZ2C
Avpb6U/sCmHUm6mjd2US/KiMxUXOhQjcc0q8wgR0cb4VUWPKhf4TSZ7OmHHo
a1ti9pDJgWsm15kszcbheka+kEBsNrB6Pm9J8hqD0+T9K3RPMqCrLPxGQ94o
TBVdf+Jcnw78EpnYSIVR+N5NeTxxOB2OJEedK8aMwPoS3ifTJg289/GLLS4P
w9H2Q3eSdd5D0xDNyw+nh0BPVHzOnvcdNBW2paLPgyCzskPGLidCh7bAgKby
IKTIJOWHZ8aD8iGB00UGA3DWe7yqxDIWxh/c+75G5bmuwaHbo1YxcGfb8pwK
PR5aC1gmT3yJAu6uwSChYzioyKD87TsVAXw0BrkfJbHQlr4vVeX+K+BkGVgP
Rxgg9e2BSt5LsDafKE/W7IOVYpVfao+DwfOo1Uctix4Qvtgh5D0TCAOpA467
dt3gSMvJlmQdAEMcfN9/PusC9a3rWhjZ5yDoLh3fHNQBF9hmtZ5/8IbsjLR3
BeHtcCj4m1TmSU/w/xG6fyumDUxFT4pOBjyD6KD/uAeTW+BkiIKwpIULqB+a
73X+2AxuTAJv94ETbD94Qsd3E0DpuIHFyB87OM60m2qt0wjqZBsd5mcPgaE/
NqXXsB60k5c9p85bw+Cqtpy5WS3IqNA+dBe0gMWJ6soLFtWAu2ty6WCxGWhJ
c91Ts6mECgf23+aJRiDctBBc+6gcJPWEhmX39GBsWjgo0b4MagqCS0v7tGCi
pOjJ1EQx6MXVNW8kXAd13xSWlJl8kJMtks95oALJLoqVr+c/wYoRRUJZ7z+w
4V5R6iNmwA2s9afM1gvA2SXH8QOTAqSxa54sDSfgnDAtnQUuHuaKf/m8nDoA
4Q9i5QwyIqBWAh+rvjbbZJBtyyio4QGei4EbzAufm8KthTRkLC3QT5OSuZNj
f5qEX/uFHjIMRldZ/85fSeWAQKmnZ11F4tCG0L0tI4vTYORrsGF49j1Ku334
w5vLkjDZ9idXli0dPRRJCBlvUgDtq5KV6Gg2SuMgWPqkX4V9dnz1Wcx5iDd8
t0vAUgPYS7cm1Q8XoRUl3oHnR3UhxdZMaF9QKRr4ZrCAdboDtA4f4mz9P6Pq
ays6LZomEPm3fury8wp047RKHmvOfcg1XMxx8KpCRotteZebLeHGjaTkX641
SFbE/Qad4WMwtniGqX7cgOJ/cnp3LjmATebA0JpxE+LVDeuruOcMQ9pvLuWc
akZiWcqada9c4YAI+Vfc0Vb0DSsmXtHnDtYZ3WJX97ehzTR5F5ELXpDvnilm
u9OG+Md7lWmuvIBcPjrZxYUOdCj6r0ukrz+QHTVE5UY7Ed+wcHQsOQBuHElp
mu3pQi58+6KLScGQFEo3ylXUgybztmrmIyNAoY3xjLUdFg3Q6dENmkSCoVv4
2VyjfpTdqV4bKhMNz1iyGhiv4VC0QLHg4qtYcM+6bsIYiUcnxwSCXWviwSeP
pkjFfACdD5775DOUAHcfRqTS4wcQ95e8jl+biTCDEyArXBlEoU6L11a138Om
SvSHPeEhJB2+QXvvZhr8KSZPey8Mo3rs3xMRmh8hLu5UfLTuCFo6nclmuvER
/jS6vaCBETRHzFAr082At/R8vd8SR5FE5lcVEdFsKEg+i4lUHUNDI42liV+z
4bQMs4dE/hhi3R62L8j7BPenLwEX2ziqWa1ITbqUC+oBcdO5M+OIw/zcjsn9
AlhtbNl46TKJaKMODHVIFIKaX/MG7dAkErbGML5gKAL6jy6t+TJTqPtkM1fu
52II6o63f7E5hdwTvbk0OcqA3oPLhuI4g1Q7nHIP11RA3kFpw0HuOZSiv2Ae
IV8JfZarnP7X59CipC3lZ2MlmPwbeJv8bA7FcO1a3+iqgtx7+R94MHNoYu2b
texCDSz/nhpjcZ9Hvd4jId/tayFIwNmeJW0eFRD9f1zZqIX76BrNs6551Hp9
aSnnUD1gPNmGbY8tIBkrdp97lxvB0qH82GThAvoz5XaGvaMRTPysXpDxC4h4
+l4rv14TzJk9ntVaX0DY1vaDxxwBuL81ckjIEdGYW5pgy0AzLMw2371QT0Ri
EqlMmzwtYPi5+Pn+cSISZxVzvGTRAr1JZ0wubxGR19vp77k/WuC1h9GnFEkS
ao3ctedmaoNIr33M99JIaIv9ZsQ/vTYwa//v6nQNCR00rhvveNcGxn3kjlIC
CanIbz8jnWkHWmvLg5q0ZOSWS+8h7dgOSxVN+9m4ycjwvvIJvfJ2iBiFfpGL
ZBT+eXSarNwBxNvBERrGZDSRIN5lENwBXG4MO3oOZCQcrPL9RU8HRNdmiRT4
kdGy6pPPG3qd4FHwkUkji4wEmdhvrVh0gbbL1CtlEhmlYYdlIKsL7DnJ5i1r
ZITjUdI/R+kCnvt+am9oKejt5mJYGbXvd2vohQnzUpBlzMZsd0E3VLysYCOe
oSAe/85l2+VusPi4yrJ2iYK4d0jfTjv0gHyvEjPNdQpa77S9o1zQA59+b3r9
06YgGqUUa8zXHoh5MCymZURBpomei31ne2Gi6qPz8j3qeu8Nai/b9MLJDI/Y
SRsKWg1SrmHJ6AXJpB7yCQcK+hEoh7s53QsBZjr9pS4U9Ks6cJXE0wdBZw4V
xbtT0PHKId4Zgz6oeyL2A+NNQQ/4l6b0Ivrg5nG0c/IFBXWNv6aVbOkDRVv1
+El/Csr1OGvqtdkHF2+LnaEPoqBTovxdpy9gQKpAie9tMAXdxf8Wkb6PgfOL
wkvRIRQk/PS1c3ocBoxiFhl///8dvmDJGLsODGQkzP7toWqLT0uhr39jAGtX
qnqIqmv2xZoyiGBhdRhZVVLj22rvncDdxUJKWvmP/gAK+iNxhfL1FRYY/tp4
G/pR0LQ7jOnWYsGvbTr5li8F3c6yEGRYxEL3s77VMk8KIgu3ru1y9oPZzib/
S1cK+kqjH6N4tR+e3FbtwzyhoM88YSqNT/qhFZOQGWRHQde+7Rk9T+6HRivK
3UJrav57C6S9O/vBM+ZEtjo136jkt3LZz34Y5udUNaSeh7Pz6teTx3GgWR+7
8uU2BW37Pylvu4KDzzoyz/DqFFR8Vlb4vR0OyqTc3ykhCrLbu2o4XI0Dnu9x
TL6iFOSiyWIhM4UDfc0z+28LUccHyuvP0OCBTF+2/Z6LgkxWD7pWs+HB8IoM
5gETBR1Iz/wjKIwH3UQNi3QaCvJCZfgTMnhQxbNlm69T63t0eilPDQ/RHy++
TKCQ0U0+wqiTDR5yD/LsBGDIaM88szDbFQ/qv+UD/2sio/uP8NhHQXgwVUFx
9iVk9LCYS6s6Fg/F3TESQh/JqHkh5UpMGh7q0gi2pjFkNFu1g/lViIdXT/uv
cPuTkbzcLdbpWjxkD7mM3H1CRjPFrM81B/AQm5fq/+QWGfkNdxzBUP32Y3Z+
nJo8Gb18t09qYJE6/gmnWvZZaryya2Lma3jgDFQ5GM1BRod6ujUddvHAdFfk
CgP1fge8qZz/t58AGP/jAvu/k9D1KG4tjqME4GBjHYz/QkKXaW5d6BAgQNTX
81FWxSS09J+Y5/1zBHiRrXY4K4mEekXqNbzFCdAwJnvVI5CEalUuC3L+R4Az
2tk+0/YkNIY9EiCuSIDVjsg/4wYkFGwws9mtSgBjPuX9TkoklPHM79jcdQI8
VFVdSTpNQlNPmXw8NAnAxq1La85MQtJPVzojbhPgnox6XP06Eb1SmMs8oU+A
nwHMvysnqP2ucqdV1JAARU1RYVqtRHTqd9VkjTEB9n3/lBGUS0Rv/66XtpgQ
wCeZPetuFBHx7ew/oG5GABEu6xX8MyJyuFNedMOcAHeDvpK+GRPR4kUFn06q
zhr9tJqrREQbKfe1mqmaq0PFh0mIiCI/PvMWpmrjQrHjDfRENHG6/Ol3UwKs
h1xdYSAtoBfuQed4qevZRRViFzsW0EBjbVKREQGOyYzEPv60gG4PpPVmGRDA
3MyY61XoAkox38LR6BJAyWtS6abtAlq3outouUWA928YFgvUFlDAeV88RZ0A
f87p7XwWXkBqvtmnnl2h7u8X04MH9AvISEt124qaX8tIEdqquXmk0JDwvk6G
APlHJTCVMI+Izi53PC4SQN9fqMwiZR653RUMfX+GAL8krDLqveeRY7tXnDA/
AdzYkt92GM2jiodbh54wEoDe1uTu6tF5VCOs5iZBSwCT24Unub7Poe6LAQ0m
m3gosjfsX++eQ0mVcnrL09R6lXCbnfGbQx61QesG1Pq0nJpQWzWZQ17tt46L
dFC1g0Ziq8wckjsqc5grDw9SNAOsRd9mkXUqu4/kezww/wfqve2zaPnxTEND
OB5COc8FlaTOokifLBdBOzwkRyHxcd1ZJHupkfmGELV+780eGbSfQVjN/gub
LHiwXonipTkxg7iYiIqymzhQ6aMlT2GnUYBTE21mJg5U/c34Gy5Ooz2GD6V8
v/rBKUyP7PZ9Eh0uryXLtvUDT69ZcfKHSXQhdrDO6E0/sJ8z+hOnOYlqQi98
LJPoh+ht20f78yZQv9rb4yIPsKAfHeX11HIcMfmXeLRR+6ncl1XxhKPjaJlh
ivX5LwzszlQMFzSNoSW33BSzAAwQ6O5sNBwfQz/H+M7LxvcBs+jhNdLAKBrN
97k9m9QDVSSiQcv1YcSl1O3vZ9QDSqV+uDu/h5DR08v2IZw9cMgW8rhzhxDG
wXh5JLobdB68j5Y9TOW10doJ5hddIFpw10SBMICqsq54TlzrgG3Dja+3HfEo
KSi/i/FvO9znC/hkJYRHLGpX9618bgffrY5rVSU4xFnF6D15sh2muOps6cP6
kabbRaufm61wZej1FP1VDHq4FC8bktoMJo0t4aWULoRL489R1W8GhY0yMTaL
LrR+J4ee4WAzlCb/1kmY6EQvB4NiHyw0wYvLH7SPD3Wg8HHsPf/XDfBGiE7p
/WAbenyJo4z/VzX0OBi2vjjajNRVdS48LS2GOzOEdF6FcmQ+mMzP2loEHpqJ
3Gtxn1G8x0OLMyOF4Oj/4lP89zJ03il9eGtfAbD54Po0CkpR1fisGF9oDiim
XVTNiy1EVZEREQe50uHJgsXMwIks5FYbqRtUGAFG8j9sL6dEIWJLtbtl4Ssw
DVHmz9R4jR5yrgctNr6Eghfq574eCUd15nW4hmPBQMOQ57M0F4JKN7kkb2n4
QN0YOSFO7Tn6ZDWQvv3cAmazE3utLlki4cCAk8phZrAndLygMtoclT8tCnlU
awgJMod4eFyNUG5d1jksvwbUftrCvGjWQOUWkfV3HK/AzzY2kwnMFeQo9lmy
i/8ynL4ZPPkx6DL6/LnsYULtcfjjPLTHtH4chZ6eY2c9RgMrCvIdOiI0aOos
nc5ATUkT7l/GCQ8oUW7/G5fUJ7/UZCkjmlVzeknZO/dkNTaOFehFmMf+PmNF
dMH73pY+Og0nI5Kfql48jewZ89+FY6SgJfj+okqQFNJJ6egKk1SHQwz3wwgl
15HhOc61nxY68JnvJY73621kN1ZZJE1jCCZxBUOehnfQxpfhibpZC/jOFC22
dMkCEYkNogxmT2FPxvpvprkLUo73vyzS/hJKdLdm4hpDEJPnXPy8TwZU/Zp2
l09NQ4onbtqd9M8EwtgItjz5I3InpmrpRGTBmNfIEQuHdESTliX2vOoTCFi0
JRfzZKIrZcRwN6of2KxkyR9O/4T2HqQ8Z9v5DO6cOQZjd4rR49TT3Dt/AMSv
el8KGKtGIq+T0n89boaTvtpFKZY16PgpjKHwl2aoMX74RGe5BjFYNAhJ1LSA
x2MrF33aOiSvZkb/MrQN6GofyfVKNCBck73wonEXNJifZy7UbkY2c+YcP0a7
wGMkWaMpvhmRlP3oNoy6ofovbwRhshlFVTHIL5v0QPm/d/OLdi1ITOnL40MO
fbBKJ/TYLLQV6SkTXMeqcLAkr6b4tKodkTK1I/CCeNi+mHrKd6cdHdtkMIh8
hIcPlP3uKiodaI8jXfnAbzz0Z6AwSncHorkqqlLGNQAFTKyXFUY6UdtpcVMX
myEwyon/6jLVjcK+6//kLR2CkiV1Vnm+HioBET7/2h4C1JN/6LlJD3r6ZWCC
O3YYTI3tu6yHe1CC7EzcWtMIPHcakTNq70WVVWsvpfnHQL6zdLknCIOQ5Nvo
qkdjEFzZz5RQjUH/ZbGDVPkY/JfDVl/8DYMEL5HfsN8YBweCTE6dNhb13TSO
53CZAHLfZMIqcz/iljd35K2fAN4JUumIQj+yb16V3bdvEgJzE+6uPepH04yM
Dm5Jk2Dn+wR6mvtRAMti6NPGKRAn9/jm2+JQiOETaYX909DWe+MOYxQOsV/Z
1ejXngbhXeax2AocOvIWWanPTEOI4jvKgT0cQq8tmcV3Z8C3qy2x7Boe0ZFS
H28LzoJGUNrhaQM8Gp+Wl/xPbRbMpYr2J1jjUZCEgK5kxCyE82u5ZQfiUWnr
6CIr5xx8wXYXitXi0RWc43FW2TnArDnXpnfgEXvR7T+TxnNQxTxTm0zAo+/+
QaVDyXPAYxijc3IRT832TtBuwxxEKPYM5/zCI55y0Z3lqTlwdq0XrfiLR82W
oyM8J+fBRmzFx/AIAYnbWCIDNA+EhGMflrgIyEr0q/7t+/NwVAo7RSdAQEpy
8O6Q3zwYe1HIyWcJqPv0p8SA1HlYFbexrrpIQDeLpoYrG+fhZbnLYT0ZAjLO
k5rOmpyH0nnrt04KBPSdjkNRa2ceKora2hlVCag0Mcm3iGcBMBoqNiLXCciQ
7d3FdtkFGGGpu96lQUD9FXXz0XcWwPeboipJm4AyOfwvHHm2AKde00gH6RGQ
SbdxikrMAmSeebgv/Q4BBTGU9QsVLQBucidD2ZiA9s7RGlf0LIDCgDOtmQkB
nVGaGlwjLcCVuQ98f0wJKO0uw8wMLREebXr+5jQnIDMaZ26PE0RIZj3x4TNV
21lYCdZcJoL09wZeHFX7RXinpOsTQVkzK8qeqiPDaiUlnYhw7KskR5gZASnY
JL96FEYEPM+XAWFqfD4hQa2rGUSIOMCypXqXgBaiZs+31BPh3AeDmhlDAopi
YR+cHSJCGKvo7X/6BKQbVdVW9YMI8Y9SG7R1CKicITX9+GES8HllnD18i7r/
1O3ew8IkEOHc/i2hTkD3ff+khyiRIPz7RmobNZ9Y/rHXrwxJoFpnl9hKzfdW
7r8NjickGB3JtrlIPQ/x9cO3zrwkgbK+ReIB6nk5uf2gbUilau/qNu0zBNS8
Rhc9VEmCbSxnBAM/AaUzH3vihCHBgI94oggnASW+fikUNk8ClRs/3jcxUvcf
anxRYIsEmWuP9NppCWhGQ4VPhpkM53l6AxV+41HD8WbvDkEyxIZpbAsv4xHT
s7UJvZtkeH/YRFhvCI/qa29yaJmR4W/t77TELmq9umeea3QiQxdzybpeHR5J
/XzTnO5PhneXV/hCCvEoXuBb2J9YMowxd/CKp+KR5lyrVFsGGVJGCH91o/HI
fPS95+5nMujliw2t+OHRf7igniYCGWJiT82+v49HZgyMD67OkmH3ZqptoTYe
jW6mZUutkEGq5l+oohIeRSZkOEbtkAEX/frFrQt4pL9zOVbvIAWG/MPjprjx
6F/k/R8vOCjwn87Jo6v78Mj/+5YDmwAFsLu+SUdJOCTJveRhJ0OBv4yV61Fv
cWjzKft3UUShfk+fJ9EOhzrf2evq3aBAshe29pYKDsXyyueO6VDgqGRnYS8H
Dq0b7ttpMaZAwLzEHYvFfmRrn3738APq+Htt7ez1/YhhVmm8zJYCLvOXeUmv
+xHr3tN31Q4UIK3whn4x70c2JO26/7/z8d4yWuX/736YqlnajrtTIIlw7I3k
LhadmcRgN7wpECJwbzCtD4uk39086/CCAsq2NNaK77Co312+VDGAAreOaVcw
2mKREX1FoW0QBRK82FRYJbEo8H3Yw6/BFLjmYRyts4tBP7X0JdtDKMDz+eJ/
2C4Meu0baLNJ1ef/2Q2Fx2IQF7flAz+qlr7kyBlpgkE6Sadf3aPO59KfKxkV
wiCJ5NVbbwL//65LgI3Ttz6Udol08oQ/BS4ZD9PdKetDSl+Enu/4UqDOY+Ne
tEcfiuMdI4t5UYDpvxumgkp9SJeiQS53pYCg65UFFro+dNZ/lDHyCQXWDp5Z
Nu3sRS/P0v2oeUwBrw1wZQrvRVKPvS7KWlHAketMiLBWL9pj5Xc+YEaBNnPX
i7lHepEW7pCFiAEFVgNehScTehCTR3zlB00KfNVsq6d704Owv++JWFyhzreq
W57T70FOP1ICJsUoYGCBPckz1I3keeir756iwKl+bAkusRtZNUVtK3FTILeM
1YTftBvt3Tl3Q4GGApHhivRxs12oKUbxosEaGRYSXVibMrrQo6yw8UESGf4j
CxrHWHeh2+XvfQ70kCG1HzMjQ+lE7a7mXvW1ZMjO+qB/NLcTnQw3uD2SR4ZC
NVGbtEed6D0neVAljAzzMRU/vy52IKZCwcJlJTLs375wM5HcjryNXpeOi5Bh
LrBP/Hl2OzJMFGiW4CTDlkSLgIx1O0q9Fb/v2DcSzFUR9p+fa0NSUf9Csa9J
4FEnHBgz1opqfjkdZ3AlwYHRpxpPEluRYTLNnWwTEhxd0WNUvtOKun+xeIqc
IYHnh4bndfgWNHpTuFatigii5G8GSV3NSImzJH06iQgEJz3mByHNaCo4X5Ls
TYS+4xkdMleb0bcTqPqqEhFKU2cMpF8AmspTMtOoXwATyTHxe86NaKZc8pnd
uwX4GHXQIPV7AzJTHo79574A7FHaizL2DUjN03onRGIB6uq9GsMe1qNxJxX5
cynzcDilUeaVTS26mUE5tec+D8tqsry65BrU8UOrS0dnHsxuXHTLf1iDLNJ+
bjyknQf+VYFVMYdqtL9jUTjAfA5S30aMKz6vRH9lVHExf2fgesD7zOcdZYhW
rneqM34GYjV2g26rlaF7A5k9E2IzUBS2j/Z+ZynKSkn4WWIyDcMilAsVSSWo
BKv21DpnEnZqI9OsCQVof9BlmnXZSXDDCRR0kvPRjZm/Un5dExB93ppedC8P
JZZbkRIXxkEmCduqIpeLGDgvBagcHYOO4DcS6kNZaKo1YPP4uy+w5lOB8aLP
QvOS27+PCn4B6Z5W4fP/ZSIjFw77BxdHwdbnQrPip3R09tLTdQY0DITrqYy6
Nilotfn8famWIRCqnTr35l8yclh13067MgQu2kS1T2nvkabhfpza1UFY7zC8
8PFPIqLVs798jern05Wljz868gZJtcmKEWvwsO5G51r/NRY9vnPoFkUaD00z
dz3iMDFIn55ewcCwH65IH0+QMo5EH+oMx8kaWND8MRA2oxuBrO2GVWyVMaBF
/uQoYv4KWfARHfSEeuHBYLqOQF4IumY/PDLA1gNge2qc5VsQ+qzbevshXTcs
Lgs+4lcKRMk0Jy6vT3fAq72ivgvSL9A9hXM5NJh2kMw6kW93wweN8T47dbOm
DYbj5MJ6AjxRRERucVVUC9ga9B/Ls36GeDRpDv30bAaBRVe5YBYXZPFghYmv
owmuOhm7PmpwRD3dx1pkEhtAuWfiPeQ8RoqOgSWqj+rAKnSbxXDGBkl43rA1
uFwDjblMFU5WlihdIsYv8EAVBElkq0c9uodEvsZ+nB0uB7TVayCeZYxE9RM9
gzLLoPE/upAz3vroV8ym395sMWQKpd5IHdZCjvJ6TkNe+cB40yd1bVkNaRyQ
1Sxh/QTif69Xlbkpo3NcVWW1uenAKlhUFeYnhUIUVyPlX7wHo/92Gcx+nkY2
3h7OB/JjYdUz1HnOnx3dyRNfMMkPgE3iYLpswJryATMOqTOfCA03zMND+j3e
yP0PALFqtw==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$4998#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
4QuC3r2spSii8WHT+jcF2UIfO38YKkE/l3jWOkEqlgm//MeZUYKq7j2Gb/Wp
WLV98ghFsgQZ7egOHK2i4vlxQcPLjCVYsLhdhG6JipU7rj953VKMukrP/kqd
mEZ2wZ2pm8rFuEtFTYnsPI1mCsNR8uzFGFoQX3k6ZxqDO6aHIluL8B3hbGnr
4DRuJilc/yRThC3SDBoHLs8gYU/WhXPrhWi7D3iKjWfwSNvLg39yCrElszQ/
wXsGP4gd6ju6vxC5vQ6SHo7M4BsGZ0/3+gLs1xcqFmGaReEe/TER2wKM8Wc4
efvCLNaSpYJftOajQ6tB0o13sxhxFitYX+WjU4mUOn/SLLJsibjAypOPn3nH
ahWJs5hj5NOsaJ6HRI3fNnc55jBI+tO25IUcJAXGjx8Im8NQQ7O6k945uGVT
62RP6RwWpBbdkePPQaUA0vGG3jlU3j8YzF6Whd43fJZlOefx91+dg69nMpFZ
u1C45fw8Nj9MVn7GlYlVYW9+uyrO4x827kWB5+n4elJT/Y3zPGpzlSge+pyG
jcnqEeVh88i+4SHZX5qKW63mm07nz6OPvZMHy0YyftZmT3w1Mo/SUocYkg8l
I3vV61t6q/N4s0LdXEssCS891Wt4zLyA78/K5Kk9TUCq12jWT5EFHPMdD5t5
EY9x4pGqS/ILmJk3uRxjGYf9LXvP/tJewPiN1E/elrGYmiInM/t0AXdouN9q
ehGD+4p8E4edFnCtOPrtcG8UztS0vmz1XsC7dTYg3BaBWgceDBVELKDlZJNV
aVUYvj8FhwPTFvBM5rul9PxQXHVdsn9cvICqU9vaxeOC8eNWwu2L1Quof0pA
McInCJPm3i4ttyxgq8Ouzi32ARj5YWEig7yA17N6/0YY+eGRyFexmsMLmBur
u+uWvxe+0NTM/z21gNDdGBSs607jjTFFXvMLaHar3N3zpCseoYqrcf63gDXr
t/ce7HuLL7lWpX1/L+DzT7rNzA/tMEPTWX5jfQG/yMocet33DCVWLC/qby5g
+W4mx/U2LeTKvz2d+28BLy9oTv4VkIT+VHuN3zSZp0bP7MDGQ2Az0H4lTJMH
Hb58LVyxgvw1UQ29jQXkPHb+8K5njlAeL838+s8C+gg75un9dIbhPXHl3isL
qOIWNuvA9wFcrhhEBywuoJfx8202+p7AzWO+5DmzgCMxudQxfx+4PBW60258
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

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5020#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
MsIm4GJy8Kp1cQmwiRmtbEgcB8nQm5HPhUrg62nbAxY3x8HlpFFDmnsxXP9P
MyFcYhwi68ez9mgWgUnky3iPt2NQ8UdlccNAPqTOsyk0BY2CQPW5wb+n8qGj
aXFW/OQoSIvFUz2K82DC3L7S+vcI/F7leBi1JxeGzTkftP3/ndS6xo2rMQNu
D0bl+8kNg2FpJS2rJR2Oy7/K3TIxBE7H2Yvb29PARu0Bf0PcEJx6ZriRczoV
Tv9b/te6dgiK3e4KZOgngabUnRL10H5YjL7+etHhA6ybpR1ZYH6FwAPEEM/o
9+B9UegTnP4Ka+Nyj24cfAfuHu+uFv/rhb/3q/yDCl/DuX3Kcz+v9cDnnV1b
RDVjQbPtPa98fjfg4d8SV7piYHvo7wta7N2QsrJx+pJ4FByM+EXi+NgJ094x
x806IqCs+M/n5p8d4N4WeCU8Ihx2bEj4+li7AwKzPsatuRYGhyyf3lwz1A7f
fo7QmEIhkOH65OxnmXZI53VyFZt8Dic67m2tdm0DRtGjtKONT8B+Q244F9cn
eOp1X9vrSwBIvFO/t5BMA8u1KY4da/zhY7Dk93NHqaCde75mROoRaN36pFp1
rhmkewQe8v32ABcbDF360gjG+umppX9dQeNY+f7FWw3Ae2TOT0T2AWz5aRXc
NF0Hi62xdP9gR3hgduDY0we1IJy9LvGanAPc2cbRp/mHDLeM/t4vTLUFvYjL
Qpx+JLhsunLLw9MK0j9VZv5YXw0D6ieTBbJuwkadaqq4QCV8nn5LrnW7BmIt
wZqMHRVwdAOE3jW5CGp5Wu7W4qWwXt1iqnzGEMLg9PkqqSIw+2Q0aBp2Cgz3
hFQJSOdDnK68qBtRE6J9b3hKXMiCmES2Xs62o5Buo1mWdzkVzlvdz/XV3wMq
uldsJU0TQcVXVXR5nBeSD3knB5dHwd/EFxJD9nSNbJ0ivnA3P9i84caRSBOi
RuuvFpNz/HY4xUtprbRYB8NyDsrjvmHY/MfUfXD6P/CcXjpSrh6PGFwj7LxR
DtYc0ndsT0jCxUBdLQ1jNXAnmQXRXqfjkth6/xNULVgJ0El/HJ2LZ++Hzz9w
OAvlyrHGHQ0FqKMUl3i43hjaN5qoLdUUo9SF6nGuyCtgFnJUYD2WoXMzZW/C
VnOo8hb41V1GwM3uCaObC26Bi1+uwJn8KqSWGUZ6F1rD1ets3Ts6qvFS0Dmp
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
xOlgg8Zi+Tcq/wPQt4X0
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5042#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
/7lRm8peVwdR/wLdfr+gwq5dgn13NuvA+fF7L3laPs79z7YJX6mH6xKniZy0
ep7LCPk2m9TDrldF0w46VEgJDilniqsHvsObfeq0/VhknFmfaa+Htw7f/cvk
qVA0NNepzdAAx5qOsiZKUKHQV3VZ/3ID7E966sdymQoP6xeElnUbYE9RmRQz
Jy2f0bV3O/xpfFM92i+clQr6j+3pg8toeum0/Vj+Flr+4fDfweMNkOOYQnmy
MAupl0tJW/fS+OyL5dWYnllQ/3xud89lGh9+EHH8dc0sdNz5Y79fvRHOJJJY
qVmzoKbbxpBk3wgyp+0a/wXNAmdFZK5XbCP8mxKUznszC9Hd/CVEbASX2pD4
7U9nwa+fzlNyoBHoadKdQWIWuE405+xca4SV3dpjmadnwXTpyhwTO43f176w
pt86CyLLBoJ3BchwIOzXjZ0jM9D3Ij2o4jYZNIG+rhpnwPPiqrauJhnkI1gK
r0bNwOaNiP1CFmQQ3xpfbmAzA+t9HxW435HhEl99porSDNxw0/shSdMXc6p/
nu7mmYG6SiEGhzgybZ4GNrrTz0DS1mBiRxYZWsxDlpq/TYPr48EIiSIy5DaJ
/B3LmoZjLcncNUgG0wsR2yhO05BZdVxKlUQG+jPSKkHK0zBH8J3/20jL92pB
/BLnNLwaSdNJp+kp28dbzn1amgIxi1lGHZqectO8aXe4dgpsTi57nKDZ2UGR
ZBw0BTvCevNGGmjxlV5Gp2tPgQqbqW9aDa2edobUXt4puJLhpGVeTpsDB9kj
tq1MQjD5YrgwTe8phe2+zkv8X8XWHU/1+8WTjEqSEqGsSmVWJBknUaJEIkRL
+CaJlpEkhCSRmb2z57XXMa9xjUtkr3vtnSQZ9bu/P9+v55zPOc855znnfe7r
dSdgVZuX8oe2D/KOiRrqeE2Adcdn3pIwErDEylJcbkxAmFqDkd1HEihabpSX
ck9A6/bt85IOtH10qH+BcWQc3u0gXR/9jwRCIdZvzb6Ow1bjPvDTJoGx9U7P
4Ufj8JT56ddzciRorb4m/kqcJt9+PmVAgATH/hPnFSCMQWQbvxjHVCPcZfGd
OPtiDN6jOWNqQyOoyyjquEmNgVSM4UlF2j61p7D3fVvOKFQIRr+/f7cRaiMc
Ylu/UmGCbsSWlNcAvSyTxYZGVDi152OAhUsDmLJv/hDdQwV9iQfFlVcboISX
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5064#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
DhU/1v1X5is1gIV3BQpatKnIJZxJfcoxgEN/h/uWbKj4u2l4r+ZGP9YVKseL
ulFR++nEo5Uf/XjJ8IbRIR8qDrtzmSnW9uON0iJb5XgqboqUvfUzqx+nInp2
OmZS0WAvz1vViH48/IhVyuwzFVMfUCR5n/dje/f2Qa96Kl6fF+n30ezHoK7A
rIJ2OjZdE8xT7EflD0lFUQNUPN12nXcvVz9qSh89lDBNxX1KUv/uMvQj898Q
StUiFS/dNVlV/tGHgif8PCLWqWh2Ta7iXlkfxp2o0XXZTsNicluDWUIfxpx3
XX6/m4YnwdtR9n0fNh3svnSbm455dI2Z6e+HoeL1xp1CNNwn47yySb4Pb9sU
WTOK0lCrrqi9ULgP10RvpeVI0LD8rGuCIFsf7tffJsh1lobdLwZ41BZ70eT8
Yuy5CzT8VHKLdq6/F9fLVXo55GkY/Wi+ahB7cbrM1DPhMg11b5lq6Xr34vdU
ZcW5GzQ8ktHvJW/RiwU5Pq2pajSUpfiGDd/pxe6OrDbuezRMKfwpp3CuF/MT
hlkUNGi493KPrD5vLyrle184pEVDTgMHFaVNvXjqnNzJokc0TL1sJzw32oN5
SY2JTDo0TJhu9H/wpQf95Y8bMevRMJNQf/Vdeg9W5QXK4hMaikXwsDn69OCk
l+XPEwY0lKIVJUs+p7+/tcY3bhvS0Ep9oqvwdg9uXNI5IGpEwzuvJXT/nunB
39ctTpbR8atjRrt2/teD5OkF1X90HBsckDq+3I1njTxUl+m4u2zpt2d/Nw6E
Mmwk0XHiW7aaxbJu3KH6RmwbHftoMhd/jOjGh1+YfLbSzwsrmir+adeNl94U
lBL0abjFxatxr3o3OnQKuK/S+ZNNzi1vnOnGvMiYvBm6f7FpPUpZu7uxRVjh
P8/HNHR9Sao7Mt+Fl9dpLmS6PlKJPW+eNHdhZIBcdQZdv9Ijd9+bpHfh+K6y
DCm6vjdtaVOynl14ZS5yrxFd/0yelKKBJ11oFrfYdYEen2tzvzddkevCEf4U
UpES3d5H/wEn3i4888oIey7R0Dn11cM3y/S+SLUiJuoiDV3EN8I1OzvR4+KW
y8zn6fH0ZUx3eN+Joua7dL/Q80mNgSubbNiJdRZVnw7S823UktI1Id+Jp5Iv
Hefho6H1ytpKylIHaq5t7vu7i4Y7JYinVNo70PEm29fxrTSsKd2y+UtmB4o6
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
5WSH
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5086#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", "\[Theta]", "\") cos(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcl3k81P/zwJ1JJAkRSQefHEUhJRm3SpGSK1HOUO4KiVy5KleOSAlR7vta
jPsKWbubm103qVTooPrt99/f/rOPebzmNTOveb9mXvPca+Vy0ZaJgYEhbhMD
w//+///v2oACk0OsC8ze3dJ3R3xCJWu6yXo2xh/62LuC/4j9U7lPbnrYmRcK
Kf7GM0vB26FF6NfqSFQUNF8wuy5wYA8E6Ii/WKmKA4a6A0T+Swdhl6DGNpO3
ifD3Zf7Ph4FHQL6usvxHUgr8PGFx+zVJEYoG5v+WhL4EF4nym8HCALlKqYVl
Na9gyYVBwrRAAz6+CZX4U5QBCbsOqA2cOQ3/Pk0Vpme9hrHpgkzPa+dBwOva
lviUbDi9OPlr2csAtEUlNrVEvQX7+lWxaT9DCD1id2dPUC5ETVS8nm40hsNN
rXuF7AvhYdBhSZW/FmDX3BPbk1sEr+KNuePuXYcl+wNJQRnF4Gjr+VY4wRqa
NKLSj8SUAszJKX88cAPkSD35gqFlEK0xPzKf5AjZbGc7jX3LAV7dunFL8hak
6455VthUgoNyzNGyi27AqdYk325cBaKpfY6a7e4QHrRhw3W2Gqye+Aipn/UE
q0yNKlFpAphuUfsudu8ukGMsOe7N1MOJU6/r6kL8IN/qFastEWGTZbrEXYUH
4Pj4Z+l+iwbYa12aO3w4AETiRb2cdBpBOV9HqVUhCAa5d06I72gG7riN4qux
obD7jVpVXHAz2Avq/QitDoNBRrNmi9VmKApiEVubDQf+Z4XtDJQWYA++9+yi
4SPY+d8evm2P2mBn2slBN0I0nBJjnmf72QblwetrzPYxcDLN+D9163ZInWk+
aM8XC7I7B77dVOyAc9zVsZ4+cZB07LvGyQ+dsJFtesvJJgE4wr8uvlvsBr/a
c8cP5T+HmjzXCmmDHvglvfmLQGwqGEbbrTlX9IDh0LlPDt4voGHnPdmw+70w
2ZVt6/NfGujOJtim/3kPe5w4IwbZ00FfckupwaE+eJF7ljwTnA7Dn+5R5K70
AclmkGGUIQMqqVzjfOV94Fr1U9J8PQO2dhzTE71OhEGbx48Tfr0GhS2s7Pcj
iKBaRnX44JMF98Maqg6VEkFvLm5r4UYWlPDQYoOZ+uGo/cPPDExvQKG2kTSa
1A+33LUd/m7PAUfRk/n5tf1Qb+ThPJqQA7vWx43bJvqhsuV55R+hXJAoTgvv
3E8C3leBy2PieVDQ8aj0azoJ5iYVjEdPFYAuj8ipkQYS8D9cv/y8uQDMq94K
MI2T4KyVXKHWmUKYiTywmZmfDB2yyvI7JIvAzK+rd1iWDGI3blzMuFkEXtZL
5z6eJUPk7qzf3IVFsPxpYF+JLxn+Gdg9vCVXDGqpAnZ2T8mQuuabe+F2MZCB
oqifS4ZWxqvjvyqKYSNxc37NBzLkXi2ve3iiBPb9XQ6c2E+By2kshCmlUqgo
kc8TUaBA/4G+9gs+pSC7V9QlUosC18wCxA2rS0Fq+ynyojUF5o70trEeK4Pb
g5d4Rt0o0Beb+Tvbowzaleb3/vSjwGdGJ9uOojLYxqWuWpBAATYblUoniXJY
OmT0n84rClxtexI2aVMOuVeeRG/Opftf/GiLL8vBwUVg/WspBWS5DTQ3hsrB
NqP1E1MtBR4qHhGM21EBRqJcP5SaKbBHt2n4/rkKGFLlzX/WSQEZk9MPKoIr
YCIyO1/kPQWe9lxjUqytAGY7nRedJAr8wvNXfn2rgApfx+PXBijw/iSt3kGs
EjTsnhw+PkwB63h1BUnjSrjNqXjGYJTuzzpuVCGsEshcbUa5YxSoVOChhFZV
gnvRPSntcQowLOurCc1Xgmz83Vd76XLyblvtj/xVoKZXnXSKrq90/D/O75pV
IFQh+uPZCAV2TV6tO+ReBRVCzm+ODVGgjPtnaMKLKlA8pf5ixwf6ecXVUg92
VcGv7SJ9sv10/z/4jk6sVMGqtdXJJz0UuFQn6F8uUg25x/WnpDooYPBpsSFL
pxrusDMT2Zvo5/1tfLzApRo833nvOEigwP3fcZLtCdXwsS0SH9LzqSPtRFuq
rQZrlaUvYvR8e16/m7trshquz/zXyppOgWlNw1HdTTUwL55hK55EgQI/Uvc9
iRp4dzLpT+hjCvSWyI681q2BBW4+lAykwCsTLafWmzXg8ecnjesOBbQcamcp
j2rgvzPfMuQdKFA/qVXXn1sDi4H3Tj+/QgFtkS6bys4a8M8eFNA+TwHzH89N
/Wdr4L0Ar81RFQpwNRWJiDMRIMl23e/6YQoYc3WeyhYmAJEm1ELaTYHoY/k6
fxUIMLAN48I5KXCh0owsrkcAn+HZS0G/yRCopxgkbEsA8bQzro1zZPg9ob4+
7EMA5W16ZppkMsTtPvPxahQBGkmbwjkbyPBxmWfLq3QCvOY/7L2LXh/TmYn8
aWUEKOwVzXeOJwN3z6FBo1YCqE4N5bH7k4FpgSDSSCaA2t5PrEv2ZFhtnG8a
niSABFOgLv8FMkQ/0M16+YUA/lp6/OGKZNDxTinlWCfApqvRLFoiZNDMnxjf
xVoLubnsNWdZyCD1N1Wsc2stRCT+nEheoPcHni1RPHy1sM+FR+xYLwkiPspJ
f99VC0L77p/aXUKCzn3HBOz31EJ+T8fkhXgSzA5beznuq4VV4QUS8S4Jnhne
8f21vxbC7h+mpJnS+8vhGgvuA7VAf4KL6pVIYHBa2SaXrq/1b5u8tBAJthqs
jbbR7X2AMfnF3/3Q+uX3fkuhWijasv/Rr6F+qI179dKVHs/nhniBK1X9UEEr
bvxBj3fy2K76bQn9cB6fsH1lqQX+ujpbAY9+wN/Xfpv8JoDlv/w/t/X7YfWR
moz0Z3p+a2S9JaT6Id7TWseeSoAHZ1L65Db1w4WDp5Y3EQnwke0sYwKVCNkv
iqfYGgiQ8SRxq0ENEfgWj8/b5dPz10basI0jAthvJoo+I8B5otIIxYkIhr5K
fkeDCMDe/7H6lQYR8udWR5OcCOBVNk42+NoHBRJdr40VCWB2tFlla0cfZH/7
bqsiRNf/mXZW5kUf7HFlPOz/pwZ4Hf1yc0/3wcuAvDMsdTWw/fxt57OH3oM8
v0AJ5b8akI+76+JI7IWL3yavaP2tBtvlFWFHz16giU6fXe+vBsEgfT2eyh74
cYll55G71eCY4e97TqYb+qstzobnVMFbmsyuoq53UK0o+eoLvf6zyK+JbLbv
gPOv1HzkiSoI5fhi+CKhCwRc9Q9ZNtLnhuXPpWWfOmD+0+fd6oQKSNPYMsHq
3Ap/QyNuVhqVQcpN1x8bv1qg9zuV2sZYBlYHe235Q1rgx0AOYS2nFF5zeZTW
JjXT7bRZl/0oAam34+YyFY0Qo1t06qlPMfjJUZmZ6HkcOWe0hVk3D2b9pypO
JtXAA/Ht3QU2uZC9KmW/j943fu8tEo72yYH5ntz9PE8qYeNW7P7V5DegreoV
o+xSCgH6pxTMCzJht6pLWTP9XQ07safGQC0JkhuDLtS+zoBcUz7rqq546PWY
lUnXfwVBIntYbujGwfeX68P/lJ5BCfaPetk+gt+R9WU3hb1B8tzc8pG+m/A1
aTw/mT8NF+MUNXQPxeFocPc21qB0vGJ3nN9fKgGXTH98MFzORKt6S48PR56h
w3dvK5Oet9i+hf14vdFL9PtCG7zZXozsjB9dGRmycJHDKfFRFAF//N23ebmo
GMt/p2++01GLTm9vuN+IKsE1ibOMSoz1KFfv/TPfpRRJwilzfCca8GgJ2D5R
KMeswqOzxm+asLnHxXffhypkfVBRwu7bjvJ6L+pE5Rpw5QijldTNPpxP3VvT
e74DBQK5j34r7EMtv8Jd+K4DraK22rt/78Mrfd8TJM52Yp1ksnaSNxETCHE9
1093YfW4oK1uYD+26ZCvcJ/tximjuMXpIDJWc718+lmmD9ufLaj6NZExhj0h
jcO9D7+yVzpWMlDweUDvJb2yPpzacNRg9qXgTV4pf5UTRJQ8X8k/eOsDbq0k
Cb7Q7EdOz+4QpVODSMtMV121JKOAZXON2O1B9EH31oIMMlZ0rsYm5w3iGcsX
Op5zZNRnP/6f8K4hPJxtmyrsQsG0RzPJ5l+GMHMflpb6fcDAkcM6vQEj+I0Z
2x+kDuLhxwyprcUjuFgtyClLG0RdU0E7edoInrV7Lt13YAj3VFdbeKqM4sNT
RkKjuUO4EaGlav1tFCPrsjW/VQ3jo1TH1GMwjj5jUjfiekaRmLFietthHJm5
AwnMfGNoGRr6iDluHA/vDg1XMx/DDd6Uni3T43iOVbBFeHEMR450ROTfn0DR
43OCvMwTuDzq9/RC+gTGV85klZyewA/LphXKbRO46BSwe+uTCRQ4u9a5xkrF
0LcaYWscVHzELKF4QYeKDDJMklxPqej1ue5anREV7R38KwrKqdj1PqWh25aK
HPvSYg8MUPFKz40TxEAqDjx3XYsUpGGxkKmTUxUVz4WGvpN6TsOcQKXI6RYq
jvywOWxaS8MFULf/20dFt7Ihz0ujNGRh4RncMU9FAf59j3KEJnHvT+n1pu00
PJBVd7YtcRKn8YU6CNHQqOnpQZWKSQx+yPbmygEaRpk86PYhT2JhZHq9pwIN
L74r9lDhnsJ7KzpubqdoGHn7UUDzoSm0P9KuyaVFw/Wwakd23Sk8Xex75+Al
GlLEW9dIwVPIfF7h62tTGhJ4l4qNXk1hyUR7a7MlDWv4t3gn1E1hQf7glkBb
GvafHTGPHZrC/epWw1RHGs6PM7ueWZ3CkJISA6oLDV27BdtruKdxsOFGzANP
Gr4IKvCakZqm59+1rtGLhsQQk9QO7WkcZWH6k+FLw7LPtfrW16cxOjjZ578H
NGz5mJRXdm8a2eI3rM8F0f3tfddPiJ9GjhHJRZ6HNBRjuDp1t3Aa61pt1O6F
0bCB4RHjfMc07ujZ9yokgoYhlP6LHJPTGBvNo3n0EQ07Ar79pf6eRvUPPDcC
HtPwh+W6zI0dM6juKKPn8YSGczxGPGlSM8g58VxpcxQNfay6yaEaM5h5uMxT
lS7LMce+Ebkyg7+UP2sL02X70+cbrd1nMObkxN8U+v5nDXsuG4XPYNfnI5+Q
bh8JBc9XX87gN3K6bRjd//caKZJqxQzqyazXr9Lju9lpfkyxewZdPnFc2hxO
Q8H6zE2DNHo8R7d8f0c/32Udhjlcm8GSkJLO48E07C7DmUscs+gm4ySvH0BD
ifCdl+P2zKKpkXHcNj8axv7XHn5fbhYXhg3O+PjQcNPnPSPbdWbRWmCeEHWH
hoonODP0zWaR8sjw0gV3GgYZ8KscuzWLqje8fWpv0bBT1YWj1X8WRZhHXpBv
0LAnevXmeswsPlVOln1mTcNfX0+2D2bMomWDc/oWCxrydkUFmJfP4ob8KwcJ
Exo25vxjfdg2i3wXWf+uGtAwsPB6o+HALKZMfB9y1aXh7ybT/R1zs9jJd9rC
g34fuWpbs5PZ5nDz5Ua2Dfp9LYqpq/zJP4d+0RO/5Q/TUFTG8swvsTmUK1Ws
FxGnofmBguEU+Tl0/VA3XL2bfp9MXy5NqM9hWGb9yCY+Gh5KE2FuvTCHN7MG
9TZx0jD8IO/rsxZz6MOo0SPyi4pWmdwVCl5z+J+59L/jX6i4P4BVPTl4Dvt/
Xlxmm6Fi+0ujuNToORRyDz3xaJiKBmoHVeH5HG6ybbrd9p5ez4+qaX7Zc7j/
6G71Snr9Omo68JqXzGFfbtcpy2oq3r5ac/dD7RzaEk6eHXhFRTtDYYtXfXP4
6PyrjDfxVHwxt03269AcnrJ6UicXTsWsfPe+0ck5vFqrqebtS8W1Z3WfrT/O
4UOpb0PeLlT8xJp96uH3OeTCN/LHrKj4wVfcQ2N9Dt/MGzEUGlJxl6PX6RSm
eZTf7l44eJyKzj+/tQtyz2PoiaZfEZJU7DzLuQr888i2vyFwQ4iK+X8n2v8J
zSPPNlmmw1upGPBdYYvp3nk8ZsZirboxgVYBh8N1xeeR8OZpYvbYBPYbaPEN
SM7jlKWLUFz9BFoKGgauH57HLQQBJ5aXE8h8ND676ug82v+V2PTHbwK1+LMs
uY7No1eAqoufxQSu14aHbRyfx+W0JamIUxNoR8lhDjo5j++S0lr2Ck9gw9RY
+atT83hD52WL9u9xZFOxDjWBeVQYXqz+PTCO3+bnrbNV5zHTRk4BysdxxfCR
0hO1eVS2au3kix3H4+sjfzjV59H9gNfWB87j+Hh4MGM/XV6Tfp7kf3YcBck/
xPrp+kq3F1j5xcexY25fgABdXsm49U2TcRzvXagpX6P7O3nE58/W0TEs9Y9v
v6kyj2I+sR3uFWP45SdzvY/yPLq0mP7wjB5Dc87eDFGleRSQC5DhdxxDaTeF
UAvFeYzKKxcw0RhDUVz1lpefR7f/kvZTRcbw+W9rlSnZeWxoFOYS+D2KSnuZ
qhUPzeN3DS95RsoolrRaMxyVmMf0SMmV54Wj6J5Tf6j/wDz6PvuauxQ+ijPZ
i+YCovPok1RL+Go9iofvX89joX8/h8WmG3t3jmKBj4pc3zZ6Pg2vvtNbHsFt
7+rLCtnnsaDtJbdi5wjSztctKjDPY4n8w8FTPiPIxX1WTHF1Djn0/NN1h4aR
malfhYcyhwncvCZ3i4ZxlmVrrXT3HKYGXJBxCB3Gx10zcV+a5vAy2fJzpvww
WqquGLsUzuH2V+t3Mx8NodLWcpoFvX7Mrab/HbQawquBw8Rmen39+yq3xV9x
CCO1E26Qbs5hkGiN2Wv6u3+s/Br1+6U5PMYhNMYkP4jb9yVNa4jMYfly642T
mwfRWOXjJBv3HDJLC05cGB3ALXbGd7wZ51B+xUlZIHgAkwU5mO2nZnH82zsv
1f4PKFc41XWX3o9c127tk3Ok4D8Og/JB3llsYTb4O6VMwUPJ8o/yGGcxi1FL
M2wbBS9v53yr8HkGxbgKo4vKyPgqwvmbQ9sM9hC+e2f9JeHd8H9fHT1mcL81
y9vLsf1oJ/Ja2bhhGg/Onb+25Xo/LniecWjPmsaMkyHPO2X6UUU+zvfjo2m8
KaQq49xDRBUrftpFk2k83R/125ediMl14n8rP06hiBeLx37O99jIMztTwDqF
QTa8aWZ5vajxkH1bz9wkuuh+TBg814vRB8VcCzon6fNYmVvZkx4U95BiwkeT
GCThqXiSvxtj9yivynNPoskhW+m5Y53oZVOhZr+VhqdKFW0+jHYgfx1p5MQS
FZPZwuUVgzowOyP4GK2L3heeCh0zJrZjztWl3pJQKnaviPww8GjD3qsP4ln+
TaCpsnahSF8z/phw/1NNHMNbVrUHOVfr8O6tFsn9RkNYw6S41OhchwtPlKdu
8wzhNeo0Y+ZCLYpv++nW2DuIUSMrAyuTBBS39jfS1RnE40euJKxPVeN2vTUx
m+MDmOQ8Zr8uWoHOMq9PeAtTsK2VtniyoBz1MhjvGgyR0UGbWbFBuRxXT1ol
aSSQ0U+CvTvxahleTwqtu89NRllR/5qkghLUiTpIDdxEQgm7zc/LhAsxOvZo
ZuLvPnzoeSpR81oBHgvOuM9U04c9W5IvOGbl47Xcx8+yvftwB5Ztv6OUh4e+
TP298P09VmaXnw4IeIu0JpmBu7960GmfzJWYiEz8yKTfVLq3C3M9CAf3/MhA
3c+B6RlvO5GldT1S1i4DJZ+esdA62onKfQqqFN10VAiDnflaHRjj4PmZJp+G
WXUGuz1utyHJ9wyw/khCnp6bLt/WmzAy2mZRZV8SovJ7q7bYJrz502/5i0Ei
xo0dZLsn2YQXGLrePKuPR9mnOwmx5o0oomX/Wao7FpU9ef1fJSLOPp5gVN8V
iwz77Qr/kurxKs9Q5OObMTh7tf/UeZ56TD1R7JS2Oxpv2DbbUJ7W4vGSezWX
r0ei0sPY/TIl1QghOT/aVCLQQcXhW9nfKvyUeVST7UA4csk0eZqcr8Kz097m
aayhGFG9NWHr1wq0MxZt7tsXhAL3r3TixTLs2lvsu3LdG1d5/N5sZyvEaxoG
3wIZvbDsPzeFe/P5WGXHzon5d3Duxc3lqt48VFhl3uQi5YkvBc7q97/Nwb4K
UmGhkwuesTkjYZGShdytb4yYHG9hld5Eqm7ma/zzwF3+gp8TLqw/OnKuJBOv
kPa475qzx49Vo1cyxtLx+p4NtYm86/hg+rAPafoFEi1k+sL0rmGiqIWL1ZlU
/O+xT+seVgv09dlQC6xKQb92Kd1CMEV5dbX5jIokFJfaPX6e2xhv0vizarUS
Mf5H/3ca42XUYNjE93QiHokma594NQ1QhO2e6Vu5OOSw9GGNFNPHCSJ/5Pqn
GOS4fW+vyB9dLFgwFlMojcZO+SOuLJe0MUCjyput7hGGbu6utOvRwAPuJzYM
wyMw5dOCjqCPGpqMTVlUOYXhrs7zDgstSuihtZDK4BGMldpxrfGLx7Bx7V5u
jmsg8lzRbXPxkMNnR+cNUsMe4PMzypG6ZrLIXH/HjHT7Ps6yTbUty0mhsobm
MGzzwZNcrPsDzcTRQfL1mxdjd3BnwE7Rwd378JzQXxdOmgdeulzuWfuKH3uL
aiM3uG5hULF1FIvxdizn3llic/kGrl8WzdGfYsdG2QdDOZtsUG6e23G1iglV
2bjzVvddw4mPNhNC7L/rn7/qEu8zNMUnTH6X5RS/1u953+KsrnQJ7/wRMBPV
m6lvdJdb+bqkixkz88rvtw7Wbw0Hfu0dGqgttZEuV9VenxzI6fTqvSJmlDYL
VbWW1F9ILao6nSuBGz1urD734+qrL7rtG5/ixTq+vIOcR03r485ZP5k/+aWe
k/3u9kfNm1Uk2NQsCwKq6jluPRWzFbinsip12UkhmwWNzUNN7P9lqOy4VUP7
MiaKUU8smXy161UYIzm+Psg6go1yv0JDf/SpXDh46uvhkyqonNHeXM9MVSlV
uBxwml8HzwqkfH7I8VHl4f0DTA8tLqD7LnO3YZFVlesWpoWtm41QsvuF6eV9
/1TeO2k4F4Wbo4o+U3f6N1bYlrX5S8jydax+zHvu3PhW+K32ilOXzQ6HTnGM
auIO+FzBMsoU7ohfoy6mk/wEQdzEeyH4tgu+9D0rcWevKLg99Ay4aOeO8uwR
Vee5D8C5I3XPBXVu49ZeqUcuCQeBdVfW1z/mXvj+bdO3i/WH4O3i296p7Hv4
ucPEW67zCBgOFGTl/+ePjVNB1DAuBfDk4mQXcQ7Aw5aH3nahMlRevzcV5RaC
tVkM9kwpquDjnxSUkByKsM0/j4dLA4y+ettWjoWj/i2NlZNZp6EnL5a4WvwE
4xmGd2S5X4J9WTp9v9qfIjt/gYlJ3GUQLS0IK9JIQE9Lw8rNw8bA9WlrIH93
IuYeZXmiMW4OHnurW6uYUrB5b9HijJsNfCivmRtleoVmFdHSO6TsYPUvw903
315hzj5BQ+YNezgzXRL8ZD4dpzacwWvOCbbBG9fQ2UzUDcpmUfVxByeDz9yH
Jd/iwRTfkvJsD3Ck6LVaHctB/5ch5q40T9jP+cAkWycXDyzw/o3xuQvlTLvT
VbzzUf3K8AePM/ch10zde4ijGMMZNmKZJvzgwPpbt5rXxViTNTanqvYAItZv
ffynVoIcNri+9XcA1DOe0HodUIrzdlzL0c0hMPeb1vhemN7/SDGfejoewjCf
uZduZwUelXVsbaGEQlu0xAtmr0r8TP7vkhJbBCzS+Cd2jFbhTwuppTddTyC/
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
UKt9PSKk2ztI8X8jo55v
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5108#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
cmCrt+cyuE1i53GX8mWtCshK3psW5ENiXOSFX5+mK+DklTPbjySR+PPN2Ck2
tUp4ejNRJiqXxOI1H+wOBFcC+AdtL6wkEaVPxVz6VAnKn5tTnzSQyJH4SDFS
tgo0zfXTeTpJXHVRMKLuURVEBF7gPtFH4nryw86PLVXA1HxWfOgjiQbTQic+
CiEMCyVX9YySeEil4H7VRYSHx2tlDk2Q2C9z/MzNLASXXJD9b5rEA2oNRtM/
ETheJn5f9Y3ELVfLBcNFKGCYWlD0hGVn7llZHaZGgRXnL7cWzZC444ra2pmL
rHMnry3i7RTLdj5NRvtQQLJovz+Mk3jDhioanUKBMO6OzW9GSLQ0EW3+UkcB
9fItRMogieFaCv0PRylgf9vR6kYPiYo2xibmXFSYpElYzbaReHdlsv6d3VSQ
qwl/ub+OxJhzVr0dqlSI4Z4pFSsnceHgri1XWPd75eKDRd3ZJGoPyyjK3KPC
ey7Ja1rxJJ6XK3fa95oKtI8XWm8Hk/j+665F42wqtH3jGrb2Zq0/p7rrXT0V
Utq/VvE5k/i5N11FcogKn+NtPO9dIDEkezar/hcVqvqPm6Zpkxh0a6bPl8XX
kg5FTyLlSdTq/6dkK0YD082mZw12kMh00TpnrEiDGrXZba3cJM5Lz2Vb6dGg
YNBDW2CGibLKD7+6W9PgaoeA0Q4GE8dsv6QnudCA/3EDZb6UiTlO/xJ7H9Ng
bjBJNDKGiYo7I8IFX9Pg2Zsnm1Z7MvGXaaeRaSINHItW6OvYMNH9sW5xVC7r
XhBy2ddCjYld5xxSmFU02Lzpgb+qKBOnSp5v3dbM4udTL/YuLrP6j//UFgOC
BgYXVAz9+wbQOjir6AGLv00mneZmCgdQd/bmpigWf3snSqyWezWA9/bJXE1n
8TdpcC/pjP0AGr1Mnkxi8fchbZtePbUBvNk/+PMZi79npd+17RUawJURdz+Z
svh7NXdP6eRUP849a9zJx+Lv9O8/iWBaPz5S33kogcXfw3PPXETD+rGlbT5Z
iMXbNdY3h9/Y9aPp8+1br7Ps0rD8V78V+zHv5yzEsPibIuM6psfbj63pr3tS
WPwdG1l/Kai3D0Wt+Iv8WPytLhT4qiG1D48uBJYfZ/H3dmWjvz9v92FzpBez
jsXfM62KetvV+vBqa/fOnSz+rttbLqHC14c+3Vv4XVj8PbhWlmbR3Yt+XOK+
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
HUCzcJv86lYabjaUXJxN1ufVZRk9L2pp+DZlxiswux85ngyVk4U0LFBIl7iy
sx+nl+x/u5TUMyXD9/jdL33Yr7biBp8fDSsljzkWvu7DRh1Nds0lGvpnWduc
2t2HcE4/xBloGDWzYHlzM4FVa+5dj2dRMfbsDSL/HROfrOOqXEUqss/7GK56
ysSLht/j+NPJfF83V3VflIlDhbXy1mepuG82ocF9nI67dzZujiDf+1p/PW6l
pNKxyElMXv4VBW3Sis/KWNJR9dya5CuhFPRX4bu3oroXW/sv3d+hTkExJStl
mzs9mPjRTtb7Xx1S0t9FOO3uwTzr4fi1yXUo8KxG9sNQNzI6bm9X2VeHz990
HFXV7cabOzQGai7V4o0OvTWaIx2o872oIyi/GvXb1+6VjmhGqcb76SLV5WiU
l+FCHWpCmd3LftxUK8cUpot6s1oTLv1tsutxXhkuP5LjKc5qxP/c7skJxpVi
1ujJz7c21GPp+U2Fqw8Vo9OszNRLjWqMCvY3N3+Qj2EfJ2n7mJUYURG/ZJVu
HrI/3B/zvVqBUf8qiaGPObhC8oabc04ploX/ft+6KxtvPP6+PF7yFTq8M248
EpuGd8vV7eOXPMRIyxSDp5X3sGHbLZ14gUi81GWVPhxxG6X5dLNcBe6imkJe
0XD2dQysUmvsUncEZ1fOm5plxyAnrTqwuiwB+CNcWbRv4fBY4Babm/AKAtKV
FjkdzoRWSqfEM2sa6LpeWV27oQKKKF0PdIdp4On5PKZ6tgKs318uZrjXA53z
wu1PWyUMzr74xrjXALx7rb+s96qGt0laHhnP34CG3MLkt846yAhp2ZOQ2wqt
WolCh+tokCavfy9uUxvw9q1yKt5aD83KWb8OpLaBxfIPEl9i66Fh/u7c86h2
MA4sODDg1ACLzutHytt3QqsvLh4WfgN3GvlaZwa7YbiulPnMoAX8XcKXKon0
QPIGlept+S3w3t7nynPdHrD2Fy7QWtEK4Q0ja0xSe+B7bd75jwOt8Fd22/B/
Nr3w9zbzWN+5dhj9qVn88Rkd1oTL/h2z64JtCq4stzd00FCULGuo6IIAeeov
hc90mOG3Vpxa2g2qYlEdy1QYsEL68Fjf2W5YZpDV3lbKgMH013eLV/aA1cmP
jikMBmzMTNhhqdMDs1Hn9RNmGMDc6CR450IPVO9Y/PHXDiZcDf3q6VnVAyfD
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
VygsxXTfrdaaiXCz5lLVyH3/B+saBfc=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5130#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcl3c81t/7x0UpCkkkRcmI1KcpK66MjLKyGmSGyopEFGVmZu+9997zuO/b
be/NbdzDpqRJhd/9/fd3/3M/Xo/3Odc553XOuc715DW10zKnpaGhmaanofnf
////2TbKZD4Kfw9Pe5OyLQU3ZKwbv6/nhoWAu/IxYosAC3z3khw0KYwBFZGv
gqnevCAlFyqy+CkF/rkIzwrwXYYXgX3p+2szwAcej325Lw6/z9G51OXkAFNs
lYiOhyxYJ6sEm0cXgIzxA0mbQSV4HGVOnvYqAbW3TY8bODXAQT4Tv11TBg1/
X6rfL9CG/nclYzJFFfCv+voNiTsPgfGuLSYnrQrYB+payx89ATdfr2KeqBqI
jcKGCDmagNIKDAd/rAMuSl24+punIMXf5jD3pgHEf1e1MNZZAmLPdR1+gICd
WdpfeMMWwFPdICu9Bf7u7dZt2dvDC7lnLDmxGPAg1XExBbwC/N2WL/c9caDQ
j50KPfYGvhwqGV543QojFcrzyZ6ucL9LEqKe4SE4oLQynsUNhOZvJ5y+1w6f
W1dpEHjA+M1TmXOSHcCOu6S+VeoJfP+em0cKd4JM5OfU61e84c7qt8k8um6o
+vrp/n8PP4KpSPtjy7w+kJt1ufn07idIS/0ZEx/SD+qd/je/s4WClyf3EzHJ
AYg1HrvNzxAGeQbrd1ZOD4JSEd+MJ30ENL8xfig9OQRlB97u770bA4ODr19p
Kw5DKnldq/BFLOg5iZAjyofB6DCroFJoHDzeon/t4TcCFW7JD+6tJwDHh4/s
4cJjgL0bpKTvkAqT9KcF3ULG4Dslibv/RBr03E29YfdjDJZsQ99WozS4+pz7
04OGcfhz8vqjbI4M+Jwh96Pt1iQ8VFv0sp7Lgvtww8A5fhLiy68eJ0ZnQ9jd
q/nMvydhqm5tVl0zB45+of9DLpyCzkBTpdmOXBgw0GpqZJwG86Gfbn/7CqCL
xWLhnsU0+DSn/bmcVQijEqZrti3TMNNVEHnKrQi+Hnj/x+jlDAw+S91DV0vg
zPOTu+7Ns1CaW392QbcMzv6T1ZFmnoO9+fbJ9LYyeLfJWfrSYA78KVcLSWLl
AFiZHqEfc1B6qZhUcaoCYjzDuOT8iHA+ffWz0VIlCN6WnmjPIwKDo7fe9OMq
8DhxsfBtFxHMlhWIrn1VkCPSqf6MgQQBv8///lxVDWed3sclnyeBuX8V5AvX
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
oejdp4L+7xM5/553o5ftl9xYHyqIpGje58nqxnvZ+Zw6qVQw3se6s4K5B/dZ
tvO3DFJh6sWUz8OGHpxpeVwneHoBzn+IJzGt9uCWgKNvjXUXYN+wD8N10V78
qjvdQLm1ALd2a7Acce1FmZIdd//5LYBd8UdRCZk+zHkn6iY6sACvby2kGN3o
wxGGIOO1uQWocHvCLe7XhwINBd37f9H565V4q3xKHwaakL0N9tKAwL05yGpX
P7Y+CFG0FKWBeHqyVoFcP0r4PvWuPEkD57qEI5y+/fiqO1zrshadjwseKREs
7EcKZ+ebUDrfLgypjK0Y6UetW9qjvHQ+bv3Vi3d62wCWHqntodnS9U588N2I
owO4N+kVleEhjT6nBvs7DAfw2qBa1p0XNCBzhSb4Px9Aovqzz5zudHs10z1t
CQN4u4UhYrsPDdY+2nj61g+ghJAD07kgGtgrPYwZ/TKAbGP5GiciaMB1TTs3
eO8glqvGnVWPptF1m69tytlBJGmoxL+Jp8GGlupTjtuD+EJxSWqGrp9GilXD
Br0HkUNHosUhlQYeebde/cgZxOvCxRf46XpIqaDxt0XPIF6JCgr/RscCXDIT
vD8Hsb1oJmeBji+T1bcJ8w5hfChnNDMdMzE3a91XHMItccn3LtH9TZv+F7/F
fAg9+1S1K+nx2F8XrQ24DOHhc3UWuvR8OtK/X1mMG8L77szz2+n57orrrFWs
GsLlsB3HZsNp8I3vr1H9yBAaphI8FgNpwOhPFX+7PoTOBwQMeL1pECzMeecZ
9zB2LnEyOLrRQPekqnas9DCmZjnwfnlKg7j5Po6vusNod6mHL/w+XY+d+b7z
ru0wyjWXxltZ0eAWR0cgu/sw+o3oad64RoM6/Ll1NHoYDSWeNXrq0iAv0m24
pWAYw28WDvXT9XJknW4IuXkYlSpY1Y3oejr5glbJjslhbH+0d2qDrrfT2FIo
hqvD+C+nKmSA3k/NWiwVJcxkvGt1+fz4dhr0Fy+tSAmQMTv5/te9dD2/WSTd
gHSCjOXfWmJfTy/Aiy+kFGsVMnL+ULfk7V6A9xnSzbyGZLyoV20yX7UAHZmu
uaM3yZhA3PZ5IZP+PkoYjD49IKPXi+IokYgF4EsVqX73mozf82TMg10XQHf9
Pqu9HxnZ3N5cOG23APZvvtsbvydj/LZjuTyGC8A7cIFVLZmMvhUn/korLIDo
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
DyVGUy7pg2ldlRpmPp7tT0Ll/wfaaQ0t
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5152#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
nrrw4A==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5174#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
fjn2XOE/VkS6kw==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5196#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
Vux/oNmMyQ==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5218#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5240#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", "\[Theta]", "\") cos(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5262#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
X/w1qddd6EBom0ndT0Zp0H/3qLYLJzk0PSXkyDhADubTZelG5WOTcP8tGdvO
F7g8De/G5ba3VnwHxtC2Qc2qL6sH95hsj/m2dxy9ikdr/jb2oU8ZI0+O+DjW
MBw53rW1H+t9Cix7Lo8jayZ3hczFfmx//UvkiuM44vclQmRpP7K3p4k29I/j
XZl9p1zjB5BawdwbtjiOc6yCXyyGB1Czcia2gYmCLJrM/a37BpGnKffJxRMU
vPB77/Fx90F0jQwTDHtOwds7ObhW7w6hDSlu1w1PCm7S+V4oGTCEF9J535sR
KDj4U9K54csQRvZanszIp6BbjvryP8Fh3Lp5f1f3Fwp6hon3h+kMY7T5+L47
7RRsChowdvcZRk/utH6LGQoOSUrLw+wwygd28W76QcFHP54w7jw8gpxNryLn
Nyh4UKnv/jGVEeTzh63de6k4y34LtsSOoFW16+a2Y1QMFLJz7Ps6ghcDfa/w
8VMxfUKllbo6gsUO+zlGpahou/9AeNLVUbRV41q/IEvFvGsvDt+yHcWmoZ8V
jOepKELKqJL5OIouV+QSOS5RkbfVR1y5ehSfDQ8sf7hCxbJR1m1uM6NY9GX9
+8NrVGx74Plnio2EbvrbGII1qWjg/KXpuRQJHbiCbDm1qVg9efqM8G0SCszc
Lthyk4odm8UObHIg4c5tkpKqt6jIHTF2/lckCa2ytunP03FzdWEMO5GEyvtb
Sv6P58xv8SvR+0iV2bLpKh0bCQ62ffhDwnXJeg5mur/Y/Jc3XrOS8Uxd2BUh
+ngLIUxGCsfI6LZoP5dEj0f2uRSftwgZ09OaUzzp8a68zv6sd4aMG9fTxRvo
+WgJn+Yqu0TGD8lUSXN6vvfLUsM+aZFx4g3F8hm9Hl9e8yixGpCx6mhi6ii9
XvyRG5qbzMj4sD0l87M0FU9H/P3+0o6Mgxnka1QxKnYHyZvbuZIx2DLW2EWA
Hu+azu9VXzK+OxnU5c5JxXtHn0/8CSFja3qkO20/FUdPXnZ5E0NGR74+4xoW
KrJy/cf9LoWMZWOvLJmYqPhi+BLv4RwyqtzojM78RcFLj+/M8pWQUbb/4Hr1
AgXNnrJRsivJuPOIXYDKOAWzfGacyuvJyMA1Z3m2l4IJR29KqbSS8eyyTF5E
IwVj6nLdNLvJ2Eti/He5jIK955s9rgySUe5Q12bNDAou3m2STSWRkalf9UrO
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
gxRziVcZPh0g3HCImcZWP32V67fKUNbbsEm5axofvVo+msRThoodI8vvts6g
0++TzcE5pXjVLznF02wG5aJsW2XsSnH1v0pLiagZjHv/tCTxTCkyBrjpqLbO
4Nm7XFN/Ckvw8vN8o2rxWVzm3/Jv0aYEry6VrR3Tn8WQwtX4qhMlqNf3M3HI
bxZ3Zim95owoRrnH+zycpmfpvDqbJ/9aMQYQVm1198/hMSlOScWNIhRpNf72
QXEOH18OCbx7rwhXKvjNmcPmsGDepuTiRgEyhnp6NMjN49iJY09sUgvw6vDH
n9H351GhQcGJWasAnTRDn3V7zKNvomldQHQ+8j+9p3Hz6zwKxyjUeV/Ix+WV
JzxRi/MY2r8Tt07kYUfT3km5XQvYKLbmncCfh4+tC7ycri+gbEYHZ1d1Lt4l
vD921HoBp9emJD4Z5qKN41825vcLOONAC/yPkIMxEncGe5oXcK297x47NQvF
Lx99uy67iL1fWvy/7czCjIrTGms3FvHP0R55b8nPmPbQ4ruC5SIymjkcOGyX
gbox8dXB0Yv4WaL0s2RIOnqz/naML1jEU4eS487npuGXk9LiK810/V2aN99M
pqBps+zW6z8XUY/PsnvwbzKWJkpu02Om4etgeTGzvclo7uxenMhBw45Zdu/X
ZxMxTO6Z+owiDat2yVnzqSbg8Vfr98a1aMjrFLp2RSceH0a1PN1nREMPYf/D
us9i8d+r28bcrnR/0Z2+pq8/oepB3cpf72j434Wn6W67YjDn78392z7ScNun
QnUKTxSGdU6UqKbQ0LR6f+BRyUhsTpxhq86jocPL9+KaCuH4q93H+WkFDc2W
oliSroRiluIlV40GGir0nTx9QTsEz0rQPjzooKFKXuHIFd0PuHihUjFlgIat
lcc1x+8HojfHHS7uMRrCr/bV+63v8PK9mubGKRqOC013FPb6oN6ax1LCAg2f
bda3YBvxROXjBMWcZRrGTM1I5o+54S9LU6fFnzR0ZTl1Y6rRCf28fpnfW6Ph
ENFrTaL1OQpDCWXtDw3tcosTS2LNcDNDOjb+o+GFyZGZHaq3UatSe6Zhg4bJ
fzzH/3ugCAIXvmj/omNLlsD55pvG8KP33Z/bdPxrySeyRsgGFl8NzU39/f97
uZx4VX4H+GOmLZ2yTsOv5xgUl9hd4fVOkZWwXzRM6f36eHWnB1CuH9Ys/U5D
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
+6byeV+NhgIp/7P/Ax8rRiE=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5284#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
sShtn08+NLhbLNZzK5cEexv3ZZk40SDjseONyBAS7Lif8fSzOQ2e8A2qE21J
UH7Gg/v5FRrcbpklDOuQoMfdz0lehQaNNu0yq6zvnzb2QbKdmwZLhvQU8b5e
kLLXdClcoELDnMaLy4G9EMAhVJVNoUJK/Y9Dvxd64HAgZzs9lgpzEbZvW/J6
YHCmms/Wgwr8olo//pn1gLWI1Ua9m1QwVbzDPtjRDbcnZz/J8lEhKv7w/HhA
F5y+FiGuZk+BkZm/SjPHuqCrzqm+UoMCchDT8pbZCc18bgPhAhQYz09P3y3b
CZcVOske5cOQ3eddm9PcDoEd1UtW74eg4bbYh5932+HTc9596plDcLt6qPQw
VzscK39TEGkzBEZ2rSvhmm0gReFqKJwfBKIt89Z6YgtY64ds3To3AHZbda6Z
PG4Eiw2v1Cvf9kHoeZ60kq2NsG19VGWFdh98XkmceprZAI6jDuH3VshAv02Y
r+yth5HE+9/W6JFBKmL9eg/hOiiz4y+YWeiF7NGGxAOXqyCEuvD2vWAHLF0P
WMd9NhM6HM+06a2phs6feaoBrunAJsTfsFOCAHH/xe15np8K3F1P+s+erAAp
k+Wt2eJJoDzQ4y/9oARsEpWe/Lr8CmI+GMYm30uHp+ZFdXG63ujxqz3oL/tr
ZATsUPTO8scf6hNrNb/EYciv6YnpqWBMuNhQ+Wc2GTczs+bUol/jYbW/m19T
s3FHolZg3dEkvKoXmMs5XIbc3y1VG1Zy0JJDr/LGqQa01e0aSVLOw+ZeqU2e
JxqxSTuJ09opH6dJJ6XjZZrQQ1VM1r6/EFMElx/6CrTgkP0zjQHJEgzYwd0z
RWnHhU4viU3ZJSj1s4CT2dyB/Nedcv4cLMWtNDexk8Wd+Joqa/djbxmSzs1x
ffDpRnX2Ex0VS+UonH+ncP45Ca8sTtvJmldgpMJNqc1LJJzB85vUOyuw4vOu
d3yWZOTtXlm/M7wS2fuzfjWo9GFHqf7l6S+VKBzuEXczqw+PBQiYndIi4CE9
gjmRtx9HCa7MqB8EDKnMOv/ufT8+md4NkepVSA5V5r94dgCvZr7RlgirQhWZ
Szd9cwbQ2TjImyFWzaLZz8rJtoN4bmR3NJ9pNf4o6pYf7hnER5XV6tTEahTn
ld94V2YIRQb2nRfjq8H65Q0ZGz4NYaDKqsIpjRokZalwCysN4222XxttHGrQ
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
cLlt05nbrLoaGOFzv5lNw3VbH9svqpPBOU+7nq+AhjJ/G9sC9cnwZpXBIVVM
Q05pbwchGzJwrGQLBZfQ8O6FmIyUJ2R4Ofxw6iLLlgjxzZcII0NUacmjuyz9
aPs74H14Ehm8CyNnRvNoqJS5NudHIRkWuWp8CjJpaNST5qdeS4aNZhJv6Ek0
3FtYzebVSYZwwd9v70fT8I7W3erUYTKsjvjvvRlKY+nbcfPCD2R4qP2NkePD
2i/7ri5xlgyXJrYFmjjTEKK2ZDr8JIPfLwsu9zs0rE2v/7d7lRXvUtaNFV0a
Hit/11LJ4omM97QXU+o0bF3av2kPVx/ULH7pOXWEhoP37inUbu6Ddb+ZFvsF
adgwIb3mD08fcP4jBp9kY+lhzxVF2tY+oO5Mcn48QcUjFbL9Bnx9kBxlaP+1
jaV/N56kPmL5/zRJLETmUFGYZ9pJjrWfkCv12imQin5ns2ee/9cHlPjTXC+t
qFj1rC/RZUMfhBpESU9rUHH2G5Nnla0P1kZL/vIXp+LjqMIRwd9k4F+57W/z
i4LjD95Vd34lw2wwgzehl4LL84b+vBNkMCzuXRBPp6DOoc/HPlPIMEpMyVp0
peC87IaR6yw8OXaENe+5QMGOqa5fo7lk2KnDkMv4PIxi4olyv2PIICUeofWv
chiPj2VOpfmTgWwppNvMqp/Tb96lZBuSAcq7+PIFhtHfW0z07gIJ/HS7S3wO
DKFtY7TM6hDre/vDv482M4jBk+TEXQQSfFF5y+zIHcQgkXuPpFxIkNxzVSJs
7yAu62oc2MmqD17D41o3tgygmNivGX+7XuDb/9Vnd0s/KkjGHRAX6YUbUn4m
6NGP3pq33i3c64HhM3/r7Mb7UDnqy4vkyS4AmpvDi3Qy9u8O1Ttp2s7Cf4zq
/7MbSx5c+jnxsQ2KVPyUdql3Y9mOlUPb7rRBdNeVQOWXXTj9uq9gp2kr8POR
UkR2deKdaxpeXUrN8B0Nt2krt6FQhhb1xzNW32e63Pyh1IBTN8LLpekIdlKb
34ax9PTXJ4SdOwprwWMh52dJdx3Wc9jL7dMiAvP3q2rHd7VYoLs5fK9+JTgr
/RaxXiZgAl++RP3HbPhxfHY0eyQHxRNFl3PkM+HZXW8RkT+ZKLF098UVnzQY
95O73iKcjn9muWzXiSfAGtO+mY2NCegycnKLyrwXuDwdOdu1xRunrv9oy8pJ
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
UkgElbuvvTscwmT+BwukdQs=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5306#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
nmvWPnMzEz1YY5raCE4GU9BcxrilIuuvE9cp3ONgpyak5br1FyTaSNdu4BsC
zVqKJ+UpPgL97WyqKmNr1POTpnSiOR+aUh8glc50FFcjGmn/vgjYTmv6chEy
kZvZxzsS5CWw6ORZvPcjG+3pu96opCsHmSOLnMdLeWha5NqM+FQ1sPi1lt9i
LkG62Bm2ns9N0PE0N4WKrRLdabyrdO5CM1w0VBEbqq5EYjQ7Nm65zcDMV52x
r1aFohkx428qW+CHbZ+wtWU1CqqTEL2a0gYfpTyOcWvXoidFZ+sG6b5BXBD5
Na7mWvTnIq/mDcdv8LqbSiz2ch36YnTlRq9sO7gFPsYcn6xDMnvJSQdp7SAY
mhF7/Fo9qralCCs+bIcY6V7FCNt6pO7YsO2T1gGlp59RB/+sR4rcpitfNjvA
a0w+ifIaQqeNdh3/E+mEpNNF/919hpDFkKHHwKdOeFYVSifgiRCXIt3D9YpO
cPfjYP+RhdD+tybvJ9udQOPawxPYihDmScjbQ+4usOa71UA1g5AQSVvCwtMu
CD17nsJ5A6H4lMbrpG5dkPxaG7O1h5CgVEP6k6wuuKseRGnzDyHe+ynkA+1d
8ET+aJiOqG9SJ7a+J3RB5sv7ltN/EHrBuDtw77ALop78ql5YQyj0VXAwL103
+NPeuSA+hZC0UsCU0PluCEw1915vRkhSq49Kk6cbFLS8deiI+X7Rcd8M4+2G
pfR0nzLi+4QlOPURrnVD7Jm3lmu6CMX+LLZQ4u4GuyjzrU5+4vuOulJ2s3TD
P0czPaPDevRbg0JHj6ob7toVuXa01iPnDZNw8t9d8G5dLvi0Xz3CntkyaJrp
gt0LfDdV5OrRZrz8ViTqAn3+j+9ij9Ujq/a4ebf4LijNdBwhL69DY9SfdX3f
EedXzAlkv6xDv/00fufKdYFuZEZnFG0dqqYpMdec64TEa8+CqzRr0emfn2XL
hjvgMkGaJKq0GrH1kGuf9e4A2ZHgazfvVSNB6quNVYIdsKqfQTLSXoXsNrRr
vju1Q+gyZ2FmbyXqZPAg1E+3gQgZS4t4IQZxRTrQ97Q0QQ/tVXedqWKUP8CS
NinaBKov75+4fa8Y7XnQuGt9bYS4Z74ZtGlFaFwjSm7IpQEoR64+kG0rQPfN
hBIFT9bCMcl0arvEryhuTXOPdrUIvM9VDArnJaA+ncf6QZMFwNP//q/+Siwi
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
crwS1hILJHVUVrlE/9B587kGpSIW/IalzeyIuonDPlfyKhYIac//q5dpABvy
nl+uZFjACJ5td7/XAO9MvMe+1s2BxrcQncY7xOelJVQ6Ws1BP/900ofbDeCv
cPGR+6U5+MumnZrG1wDKf/6aNPXPgp0bb7IM0R+FMTKwyjrPAsVi8gmNcw1g
NBbiSX9tFqYzwmwnTjXAkvLlNcHhGeJ9834Tc4ggeupJVYHjDDTfMIt9Posg
YOCr7WfOGfD8djR6WINAWG3cNN58GtjmZfd63iLwr3qsNE0zDewPVWIPpBBk
UYZbphVOwYWa6gYyBqKfEHPZWV2bBEVpZ6u03HqgCHu04OI3CbPlu/g7tvVg
4PiZo4FrEirPY/KLRerBinu/6o3mBLTfp/G/W1EHzQy9L1c2xsGckaZOy4bo
D743HpPwGoeKbOsAnWt1cEovNdWlYAzWWn4WXQ6tBepJJ9LUXyNwnvxMt4o4
sc89ekQ74DECZlcoizhnqiHCeZ2Di34Efj/i4TjhVA3kX/O59a8PwysR3idn
y6ogZXm+VkNrEA57RfJvHSPWC55w8rGxAXg9WFnm4V4BTNKjjlUaA0CPzcbl
kVRA5dCXb1Nq/SCo1Xy9cbcc1Cx9zt8I7Ia0/7bsPtSVwrkgA9vdhy0QlZfK
sBaZD3vVgTe4pZpBLtzT5dj9PCh+lW3ZL9YErBL2OpPrORC7o0pJQdzHyn6K
co/b2eChPJOzdKcSpiyLdA1iUuF37M93P46nQAWVUt7R2wBQ0J2Z/880FqZu
GMV/+7+KzTweyu+L40XZUpKIFpRKiKJSqa8TWm2VkCiVFEmFEin7vgvZ9y37
buwOyr7vOzPD2JmIiiy/+f15Xs997nPO5557z/vMa+4rR1C2J+vvHvKFyDdm
R77XWkF7dK1bZfdbCN5fwhwnrwl7bA76sQwHYbo0lUeWwRGNKn4NrPrkIP3+
mB8aKtHIuF+3QIAvD097DBr/borBxZ6QyHsJBHSYOjCpcyMOO/rLNk9HFqKI
5NaZMolveFvbLH1KErHqi7rdQUoqzqo/WU0w+oF6W+dL/StzcFRH4rz18g/M
iL2rfl07Fwe5ZHQYPlShfT734xN/crH4Xp7E0stqfH6shsTOT0AzLjp3oYO1
eIE6Z+ijUID6cWV/71rWopOCgkl/UwHWBTjp9ffV4pvjWUm2ioUo6rTHYdah
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
fWaL0tO/0szv+jCDrbskdGn2eKVa0MX/AdBNQmI=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5328#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
PGbK5VP+FExubC1a1CRQOKJeQiGRglv0RObfHSUwJJbnUS0LPy71l9SoCbL6
UbVmvL2NgocmO/6zWsXa3ybKZzXOwoPHuqL2s85Hxtmd2+98o2CsdFleXDsD
41tTBf+soeK6o6+96/MZ+FHqfvCfbVTcY3nFLvkZAwWeyHPeZOH9B/ab+pSd
GThoofdEW4qKs9tsHV7oM1DTp00gSomKV4scu8uOMDB1ldhuUKdionP359eb
GLiivFvuvC4Vz3UGvDb5RMeav3byNYZULF+z+R+NSscbLtfgCQuvJzzlltGI
p6Puz8WMLBaeD/le4RV0l46Hr/3i3MfC+wMN0pr52nScP/xV5zuLD4z2sK2p
3UvHktAKfz6WftP0Y82q/2hY5bG4I9iEitd6ZepzWmmokkQu0mXh/5Xvioov
E2iYHdAuZ83C/yP2mSG+t2noNmHdi6eoaNryKecu0FBu1JDttjwVz2Zuy3Li
pqG7WaLztUNUlGw2SvMam0CDP9n7i4VYfEdEto+UO4E6m7Otz26mYlHl0i5T
jQk0up/caT1NwdrV8xxzWyfwcMyWOXofBZ8kOry+VjmOIUK15uVIwfZGyfap
8TGUU1L6Zx5Oweha/aPfncbw+BV3vSN3KXj7HP/oC7YxnHOiHbQwoeAv/dbZ
iZ2jGDhzqPydAIX1HnFsSs0Ywbu6hz2lZhF9K+Mn5GRG8GgmOzMyHfH95pKT
69SHcZ5yYO/wZsRnUyJn6BYfMS9T49yDmlq8G0yeqxwfxNR/HTaOl2sx6oKh
fZ/NINqm6uQ4rapFm3BDTx6HAXS+5O68rFSDT9bmqKld60MtC5/TD8Kq8MBx
Tq/bV7rw/yo483io3yeA6xYdSkXlPqJLSirECJHcV0WlIqlQjoTIFXLkviO3
JUfudZtd95X7vtnPbn1D0h0dv/39ta95feaZnZnn+cy857WvfXRZxv2O1pJR
cfyYaNpgD7pzO8loS5Axe05/ZPvFHma/aZyTfFWGBS6Ed4tlFyZd9AlLfVSK
f6Q9aXP72rHN8Ifnnq3FGKkS/qO9m4pTjjt326+8xmKKbLJ9DwWXRiTSl99k
ozWJN+JFFjNOYlA6ziwLRe13tL9vqkb/vw9u3mrNwNHpOOkurVL0rGWNengo
GYX7rwmmrL7E1KSvV/5QfDFJIGptV1sUKq34PLSb8MR8x+0iC07BaHJ/VSyV
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

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5350#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcV3c81u/3loRIWQ1pEilE9FFUTqQiq8ySUSSiSDSNzKSskDIys/fejsfe
e+9nFjIjDfF7vv/+nn+e1/U6932f8T73fV3nsKmtljkjAwPDURYGhv/9//9f
ntHUbFf0O2DaMrZurPBXXq3Qqd0tKgJU7O+v813gh5h7vlfOF3yB8maT32UJ
J+BfYUCjQlgaKN+OecB89iwYdQvf1z6fAzI+mlOCFy/BjfzL/qbp+XCdu1aZ
8kkD/v0yIL7kK4aKnPsvPdp1wCWlQ1TFswwEPN4fQeFbsJ6Y6vTyeyWI+oyL
/z12B5oFpPjGRQjg+o5d7f5xc9i96Rbj+FA1uLhw06aD74M5hwQLr08t9J7U
184wt4FuS2trfZl6sPMZkTHvsIM1bobMV8QG8DGMMTwS7QAWsSXbxyVbYE+O
QSJX/0v41t3mXNvbCmZm3wm7zrmAeLbP04Un7bBjSE3NecoV6hXG3lYOdALX
IJOWdqMn3L3w43pjfBdQh3tOrg+/BoFzgs1HbbrB4tPOvYlMPmDuONQV+a8H
pI323rga4QdsbV73/ap7QfJ+gHHB5kAgsqzU+3j1wY/fYactld6DGc38tvGW
ASDN196voQSDmCpXa+D0EBwyzNurGB4GOtFjlaufh4H16T41ywMR8E32+QWS
xgik+Bud4E+LBLjvyb85ZRRU3vr6/xmNhvoJlba9WmPgJe39oL4qBvTk+aqf
/xqDFDhfWxYaCx7/bfrSdm4CNtSvZbGqx0P/crxT8vAELHZuNuYQ/wIPHLRL
GuUmYWjOyHMPZwIUfv2UKtY1CbPN/O4fxhNBReCRlPQMEeRf5N3T+pQKMeVh
YaniJMjs+v6s6F0a/HInPHxhQ4KWWuHj5a7pIHauTHjrDAmSbVs7vtlkgkin
jG2VMBmSGyyEcy2yIFB2z2zZbTIcMfj4J1MyG4SO1/jYdJBBSfuCo4ZoDpDU
69P3M1HgjEnjwNfkHGi46bF902kKyLu82XgvnAv+Dlspeh8p4HnroX/R4TyY
j0xiq6mlwHve0zqM0XkQ+Eq3X2+BArMXFdLW+PNB/9ijgzMKVBD585oYxVsA
+u0BLJutqXBC8ddxu/AC4CdW9FPeU6FF+X7so4OFIKicauRfSIVENpZ4l/hC
CF6oLf03SIXDC7vynYSLIOSArcHJ31TIO+DhpZZcBO+eHF49upsGJ8vv/O0Q
KYalg+8+GajRYHR7yruXQiXAn3A77IMZDeSzHJPvxZbAvrhnAe+f0yCn1tox
kL8Utlg/KNd4RwM20WsqI8GlwOMxldUWQQM+66Ts42xlcCvE5cqOVBrk9Q5m
mbqUQb3Yg0zeQhpsSr+XZrFQBgUqd40mkAaXZTgdDtwuB/4K2GvXQINKB5La
g7Zy+Pg8ebWllQZTxjKLMmcqYKi1WGepgwZ9jyLC78ZUAHNGwCitkwbZdzOY
R7dUQhzLsFc63e641OPkaVkJXMrXgy7T9z9xmOm51FgJ6jsl/IvraXBWq+8Z
qxDCsbuhmsx0/zN75m0KXBDGlhdXpAto8Oa4rYlMH4KBrvLUpRQapPzWapbj
rYKrHl5DF+j5gRoXo8S5Kjh1tbTiGD1/7m1GKQ9Nq6DB8XrPlhc0KJsp+v79
dRU0Hj77efguDUqvHdSNT6kC72YOcoYGDdL8bzd7N1eBEfeBbC8Zuv+7hh/e
T1XBgp+vluU+GlCuyJoWMxPgg9xVA0MGGqgweiouHyaAYQTPJ0sSFSzOy2ed
P0uA8VTTfSHVVFhxH37rp0WA/S36MrQYKnSrCwmOWRBg13jY43vOVLCs3ist
7EgAljzx8H03qNCQmkwx9SVA4opSDudJKizqGnb7RRAgqY3p51VWKoj/+8sa
l0wAMFaa6BmjwLgu+9aIPALE613kz8+hAOMfuUaHcgKo1t3wX/agAEmnOle0
hgDH7oRfj9KhwNu6+PTyBgIccXbKKRWk93/6MLdQMwFmh63EtBfJMM9vX25K
x5+CDezsKsjQ8v3tX/tGAiio6xoffEOGkoWzUfq1BOhf+bd+7zoZSrfbzm+r
JMCDczveafGR4ez2T0XBBQRg2Nx79/sECXQnbp7/nkqA6M3huyGBBFIneS7v
jiJAJeWAnu59EmwX0961K4AAir9Xf8mKkUBfRObxtDMB7KeW11ZniVB1IfVz
qBUB1tyd3cIzifAwNsJwvy4BHOam68VsiPDhJesPt/ME+OMzKlYqRoTrbmtH
GgUJcOrZVuvlxEkImhKaYZuugkdXEgOKTSchwULmNRf9+27y4LNK3D8JH0w6
mjiSq2Da4kmlkcAEeFNVWxiMqyBS+kLthc/jwMzDKVZ2pgrcDJ4/ZNg9DlwG
Fdvquej9oun9+y7LGMRJOD/udEYQOi97eWlsGFaM/AeMtlXC8uXMv9+uD0Pm
MUrl0+QKIH9VCzKsG4J+hS/TmQoVwP5f+Qn2tEEoOm10r8m6HApF4XaZfT8k
99dJkWJK4fRPTsl2ah98pTzPEBUphRKHbUwb+n1gJ8UxfT6jBO5yKtizne8F
mQfLB/bnFMMRak7DIns3+HFI3PKJK4SISzq0gYgWINSktFIu5sLx34GH/35o
hmsP38odzs+B/9CBrzyoCdbDhFTJgjmQtc5ZER/SAFKbRe48ZcyGIyLEFw0V
NWCofeRlkUsaNLJ9t73gUQLft+gIcKfGwbPHUtYQGARsQyYT413OIKjyQ2Ss
zA+M2Nr8gzY/B6O/x599znkNu2cG2kkPH8MGW4qoqIk9xG4NiWLuMIEEHvyx
8/szPOA9nopcd9H8AIFc9NgVQ5XkWBjQGhX+a7gcFeCJva3ft6na2iFL2Hvu
68nv8OCrP+61ec/QxKD/c1dCECaG24oNX3dFKwPHW9tuB+PU3qV4B3Y39Dn4
0F5hKhj/RjSGPY5wQ3uNRY77CiFoHZK5fHiTOz4wTkxwswzBeDdun76z7siX
JLcl0DgER1/qylGvumP3IUOlaMEQvBRmz58p7o4sjsSaqqJgfLS+IyCI7IYl
SuLHtvEHY73OxL0/1m5o86/lRrR6EH4qtWbUrndFyb/qj6I03yOHjMHwAcor
LMgUdz3o5YeS3/b2yD5zxMvEoy/epDhj5+PcxFnhB7iraJ+25AsH7C9pUZ17
bYY7g79e+bXPHMV5pA+9PaeDrlwbhq6T92Dcfsd9jyN60Knat3t8KQAYfl7V
u+n9Ctw9B1JTD6aA0u641EJCGHz4es46+1o1oGRiDdvpfBg6yPTyj1INHHMv
/H3PpAAM7W+VrJ+rhU3Pepli/QvBJPNM4ufT9WDOMpWmuqkE1FhvxyxqNYOM
bPGgy6lK6NLiU1F81QVCedtmJUZqYU859+AERzcwr/bmS0fXwRcDxzGez91w
/M/unE/m9fT3UERwqrwHSFvHPE/8boB92pv/Tm/0gbBN6gVm2RZwZrEwNXAd
BlKv1tsRxi46v0yVyG8fgQTZztkLj7vg9nCJyJ2IETgmx7dlG6kLapRuBG7L
G4Vq4SH/sOpuGHklUFTWNw4u17+YrHj1guht3k2e1kTgrRP4z5R1EJ7GsLtl
JBGB5Ufteb5ngzBq8zdliESEVY+35xSog9D/7PSp3XokCHjIev8LDgGL60TK
OQkyeIvPbP1tNQIih3ZRHyRQIOr6Evtvv3HwTj+5ZNhCAY5ShbkdtHGwGzfY
s5WuB4R+a4110HXQqe1nFt3/o/P7zU9EPtoE/K04nX5FjwqaCkdHL+2bBI3w
3veFT6iwuWQ3V5nSJEz/e4/u2VQQ0qgvUwyehPJYMfPBFipQ3at8VUomQWyf
4GIjlQo3XzwyeTI+CRfSpW493EmD+xf9vYWEifAKw37tFaVB49uTbVHKRJjj
D/mrBzRwSwr4KWxFhD0hf+Js6fpg0tkZNVKJoDkl//iKPQ06JIb/kRuJcCRU
6l+8Gw1UBXhN7GlEqAtIUPPwp8HKnNr8KiMJgp6MfCSH0SBUV6X3wQESyMul
K9XE0/lbWUyj7QwJHldGfT2UTgNpPoliXi0SFBv+u/g3lwY3U/V85K1IIGxB
Ub1eTOfTd0K6l91IoP7p6iGBchosU6+2Hv1IAr0Xm7keVtLt+zQqxtNI8KSq
LPIkne8j2E/vtED6+rT5R7Z0u0yD1GR5Fwnab47cF6bvr6o/dXWURIKfJ8yD
9OjnD5uERBOWSHDvPOMRhjwaGDgmqt/fRIaa+pDXgvT4/llrkzu2k8G9T+ka
gR5/TUcy19JeMgT+1ro0TM/PydwivVWIDP2SVH1bev4Xq3xTDel9MLClPcmN
Xh+vmkHh6NNkwDl1d256/W53a9x+L08G11/tdwTp9e3/nFsqqUSGQ83hswXX
abDmzIAvlcmwvu3d7xZ5GgQoEvkfqpKh7kq+l8VxGpyz5Evcok6Ga3LslW95
6fWP+XFDkY6dmpj+nP5H74+wRL3DamT4+Fay3I5ChdyVgm8xKmRYXW/LkWum
Avs9DVe8RIbgQMPcD5lUGG2NLHS8QIa7d4TRi643t1gcUu+VJYMIQz3jdnsq
nKKsijeeJMOxnUmdJ7Wp8MDs2AM9ETIw87t/WabrC+HL1Isu+8mw6aoaz70Z
CvA//ffq02YyEBQVrfbVUyBhS5TY22US7BvbKe8WTYFWxdzNvBQScLyxdLDQ
oOsJR4PAhUoSBH7Qrlyk6wnpecOJi6kkuFGfqHXuF71uz6jvJENI8Gvyvwyh
z2Ro4pViGjKjf/+ltPKBQRJYc0cvey4RweN22rJvDAl6VZwGWDqJIPe22Hvt
Hgmu7/sxvZhGhKYfbfdFFojwa6XflNmECP9JPfvxdnkS/q19cX2TS78vJ607
1MPGoHpv7dOBI+MQ+fGGphedn+v6T0ycyh6Djm3dp845jML0bqa5qTNjcM2v
u8ZOZQRGNeR3+yqOQk02B3EL/V1waAxa239mGDZ9CuewXuyBUw/2Ce8u6QNG
40pu62s99HfvVbLDoT44Mad+cG9WN8QUqvLted0L3Vx/57usu0DKqdHnmVoP
lNyN8HZsagPZ2/wBoQ2dIB3zoLSlqQbG1DLrWTgbwCXbT05YwgPeutdshC14
Q8wfwiHZRG1YjYrSro6+ASW7eV8a73PC1TEGhYvZbphaEdbxVfojakl35w88
/oxB5LNmZpxp+F/DVgOm5zn4s1qmfehhGfI9Xk5fu16NMv22zOcZKzBRX1rr
0ZMa3K9WXq/oV4n5Jg+kWT/UYtdAsal5TRUy7+SQ2t9Yj15HQsY/uddgZVLh
1KU/zagxdtaiYEcjbuJckp2R7cLDaUe04W0j6igFX7VL6EJOxomv4RuNqLTY
3rx/ezf+PiplShhuQsraD/uyfjruuXOrTasFbwwe9Ri62IsDmgIcxPgWjPYJ
eHn7Yy9az70Wa59vQWX1Q2plX3vRxkVf/fLzVqT9RoMWlz5cHzYbHclvRfn2
a8J2dX24d6F3weR7K67/yJppYe1Hgb9H9K6ptaH6k9qA1179qO5xPa3VoQ1v
PMrJHq7sR67ZU2/1P7Xhm4Ff11uX+/GajW7Yn8I2vOYdUad3dADvpkoKVnW2
odF1uaEnegOo1VnLk0dtQ43fX/uF3AewQHbzz/GVNjzrP+VlljqAU0zii5qb
2vHY2l1RsY4BlDy2t56btR278/69dV4YwHAv69ZTbO14VcXkq+72QUywSZ6v
YWlHo+8FjPkigyipqJzeztCOwrG8Bz/CIB54l7ztLv388UNN6+tag+igsJAQ
TPfvoPGZMmM6iOKFkyEPu9qwUow5xNh2EDnLQ14ylrRh9uUL1288H8RrcSde
mEW2oYHzTeKw8yAyJx0O/Oncho7bgTr5ahClHWY9N261YeGhXsmvLoOoInDP
xE+mDc+c8DNdeDmImuFUlyyONjzP/e/Fhv0gLkRVfnxCbMUquciB3VaDyNqf
mD2f04q2vh7nzhsN4jGZPYdOvGrFu2t7m+3VB9HmXKqPgkorjlLKNlXJDeI3
TbMROc5WpPBfqRUWGsRNJYyqor0taNCbeT1j2yAaCfLlnNZuwQovvgTJngEM
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
0OXWvtfCjXg7wF5fVqIT/Xw7j1SsNOJNC/l64o9O9D/sF76h1oziMidG6f/r
xuhfpX+uRjXjJX/u8+Z+3Whp/CH5MLkZG85sENkHutHpN/fzGKMWVE2+VCjz
sAdLzHuyNKNb8EhU8AdCag+ufc/T+NrZgrVfIn8qT/egq8yp8FfCrTi+2nyb
Sb8X9f0IKpvarTh7giGeNbQXlY1ehYu/aMUpfzt2+eZefM/KUHwluhWHck1b
gtZ7sfVK06N9Ra3Y3/5732/BPiQUHhgoam9FrvDiuEdafSif+JcgNdGKF8vU
guZd+9D/wMjuoqVW3P+2/457Yh+yMzs95/rXigQ1m2LO+j4clT+59JqpDbe0
xJLrqX24emNuenFHG3YwZWk/ZyRi22zYJSuanX1s6/o5DiLyuVVw7Nrahs5O
NnvmLxDxL1u+Uvt6K55rNRXMlSVisKlDX9NiKx5W5Fdx0SbiqSCfS9vGWzE4
4E+HkikR/+wflgpsbUUFsuhjXmsial13vOqY34rhrXoXtzgSkd9Np6gxshWZ
hNhivr8gYubcwcwAWj7aX9x0/P/3RHf5PUxH9VoxKvbr8oQrEZM9Lb0rL7Ui
a9XNxBUnIvb/OnJQdm8rUio8H3M8IyLrer/cS1ILNtekROqYE7FbLKbR8UsL
Tokf78m+R0T9ZGMXGfcWvM5hyMGrQsQstsKg34otqJMU2F0sSUQJHQ7vUOYW
/KV0oOD5SSKmbXfmvEpsRgm5A8OGe2nr2+OstRLejOGWbMWuS33o6U2x7tNu
xr2hnuydPX2YVZEWoNrWhMzdRo/FAvsQI/ZJ7XrThPJSfEXaln2YIPNKRFS8
iVaHb2823+zD2l+iOkciGjHuhlpI7UwvRi9LrJy73oAjuSleK0d7kW3T8LPX
2VpUFhClS9jajaHyfi83Smqwon/qnU9uF86uNSQTZWvwErOhyq57XfjlWaKU
kF41zk6Ljm5P78SZhc4Te20rcavcH+uB0x1479pXzs2/xbjZsTEF2c20PPjm
xf0tQiuLCfoLLU2Y01/de/FvITqOt1+OoTbivr8spstr+Zierij36lADhj1d
0pil/4JynBlrAjo1qDz40YM7NRm/e2z5x6hdhPsCWxkPdSSio0R6pNyjAgw9
9emp1uYnnNcTuvjb6SsK3Xm2TumKQfMv+3ctxhFQT4B51P1YAI45Ny/GMCTi
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

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5372#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcV3dczf/3Dw2kIRWfhtCgJVI06LQlIjsiSUVDUiqRtgbtuqG9aO/drU57
73vr3tZVaQ+SkVB+9/vv7/3P+3Ee533O65znOa/zfp79Jo8umW1mYGBgY2Fg
+N/7/z/tbgV3ZcLugGV90PdTYt0qKnOfP/0LeQTKqf17+ES/qDy0O0/QzHQC
H+sJ7k6vTfApX4VPPcANhBRlel/t44DuoEQn22Iv+PUiMb7m/B7QYfHv0Uz2
BaeJVc6trvuhsor78aXg13B9WCjiYvtBkM2TatVzDgaZ4xfE9NlloJ8hPN8h
LxSIvcGWa0nHoPZz3bcvSeHgNxug6qmgADpOdzmXwwlQ/Fh1jef0KbgY5+mm
7/UG2PiF//42VwO//SudC7bvoHm6fuCQuSak+e+Mj7kVDVmcyReTE06DNAMD
KV06HmxqurICGs8D7wGhf7f9E+CiuYW+4/WLYGp0JyH1WSJMrdwtrXpwGQwn
l37K3kgG41HSU9LH6yA0S+XQ106BHH9ezVXNm3DUyu7F5NH3sK/WxOJ24y1I
/Pv1swRjKlCMUvYcZ70LkSd2fyubTwWltNavwvYmYDgof96xOw3SGELYp2fu
wbO88M0K4RnwUuDD+uZVc7Cx901f2JQDJB9Zjy8pD+GEyjf2rdQcOExK20mz
fgRHz9Qbt2TmQqJ5fFNvvC1s1VqN/PU+D2K8dS+c9rQD/vsL3AI78kFjV91L
9uf2cHzaYfuybT5EfOJjz3j6BNrdz4f5HS+A0p3fPSo9HMFy7Pv8yTcFwLZL
/spYgBM4birU8fhZAGebPc7KxjyFDmLy/ai8QmjnaPHNa3oG4/eZCuW4iuFV
poIjt7Yb/Fe4IR9sXgwBI3bMlOPuMPPkq+nJ8mI4V8sQ86/dHdoPzyU9vlEC
HwdMcjbWPKCGlfH6wocSGOLa4pQY5gnHbTc2Ra+UQL/HpvcKUl6Q8T7K3d27
FJ70f0+n3vWGHD1qXlpbKaTnMVAy1r2ht5UWusBeBoc97vzHGPUSvmyvOpQa
WgZU56GqIZIPPLtTb6fhVg6aejM2n3X8QVZahJOlohzmboyQ/634A9czL86r
K+Wg1Ztg/i7mFTzee37DzrACaOl2N1qWXoPgKZUsuYAK2Dsa7cROCACPn7vA
tKICJvdfVVdRDgRH/qenVtiJsGapElfmFUSPpzJBQ54IvKqiOvmiwbA4JjQ4
a0AE/vH+gS+NwTBL+Nk07EyEfTxSF0RlQ0B2s5M971sivGB5RznrHgL6j3h3
hhcSYdvO79bXOkMgwmDqz9kOIkgR1Adl/gsFP8G5cuUJIjzV5G6ruxcKm4zt
/9z6QYQvUXp9a1mhwLTNKTqDqRIevv5hhd9Doe3LULzQrkqQVGL+va4UBv/t
bVMsFayEmVTVtni3MAjI3tRkLVoJzDJbdgfXhcEzRYFOZYlK4Cg6sK1kSzjw
jg9t2SdVCRaWTeUb6uFA6rc6yyNZCfvYteUuu4cDs11O/u6DlfDUfvvTWGI4
rJCePBbeVwnB52yfNX8PB/+1uhU53koIYso+RJSMgCs3WNt1tlWCyZtiCxPj
CBD58aDKcI0IP48c3JcaFgEynwYqLKeJMBN5VMq+LgK8dM0m7Hro+f/n9TDv
SwTUdlt5PC4lgtGGfKMOHwGuPirfZRpNBDZN3C2mToCHdbUaOi5EsAmnnZe9
TwCmrOZ5/ptEcDsTbHjdnwCVVkw7R+WIMPn49wm3NAKwcvct+e8gwuVwi7nw
BgJ03m2Y2TdeAR+klDzdRgmwttIXkVBQAaq1vcJS3wjQP/S4gsWjAqIvhzF4
M0VCX2i23tVzFdAm1X37MXckPAENez/uCjDpriXQhCJh9+0St4TBckj/7vpf
ycFIWMi9txoTXQ76dgt2E5KRoPYuNOjFzXJ4NpOnfV4qEqDyhbg6bzm85JC9
NnkoEiZX74/Md5XB5neuHsH7I6GpKGrBybsMrtzRblXijQR+H9v2ueNlEDvV
rt/LHAmegtf3qU2Xgu7X/jsq9HjPhHZXu4aVQu+BBNOHwwQ48sMqM1m5FISt
2n6cQQLEaLXx5Y+XgOPJ02SMI4DN+4DHad4lMHxFZ6nCmQCfPp/XfC1SAlab
JG4d1CeA2HxvPJ9hMUzOn4tmoteDOfSgWvvXIrg/oxOlXxoBf5+7BT96WQQO
xab6+CwClKfqbGOTC2FJ1jayciUcZm8KvZM6XAji86e5xFLD4T954XcVxQXA
0NO0z+JaOOi9cLw0RsyHJePXjnLvw0BC0tFUXCMf2rWsT0ueDYP6R2orH5vz
wP/3L9MHi6EQ+rZBQCs8F3jKXLJd94VC2XW55NrbmXAywMz7QnQQnBkVS/mi
kQEX9rwrKH0bCDkcObPHRNOhx59YOfI6ADa+URgODH6AlUh8uXHpFYToEYMj
WZLg4w5Pb1GTl0BOjPvs2JwA6qlSTT+2e0Oe52qPPVM8pKxtre5L84RFyVBn
Uco72Hnhs1qbjxvUHL50WVooCPT3H+MY/GQHIbw/v29IuqPRLQn3XjMznGm4
thB/ygcLDrEH9MQ9xJ8fHokTjAKQMX5rYvYWe3z7i2m11TwCnRqTZkiFz1Hk
8NHiq5EJ6Lbke0WYzxcH9yY1KvzNxvO88w4FXwh4IfnnZtYHVWgrd6/eIi4V
r+jbf1+6VI36xILx8Bdp+OertESsCuJfCo+v3510TBGOuicYUINmDB7UOslM
nNmScrHIog57Hj39u30qB4s2Gu++PtKEoo7k4rtWhZj2fkRtb0YTDhQ0jZ1a
LsTnzGXWrcLNeHmCgfu6YxFue1P56sruFvQRFxE/5lOMvUq9oXkbrdg7q9Bz
uKgUfZpzdNnaOnHrQdGkNq1K1CqfqGxQ78KPQRYpBSOVGPjZlVeD2IWHn4xz
vXlShTFXu7a4Z3Zjqo1dl1pqNRqGDNfIN/SglMbtny2vazA47FNk65s+9DCy
2lrCUY9u2w7/2rx1AK/fIlxkvdiCqb5t1WdVB7B+n1zV1pwWlHPK0eZ5OoBO
58TGxFhbkdc6qn3v9ABa7BkxKWhsxfO1j49WECmot2fUw025Hd9yb2GI0h3E
oaqZl29Fu9C8OiTyrfMguho+aLjs2YX6er8sFlIH8drQTYOPtC7klc0I99o8
hKWG7aKX3nTjMp+jskLuEL65cyXa17MHzdLfb8RPDuOrh5WSATO9yP/8DUct
ywh+u2TAKrqrDzcP9J3bKTGCOxtfzDqr9GG0tKPqCesRFFojKZyL6MOnzUzD
JtMjqNRuLqlxkoQtF5iHmzaP4tWA8g0rMxJOBlC/6O4dRfsY0oxiEAmnnj4O
yLo0iit8XxzKaSTUMfmtl5Y3iknL1Pafz8hYHnbW4mPjKN78VhOzmkDGBrEg
XomhUfSTnnLwaSLjVrfowu//RnFNXrZGnbMfFy0jmex20lD/sqK9pVw/zqdt
zVnfT8NHGq8LuA36kUWyWl1ZlYZ7qjfMp2L78dlKzcK8Hg2jXCwOMdf0o/HX
IdOUmzScOsTIETfejy7tKunm5jR0OuKmlbF5AD3F6/DIYxoGHE79dVB4AK23
LlZsek7DA0+DrnNrDGCi1eZyqhf9/PyScGuTAWR9vHuy6DUNEyyUxqU96PZN
PHaEMBoKVf10vBo/gIJBo6MCb2kYWLKlfrFiAJ+IfF1ojqFhKpHsudY/gKle
0tyRCTS8aPXX2Xl5AHeeDqD4JNMQ3eNtLLdTkHxdoubdexpOa4WJtwlT8PDh
83e7PtBQh8HRMfIkBU1SH14XSaVh2rUB4c4rFKQ+OqYTTdfr5mhvsbamoPIm
7wlZuv0JV7c5Wy8K6sh50uaTaCj95nnO4DsKHjMPX6+Lp2G/EUE6JZeCp4/e
206MpmHe32StrgYKNpdNU/siafjcac/g1UEKJvre0d4eSkOXWr4uhSUK7t5s
pHj3FQ2vF3xgd2Cg4g7L+kSKJw05l9L8tu6i4pRD/dOHz2gYnMd/+KsIFdmf
TdUcoONbHCr8Q+o4FdtFmHxW6fivCkhRy7WpGNtxaXTBkI6PEeMA4RoVl/Qv
T/27QEMR/T9fq82oKB/4sfGYBg0/HPp77NgTKroZCef5ytPwQkhG2rIHFe8r
x9D+iNHwW6Hr3R9BVCQY7SaE7KbhWYXxJxBNxQGv3H3aLDSUZD290fGBisMn
2igCP0dRd6fe3ph8Kg5VcPPxTI6iWi7pdwaRikyO7voyvaN4S4oPVxuoKMEI
S1ZVo9i6NBjt3knFtM4qq/a0Udzwu9us0U/F+hOJ+ufDRzE9M/cFjFCx+j6K
/3Ch9z8lkMFugooj7/iCasxGsetbxpvBGSpG7BgWzNcbxb704pAni1RUcdfx
bJYbxTNRjqC2TEXfs/UPGflHUcNwfv3UNyrOM1ZFP2AYRT5tQymLH1RMr83r
+T45ghd2Pj9a+5OK7vN8Q+ktI6gm7/JMc5Vu/8E2yC9zBIP5JJ9/pev9R3g7
QwNHMImTJaeJbv+w3cC1yWYE77MaRtTR/c8pGoUfvDCCEWLXSj7RzxdT2c9c
cngEnywJJx9aomJ47L1BO7YRrDRj/Bo8Sz+/MXnPnYVhtBq5d2rPJyqO3d5J
fd4yjP/Zr0jV0PP3tPeQa0sZxmZropUPHZ9NqiaXz7oP45DCyWwLOn5//HNM
GAyHsVvpedYDOr7bk8bezssN40e9vVKeFVSM+jMpx8o+jOubPX4W5VLR0WSH
673pIdzztm30XzIVOXtTjWoihjA0SNJ+0J+KrFlHc5oth5DPX2/J7DkVa9cW
+HaoDiHVkyDAbE3F23EpPJdmB3H/LbOAF7pUHDdz7/srM4h/ZVkOHP5LQYEH
C7I7/lJRZMfn47cmKZgc6Gmq1UzFCXH9I9btFGRMbRg+ZUjPi1K1/XAkBZ/o
nC9/6UzBx+dT0/fvpaDQDpZf+4GCvdx3BrXXB/Ae9+vzv7dQUItx/4fTwwO4
+AyELF7T3+yZk4PhA+j1+94Nn9B+HNsfYS+32o8xKkqCuhf78QTbk1zxzn4s
3s4ca0SfezIfA5+tJvajb1l3s3cAGVv7feUFdPqx90buZe4XJMw9kOTi70NG
Z9r2hE61Xnzf5xDP19GHrmzV4j9Xe3BN+Oa598F9OMn/qSQuuwfJexwyd1zq
Q8YtPG9ddvegUdYvhyekXhxaUsp93d6JWm1nuGtaerB87OjgJ1oLrlxadbH8
24HJZQ+WHU9WYddFHp35U3XI3HqNJPODiByGESox3rUYWn9AMTG7Ap2D36e4
ttbgpucmVp8Ey/Cu6pOH3dHVqMCYeMtovQBftfNfzfAqw8bg0K1Dvonoeqwt
f90yFWe0tjBOr8Xic3PPTaH8KchRxXXo0vRbfMtSna/WlIDacyql1wIDkZA9
M1vFHYGh8poSCZcdoMDb0FL3xQtI9mMhcj74ABs7LlXEbc+DfU/U7m7tTwPW
5nP7FYbzgXe2qVwXMkHpaseW2exCkMzduyuVKQ9eZEjuuHCjFMKyL01exyKw
6H8zFdBUDZIybUtKH6vA3333P4efTaDLZXH2sXozFGWJJ2w+RQKmFJeBlaJm
YD3+XTc8nwQq78Ie6Iq1QAnTpfUDYmSoKXvS95CpFZTX7rw8wtEP6yU1hw8V
t4H1a+pw1NgAZHq6F+dQOmEiNMXv5oshyE6s8eM83gVnApZ/8CwPwWCtAml3
eBdcKewPCTcZhqS06oYdZ7pBTph/olF7BFSIzvlil3rgQCg/OYqVBq+uMU6I
vO6FAALq9tWOwYnTFp//5PQCx7n2phu/xmBUWNmYp68X/ENpLsmHx6GvV91n
B28fnGP5segQNQ7/JCpgLaIPXE6RzMdtJsDxkEJ8T0EfHAp1VtBKngDNV8qW
U919kPSlZ+stygSsv/lu1chCgveb5wWjVT6BtJCe5BUbEvg2iJdIbJuEtqGU
ElYfEoylMu9cUZqEuxrbp9ZjSLB90s/rtvUkvLbPsQltIUFm2v7b/3VNwlHL
aQ/ZURLMSLHtM9+YhA9rgmlsX0kwz/Sw4MLhKaha7Nt4zEuGh47d3CsBUzA4
t+Pwn4NkeCF65FIqcQpY/hEfViuQwWZpSnFlbgp0tDa9+HadDNJ83etqWtMg
pTkSamZOhoufZA017KaBgSlXjesJGbKjbM1IcdPAFq19WyCQDLzE0oS3P6fh
yOIGyfwdGbals9dbiM7A9sU697YUMpimKjtmX56BtNNBg6dzybCsPfrmrscM
6FpfMf5YRobLf8a2eefMwPu8n0mhtWTwPhRbwDU8A1cHFZXvtJKhj2XBhZVl
FmTWKrp0eshgdk/VwFp2FuazP7FfGCBDslirwrHbdLl8tMxumAwude67jXxn
YfLPS0LRRzIImJ5dmc+bhe8NRs48n8jQ+Ze9gzI4C3xBHpqRU2Ro/q8j68Dm
OWhhC5k4MUOG4lclia3ic3A3J0X3D11279eratOfg7fm6m7jdNnM0WG3iNMc
+HzXCFqYJsPYfEAnKWYOjF3aQvjo/nR9fDdTa+dg8bVk5qMJMqyxM348PD0H
r7xoOxZpZAg9YBo6sG0eVswslkOGyOBg/EmvU2oeiBx60Xf6ycByI+f8zgvz
UElZvn2jmwwJqmukBNt5ePwuMNythQxcZrwiz0LnwVtiTxKphl5f04DX0fnz
0H5S8vc1Op4HRaRub+mdh6rsZV5WOt4ivmIruV/mYVZzu+tXej0GxvdnxLMt
gMOEM7JG0b+XvLDQI7EAJ4T8HQyDyCA053pA/fQC+NzJ05zwIIM4Vb7+q8kC
XL/5YjiRXn/Gc7WnaS8WYJ7HeSWa3h8cZ84eZX67AImGbOf66P0jc/Uzy4P8
BdBIsSjS1iHD5n8tNze3LYC56/1Nf07Q8+fbWUMaX4AbtjZcX+n3/lyBWP/Q
rwVQuH69R4KH3p+ZH1R4ORYhR/OCdMZmMuwUfJHmLbIIzid2ET2GSaAd33/x
x7lFuK3Wuz7aRIKk0FvsP+4sQlqq5hY/+lz5rWLeeMBuEUq0nec9okmQsmSn
88JrEY4I8w53epMg8XW57ZaIRbi3dJLJ5iH9/rSfECpKXoR/nBaJpldJUP+5
9mRQwSLMXjq/XHiSBPpyXBUhNYsg/q9EyUiYBB6/KMEVnYsQm3a312wbCXyc
mqq3Dy2CpwttR+fnPtitlHzBfWoRIiWt9SJJfZBy6MplvuVFmLIk/64v7YMa
zaUJytoi/Meu420Q3Qe/WaqFyjYvgVGVkvE11z54et/oWMX2JWjUUdlRY9wH
z58TL4zuXAKN6NEdb9X74EybcO6+PUugcsFpaUyYPl/kL0d4CS5B6/Ru1VjG
PpB85arLdGAJEtMvx3ZP9oJ4npHoe9ElWJPYl/KsoRfGXJQ9TA7R7Z2z1xKS
e4FZ5GfdSYklWF9TOaPl2QspOrsMjkkuweq3LZqWxr0wkdVQokWXC1q/JHCp
9IKw+8pte/r3xifN+QiCvWBwvvvgGN3fYxfbd7l/e+jzI4/qLbYEBiy3jU2H
e2CyXUPgrvASRMeZFheX94DipuWUJ0JL8OK/wIn3b3rA6dKAJPItQcr2APkT
Dj0gfnXQVpVnCdiV0/9Z0ed1nWGi0i/2JYj/k0DQlumB2ysJ16ZZlqDtvM+F
VtYe2L7nv3fbGZaATDmzc6m7G2LkBEdNVxdhXKlJJdG3G3LbIhl/LC3CzE/t
+UKVbgiY0vlV8WkRcrfqjYj/6AI+DVJqCXURhMSpEyyZXXBcsXjbbMciTO/0
cePg6YKQ6vmxBXo/WLCttam3doKIWr5ZdcoiEOp4CF9dOuGOVDmxibAIm090
qvZPdADLTwdtZ4dFgG/Mv3cROuC+12KtsOkifJLIHBvX7oDQSPEYxkuLoN4Y
zgrp7WDrlaltKbkI7BMratQb7SBdJkD4wrsIK2/t/bm3t8OviiyVrE2LsPr8
5tlXFm0gOJ230EFegNL/Etd/irQCa7GuVMnjBRjsWGSTJ7WADR5KYri+AFuM
bK6peLSAzkhf6UvlBVgOkC1qGmmGN9zEGbXNC+DS4x+pHNYEqZYao2E+8+Bv
rmBgDE3gOFeaUmc2DzIJeUFPFxuhCupYZDXngU+O694b7Ubo+nA2vm9jDqzG
mR7z/amH1Edynket5qDs3OkM87R60BH+Y/pEcw62jFyR7LpaD/+cZIPWBeaA
fyGrcHN+HSy5jfhMt8+Ck2A1vrKohZv2k6oy+2eh4GJcU3RXFWhuTTgTljEN
bleKOk/JVcELTzxe4jwN/h9dOFKjKiFlVGWPos40VMTwZn+1IMLSkYE2409T
kP3Ngv3qrnIIG5qKv8U1BV/r45mE3MugtupdRczIJARXufl9WyqFTQLhz7Q/
0GWZvoyRjhJ42kT6MHJiEgp37KYFvS2CsMuHvp+88gnuM83vD2QvAvG6PQbf
/vsEaQK8O/tfFoLPm7pbQh8nYLWdusf4aQGsWLQk0e5PAHdS4P2jNnmw7WVu
wkH7ceDIfL2PppUOe6yNZCsnafAnrE+49W4aFLP5sT00psExLabNoh6pkD36
nEV1eBSSxps1jdvegymN8ahh1wi0M9nYHPFLgu3jtovdGUMQVZ4t/aUmEZSv
zO/5IzQEx6Rt7Z6vJ4CwqzXZPGIQlIxffNRjjAfNhdgijudUuOmild/h8A6+
bPuezKs6AGnPJMqMxN5CrrRBcnFuPxzRvsgg8TESsq58PFu8tx/6KgirBRYR
QDmUwj3zmwSi7TdIYcrh8KnO0n3/AzovKdups8wTBrvKBKQ6yX3Af1fJqakl
GI7H8HP5Z/WChkfnzcP5gUCjNmDi7l5oTNVUZM18DdTfTeEnPXugys5NJZzk
C8V7ugN3ZXUBgyJ3hv1mH3idvs3Z37UT7mrlvjmm4Q1uLw22i+l3gFjqvoH8
3+4wTmjq+rHcCtZ3GsV5klxh/+kaZ90PLXCFI4RS7Pwc1LhuibTebIZnZsyH
nV2egsitnC0v2Jvgg++myeAMB3h8Qvjq49oG+PVRcPEgoz1EqW41yrevh2HT
o3bW/rawW4DXSke0DpajBR4dk3kATnLlnRfZEFx3T+US1EyBf3FEiOthJVAC
t1rYZRmDZzX17nB7OZj2iA+xjN0Eg4RLFg3ipSAntb9vfc9VuJcsyTPpUwSK
8cL1Ioz6oM0ZfO7ip3xwu/mmJk7jNKgobf6r5ZoDJfPqW7lbAR5EDZ0ck0uH
o6E3/Jkpx8Bhh4V+/HwyEOMmW3LuiYJ+yMIDE4gFguDW2IcPdgLe7h/2TQuD
igzTeAWWeRXoK+PnPeAOAmEfojiti1Rk7wkdQXlTVNXp7fwqvwlePhmsbz35
CtlyYmSUBATgVeF0S3zxG+QR/GfMbykNKVHX1JjFEnFablehyhFFSA+qdEu1
/YDZWqLef5Q1gBw/FfuyIhMT29PO5mqdBdswtovlHnnoVPf4q+HNSzC/duZ8
gmghvsx+PX6q4TosQRZ5rKUYE98r3hQduw3DcrvW7lmVYW7eNwfKNROQLBWn
crERMfuKxaI8rzn867n+ZiC7Cvd4R7B9lbYE/eJB2Q6xGjzpNSHfFGsDT7Wf
Vu9zrEXhFJOwkoLHMB52KHS0oQ5N/AwYzqk/Aer+tsurXA34OLQo23ndESTv
rBSbGDfiWrUe/65JZziecM+GO7sJN8eaMc79cIHvfV7Km9aaET5vFEGnB2RY
GB+/E9SGmxyzOiwivWBPqxprBaUd+du/UhqfvARCC7Om8L5OfFnn5/nW1h8m
h6Lffc/uxtLpwj+uR0KhNUo/XsaoD1/2333J+iAM6r8uZbls9KG10FnzlPRw
CLvvpSAaR0J3/wPGabqR8ItxzNx+mIzicL45dFMMfJ3ZzmCrR0HX74FH9/rG
whJVI5dxloI9RwtHGXjjIeyJFbXNg4qrTELc+QcTwY6z8DClYBCpHX8TeyNT
QMbFe9Vk+wjKtrjyzT18D6/G12cFI0bw1clvDfk6H0Dx0FfCZsFRXFWccxLd
lgaGqYdcFaVouGGpJCZblAmq9V0Tv4TGcH6e4G6bmgUb87vOn747hs39o1q/
YrPhxcESQ/6kMbyUW2SeFZEL6mq6nHoHxtHXhXj/NSkfZIWyy1IEJtAgzoTi
d6MAZCrIK0s3JvCVsu388lgB3NiYTc+JpOs7F9UmvhXCfy99+4PZP+G+UR4m
G/ES8DB6JZa8+gmrLzM3bO+ogIlz6vE52VN4Ib28/bMpER641znkjU/h7mCF
lPINIuzhH1TcyTONdWKNVmP0/8PNtXmReedpfHnL/p1TBoKIh9s/svIMtjFu
/9wuUgOCPMcj0i1nkDTxwyTzSQ2oxnmO972dQZVm9VotnloQNXn3Z++3GQwo
f2thdqMOYvRDBl/EzyIpOOHhUkYdnN3LUUxtmcVyaJKO/1sHl84bhrt9ncWr
WV8qrRPqgQrS9tmqc8hhlXxKfK4BWm94jj4amEOaft2Dp8qNwJTpW8v5ew7Z
3ipktAU2wvjGYa+fAvO4dmRh2lS2CZ7okH0Cjedx7183wZlnzcD5yUu/nzaP
dnVp/6WQmsFAffDWxsY8Zos67jsu1QJuRh2/NfcuINcjXaWakRZw5azcfujm
AmqmqNZnyrVCto+KcL3jAppVP9a4HNAKLUX2fM5hC/j1t6xAlVIbaLdpXD/W
vIApXM++2oW2wdwT/sDjYwtIcdtf1j7TBiUnRD0v/VrAHCmCuF54OyTN8C73
iS6ir+NS0fhkB1RvKu9acFjEKYG3QpsUOqEhPSgvw3cRFWknv4e+6gTqwpVu
t7eLWDcda/lFugtMlvplrUsXMX59bTzXtQsoZ85qezUuot5ejUetXV3AfuyA
XF7fIjKIyFV+se6Gi+1CSWfnF9FHPvflckU39HHMK1V8X8SlQ6Un/2PsgccP
r35U2VhEanQp5bpED2z05xYMMi/hjNOq8FH9Hogk2I6/Yl9CxVtj8kl0PjnC
eSzxEs8SssElsbSoHuj4L//IUf4lrLTp4lJFOn8cqaSI7VvCL1eSBO9/6oEY
Y6WZYyJL+Hhtpw0fSy90pe8pNzi4hM/UPY9cl+gF8/u6eQTxJeRaTork0+uF
7xrVCgsSS8iu/5Zy91Ev6LVfa74huYQZaSJHJELp/HphfHCcrhe43jthW9AL
qmycq150+9X43QrHSL1g2GWZo0r3f1nG39XmWy8InT/7dg/9/K3av7bv29UH
HwV6ru6gx3ciLF5BS7YPVBv7QgTo8YfknbEY1u8DkW8jf87Q8zO88pRpzKYP
nikIXiLQ82fifu2iH9AH5raG1//R8WGlTmlKpPdBdu0ixY+OH/M874hlYx+0
qqamyf5YxI3Ev00c430QKtv/YZ2Of1TufCjv3z5gWj5YNv9xEW+td/W48JJA
0Dqj7TdpEcskrwmpHiHBiVuF5MPN/7Pn2G90hgTrWyhk3/JFPHUs1IN8lwTu
76m9zJmLdHyjvic4k8AiMnooK3oR1TzGtx9LJUHnwRP2ds8W8ZnJe/heSYIv
GQs6EQ8WcaQDMjb3kSBn/Vfx+NVFtGJQE781TQKbjz+XDdUX8VihVMrGGgm6
bp5UYDy8iOUcUayzO8gw59DVO7xnEUWPX77BK0SG10HnWSc3L+IC0b9KUY0M
pHaoeE1ewFKJhV0T+mSoPZLUm1i5gOOnPmZ33SGD1CXjKz+SF5C0sr1r/SEZ
eCK/JPi+WsCHZho1D5+T4bjKI4GbtgsorZ06KOBHBq9rkbI2VxcwiFz6dFsE
GWLuJF5tVFzA47ceM8nG0/fnEtgwFlzAjmP3vkakk2FHmXumOsMC/lFuLj1S
SIYzaTUTVhPz6DT6dnRLJRlqLhFkaPXzmOWd+XVHAxmibSuEo1PmUSyqJkC3
nQxBXevXUrznUeBnzEViLxnC5CXv/7k3j7pdgku3KWRI3v1rNVF9HvsE9HiP
jpBBdNOXgnf75nGTm0PQsTEysPTcPD25Pofsr+X3m34iQ2v+UUuvoTmMiQ5L
qZ0ig9Xcv/6nJfR5xsm6pjtDhptGfbpNoXQ9Q9q2f3RZ/se+oIfWc2hjxt4x
QpfnCsssbbXn0DY3WPXTNBl68t/n9QjN4dU+RbuddH86/QLyIb9mMbF62tF8
ggwv75j15fXMItfZs4/GaWT4frruvlzaLL4MYPL1GCKDwQPDQQG3WXSLzviu
1U+GiGdinNZXZ5HcRFqT7ibDi7nuNWHJWdSVlfyk0EIGV4dkP22GWfw75rTV
vIYMuTlPCvvJM+grkd5RVEoGVS1fB1LaDJpFjceK5JBB/ahTl5rLDHIoevwo
SibD7cJ9dQcuzKCgioyB2VsyaMr4GTzdP4MKekv+Im5kOG07mOjfMI0f0jei
ZB/T++dW+dMzhGkknzuifMeEHu8FLiUfs2kce+onsUudDPZJykuujNO4k3hg
d9QRMmQIWu8D0hQuiHR3quwlw593yTXeiVOoEdN5afwnCeyOVXxJOzmF7O6J
l1/HkiDu43XdsIeTqEN4QmV4SYJvyTQOosIkPjZ3boqwIsFpzQ7asy2T+EL/
3Lb/jpOgLscgquXNJ7xw+vbH2Jo+SJ89wTVCnMDLHmFK3HReHjfAWTn1bQyZ
lIeydPzo82yRuuxRNYam7fL2tfd64eW1hLYJnzHkK72u7LWnF1qs9Nh+7xnD
6ZitZ42deyB/3OXNAwcaetQUPaqR7QI2Qj1t6+IQ/ohwF31H7oT6Jpm6BOch
zCNrr/M7dIIp+x3hf8xDaPvzd4pEQQcEvbdO2Lt/ENdIZ+XLBdrh4CEt5suX
KbiHY7HrREkznPT26f5YQMJO1rcHOTSbwYNNp/+9Cgnvu2gV1/Y0gVaf8iub
tj40SxlIa5puhJOehCLeiV7U+iNgXcLUAGfC/kkd4upBzYoiw9dcNUC2YGOd
XW5BTbs9WpE8OSC/9dr0M0oxut6kTJ5Kz4QQY1PrcxuFGD3f8pVZKR3c46M+
Sx4swKS7JS53L6fADuHmXykbWVg6n1X/tzsCBGe3NYVIxuKDtoTHDInhOLy3
9c5USBT4/P54zqbqLaoV/2s+k5kA16y/Jl4fiUUTl8mOU1tT4K7Ar1MmnCn4
4t6+ad68DBAI9TTfficHicOO/6yHCqEtYsfVVJ9yzCbltoQK1cC/8TJL3d4K
NJT/BCujNdCseHI1j78Sr4+2qblF1YJ5x6J4aG413vkqlc3KXg+0YxWJbHO1
KDu35cpDWiOodMzmiP1pwmRNl6KUfe1AvcAkK3K9B2NCjcJcttHn/l77v2Yx
PdgvtPtMtkYfqNQz150a78F7z6sHp1z6QLiH5dh7i15c//NT2XqxDxbmmC+x
O/RhwcB3mRokQXF449nDT8iof5Z3j8KJfnjY470nK5+MEq5rpJK7/WD2W378
3Wcyqu3NG1d43Q8eHKzJleb92H9z7Njp4X44c6B5cuLCAN6/0/Ih5NEAzEuN
mKb4DaBirGucdNgAdGt2/m6oGcCzPemW3YUDINRn/ohfhoKmh2/+PvB9ABri
HSRmtlDRwJL3Lq8FBX6uRAxZnqCi5WLugWkvCnDz6pmoWFIx2pUhqTqWAsM/
u8Y6O6nYsemta0AXBS61aBr5bFCxnmta02uKAuy9fTW+hwfxwOeBqJd/KPDG
GQlGAYPoP1MpnidCBf2V9PYjFYMYwpXNNXSCCsNNsw+1ZgaR5RPnApcuFXqy
BsgyMIR+2mzixVZUeHlPIWaz5RAa7lDz2kffv/eddejfGTGEOcyrxXH+VGDy
lf77cWoINS4kzFGSqUAgRUnHsA1jTtnF/YRcKnxpmzIIlhtGV3VKnEUFFcjr
03JlN4fRmD089FoDFaaC5t153Iex0KT2yO1OKrgKVjN+SBlGgocJ0bWfClfO
VYc8aBnGlwoiTytHqLA88WndcGEYg8TPFu/+RIUE/x5pN7YRdOqObgmdpYKD
0PD23sMjqKSiwSG1RAXndH4//QsjOJ+ASzPLVAgeckz8azOCMo4t3U3f6Pkd
SzckB45gccDxQ20/6PFWXGwYyBzBqZoF228/qaB07u/Xza0jeOhFhYTmKhUM
XkgyGkyN4Mj6udEqur6Uz0S4n2EUr97csduEbn/f63ZGOn0vOXbnJ//vFSpk
pjKWuiqOYrRZ6b3oL1ToC1IzvHxlFNsyZbfoLFAhkfdNsZjNKBKNmPZsnqaC
wqjk11WfUexJudPS/pEKd13IWk1xozh4bVQ9lUoFMR7BXyHFo/jCwqg6socK
3JKXblxvH0WTbR+dY5qpINHt17xnbBQbrC9UVlRRweW/D9nkb6P0PcKK/K2A
CgVfzbxeMdPwjVPoHt1UKtwWvdupuIeGhbJR0xhFhZAOLsGJQzSUeJOTfD2Q
CpV/Rji9FGjIVr+3cpcbFdjrd1wROE3DB9IKyT8fUWHj2Whc9hUaxubxkzYb
U6H89vOS43dp2H07vEPpAhVsHjI9LLWm4Qv+Wd7EU/R8UoMSZZxouImrFBQk
6fXz2qsa705Dq9mmoc17qOBXm6fG7E/DPeQRjy2MVBh1l8syDaFh9otQ8skv
FMhPfRVWEUlDxmrRp/mDFNAmeHFvjaGhrvz13ab1FKjZP2Kkl0DD/Shncj2L
AscXFDNfJdNQuGmFLSiCAnzLYqo172lo4ozk7S4U0HHa8fjzBxoaT0c69JhQ
gFNbOo4nlYbja7xF4zoUCBGJlztO17tYXjZQO0yB3DyNHP0UGkoFpx9e4aKA
iHtNqFkiDc+KRLCs/hwA4TBHO4dYGn7e5FZ6aWgAxjmdl93f0rC0MYp3a9UA
lN3zKvMLoyHNLo+BL34AboR99gp8TcP17T+uvHYfgNa193tCvGi4tH/0h9Hd
AXh0mf9M6DMamj1abnmjNgBOHErfQ23p+N2NLVHYPwDJm28yhZvR8cnZkaHJ
MAAVD44+IdygYfz37yHVtH4QPtmkGXWOhn1XbAzTK/uh9LidQa4MDeViLpmP
OvbDq6HIsVohupynHSp1uR+Cfz6+MsxOw37qyye/DvfDhEMl26H5UeTJHtXl
ovOeq5v4ft0eGEVaZ7KcOZJh8OSn3Qm1o5iuXlav/o4MvgsJdecJo6hf49Ga
eJYMZ0/097sfHcWwXYevns0kQXqNuIQG7yjyiv7TUPAkQVHzbbu9v0dwpehC
d6MBCbTY03YexBEkvTlY1MVIgrO3np0rVhlBxYLSKwsGfSBXFq/HIziCeqKx
quvSfVDFI/38/e9h/LdscrBtcx9EyW+7b1Q4jIyb1HclZPZChnFrnzX/MC4p
mh9/9bsHdgRF6y80D+Kn+2FpLkLd8K4+t+Ni1CDe+Y47CPVdsK6uHrHDehC3
JniFPbvfBbrpnAf92QbxwsSupdqcThiTHSVN69Dndfhllz7lDrgV17U1KHkA
l1LjokyutMIU29XjTtYDyCL/yipntQXOVHDIjskN4K/tjPO80S2g7Ryseqqh
H1NNyy31J5qhSDzbxXGUjHEScTqTdk1gPZsT5v+3D1O3XXC6Td/DXca279pg
6sJx1sOEkJBK2BeoX303oBPL9T6xyKwRIVwm6344VyeK9zNbkU2I0P5X543D
3g40Kz+Uqa1YATbCPfbNcm3Y0Cd3R/tbKZyoSguQMm7CywwzhufiC0HC/du3
j1ON+KksePwaXyHohW4RK7JqxAopd3JqZAGoyMgpkJwasLda6ql4eD6s3StT
dA6rwwx5pPw+kQszLyPtnTOrMNlhpkqLlgo/Ofq+fcBKVLFpSMr89wHe/tWL
LSQTkXjknsKC8Aeww1nmkE0VuMbD2rXFIQW8wx0+G9wvwXW9ZNlpxURwvafU
KDSQg+d2RUdcS4iEe7nE1LkD2Xh1p8+Dx6oEKJ8bqA6yy0RqTimj43Q4cL08
apTFl4a6pk3/ndIMhU6zONNfwYl46oGBqmmgH0icfsZ++rE3/jH/fOuKlBU8
7jK/yf/1OTIzMnX8szUBYoEMTGrboH3d4dQcymVIL4mua+I2BfnPcsdOfzuD
Fv3TNTT9QPB+RHl28L4dEs/LF8e+C4XAE2eGnb844CembRKD7hHA6rHnNN52
Ro9rHRubj0aBhdPLq82LbkhWHUx4/SoJwv3hRs/iS6yYIgR1DybDftcpaYmz
vsjU+4s9R/g9HGFlTJWP9cNIgd38rKmpQHvzK75d4DW+QBvqdqssMGvOn2AI
DMaeE2+fTgdmgxTz1PqqVgj6xi/rMmfmgFv0oDwRQzC2XuffT4s8WP9hLmKa
FIquqal/yh4VgKkjT+EOsXAknKn2rJkrgK9iPw5kOYej4ZykTptxIUyUsBIE
W8IxUPo2N1WrCCrZnhdUX41ASujnywOFRXD30gPOXYQI5PyRr9G+txjUV5j6
PLsjsMQhLjt4oRgymVbvMBwnYOmdh8M39ejLoW1fkpwJAQ/rTe7jziqB29WZ
sr3+BLQa/9xVzlIKJd5bWueyCKguqmiua1wKnrOPzoe1E9DjifKbhuJSCGkr
otKmCEip01A/uLUMxo2G0j79ISAcd3F6fL0MpnTVxYvZIpGH/4tjUjJdfkRc
uM8fid2Sfnnli2Ug4xqRyikaiYxHdzWUyJbDbsfsEw0Skbj11wmPdw7l0Crv
9/aNVCQqJ9jP3C0uh+3HDabj6XovVQ4xzpVy8Hqz03BFJBI1J3fFpEhWwJUE
p3MpdP+z48pUIZMKON8pIdHOHomDr8bfehIqICOy5LnLBgFDji+0dzZWQNK2
eFrnPAF/pRcFbf5WAZw3bBj7SQScHPohfUCQCE+96/JSywlYwJ0qeliTCFKK
hqWGMQTkfz6x79ADIjSwHvrN7ELAhOW6tZ3+RPCRvn4fDQjYbqxavvSBCFhp
uholS8BHttveVNUSYX+fRGbuNgLeD2BQ20olArU8ewvbeAQS9u9Wz10gggwz
P1m4JAIrS4b6i/4SocZxgYPZPwLLDftv8rNWwtq2M5mNN+j1TLW4NMVbCUwL
Be+eHIrAUyzZxjz7KuGLQVKHyI9wXLmlei5HrBLUY47IzmI48q6KbRRIVELe
3urCHr9wvD8c7SEmVQkHyqLkli/QZaupLTskK0FDKzfEgCccs+4dJJsfpOuj
D0XzD4bh2Ilj95T2V0LXvLDg2egwtOm6pvFqTyXsTb9F/mUYhhux4oduslVC
AdvI4+P8YVh32GA6+x8RipUz3vIMhiLDFht7/y9EiDrkMZJKCMWB2dip5REi
bLvsUbOhH4qny/zsZ5uJsHBrtliSNRR13Dc/eZJHBMvoVj7VhhB0FB24/S6S
CO9zWxT0XEKww8G32fAZEVKVBjRMj4XgYOGu+zWGRHjtMpovRQrGO5/9iV67
iWBj+lleKDUIJS1eOC1+rQDligmWr+xBOHO735G1rQIsZWQH3RwC8Vb5hWgP
+wpgluP6YwABOEDteTKfWQ7/XW/896rVH8vadtgmPCmHi2kfd1Ml/NFEfOC2
knI5pGyY+06+9kPZseuMx+rKICpVXbNUzxcvWIw/i/Msg6Dy7uKKHB8Ub/5i
xKJWBhOksbpVDh+0U/nBsVhaCk/3njMkkLyR3Yz20MG2FGS+h905ctwbP+o/
v7n7YCkkOHEtOb/zwirDDd7aoBLozPgb42/iiV+/Lyw66tDvM5t2fcwmdyQd
jqIFrRTBhcA0duNBV0xkAIXfUUXAITimEV7wAi8eyVKdny6E+sTzX2ZsnuMa
g2uh66tC8HXxu2p16Rna/PHj8ZEqBK7NW9VR0RkFB17vZLcuAO4st4Iwbid8
ev/zzvhtBfBD7N289VZHHLjl21n/Ph/Gkqe3dzI4oIHwLNf8YB6c+TG7pe2f
HV7M6P531CwHuC8katx0tMHL/TVu5cHZ4JV8+69imTWanLXdvq0sC27DHy4J
Jis0FaE6aWzOhH8Xq2XUau8jg6iior5IBqSV2GtOHzHHFoZ/NQ8002HUtKn9
TZYpdluVft/klgo2Jr/DmFvvIveit8b7dx9AYjduHLU0xg/3y2PeFbwHMWcp
w4AjRpixYJ5E/JgMugkHI0dP3MDX6QVRO74nwSGLKv66T9dQ8MSFYz+YkyAl
+o3Vl4wruIXL8T35UAK8ammnPQzQR8V9Ynm0R3HwRKfgfsF5PQw42VLS9zoG
7q4XG3hVncEvwsKe6e+jgHmG05tkpo2+Hdv1favewu8Dz/SEdDSwNYPDKYQU
CYGmJe5DpqqYjyWmczMR8PXGaPjYU2UkRuZFl/wOA79Z2ds+ccfRUIejQGBH
KCidXmK7qSyLYkdX49wVgsDh+7OxP/FS2Ovddy3g2iuY/0aoYKoQRRNOAu8H
Ox+o3uHZlfBaCAmqPh67Az3pvHqL8iM/HuQ8ZRl/5dwLoHqI/eumbEdjwbII
fRcHePKY0ZU68rfamZNj/8OrVvDfxTvaKzdmqn1DpC5aGF+H/Ys2CdRdtdX1
Adf2MuUCvU8cUkeNgqszCrgFM6PvoVqHTT3fVmr1wtyv4E0Jj/Efz6liD6tv
1Sk33gaO2Tpj08eeOwknGXFII/j+l3h37HqewMKhuxMrpqduyPl4I+tUaQb3
bT6MH+u79cPSD9s26tW2ZR5A5dMGdbN6Abh8/8Kn8v/EsSrB39lkdwje6rpz
j3LyCIbdW1BIYA7DuN/uVQumctgdkfTF73s4bp16e9GdURHF+Is2VscIaM7h
wDTPp4JXZpMHW9rfIMVRUaaEpEbf42Erpegdnrn6pymGrImkvIEv/3nEYu+s
v12491m8w7UkzWwaj101c+8zZC+gwFqZ+YWkBKQG8rRVBFxEl9rm0gNuSXi6
5ou3VfNV/Cl8dfmlVTKeuih5cQ+7AVYqjrY6XUvBcC1D3olHN7Ek7mZwzcEP
GG5sGHLX6w42c97Q+M6WijxF4qWSfHfRRExIwnYlFZtqRC45uJngFIssy5/i
dGS8cuJE3CMztFF9bPBcNBuvyHT/XPtohaPPPQ+Is+cgy7lTdmHVD1E5R2ni
8Pcc7Pj2371NGY+wSu1P30/DPOTf+zD5X99jfKG14251Wx4ebBvfvDBkh553
tbdsVcjHT4oXbP1n7ZFzX8erX2wFyKq0pPAftyMm70mQeu1YgAn2SjdSjjqh
vs3wLafRAmRbavqP98pTTOoUnJf7UIizQcuZpA/P0NvEbkj+QDHuvB896/7C
DZdZN1u9dCnG8fr6km1G7mjY9vb4BLkYj+q0+49uuGOmnsm9eLcSjDs5yP5B
0xPZx8cYPveWoArrObabc57YQd16WexAKTZlXlDaHeyFSoyDtKOVpejatUVT
bNQb0/stzn1nKsPfxn2ex16+RGlHO4qrXhkmRMyX10j74N/7Udwd/WW4pWmM
0uHmi595FZUftpXjU85nHnnCr5Dz7p8aAp3fxhnx3m9sf4WC6rzuZ45X4NXQ
fOFj9q/xeVPlyPG3FWi/1mroigH4pFJv2aSxAivP9sSwmQZiMWGnxL8vFfiw
W0P7BksQvlDTj7U5RUSFLVWfX54JxpQHgq7yxkR8GlyuyTsbjG92e5AvuxMx
37l/2Fg9BJ/Hhg7UxxKxN9DkfW5wCILXgwm3MiIe+vl7fGI4BHudn7l69hCx
RfM9ZUosFP12Ld1omiIi5yvp/GTbUPylOX9O+xcR9S/S3FjKQ1Eo9avBOksl
8sWdPPX3H51PPj2YPs1diWbdTR3WWmHIez0xbH1vJY7qlqxr+IdhQG5exCmx
SnQi1QdYt4ehPE3iRpJEJUbbfBbtZQ3H/X9zig5KVaJpuab5Ld1wtLw296GV
rlcMyxv95ROO1q/IN73p9h9WGzhDa8OxQ/OX2BWhSvT4F/iM43c4dsa+D5Tn
qUSpZpMgoyMR2Ljz6CnRrZXoqFpe/sA0AmmcEpz76PHHE/+Y7YmMwE0iIWzC
9PyucBr/vt4YgYHJTBaS3UQ8cLpmdOdKBJ5c/+d5vISI598/eXpEgIDPXv6Y
VYsiotfvw8fjNAi4g+x39exzIrbuovhqPSCgssym6WxDIp57Mic77UvAQzni
r2wUibi6+PzXagoBux4UkV9zE7HJTeSBBRJQ+tCW54xLFahoOMsnTiGgRPip
q5S6CsypDC4SXSSgfKGZ0ZbICpQW+D2pR+ePvL2WRb7mFWgUbGcRQue3U++V
3t6Tq8AGPUb2kf/ofHS852Hkv3KM0+zOERKORCZGrUqhlnK88+GWoq54JGoH
DUj/CyxHF5Nv2bp0fpvmthosd7EcfR8v7uOky3ckrpJwZzl2TjBX+h+KxO/X
PrImdpdhcSQRP+yPREVipy31VRkORIR4X9sdiS9rkm+Za5ThzhkrF79tkSgY
Lat3dq0UlWanjkn9ImBtwbtPvlmlaL0SdfnoJwJuu6U1KXC7FKtvuCT6thHQ
f2zhOCtrKTLG7dsslEPA00N+05dLSnClnuvZTCABG0ev7f9lVILjVftkei0I
uGHnnGiQVoz9P6YIrTwEVPWR/rb7TDE+mVbSKp+KwPzj5bMKM0Xod8hFJiA/
AofjiDdS+YtwfxvDrfiTETgdVrb2K78QjwVmDdb+CUeTNnufIq1C3GcbzxpQ
Eo7vbzZK25sVIOfWozOje8Ox9m2m5/Ov+bimkiB7piMMm5orFX49y8dBiSdP
hR3C8HzO7dKbPnkYytV/8XNZKJK6Jn+d2sjCO9eun7JkCcFv+8936XzOxAdz
ArsKBIPx8xEvZvvBDNxSUrYeeyAIW6zvzWslpqHc9tvmauwBGMOtvdy/mox5
X981ylv6Ip+r4dO22iSMd9Zi2HzQB3VWZWJEfROx1aEySGLQG+fUs2Rtt8ah
v8LMIzVBT/zJORu6GBqOfu7ju35oPsWzTovapND7IMAXwLxt4DzEvrMv0ox+
CoER0ymz8sbQxLv33ucWTzgSYUKYWnwASVquN1q+B4ODz5HTZW4OwD/7o7M5
IBaU3Nvipm28QXf0/pZtPNlwNz5DWkeeAO1EhZC1zzlwYPD3i1dFkbDEPs4n
YJ4HAfszvnUpvQU3ewMtEZ0CeJSamWNwKxpOzv3ZKry3BPRirxoT1hLAKNfe
vpGlGgpaBFS+yaeBazE8HdyGcHHIX6BRKh12H1tje8hcA+XZSj+XxDLA2v18
Ten2Wkg16I08IpoF/YIZSo276+GDnOYfG5E8wPXK1yIqzWBv4LrsH14E2UOt
uoOB3SA6196/z6MaVmXHMgxZemBBzzbB8iBC92i4btzpHpAjyxTVdSGMu5yK
DW3uAQ855Vm1kBronStKpTT0QspJnz9NM7VQk5C/W6iABJkVf4/UZjRAw0nR
gnOfSUDY06tRzNgIy+dyS/glyCCavcHx06gRGOXXWkMTyPAxSP+yHncTrM18
c/L36weecz+kRzyaYd9ytz2HOgWcrMi7E0zb4MsV94klRwpEpr/4dK22DUwv
6fSrZFJg37ddY1x72/+vgiuNp/J74pVUhF9JWkgiyVIpe9RECS0KkZRCSkWR
JVv2CJFdlpQ2JPu+j33LdhdcXNe+3yskouJ//y/nM+fMmZnznTnzfV48wN5k
cfoINwWg+CPLy67vsGhzRm6WQgHrYxq/OzRbYF4sZahGvQcI1A2R7TvaQSkm
uyvIpge8nBRHDqu0g8PKmmTC2x6QXu5dNnzSDrM9VzLfzPRAlEQoqjS0A9fR
u4ww/17g7a1naXUiwEpv1s6+GCq8v79a5UIgwnXfalnpfCo8HuqTuP2bCMf+
UNJaCFSYL32pvCxAAkvNZXrjpj5wcTirdNWCBC97LisXmffBY5YLvSrryOAp
9dxtq1sfpB7TyPt6kAzDN4gWb8L7IF0+9XeBBhl28o69uF7aBxpHj8eWB5Ph
oqok342NNHA+JGIts6cD7h1UnjLgoYHwCfWy4JMdoCwxkuEvTAOj7SHK7jc7
wCrE3tgZaJD+c2PN9rcdkBy+yVPhEnP/Z0WNzJIO2K8ZyXLQgAaxEbTF7p4O
0BScX3R/TANLK62e2l2dkPNeYXDmGQ3Mjz6J8pbthF01HoJ+7jQAyYFX1Tqd
MOS2afPFlzSQ6yzw8rbqhAjpjB9yr2mwc2X1XOWrThD6vf30xQgauK0R3jkn
dcL+p+63X8bQ4IDQ89tpVZ1goslWNxVPg6hv4deu93UC5Zz/vN0HGjyT4L32
bKkT9s0kPRL5zPQn9cWJLdu7wJc2VPbnCw06R9bq2cW74GlC2IulRBpUmJj9
cGHi5qHE7J3dSTRISbnve8OwC34s71kxYuo3G2U8/vC0CxoKd29qYNqbP7Xk
p+3XBYbBw6D/kQaVZ4TR/F0X7FhvZrnlPQ2UPY1XBnO64K250w1aLDMeqTOH
yxu64BPr376uSBoIWZMUV6hdoJCN3QvBNDgnXC8cMdsF1vxRsrL+NPD74k7z
Z6GAYtLV4WhPGnDay9zv3kmBp32VffudmPrarSUeohTY7lZ+uMmKBhtXZQdd
FSggLShAeHOPBvf3sw22ajBxbVVC9zOkQSA3f/1TAwosr9rGxmsx74tq8tnM
nALeBaIbOlVoIFF47vUXewqEdBdcOyFDAzHuyncnvCkgFsvanC1Cg8gHHgts
IRT4rT+bcp2XBj7sC9libynwzlT31IFNNMgssNoQkkSBXQ9ZKP/96oMNAue2
KWVTIMLyO0V4mIlXmW4usVKm/ubDRKP2Prj3tEHWoJYC55UDMsuY+LTtXays
a6HApd+1VueS++DAz/RfNh0U6CiIvTcf1gcZdsW7b1IpQKGa8zc874PfP1wc
XYcoIB75QLTuXh8QZLc8oIwz129KF2JcZtZLDJx5RKfAvQxrWQHpPnC6+bDA
aZYCB2Ki/+ru6oMXU3LF0T8pMGsjZxq8QoUPH3+cq/1FAUmyxS0ClQodQY9v
/VukwN37dxh7y6kg36rCBUsUqLWQEn78jgq+ORRrP6be8+PkrkZXKpCd4j91
LVDgo6/t3LFbVCBl7GsTn6dA3rzP4EdFKsioSop4zFAgcn+MiDAvFcrENg52
TFJgbmPnpuy5XvAqfqQuPkIBEb5NPVebe2F3GCHRpY8Cz9y81tYl9gLtgOP1
BmY+JJ8JDVe79UIrObCEi5mv97fF/sbq98K2lstwuZoC25alW14e6YVpBbEb
XoUUsBAUGXnF0gsZSn3+qakUaBnd3pNM6YHOh29uNb2ngI5A9qq0Rw9cSS7R
7PWigJddW9QXnR7Q16rO+G5DgXSNkAG5gz1AFtG4kmJCgSX3H0Ss6Yb94c4X
jihTQLZHWKkkvBsG7i5otjHx6HV4idRn0g20HyVNhsy+2vDim3/CHwpUpR3Y
KT7SBapF+v16IhQolpcve+3cBe/51xvVMLpAicvR3MSoC4ye2P96lNcFF7mU
rvBCF/QRXn95yKzL/pbDew+udUJQNZeulW4nmPvsFMOnnSAyp/j+uy4Z9Hf+
xxcj2AFhvfZjg9vIIDQ6EnR9jgyvkr9suNFCgjNaRzh+VpDBisdyo/05EjhH
PEiuvEUGGV2zhlwJIsRZuWK1LwlSzf+JUSvbQHcq5L+SzwSIiip9vijTBrjv
hUqHOQGGhmZ/aiW1wj6ZzLnfYgSwULA43ObfAu5r/y3d+dYOBqd9Diac/w5X
IvL2Bqi1QdE+5Jb9XAfjnXM+nxqb4FlBd0QmZx20SQtdnjveBAdIxpYVz2ph
vjt2zi66EXYz1HRz1GuAfdT/oZhxAzRukVb0Gq0EuUfmVW97aiG5VUPklkQx
vEoxYn/nVgEHfCYT9i0WAk3g5L6ENwgv9mUGlVQUQNVBMZn+o+XApmMwXaSX
B290vIf/u1YCUx8uZ/x1z4SyB1ySR5zzIIueEV3mGgeFru/kGpw/Qn8YW408
IQlDbMauXtudhXuVtrlwcqVgrRHPwz912ZiYWEZ9qZGKe4XVWe455OK2M3Zz
XEx+yk8yW7jSV4CSRjU3aYW5uKX3sItUaTk2an4r0D5Shk+VDO+GG9Uh2/w9
Xx+ZctzyJR93nKnHnpYnm1cUEUe59h3YJtyA1dy+6ZXvK/DyzoidplONeFHh
xfCu2Cr0ubgamOragjvcN8q5367DOELw0j0DImYH6BQpEevwO5dM2uR3Igb4
vL3cc64eCyeJCbZAwq9C15syDjVg1y+WpleHyIhlDTNG1EbcVXtcxnyhA8+d
db7CwtmC+Yy5R2GvutHm+Hpdo8ctuJXHx6TqXzeSIpLOPGhuwZiq8fAyqx7U
j44O8fVtxV8WrambdHtxpiv2VsJUGzr563o78/bh2bd6dhIKBFy1YFtrPT+A
9dmdNc+MCdjRuMFpvdcATv3lyZl4SUD5/t0X5koHUCXp3ENlMgE/3FUzXjs+
iHtWpWr9TYl4klYWE7Z7CH8THJVnvYl4R1WU9bH2ENaYHHN/9pmIeivOlXP+
QzigKtvbP0TEngaWmtnlIRzrfJ3Oy6QcAhUhjt4dw7ivXHnWwoqEGuHFE0+2
juDFDL3dfX4ktNoXzz5/ZgS5UvrYuItIKLND7XR+ygjqHlg072gjIdl+vHqe
NoLJTc0dOaMkzB07PlzGPYq/vxoEVnKRkZtf79ei4yguPXNomD1Axkg/Flvj
b6MYPCr056QMGVV4TyZc6RvFbScZqYL6ZKQc1VHNhzHkXZt0Lb1HxkccWrfE
rMfwwB2RSVs7Mj78dNJ6T8IYrqFGjlwwGZVz/iyZr45hQNJYpWocGdkOPzla
JTmOKbKCTRaJZIzTODMSYjiOzWHTZ7IzyVjyrW4j8eU4+sySEnmLmf4E+rh7
546j4NqPlzFVZHRr0tT4NDCOn+q6XJSayFhdpXL9GMcEqg/HiPxrJ6PaBt6v
IvITKHgoU7q/k4zUlvXwwmQCg2N/3hnqJeM7j2kBzVcTmDoXbLV5gIxt5c91
bXInUFt38cSVYTLedTlJ/0edwKKoNp/iUTKGt7/9N7lxEl2HGFoXxsmYlnzo
g4zkJO7IO+WxxpS95Vx/9epM4pbr+by9THnPKXcBmuMkzudr7qWNkbFW+Jaa
4rtJ3JBFimdj2vuvKyV6umoSz1ZtwdtDZLSx87j0c2wSOw6bJdJoZNxb4Rur
xT6F9jY7Xwb0kNH8LnfVH8kpfOPEeHe3g4wJ8wpblrWmcIR4Qc6ijYz0orGC
c9ZT+OIba8LHBjJqXFk40Bcyhc17bipurSRj54RSfEXmFMoMdj1MLCTjyWfp
voy2KWxNUf1kn0HGV88fqJjOTKF1jo+J8xcyXs6pk9vHMY0ls2/E82PJKGbi
3MkvNo3W6fdeizPvs9ohPuqO2jT++Vx4qNuLjLmP634OG08jI2D/m2p7Zv46
+J4mu0yjv1BH4LQ5Gb9nmEd/i5xGw1MP2XUNyfij2Z5HJW0ajyy7ifBcImPD
jqk+iZppFNq0WVvqFBnX67WQH/VM45bK5U1fj5Dx/OB92t8f07ix92yD+z4y
rlPRHB3YSEf/jGz+fA4yLhXf7t65h47n9u6vUJ8k4aeE5rtPgI5LRvfOJHaS
MOSmwK9gbTo+lVfIf1RNwlfuaQ9XTeko7BLVFJVBwi8i7c2Ftsz9UsOSknEk
fHnC5Vi5Nx3f17WFSfqScJ3z5WTOcDoWbzhfGGNNwnNpsbqJH+g4mcN2tfIs
CRP+K2vLKKXj11wnA3dJEpaaH1gUaKTj+PWAS1k8JFQxll4hken4mXeK9cZf
Iv56Y7GztZ+Olx1+3XUcJuLpDJmXHFNM/Y73F7c3ETE9fyHi9U86zhhdTxLJ
JOKCGW+A7l86qh1auF8QScT3O7gLDTcycGLgjXuDMxEtvZ49+7SVga8zoqcN
7xDRyXhO6Ag3A+lHzFOszxLxRtz1A0u7GPh7g33FVlEiqtmm9a7bx8AyBT75
o+xEFL52tErzAANHDT34e+gElLC9dpFwkIELRm7e29sIGCo18DNKlIFHrvp5
d2YS8Jdy/+lYMQYe7whWkAgjoKFXTl6POAMvP5mq2m5LwKW2PRPXJRhYGiyn
HqhLwL2aUpbbmbL/izMzb6UJ+F/Uc9om5vr9wuMjajsI+KVrblD+MAOv6ay7
5T/fjptvLe7/LMJAW5NTfg8J7eiw86HGRSEGCsv893Eiox3liYnbjwgwcP3Z
gNEtr9tRQjZYQXMPA7/ZXghrtmjHYit/j/c7GJhdrz8tq9mO70r8co5xMvDn
yEZ59UPtqBG57eMyKzM/jtTyDSxMe/kKwv/+0dF6ZuFdR3kbLrdm8pz8RcfH
FhPWLA5tyLa+xjBzmo7tk0sYMNqKHh4b32h00lHHcfsbRlwrOmxgPHvUREdx
/QfECu1WvCFDd6stoyPvFgnj7yUtGM9JERb9SMe7DxdOcFi34C+fuv4jTDx9
BnjULtyC+jbE9U+YeONhPyu96N+M40a1a7EmTDzmXDAzUW7GdROHpPyu0HFi
6bf83ZnvOM/11ipDmY52HDWip7W/o7LcNa40HjrOPVvU6+ZuQnPVjGHLkml8
6/MPy0oaMX0m7oTgh2ms+TmfcM2sEa1O8f1i+Ezjkpx0ZXZuA6rdO7C/99I0
fuL+bduvU49nQ1i2c7VPod+tfV6bVurw8sHM2sT0Kdwbob6e+wPz3U+xs74T
OIXX1uJVf8zUoqC9Ea+M2hRarg8Ytw6owRuNHO9epE7iX/3muIfHa/CFCpTL
vZjEwNg/Ro6UajwomBqz7eYkMtLi3sweqsYDLNc4z2yaROuyyzGLtZXY9rs9
PkNnAhctjuvLCpdjJ++KzJ+aMVQJKtoZ6lSG46/8RauDx9CfayG6q70UP2XK
DTTcGEPLmjwjHa8SnBAkqEdMj+IHuSoPhflCdHkeLnxz0yhq/kv2PKhdiIpK
x1RVvo/g2B/WddeyCjCgjlfRNngEqepX+ZLt8/FpjJJm1c4RNOzXKNX8Lxe/
KjwrO7t3GEsC1sDBKQclsm7IYPcQSl4MHzw5mo1uj0qeRkUP4Vkj7rJvlVmo
uolWYswzhH+Zz427QAbudiabfdg4iHL79YL1udLRSdkvXx4HcL+IgNTs+jQU
bA22VnIawF15y/3ZCylIvmDefLirH58a0xeusSfhHuvjp+PD+9DmntXzKbFE
1NqcWD/L1ocRvfwflS5/wUJbw+Z77lR8Enh799n3n5BPNO5ljXkvmn9IVjtp
k4DkOn2lhqPdSHvYmMdi+h67Tw32xL6joPnmbu/68XgUOG6snMlJwSOnNHpU
OeKwxf7309zJTmwQP0VXK4lEy7sj2m9jyPh5xXBdyfMIvBwz57TKwnzX17+I
YVEPxwHGTrO6xyS8ri1zUW8xBPfjbesYIKLyEV/RdQXBmDQ4Gp2WxJyjYl+6
e4cH4V/HX8GK/zHrXma6+7W3P17RqL8VVdSGHN0C49pvXuJDjqXNuT6t+HVy
rqWwzAfDq55uGbvagpO/boVRVb2QfcZUOHWkCS+K7lz6/sEDBfB8v05aIy6I
mnr5iboh9cTHE9L2DdhnOn1H29QRD8WPytRtqMPdc3HGrkX2aNGqh68aapDi
lhtlKm+LwynxbzKDqnHlQZuJCNUaC/UmT57WqUL920LdbVce4+3hGYnTvJX4
jLSgFyH7EN8Gi4/a5iDyKX3LIj28h6cPyMk/UyzDr389Z2voJqjb5mQdVV6M
14auqsi6GuGv9oKScdVCBA3/DFa8jqLx6hdd6/IwPv62idZ7HSyaMjF4pJmD
f8cSRHKUL2HDA0uhqu+ZqOrDwUpwPIcKzwOox+JSMV33YXHLmBIqvePfuhqf
hJ8qr6sn3jiOIuGzFjsTPqJjyhK7f6QQNnHLqSqejUN57iHDSTInJkv8/GSn
FoofFs8+2yM1Wr5nBrS+8rviXMKwDSGuoFzsb8rbquJ7kOy+lZEjug7pB/gn
Xln4g1RHdBypdg9GRUgdJ+REAdsQ9VdakTiGGC4ZRBkkQIp9mGdhnRzaJ3eE
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5394#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", "\[Theta]", "\") cos(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
IJT34IMV3twy1MqzngMdbM/nNnfboo5spo7T/nyI3F354/vBl3hB7vBIjVsh
lKl51oj9c8XkaAHrFa1PMLImbkb47YYpR3kna08VwUJ+7TtXdg8M30yuH/1a
DE+/btmWke6DRruanqYFlANF6OQq+1dfrIgiXl9zqgBWvvfabef88alc4T0r
i0pYltxnW/nlNZ7Y2F0ZaIDgGPbVZe3pO/TtNV96lF8D/ZfdcsbPBaPMrsV/
8udrwc2/6YDi5hCU0NWcsSmrBble6Yi6olCkjM7p5jfXgX3b7zuSd99jP6tR
UNSPBjjc4Owrci8BW2uu9YY7tcIvIxsFroUEzNorqRrNSYSrziZhg96JWO/w
X7VRKhGInIlcrOVJaJ3FInqipw0iD/383KZAwP0Pb23WlOiEO083BiVQM7Bk
xcFrflsXvKNUWCcmZWKN4lLuI50uqHFKDtY0ykKacLTNbGoXUNR3iRYuZuOP
0qNzp650Q8Vn5nWd8Dx8EXd5of9lD4R5bFq03V6ITYNSR57O9wHTpVKvvX6F
OKlUuH73Sj8sPag983frJ7zMHVDH/r4f+ju6DvtvK8I6xHTPSwMwyqlHbTxQ
gtlsa+yHfQbBo3HmE5pXoIU4wf7thhEIvS9VLr5egawWPgfkr4/Am3s8Xyxe
V2LYhyy761EjkBH2M5Upuwq1bueG3zo9CkdPSmVWOFZj9evwPw6aY+DtlO+9
p70W78SxGoddIAONZ25yZF8dblpz1ddk8B/CacX6zAd1mDi+4b8gOzLofKVu
V1ypw9O5wpudC8mwRDAoqOFrQLFDhC19Jyig843z+a5nDdhdI850RZ4Csk1i
0pLFDTgiIfOH5x4Fjk2qSk+pNGLT9qGMLcEM/vG5b22rRRNeFhOcclikwDem
M4SLxU34eIo7hWkbYz9zv/+R418Tuu1LqybzUmGsJuKL+ZtmtM8dXEtRokLm
mYSfs93N6DESL+TF4B95DZGi89wtqPjVr7OIwT8ai5zjdFNaUNORY/fWUCqk
Oim+KqC34EI5+24+AhVMY2mzliKt+DdI/KbPJyrIKvb6/ctvxe9MHCVCPVTA
XpSr/tGKBkoCsQ+pVNDubYlqPkdE107LM5Q5Khx/9fVoSCERCao22okMPiFo
fFeYf5GIN+nDXDm7aPD6Sk/S5Kk2vHL5ddG/QzTwfeSf2W3ShqjhvhZ6ggZX
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
PVlwvR9Nmf3qtmPi76rKNE1DH7W5Bcj/D+bKR2k=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5416#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
jK43BbiZcF7+zb56jC4afj+7pxAbrS1Shlvq0YRg1r+RWoh/L5kMEO0a6PtI
ePIboQj3Wx+96T9IQPHhbfY8GyW4V9RHtCezGStaT8dP6FWgVl6CwDv/Tvzc
le3H8aUCjZ1mJ8budmH5gz/nRV5V4skfhv9493bje9cXGTExVSiff1+05Us3
Dhxw5+LoQqxd5n+fG96LRssWd7OP12CEXFHxQyYizrX1HFy3qMEuoUARbSsi
VhEv8zIt1SCIhMlUqJJQKyEjumOxFhsULGbiV/vwceFNXucTdchq63VW8FE/
6ukm2+8zrcN2HsvCd8R+PMw2e5dntA6DpDNi2LMGsNfIN/lsST0qsh2Pz9Ef
wstcM/KVtHoMbO/piiEMoXXb3sFNAg3IeKGpRUJ8GFUmAgeLnBqw3bHbWJBp
BH3vut+WFyNgWql25LaUUfz75T6/tC4BNVnL33HsHKPjmN87Wl4RUGXoyQnr
52P4vmeNOaeFgDLrk5e4L4zjBq9U+/IXAsYV7Lt4OWEc7Ub3SXftasRh/z0L
WVsmMCx20ZlToxFvnb1UsdAygZQ3QaH25o04ddNK9z9uMsYZxTTe827EZp2G
VVUVMoqaSa8llzeiqiLlVmoiGfculVVt9DSitlLjEXY6HiuvzubsmW3Exr8H
KQv0+2inbA4zaVcTHrM4E7B2m4KXh0tojIJNKFEpNCnsRUH/u4JTiaeasO1S
NSk7n4JFkg92lcg34etfwSc+0u9rY6pdybmrTSi8f7WMvHUS3ymW6BzXbkL5
aQstV/FJTPCoj3hn2IT544sTz29Polv6E8O7Jk0491fzWunrSawbeZ0d94Tu
Pzo89FL6JIruzqrXpPOYCopa9b7uSSwfl9/x/EUTXuXrHDz3exLTTTaEttg2
YfCdPMYQ/imsz/zVyUKXJ6W3mhxXmMKxHQd3uNDtNR6Vyfw1nsJDfNcZHtPX
qyvor93wmkJ2zGRqpvsryJ+7LpU+hdzt0RHR9Hhi4uQvhrdOYXlqt4PD3Sa8
9FKCk5E2hdcmQl9u1m3C3YMHDXK2TuPeuvuy56814VMGM/UIkWks/lDhJ6jU
hMdfZx6oh2lsS13WLZOi5892iO+QwTTG6/9M33ykCefTB/1qbKZx3Z6Qx7S3
CcvnykgBAdPY8dGqooqlCS+6U/UD06axJu+DzOk/jXieZTCkrmYaq+YOVdyf
bsTAmlAmocFpJOSuL2p2N6J/xcS5jIVptOWITGWqaMScjfsdBkx0XGJU1u2U
1IinxyhmknupeOzyr5dVfo3oaGjeJEbHLXICz9pbnjeiFNE5RU2BikldT7mT
bzeiwbOzQ943qfhIjFxx80IjPmR3vUAxpuKBIg6VfqFG/EmVqNd+QUUvqriW
JFMjUo0vG025U5FfgZr0lErAXo4VUZ8gKsa1THC9IRDw8/MFYaU4Kv658vjj
myQC/vlp6MaWTUX58wsXn7sRcHPv2ZcLZVRkeeGjcPUuAZ8xKaiO1VPRJMur
j1OWgGxHZFWGO6hoTvhu1MNNwFP623um+ql4g5HdyHexAV3Zev9bHqdi89GZ
B0rNDfhpjO0xzwwVZRJKuNdjG3BJut5T7gvdX8gr6TrbBrzB5XXz8XcqXjhg
HRes3oAH3mW8ivxFxR9ZVhfthBpw+22dlp5lKi5Yeh189qseU85HM2z/S8U9
fHpGb5rrUf1GxNZLa1QkDUQeq4uoR48rPk2v6XJ+lG+90JN6nH01eLGKbk/q
vOGVLVePxM+qb/+sUPGkofOE2Y56LNm0UnXqDxV/3rLUuDtSh0xGzjseLlEx
fqH2wfv0Ooyw+FEatkDFyxdLCZvt6vBO7k7OhjkqpofEH8SLdVizV8z5C4WK
KVfVrjSz1aHKMfMnbMNUbM2+s+XgSC0O9iUYn+ihYtSTRvmR5Fq0ue71R6mJ
Xp9Vfuo3y1qUSEjuuFlJxcPtnu9vMtaiQpjl8TuJ9HyPvK3KaK3Ba8++3NQN
paKQgFCGQ1ANcr3TW7viRcWrJWYfIgRr0P1AY9eeh1RMldomu9CBqNDZJvSL
Pi9kJeuh5tuI3iGdKq1AxZD9g/ncltW43SOA7R4PFe9p/PGKX67CG47DD4U2
UXHg0k8ht9dVmLRxdnF0bhorR5NtbQIrUeRYY6ly6TR68fnYBWaWozPf91ja
5WmcCUr5Ey5ZjtxSFxaPHpvGF29ceO5VfELfz3d0XmyfRjTOaDZsLUOdRssH
x9umsLfx3GH72RLU8AhLUYQpbDfbkT1oUYIJFYYW3/dOoSWLxLj+72IcKDjV
XrQ0iQMVec+WtxTjoSsMR5ySJpEYK5GxcKQQrV1lc2T+UnDZpGzlU0EBJvnU
byvopOA3W2tglS/AwGcV0mrxdD66jVHDWCsfrRmPZs5epGCNtnRmNHsutnc5
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
3FkU2wuI9vTL+e/0JLC51ystEbKAftxwUaf5twqHKtl0X+ktoF5/4BJfW4Xd
/ZOH1jgWEPOaMzumgxyfweKBNwvI89wDvodYu1WQFumrU2qeQxzF/CUpeqvw
UFIpmdNvDgWzVAu6yqyCGl8Swy3FOSS7xp3mcGwVrm3rGph3ziKZFlHmisgV
+Ck26JLXOoNM/8kP/nixApjnKWHevjNonI2f9ICc376W92+13ppBJxeFURnT
ClD+7vj7qW4aeU2yNSa+Xobin+/p3PKmkFZUWt2MEhEI6QmuWy4TSOUqkvBj
J0J+Wh/lzOUJdC8oU8ZhgwA8C68vuBPG0a+euY980QSQHuAx+qIzjny7hgsU
JvCQKpRBdf3KGDp5nsrZ5uYSLAMnq8bsMDKpuC0bT7UE+yUV4z3vh1Gjsyi6
NowD9jAPydsqw0icbdC+4xEOYsVa7fTLhpCeUdls3CssHCaOZeozDiJKVROO
h8rzEHxTLIHk0YsCTezG/9MYh+sfz8zlVLcih4aZW1mNYyBoshjEzN+KOr9f
NHp+ZQw4pC9Tpse1oH/GGAouhlEIbM8VDd1uRnzOB86DfUPwqnPfji63HlHq
XEj6GNENB24ZrkdDy5Go5zU3I0cyH5gWVf4XW4ak2oX1Iu51QdpQ4RZzZika
b7hRV8rUAT4lMyyvw4qQ9UaHUcZNBPV78n/9n+UgxjW1FtmKAvi7yXsrcioK
fXz7Y1bcOReizlB9liyLQEH2bJgiqUxQt+ZYvDQQhN6aqDoaVceC++H8K27N
L1GT3a//vnC9QeeM80dTvezAWmd+aZctGrlGMDJ6WHsAddet5lrGRJTe80CU
47IffOXZOnzJMhuJmixIhbcFwzmvL5V7+uXIX6CqrVkpDqoqvp+8KFaJki34
R7WMPkAKbVrbUepqtKPN2rtnkgC8i2kyRjl16MTXJ4y1UikgxLurwn63BW22
26cMp2UAF/rRa3ihFb14at3t5JgJx+kZbr/cbUVFnzoIHeJZoEnB56TwoR29
4HM6VVSSDaIyX9keFnchrW/xVsEan0AgJu8r1gyDrst2XGCZ/AS3+s/hjei6
0eJyzt8wkzzwnhkmUJv1IPkb8fdd9fMhkO6pvujhXnQmgIj+dOcDPVta4eXM
XpRoqLCdKF4AbMnql31mP6PhVkHfJ4cKYeW7i0PHiz6kpcstn2NSCMckJz83
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
APTIr2Y=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5438#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcmHc81u/3xwvRkEpEWQ0KkSSUyhFlkxVKKSpR6oOIaKKM7Cgz2Xvdt0jk
2Hvf+7a5jYwSTZV+9/ff3/3P/Xg9zrmu93Wd93Wu8zzvXfb/mV3jWLVq1Sz3
qlX/+///v0QTeznRqEdgvGd21f69n9VHhcq3ECPCIQWUjLokN0Hh7u2/63Jf
wd86M/lbfrtAbGl29abnybDq6LVeGwkFyPrv1ttTpWmQkCg/a2x0BGL9f0tA
Sha0l3f/CLx/EhS1vWdFQ/Lg1zFp45AWHTA9K+7i714EP00z+F+tOwMSPA/F
+ApKgOfBx3HFZHM4xtcQfPo1ER5xN/+rOWQNNU5B3FWhb2F/+V2tPPWL8Jgk
fuK0Tzlw+fROcNvZgT6fMtdbhwq4MbZZ6+fFq+DQGmE7fKYSjsc37EuLuQ53
2nK7S3cgaO/c9YNKuA2vjh/x5HpYAxOCvyzCDVzhMM9M/+FbtaCsebuz69wd
iDn8+U+fdj3sszaT3dfqCc2x4WrbFBvA+2xD010Zb3jVlUUK3t4Iz7wsgs+k
34fJTyIVpawmOD9dNvRx6TFwv/tWpdHcDFEeby80W/kCfXN5WF5WCzBChdf9
avaDf5VPv3XYtQFxz2KEccczOKPU/legohNypi8EL18IBb59WU7OgV0wtbBT
p04kHHT/Tvtyn+2GWMstBB23CCjrY1wZcOsB+QE+prteFIDjcV0quQfCsq58
Zh17Ackb+XcbKfdC2eWFstxD0SAkcJUQ9qUXFguI+EjuJXx5HKKma9QHHXP5
kwcVXsGNu/MXLmT1Abfzh5c+yrFwM8gz6o4lCWDffyhkGA9fuDqKHyWTYe/A
2llywmvwcnFcqzBPhjdS5afr3iaDe4/9ut9HKJDpGR1GdnwDzBe1XzvaKFBs
kdChGZACgreqjzdupoJCjY7zU6FUOLjXaabaggqfpmdvWmSnQngNkyOJSoUr
IW9X9rSnwbgj504PARpMZwjtnbmQDiLiyWtVTGiQvLx5sPlTOtRWXgq0qWXb
d9u+MuPPhKbvzSpvv7Ptmrsc69My4Uwj78ioDB2OHam9QTqcBYLR643eBNFh
5HpIueXZbIjJLLTsrKCD4deVkrCFbHjW5M57dooO7gKV2rXBOUB4zcFziJ8B
K0nOY017csEQ3u+6pMYAg+z+Ps/KXHh/TNmHdokBx0MqDPNN82Bk5Z3HS18G
rFd0dz0+mQcDdMp+GjLgKu8qrp51BcDYwsthymSARyN/kF9sAbT1nShavciA
Z18NlhYlC8HvyNz8BDcTNtT22nwvLIR6x1vVy8JM2DlCnr2mUgTxZgevn5Bm
AmHIe2x7ZRHMXvrlnneYCW8srhp5iBfDQ37hSk11JkRrN+nSLxYDZ2CM+erT
TOj2TFNOTSgGyVGb5AldJqzzWfsAacVwMdBS+5MeE44dqEkR5S8BecvnqjvY
9kimllamfglMRsjlOGox4cG+nJ16T0pge3OaMOMYE2wehYosvi0BF/8Y/ZuK
TJD1X1ELmy4Bp9FBfQlJJpgoXSpcv50AUp+fOn/bygR/K70eCx0CXFtN0Pu0
igme0zdkzt8hgB4jsH79LAMUftreWZtEgLOlWzkM+xjg1vUkwaiBAD+0hNyJ
ZQwQI2Gj0EcCWERNdGnGMtjnxfbM2Q1EUGdK8/25y4ASZm3vV1ki3LDOujNq
xoBbD6SkJnSIoCm2KuDbfgZw7be6ImhPBI6py4LHOBiw7+jVGfd7RCjnVVZ8
S6FD9BbNS0uhRLD061S8nkkH/sjbxY+TifCPm4No4U6HavNA4Y2FRFhwa49+
AnRY9XJoZ1AFEUrMactfeOjgaPYzbaKWCE4oYJjbSQPiaf6erc1E0Huidqgo
ggaOfi9k1rQS4WiGdtwaUxpIa3uF5rHtZm4/Cgl8NPDKJij9qiPC07ETY5Wt
VDi59Lhk5D0R9mbljO31pcIuxYrfFkVEeNjWlfxLlQr2Zeuc9N4QYc+/dF21
WQosGR8oLWGvX79wRP9zAgUaG7avPPEkQg7ttJmEPgXa3bb2FF4kggDlq07v
NzKExLWIyWsQwV+wxJSXnc9H5Ux1FsXZ8Rzf1Us7TYaTXftEvv4iwLDexivH
ZkggUylAl+4lgJJi6JB6CAkyzDcoBKQToLNO3WJmPwlaeJdPcbsTgLV48Pn5
q31wzno4/DQPAapexj49+LcXWqel7L+3lcDBQ+9mel70AlnspGJOcAk8chYq
i3nfAwsTKwa//xYDa9OeV55DnfDRfxPJ43oRJJ4ukB1e6YA/wjtOm78vhDCd
DOuvIh2wUh9C/7mmEJK3dArcMmwD/dSBLaEB+aBYsck6NLAJBL7rtyQo5YBZ
9wGxsxGNYJ4VUHLXMBtKVUwFL8Q0gN2RsiObbbPgUemnHvdXddB/1YAz+GYG
9HrIBC/+rgKvSItnWw+mwL3F99W14+9hsxJviPWmNxDgvc7auPkdJKla393U
nQQfa+J/nfYthR6egazoNXHAH5rF3nIWMA5HLtrGhoLVmQSO/zJj8aPRpaFu
48dIy5uSHBl/g2LM5GtRD59hlFMqX7pnBu7QtezpbArBxyPnxoSyCjEtrLEm
tTsa8zrObV4IfYea+Telnban4JeDBYpxfo14S/qC/1XvImxZ/bu6MKcJ/27i
v7SmsBj7tx86KNXdjA3jviI8KSUYO/Q4ZUCoDaelMznNQomYuKC9vOV1F142
4aMIPCjH4x5arjffklB0y6BaTzZiHkvKqO4YGb9HrMm2sKrBdmkWp2wtGdcf
FhN8z6zBbepfErlbKVgZJHCoeawWdf44DS2103DbkKln2/d6rNgzrvPpZT+m
XfyTflCqBWEVQVVq/QD2nZtvrcttwTX7HhiO+wxg9tDY1j0HW9G5zyOIen4Q
tWz47XapteGdLfehY80wPn28HZh6HVjwuiFt1ZpRPBItaiO/rwenGaG3DymO
oqmqyXD9tR40l0w5fufCKBa5GulNpfUg57kxO6HiUdxr4e5WLd6LUfF2pHSD
MRT1/PGOn68Pm1Uy5Ne5jKG2nt2iu24f7pI4nuP0YgxPHjNaVPXtQ+P1JdJC
tDGMfL+uvm2pDy2Crbcsmo6jzEujo+FdJLxtNpzFdXscKw+d/WfPScbIgPUT
a4LG8ejtgphbqmTcm+p3ortyHGt/VO/YmkTGMK9L3DGkcYy/PS6R3kXG1S+3
956aGcf/0rT2WP8j4xKBVGMrwMK7ccPfBG0pODG8Ta95HwvNhqvObguhoO7P
jrhtaiycU5Oi7q2gYFGBsOV1Gxa6y54TdNhMxTvGz/uv32Ch1Xn8/FyNirYP
ZS4aebFQanZqd/EVKv7QqfRrimBh2/FniWMEKu5aP37zUCILDXK+bRUcoOKt
xxEjJpksvMj72YuLi4YaL0I37S5iYe/52eY8WRrKiv08nVnGQsu+TBFuExr6
OMsuDFaxcMq1p4DPnYYvst/Etday8OOTMlrNSxq+FO+fc2pk4ZptC/zC72i4
fO8EEZtZaHyHc3kTnYa28zPk9hYWPjy9Ti/9Ow0jTJKtw9naPcxwqGcrHXmP
Pr2yge3/4NjU+0gFOp7iX3f0ZAMLOQ1tOMf16Fh2LEftUA17/rvSq2rt2fpQ
/dTwexZ+OGwrLu1NR/eui4MGpSw0PyC7IBBBx1/RCxTPfBauHrKX90+n47yC
dM61NBZuceErdStnj1+bbSAUx0KB6onAwRY6Htna2hUWysI750i0WjoddbvP
Xu56zMLLL25/FZ1ijw/U0qe7sdDV1e383BIdcdhxsfAKC4MeHiyU/0dH1deK
TAtzFio4/qsaWstAysczrztOsnD9uYwHfzcz0Ihy47uwAgsvrK7eHCjEQAvb
ttLjIizcDaK190UZSBhZ1aTGzcIiq31cTAkGpq2NOrhtYRwvvlXyfr2LgU3G
rwT66OPILUr71MLW69fa57nWjGOLzpFz1jsZ6CEgovMzcxz5Zs4NGIgxMED1
splTyDhy/brcnCrMwBKp4TMtLuOYo02NucDPwF+mnxjCFuMYaTH+2Ws9AwsD
9qTaqoxj8Png3B+rGPjRZtolSWgc79xlNNO/0XHJl1eK8WMMZf4Ie4p+pCNJ
0JIoyM4X3cGvAvVMOv51iUlMiRrD35d/uR2roKPfl0H9X7fHcPBMQg9fJh2D
DnPds9cfw0aFP1a6kXQsPaRA814ZxXcnrggtsd/nMbnuk5rsfL7RW9J1domG
QRFBa9PZ+U5ZbV0YQGKfT74G2ePcozgVdrL1AIF9PoMm5PcUjGCBbvKbqRs0
5Lt3XYbAGkaltUEW59uoKLz+7I3ZDwP4RPTjVPApCv4L+H3bzmYA3ZNX2hy3
ULBK6tW99T/7sX5gq/reQTI2fbz3b7tCP145zx1u6krG8uFNegoxDDzj/bts
LoSElp2ONvp6VKwlfPMtiOnF7KK56JNDFJx83WlDNetFEv+t9n9uFJyt+cmj
tKkXz26UMv+eQEYdbqvMN0978HbWnY6uuT706H9V8o/UhVoch55fkOzGP+8O
3b8o34YDeZ8cGs504UpCp7B1dCu2B5cED/h0otm+ldro5RacHgjaeIXajiFP
Dq7d3NiMO0Ts7LJetuC7MJen5eaNGBgwF+RnVoejU+f6HK7VIEfihQzRgHyU
vbKp0Uc2Dws7I12qenOw+wDNsrQ4G29YaOkqS2fhLopnG/V4Jt7mGbsZ9isF
uUMent/pmIKz1Gj7XdcjUD/A2fv0vghM/TXzxjYjEhIrU+lhPyNh7YaEE++u
x8B79dC9O1gxYLop12aSNw4exP7V2fg+DuTiHexIK8mwWteV4h75BqInNovF
n8iEV1eMSp87Z8Gua5K6uYwiSGqydCRal0B3uYNK+JVi8I2XHzKZL4G/Kfqy
7n3FEHj/YZqvNwE8M85/rYgtAfcUMT+Vh0SwXZx7umOhBP69MFzj/5XNZ9ZX
b2cAAeTfmxX8sS+FILOUr5rNBOBqM+bmk34LK9QPKzb/CJDjW0DzfPgW7Ks0
VPIViOCz0CBY1PEW2qNMR45YszmqYJXSa/4yiLj+hn8tmxP768auHzQpg3EJ
DsLOKCLEvG59a/q0DJoO/HAJTiNCiG3qx08lZUAZFO0yKiACZXfA62+UMuC0
D+J3Z3Pbxk16GhZfyoD8k9+EJ5cIdXkTG5c5yyHfwPcSfxIRyFZTIrSN5eB6
rnjoTSAR/twvthzgKwdfmYgD6EyE9SdK/H9zl0POc0lXbz0iXDMO0N33vQyK
5ewDRtjc5lLHs8d8oAzcdVb4Vs0T4LPLIY87FWWwS1328jSRAOHNfL4PQsvA
5Prx5zls7t76wdXlunUZEG21LS3kCGCTn28ovaMMgh+p2hcEsjntHsl/k+9b
mBCeXOYYLoJc5eciHWNE+GvxIaLkWyHYGO6jSDkQ4YKgyPmpfwUgZf3u99MR
Alhd4TSP+ZwH4z4/xqzel0Dhc/WWLxpZwErn5+jmKgRt2dXjPgWvYNp4nYJQ
SjKk3vLaHeIVDdeLYg3j7yaATmmi0fLBSFA0NVn1VuYVpG1n1vnS/KH3wJ/n
QuYh4PZ0xxi3yX8oc83m8tZMD9y5Sq7MPC8Fr4VwjDQY5uBztJE1rU7DLut4
67mr+UiP6L5fQc3ADQeb5zufF+G3lruTtdtyca7sKfUOBxG3/HE6puRQgrs3
7s4V7a7AUKkLb184vcf5ypUPWUYNeO15xPBZ2yY02tg1avm4D/+1ubm5sZrw
fGlNhi0XCU9c6xpddGpGeU6znpVAEgqJh/N9cmvBoSGaxPgLMt7f8FjDx6cN
3512d1UqomIZZ4Fj+4UuvPLsdp7vEhMLS6mYyr4HaoaORMbc78eg8/cVpfW6
kRFypyVjzQAOiR9LWy/cg4pmN8VfCg2iHqUz7vD3Htw3xa+edHQYXTdutwp9
3ofEI5/PVJWNYlDObT2N933IkntMpvwcxfRTjj1c030YH7K9I0ltDN+cZrwr
1SDhIZN/RlIfxvCLdQ/BYpKEfo+ntYI+jOOB233GRzaSMeDp1U8hf8YxPTjf
T0CJjH/cP28QPsbCEBk+43wfMjrcfZpYwuaCps5nDdtWUZB0a6DldtYE7q6U
r/ERp2DSYF647NgEMl0XnZuPUXBaxyBDV3QSda3ObeS9Q8HhgasTcWGTaL1n
bHx1KAWFJ/dqNDRN4tUIB0V6BgV5xDYZwMok1tTGHN1FpuAGWuXZbTensPVs
dm3kRwoqhSVMOb2ZQjPBRzZDfym45udL47/kKZze5JCydg8Vxbs8LUjHpjHd
6hPXhBIV61WOL228PY0SV3k/xmtRcehnxHWv5Gl8vLdtNPISFX82Mt07/01j
WF57caczFZc2WX2OP/QRYypTLQu9qLh/1vyl3dWPuLnu5zclPyryHekjicZ8
xDnfLrptCBW9smVlWho+Yu2lUy4K0VScOxuocGnpIzbvtLXIjKeitohd7ODO
GawzqNNqSKbil/RZeTCawYCtHnuC06iYLPuC9MhrBvVnw1Z+ZlBxfZPjs4TU
GXRs/bSGP4uK+uejLoa1s8dLTYdTM6kY+K8s2GJpBs/VzAnpsv1NpxzPz2yf
RaMTh9QdU6lYXRBy2BBm8V2aefOR11Tcw1udePfKLD7p/JRQGcuui2Mlhxye
zWIy9UTLYiQVuYJjCELZs1gen+8zEkTFF7dvfgtomUV3kxtrAx5TsY169Qtx
ahavm/0Ym/ag4uuhI+9j18xhrFRRytobVLwZ5fVEafccRnYZ/5m+QMV3e0Ze
Pjkxh8Snnu0hxlSUPpDh+NhqDh8NyK/9oU7Fds46P3mXObx37Wy77AEqbvx5
IvpZwByuLEgb7Rel4vEUt2tBSXN437WI9XstFR+vNR5TIszhznh5njdfKZhX
Eyno3ziHBwyidUSGKZg2wCfrRZvDouHZs64tFITqoRt803N406VqJaOYghzl
sVqnf8zhw513ZD+8YnO1u7+GyJp5FA1sGHj/gIKjB1v5wrfMo78Z7+E0ewra
Z8bdTxadxyOSuY7e2hRse3fhnsHeeRQctuk4JUNBb1qfYNSBeeQ8H9PKvYGC
5XxH/N2U59EwlTLWMMvO+0Z74Tm1eRwZ+FXi105Glz3DOivq87huKHRKJ5eM
ziI8udkn59EpbIf+tkAyHhYS+jmjOY+7D7u9XbpKxlsnYWMjW98uX94+oUHG
XTdLJlXY/tzL33w+i5AxPDgvTYM936J1y6LQdxLa9z58OnZ0Hn1cTmRf6SZh
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
99lnBWCQnUkodCLiHM2UK/5KAYTEB7Kb6BHxAGh8ndxeAAtP1K4GHGfdz/ML
z6RJ+WBNSOqR5SLi3tg9B1zf5sOHBuHakdhc3BdmSHWayoPejBofZxcC3txs
9HlAlwjk5wthkvsIKM45T7kzmAszF4LFVCtzkBIjXehimgsO+9bu9e3Jxns/
u1x7bhHAO1mgae57OhbJNCrDn0zg/e4wz5aWgEc7bXJljD6C4xFDybcqEaBY
bvu3pDwckx96nUo+GAt6Z5/OsZnGYOM9AxenrQmgVJW81PUmHq9/IzC/SCWD
28JPy9Frn1B7VrqC6JIDYWyuiRVS2Xhj4swVrUuloOn48c+tviJ8WZM9/pFS
BiO+G/7YSZfgbaHI3XctEGwqJUkxz0tRZfDwXP3VSkhY76r/aj8i5c5fFeOo
GvDQaORMUqhCb6c/rxSfN4H0TlPO/Bd1aMfvuN/IuBla/IJLvh+ux/2lHuJu
51vATrN/1qmjHrv+K72os7kNTixP5O0VasRB/1p9jmsd4OBc+I/yqRmrtbJr
N8+TYddV19MpZe34/jT3trr7FNCVaLrlsL4DB9NbzlzppgDDOjPnllYHRpDi
KV4VVCj0tFS9NdCBYbx6oRavaJBV42l9fa4T7/beuDWz1AN+D5LZTgyQcb3w
VF+1US8sHMnYSdxBwfmeby2NVb3wLUHzMbcKBS++kjxz8WUfxKi8q76YRkH/
GbNt39gG4OSRlGPX7lFRM/v5w8t3BoBhF8Ov7E9FF/GzIv5FA+Cz+EGEWUBF
8o1jt3TlBmGLYW2YFWcXvvWMkhQfHoRm3z2Hq0O7cI37w1/PNg1BQ5j3o4sF
XaipupZLXHYIwoVr4RGlCwklPxlGL4bghvUgNW0rDeNojaXjqUPQdO9uTPFh
GjpoCi8Q2oZAb0Xi24MLNDzVEHN5RWAYvnmulkY50FCn4wnl6ZlhEP9248Zu
Pxp+aGfkHzQahqxevzzZWBqqZVLU1nkOg/NUS/loNg03Bmuxb/k4DMYvZt2l
K2lYm1dveLZqGI4nqR/c1EHDgZ+OE+FDw8AmWcb+fICG/gfSlXnWjEBL4Rt/
HyYNtwlKCqQKj0CVqIHBvr80LDFxkzQ4NQK33vBKaa+lY0buaXXxGyPAw1HV
w7uJjmLtVgbr7Ubgy5iztdV2Os6fbNRceD0ClyvlOfUE6DiovENqMXEE5Nd9
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
BUs=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5460#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
w1Yw3ywoleWSC3dfyGWCG4KKceOVsewM+PrQRHKjeD3wcPDtbjVPh5FHa/8r
b6mFgPqtb/TF0kC4pjLanp8Id18plxa9T4K2R5+2FEjng/eawsCsJ5Gwrbjh
1J+6F+iV7CG3Za0/ntjlvG0yPh0bDxmLLzk8xfvpE1f+XshBXrfBGrfJcDy6
9qKF9esSVBI2mS55GId8bQe5Q4VrUHglafWoVzruG5PkDvdow5rTiv1UqxJU
u6m+sTa4HYW2jvxriStFhnjcLa0XHXgzuPaI3P0yjJVrWiNb3oUfyW6yW09V
4ETdrcP/kIxvKIKKxEEiXkjwlrFNHsTqw6HO5Ml6dNomo7aZZwh/+3MnFNU3
4IeXnFHtbkO4rkpAwCgesXeB3LpVYxjbvGQUhtMbsTd0XXlABwWLTTNrnpxt
xtSgPpc7O6mo2tsXI1XYjNJ35qf4/Kjo//zR9opNLVh0NY7HZ88Ixmrv+Bow
1oKn/zUqiFmP4sX86Xf6Rm34SJ1no2LJKDa6q96VqWrDlSNuYsyFUXwoHPzY
T7AdnV0JDaU+YyhXHrQY39qOrmbVERQbGm71Nvnye3MnbtcW8spLpeFI80J0
tmUnVmz6cma8j4YHV8q03cs7UZnf8LPJfjqO6Z8pPne+C/Mn5rZnXqPjFD1l
69HnXUjwiPh48gEdXfPtJDZSu1A6dOCrRRsdd4tmKTkbd+PeSO2iz//RUTtk
lwM9qRvJpoXcTasYqPn3gTPvaDdq7Ki0Y21joGirrtYPwR70MW4NP3eMgSZ7
nh4LvdCDwVdnbBc0Gfjqbm9Km38P6m5gqH26wcAQEem9Lwg9uErxa9QuWwZu
GDhbvTTdg6H9PAdfezCw8h6YTAqTMLEhaOfdhwx8ZtFte06DhPF7xDsDnjDw
p3ib3TYHEsa1EIhjIQzM0X6x90YMCR/80Oi7F8Z+f2hq+c8qEgb+eKJgFsrA
CSnXi5/GSLjEYBjEPmUgl5ru44N/SChYvUAT8megP/GObLUwGasTI6smvBjY
xC109tEhMvK3yUpxODCw03KXysNzZKQuv3juasLAlpbdmUVGZCTPUpuULrLH
T/Sz5nIg49iQfYWhEgN9lJIqfL3JqGcqlTMsxcDqDBkugSdk7Fl4Kl7Kw8Bb
CQIS1RFk/KT0kDb7mY5eXRUbnWPJeFGo6r/YXjpe4BtUOZRARumjex/lFNFx
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
b3BRu0XaEsQsTXUHTtUB398rNVEJpuDx28EloqAGjr7pGphpNYKMr1c3WQtW
QeJ34jktHgMYr61RyvSshNxBZb11Czowr3hOOWq0DPwOddZ4KWuCUVKewS+X
YriUF/40CQEYukdbbh7IB83F1jyDoWPwyzm4e2Y6E14cjal+ZiYLWiEWaXdP
psJyXkdn1Z1NsCqG73drbjS8afzYt2btjFpikXrqT6lHoPO6vIzPoVItviNK
9428JRb+eziXKL8KItdNa2ucDMFoWv56063iQE0kMDdWJuDW44cX+awPwCan
n8y8nemI2z6nXdirDDWElFQj+xyMk5nl55U/DT47r6cHlhbg8/L2i28UL8Bh
1qprmvdL8Xmsn0D1JT1Ylxbj5CJagcQ3UfrrS66Dwu+xCVcCAW0YG35kNJhA
QuCEIseVaoyW/d0dq2oOCSCp0f++FmsqbqRFfrOCz89OyiT41uPFKJtLzou2
8DrN4eCatY1Y3zEqevm6E5x2knr/9VITLhS1lL147AqbGyInp6ObsRoPfnzG
5Q7t34OC2igteDyxpP5DkSfoF8c53tnShkHKX9dvf3gfevfqP8zTb0eDT1Px
wV6+sMo7esryeQc+sIocz3b0B22W4GjTShcKLGVUJUk/BmWZ9NPix3owYOKb
/ZuPgfDXxKvbyoKEiyu9+u8KgyEs7kO9am0v9rufkNqYFwKQOv4++G0f+p+w
FSdUhMHSzOD1l/79mGTSwDjn9xwi1inxFr8cwIGU11kWSVGwvVf8/em9g5jd
sW5ta0M0VNvaHeytGMS3/9LOaojHQa/0xsKAxiGcvxYrTNGPh/1O8yMRp4dx
zRbRh3ExCZCcM2JytXUYU0JvNXtKJ4GxgPYZUgMFV9pan6y4JkOZjN4bSyUq
zh36NRTUngLZP4Pr/Eqo+DZMhqzt9woiljgq/8aNYGLW9A2DsAw4NWPQ26sx
hiLcvXkaipnw6N/dAfu0MTQt3lusPJkJv34d4A5eGsPdET3DFarZ4OMoa7rt
NQ3TucsSvnzKhvrg16P+yzQ29xvdfpmUA4Cc+85dpuPyhgM/e3/ngqfGiS9d
7+l4wVNLcnVeHrx09Rr0PszAW3lBfCLX8yFXv8jPwZOBf770JpypfA2ztmFb
f/9h+wErrRUB8wI4suF5bZDiOO7VDehilwa8MjwenHAbx4H4Gz3e1kXApZ81
v441jnNBy7/cBIrB+On9V6KbmHjrmJXf5ppiONOsZnVCnYnfOB6eVjItAYs5
zn+ODkxsbuhPonOWwqxApVNhHBMp49oyBP1SOFbwgGf+DRPbenTV47JLIf+K
rK0ai4k7w/t8bBZKYXDnFZ/QFSYKCvu4bjtTBqE3hz1HxFn4e4xJSopir/Pm
+beSiixcbLh1aWi8DBpFY8PML7PQ98PJrrLd5dDq7pSUas7CWMHUwzvdyqHR
V+F+310WHlv15Pnm2nIwD6mZ+unPwo60t8J3OSpAv2RhRjCche+c3AX2n62A
ty92v5OOY2FU89uF/cEVIHOD6iaXxELPsGhLi64K9v7bGS2RwsI+OaJcPU8l
kA5yPuFJZqFKr4z8bjYftLlUMN/Hs1Dn5qXaaDY/0KO3+tVFsrBxXET4U20l
tAxbRj4NYuHely10ye+VEMEfGKV9j4XGZ5ApyeYT7ea/F9fasLA2yXsf7QYB
JuQLR1GfhfdeHdmoxuYbzftPEj3VWLjZu1TsRDUB1gdeVD0oy8I78xt3NE0S
IM5EpfUjDwtnN9hBIx8Rws2KPAs/MpFu+YS1+xgRfuU1f7zfwUSFcT/Cp2tE
WMn8smyQwURXR4P2P15EODL3hHnGm4n8PpG2Z+KJ4HDv6qoLOkx0flJxob6M
CB2fVss5SjFxfUuPy7VuIqQnFRqUzo2jmcaoAudbIrztlH8nVj+OwjcUDSu+
E+FVUKtVyZNxvDLNOXuTswr0xMSbPS+N465d5m7fN1QBv/hvSc9N46jc1Nd8
R7QK+s7dnq0YZPvr0qvSZdurQE3w64RCFAOz20tPtLD5Vldpx481lxioZR+0
M4atr+wPNN/NzcCIS7eNtrDzY18tFWXX0XG0pqlXQ6QKuPZMvwhyoeNHze2s
DfxVYCd3YV+/FB2r49HYdYUIl78u5Yb307CenB1sNkuEHteSuHZfGr5K0Zcc
GSPCHT2RmsdyNNy+9EgtBYnwn/4efmgfw5Zyew+ldCLEtN6skbUYwy3Mvm2Z
D9jxx67008ujWLB7l/zwdTbvr7i/y44dxfquKbfW/URoyD4abrhnFDXtUxQc
lwlA+Zj0webNCFJvDusNRBEgh0vAfHSEinzxTXMBBgQIPEzddNWcijkjazLH
NhOg5t/5aPMZCu5NXF1j96QSng9NH/WeH8a0fbcW549XgNu+1RlHPg0iSe3D
w3RKORiFTD7/aTGIOY/6Vedcy6EliiTXQxvAZGEOol9qGVR6z/BNNffjn4jN
XBX+JRB1yFLPepmEtXf2kkQfFMPFZ4+vxQ/1II/B7V9ibkUgeeHR/Z853cg3
+/6r4qkCWMfT0UU524k535XKlB/kwF1ljbdrbFqwLKpXokM5G/ofu/zJ39eM
Vzdu2fX6Sya0Ku/sSv/SiEb1p4Jm1NLBwN2L6wytDh0ICh++CidAd8r7yNX1
5XgrVu7w6itm+DPGWqo00BsMLFNi3UQ80aQ6wreX9BwwNfDg8og/Hql6PP3j
exJUXE2c//g6Ep+Lnty1KS4Xog4HCxtseon3iyw9pzsJYCv+9FXqZBE2GRim
lwW3whG5JI7LjSWoxX2rp7iwDTYSG3sO9ZViBB9jkUFuh88XN3kPF5cjpxC5
SWdtF9g9KDB950LEXpcGrZNXycBHL9DkmqzHw8tJ+7mSB0HImcXBRW7Ark/P
zhRtHIK1pU8cXhIQt/wskdgYMAQP9y6G8DU1Is/FQ7/It4ehKdYs42BAMz7b
0170b5kCuS7vR7k62/CzhYrQrbpRqCznOd69px3Ph2+oLFw7BmMfJraTnrUj
Pf8D/7YrY+DN5LE6c4Z9zu6e2nBydAzIEbl+SS87sEOYuvOdCA0MLwZnf/7Z
gcOEF70R+jQ4Yqtldy69E58XpCdOt9LA/yZJ8tB8J5695D7/9DcNJGUztlI1
uvD5hw03xffQwfLVuvM76V34aNeP6g3+dFgoOnGicGc3Pru8pdUqjw7NkP2n
2rYbn6wc4s0gsf1naMBP2dlu/E/Nw62RlwFz29vf2+3vwYHArrCXcgzYcV1v
w/KdHlQtiBi5ocYABkPStS+tB6dCyxW/6TEgJtjblELtQcHn47MWlgyQqpW8
x7mehJFfbieXuTHgnb1+urYKCd+zhJRofgyILv2+OeMOCfdOHRdnBjFg8aKT
yXIUCQ3X7l+qD2GAoGS/oW4NCXNP6v7nHcaAV2vyVGLGSWg+k66xJZQB35Z+
hFf/I6FEggMj6gkD5CVXK1aJk5FA+zb49QEDFK+CR5AiGX2SF9OPujMgR41j
SkyHjP75FpIm1gy4cv2Mv70FGXm6X3q7GTDgSbVltqs7GdPP7TnpeYoBXnHt
xXr+ZDzKkFIW3M+AP1uuBp0PJeNFxR7ius0MkGw7JXApmoxfNd3MTP/Q4RLo
BRrFk/H+ySm5rQw67FKiWtonkFE1/6v8iTo67BGrCPSOY+fv7F/ueEGHuD3G
ax8/J6OaZe6BNnc63NrcYPYomIx5i28rFC/Rgfj6sLGTHxk9S+PqZXbSYbTx
wgYtZzI+z3xPiPpJg3NczR/5bpHx3RHDs4EdNFgq2F9G1CJjW6eILmc8DYLf
9fqdPkrG7EKdxU3mNPAl62CpCBmD+qxSa/bRQKMnQUhmjIQJYubWn6rGwCA3
+40cgYRVCfrWj73HgMv8CtfqCBI+90sV7FMZAyMdBc+zCiT8fS/j2avKUVCh
PnwxZ9qDZxduGqyOGIErVdoxdTt7MITrTrQwjMCt9x8srSa7cfLcOw6JWSr0
27z7Y3CjG9Ek9f2hc1Rok6/bzLmjCx9MvtzozBqG/n/aLqu6O7HjSDHhqP8w
OKVlT/xy6cRtFjeWlKSG4UrK1TVMQgfW8e89onhzCDS213oeEm/HhgKhKTkc
gLGkO5pCZs3of7nnpFYQCbjF2qYeby/HhJM9ipo6tcBnzSFuW1mK86EmIfOy
1eAU3yNhFFaMcdl1Aw+WCEC/mjJMf5OH4eFyOxSy2PuqWNw4X+gLHBl80+I9
nQ7fAplvqOaJQBc82fT8URrmvTwg0NH6Em7a7Pwg9yYLj7LSfPfEZwB/0HDq
prk8vNnYuP4lVz5MCMqn+2eWou3E46Nqf8rBbvPsQYXeamRyRBpYjCOkcdev
ROxoRdEa0UdRtY1wWecLaxNvGwYKNAbGBjXBYPa3Hqfvbfi2/VtOqmgLTPFK
0gyqOnCvqbbE3KF2uOpcUHVRpAfzqE3y1vwkWHfnpVBURD9+URkJjkISxAwP
ffSa6kf+B6YbLjuTIb3Y4PwulQG89frt4taOXrjD2i3ZyBjA0AIDr5rX/TC2
vNd5A/cQmqR8D+/+3Q/H8GitvfYQbrfjytA8OwCCgTctjcKGUCSjfZ3R2ABc
4v4pSuUZRrG4xV7i50EQPDb1oHFyGGeMch+37h6CLxnKLksCFFRVnHXcazEE
3hbTjn9OUNBe04PBGhyCPRfS18uHUrAx9Tbs4BmGjyMKgU4lFOwZkU1IOjEM
19O10HyAgseU+3J2pA7DfHcEy2MDFdVHfods7xmGjmP/YqL3ULF+xrBB5dcw
vP/vdJ6VBhUXqpPbnaQosP/4prRZQyqWCSRfr9SigEWLjuoBRyruLZPXX+NC
ASvZPw+lHrLP6/XSfcaxFOBre5/dE0HFKuU63nIiBf7bkr53fwoVHQ71PeAc
oUCZpFjH6Vwqdo4Y9mkuUMDHyNlVqJSKSipaI76bqGC2LvtmCpGKEU4ns1L2
UUFn+eJvVi0V0/QO3cs4TQXbieNzrDoqmnw42P3sBhU6RHj2v2Rr8bOcmpcd
qZAl/7lXnJ3fstQ78OkBFb4cEFG8RaBi+6eqwFsRVKAr3162LKZi9W3Psoxk
KoxGtv44ls2OW3+ZqMyhQuufH3t6X1CxTb9qNKqECt+Mu94phFGx0aAoSoFI
hWCoT3X1Zddrla1GWi0VJt1MNwXYUfEbE41IdVQoHWre53CNisGNSkHVbP3u
Gm3TcXUqWn/zzjVn59tbTG5n7qKi99aqd50EKszHvpl04qeiKmVd7MdiKtT+
VZD7NEdBf/qIfks2Fbb+cn57fZCCj9t3LuknUYGnaJN6bRkFCTrjL1LD2PpG
arZIJAXDuPf6p/hS4c+d15kedhQkPcpJfWNABY0vbvna2yiY4GaaS1dj/49R
Rxd5bhjPjMpklslSYdv8/nJbtt/rszVt8/9MAcatLj5u62E023+guP8WBVh+
QQtRMUNotJkWXifPPqfzg8WSjYbQ48oGc9v1FHgwY0VekBxCp4e1/AJFw3BH
rfsyZg8ikePc1umRIZi+YpzzhO1Pc+5sqJbpGIALrlaG7xN7cX3nULijxwDw
iMUeTPtExgiL43stpQYg8/Dlf2UnyNhodp3Xx60fzv48bnp6uAcvKzXkB/0g
w/HA3LuMj53o7BT5KFG3A9bsm5q2qW/GCrsXhaUO7RDEnbOU9q0Jn9gIONkF
tsFNtQcrvTJNeCz714zc6xZwN3TI+SKA+N3Jf1EhE2FLwK50QmQ1fnH26TLL
KIbgCyo7Kn/l4JDdl64m29cg2qLXYFyViXWqauHFe3Og3VAn8+b9NEw4kHNS
QyEZRI9cf/qVNxYTj9O728f9UOaD9P3FVA8Y6htKs7CvQOtnttWUHQXgwHvj
yr5UAgY7NiwJbCwGxaS5rWK9Vfhiadwu2bsU5gfEhYz21+Hk2i3LK1crICXp
knyobTMellj4+6SvGuYPrhby6ujGnU+NtfZZNQFp6vChA209OAauizILTVCp
Mt/q3UhCvi1bpncGNEPMu1wni5Je/BLGvLsS3QKcRueIsfIDGH3gqdjHiDYw
4Rq4tj9/ABvdY461rWmHTLWzG7ZuG8RHOaeeXb7fDgkq1uX4ZxC/heT3nb3W
AVuvvJMjpA1jqN/y8qfpTvjzo73Jbw0FZ0u1R69qdMGmG28EjthQMIVUdfpQ
Uhd8bQ+YkmX3eeb1qUMHoBseDRxYq/OYiqMrGWKaYd1Qvb9B5Og4FYNs7lq3
ULpBy+/HwK9nIxi4Vfj6iEkP3A0oXmlhjGDbmobzdik98PWk9S6JA6OoK5ii
dG2kB2zrN5y+2D6KUYR9HPIaJLCGi4P8G8cQX7eu2uVGgv2NlNhjBmO4TkpP
3+UlW5eM/Q0aG0Oa5mZfvs8kGHGVfJQmQkNlCZ1z5vxk+PTgzY9FPRpydP3V
Et5HBqGnl3jCQ2kYrrRr3+6zZLigQiVebqIhTRJWvzQmQ5/z4AWlHzTEBElT
bycySB25ZKEhQ8cZFufpJj8ybHz8YcZKl47v3G0kvZ6RQbeTIZ3iQ0f5ws9j
aVFkaE+afcnMoOPIesGO0/FkWPltpLmrg46WoX/zrRLI4JVbc8PlAx1X8UlW
8MWRgZlNsa1k+7w9EvQHEEmGNy98zGelGOjlILR5zRMyaG9SeyKmwsCzPGXv
LO+TwSPgkMsRHQY+rt3WbG1Lhi2fojYfNWMgtTb7q+A1Mvz+7dMk4sLAoj8z
fG5AhivpdyVZPgz01JTZHi5LhlCBf0eCAhkYnOIU7MhDBhpDxnBtCAMPd3IL
SHwgwT/ruYsWYQzk671PzW4lwZ5rI7sSQhm4+kS3oSC73sYSO03SnzLwRF2I
o6M7CSLvazU8esRAodOzGs2aJBgaU/E+7snAstW9N8VFSWCVmS1RZ8PAtuTs
6KdTPZB59mCMiCF7vLIgfoHSHggUTNmpeYaBFteXzzZ79cDtwUWPCwcYyBu1
uKrgZA9Yri+LlBVi4DflDL2Rf92QsFzDbUahY32ag9lhn25g5mf/1aik44GM
dU9UVLph20CAjd1zOjbsPSAr+KsLVJ/1bYlRp+PbwANEQ7suSF4KeJr6iIZ3
d1RBnFInqGfGfVvUorH3kZUfxu87IExK8lOVAA27tijr6sV2QNYpQ7J5/Bh6
jHj/WPWxHe6qbpfgfTyKIkKMx6wHbTD91+v9N8VRVP6Zzhe3ow04P9NKLWZG
sPrBT9mpxlboeRw1x3l+BGujwq+GLbdA3fHgLX+mKRjO6jLxs2kG1uHDT0dr
B3HhbqZfqHQDdP29cETw4iAqBzaQ3M7Vg+PBxhwT+gCaZkfR9Wzr4Hfk36dX
f/Sj6N27V50Ka0F6PWN8UKoXU91yvGX3VcGGYSG+5OU23HFyVVq9dCno6HPY
9X9uxY//mqYsnxRDaklia9pYC7rxOjHzOguhes/KA5/CJuSRZiTz6uVD7lyI
Pr97LeoHHf1a7JcBa7hUte4cTcO+9utWSU+DoHLHBzqXVjxmXXHcGGrnBweW
eO9duByMP5mFvh10Z9As2DZopf8I5vM9deW3WuHBr3NuF1zz4HqKddrfkgh8
Eiw7dvBpEeS/5fBKsY7GifnLp6sulUFYv4rsNZs4/Kvaaa1/iwiE3eP36aeT
cefXa2vuHG8E1abKWv89mfj0uPIFP7cmED275caO+1kYbD1zaKW4GQwvDcPh
pmzs0tIWL5duA9jT0HhYJQ+/7Vy0Hp7rAhvX87NvSYWYfvRs7rntPRBmf3v9
/vEi/ET8rMSpRYIPrg6pu6eKsV7AmdQZ1wtFYg3X/jiWInkFR6wDB+DZQU2j
zCPlOOVRdslswyBwi3QkdSSUo5a/+8l78YOwfToLY/+UY5BGz0pt2hA4BbmL
7yitwNP7ncU7pIdhVVyHFZ2rEj1MPp0tzRgGUvnrSmWDSgylnaYxkikwNZRZ
OPGhEtP1NrpwClOhQM1D5+B+Ar5XV3foCqWCtyXlw057Aq7+yR+yk2ME9mxj
tLZlEzATjnZzuo2A61+daREGAW8+zXa/MTECpqd41khuIGJPut7WrZdH4e35
Y2FvTxDRR7g5XrF6FLrFAxLNrYhomlu3KVtyDC7rKv8sCCHihu//cVwLHAPe
hF2SrQVEjB/R3KM2PQb6FgFKFZ1EHHoxmaZ7lgYbNuULBEwQ0cBatj8wnQZ/
J3rFVX4SUVPO5C5pkQYHL4Z5TnFXobT5rhQJXTrorjIcixCqQlFecrljFlvv
/PDqlHgVpv1N9Cr/QYeN23yb1klV4XbenVzv2D5TJWRj3zxb67k/J31n+9rF
Yc85PskqzHjalUYfZEB6k9WEuWgVfjPNKorZMg5p5aazqzdUYUMo1wPB6+Ow
81/it38rRPxn/3VJJ3YcAr9U6ljMEnHN+TjXM73s/NnHP9THiBjefznkAxcT
WoJe6eQ1EpHLYmPbh+NMoJbnnErLIaLkJk6+RTMm/J12elr6jIjaK5d1RcKY
8K85K++9LRHLbwUPnahggqpg2RN9TSJimvx2ixEmDB4XNeKWJmLSi2vrn/1m
wgpvXwnfIgETApgN+VtYUNcTZO3VR0DPXrmypiMstv/5WHAtg4ALTTeyyVos
6Kge+1PrRsCZluHi7lss2BSfLERQJ2DMjYDDRBcWVPy3xHmNj4DarfvGwx+y
oMbGWbiEUom1Cs1VOqEsmJ/ZPTaQUolVia+EFmNYIGC5e2u/WSUWDDTEhr5g
wZ3Tp1lvZCoxLPrTodUpLFBSlbuTO1WBx1983GuazIJEXl3Z7KwKHL8TI56R
wIILEXzYYVaBzg5znzufs6CEaMwjLVGBmrEalOEnLHhe9J6jg1qOM1q8pu33
WVCZ9r6/K6IcbehrbV/asuBWDle76tlyfHheVuLWNRYIyalcUVgsw4337Re5
1VnQIl/xr72oDPePs/qS5FiQZJTtu9q0DL/du12/bT0L0iX2RKwIlOGD2y7H
wmaYsOE/Af6+xlJsS1s/P9vBhOfeDVNBzqX4sMSQXzODCdGtv4SUJEpR/6zz
ZMJ9Jij/84D5mBL01psbPirJhLhdo8d+nipGezFRCPoyDhtyB13b44vQt65q
1UT1OHRWe+24NlOInH6coZ3nxmEtN6ezfkQBNufoCdxeNw7SX54pCLFe4/ye
63abuxhQ8Nav7Mih15gvXmT6AxjAGbCNtr83DwfaKrbu/0UHQeX+IkOJPDTl
Dp1MKaBDeE6Te4BDLgZWyPBo8tHhgXvrO3veHFzbW7w9uWgMtgpuNe/RycSX
Th5dnjpj4OtDuC6RmYFzRtsCyLOjYKhxNj31VzreaFh7TFBuFI5vLUqpzUrD
09oPx4QaRiDkySxDdekVZs0ofKi6OgJ77xlF+5e+xJYvo3qb7lGhMDlIMUIu
BecftusyuKlwmyIQzXyfhNp5LX/dYyjA8/c+Vhe9wCg6t6xqzjAw5Nxl+M8n
oHfqnQSPikE4HbZ1cXVDNH5SZ+QGHx+EoF7trYMlUciI9rzNqBiAEQkLR3Lu
c+Tf9W+TV1E/EMzDmw5dC0fxi7+2j+zqh4AGF8cYx1A0LTD/ePVUHzyoPqzM
iH6G0jWuhKptZAgMeLYUzPME/2ao333NRYLN5WlByTcCUXeh4denmW64ZGyq
OlcTgGHHA+M6SjrBX+C7gtLVh3hpxd81MaIDuEdtKYJ3ffGk1N5YWft24OL1
0+yuuI8HFyWb/5NohRjnjJ8TL9zx74+gWzo/moFrIuOvirob3rKVufW+swnC
7PTPmK9zwVs/4h53JTdCabUNz9NP9qjWoOktS2uA/hrG1ae8NjhE7DjdeL8O
NDJrEvzvWmLvtszx1C21oBPMqygjY4bPzTvX/imtgt1rDS0lT97E7hOnmvm0
CBCn6SJZ1HINRdZf0dzMKofhdYKRiyxddDN+uubC3VKole5o+LDzArIWqo6N
8RZCarBwMaXyNHb5WsbYHsyFTt1jU+c+qGD21d4/DZczQPKISBlH+2GMEjNk
ZdCS4G0tTSxonTSe3OFgcFQ4Cvg3lqeLHebHVD4VfnclPzjcxm/ZYjjV8G67
8V8zsgXyhe4w0EquaNi97CDkGhCMLU1bDX6s+9fwLHf8V/zaeJz8durU57Oi
WJFFaqX2vMI5s0CrTu09OLq2rvRxexZ6HTUYE0+Wx7cjD8+JZ+ej2Zozq7zv
qaOKhb6Cqn8x7r1syjTX00RF93kbRfY6X7/VpXb5hg5y687RxEUrkRSpJzx5
Th/1VD7YCfkTUc1c33HF4waqUNa0st5Xo6QVTBsq30ZHlebOcxffYOon6d2f
O8zZ392dyF9cj4rWjsqyJ63RK9m5x5e7EU8bW4mX/rZFHc1L/IWmzThhPcj7
eacrJoz3uO8LbcEA6ebXLg53cf6pfXNXRSsetJT2CBnxwKN8pwy+/WtHPS/7
vFdCPvi0+oeahlQnZn4eTkue9EOBf2Ymp051Yd+gApeI3SN8bKn1h36/B38i
j4xNyGM8fJv6Qz2ahAa7pt5QjwShenux3PtcMpa6S/wx+fAEO+pPi4V396Hd
PsUt5v4heH7FJub4wgBeL9l4Ond/FI6o0xVbHg5itrNNbPvlaDT6fmlWhWcI
1z2b0OW+F4Oe+j1heYLD+HKnxu8hZhzafI+LexQ7jPt38P8b2paACnuMF9Zs
puCZxD9No7cS0XdnyBcWL9uvde0qbV5IQuW58iHRQCrKZy1u4ddKwcfGoSUd
f6iY8zyuTy49FQessiSujo8gX5ODy6lDaVjpCj9aH48hr+bExHXOTPx66Fiq
zvQYxm3yTc6rzUSd41aic2dpqGb1o4LXPQsF+Y8Sz/+lYUndi0P6H7Mx1la1
77MeHaX+mIgws3Iw53x5/oMcOl6RE/JqMc1FM1fF+//j/1YF65Sp0Twc17LT
cIxgYK+1rGRrbD7O+Kh63aIwkHI3OuvUldfYERQ4EXhjHGdkpSON2gqwZn7y
fUE8W/uYf4t7UIjDT64s+/ePo6LoXbNShSLsb286vFOFialbBOWbMoqRU3dA
ftKWiZW5PyevXStBPR0VsZPxTHw/oS6zhqsUbay82V3NRMvo1yEU41Lcsqn9
Zc5/TPw9OBEcWF6Kwx73dUu5WViyWXnT4toyvDbly3ValoVy9n93b79Zhi1i
qY3G6iwUK2z6PFpchnyiIwu/rrMwzawqVpCjHCvLE3yEHVhoP/ntXoVOOXLm
zj4v92Vh2wxBOCu1HHfqEBjkZyys/IEbyR/LsXY6z9E6hoXn258qiRyvwDO3
79X6vGCh+Z2H0fa+FfintS2dP4WFER8vGlQ0V+Dg8W124sksHNX5922EuxJ/
WQ815cWz8PUXBZGW85WYMbDQUBHBwu4YA8Kt4ErMs+NmqT1mYfJkNGdcWyVS
NnRxX3Rn4VopkYdXOAjsPvrtP27GQjKD+4+PEgFXir5x/rzAQrXBoOecTgQc
MdTNSDzKwn/6JW/60gj40+4ps1OYhfyFj7X7+glo0HUzOWSBiRtquuy+LBNQ
NNdR6t0AE3Uv/lewZTcR17UlSAy/ZuLR4CROJR0iXuu8mWb1iIlWVYMktbtE
bK1XkkjRY2LTkhpFNJaI91ifbf2kmGikunStsoyIpZUN9Ru/jGNPy7ZVHCQi
UrIKSm8Qxv+vojMPp+rr4rjipxQllJJCoyEJjSpLJBKJKDImGcqUKUNEyJgy
KzKXRGaXTMs83mu893IHbqFBJTKlot77/rmedc7ea+/9Pft8vs95zjl4fULm
95cxAu7fFqNk5TOCJw6njluz+VRfJ3XyjsoITu648svuv0rcJ3jKo4pzBK/y
Xne9vKkSOfg+WJ9qYWKj3Yr8VpFKdB1dCuF6wMQHHvIP8tn8+cRmzVfh00ys
m1vavHpXJT4aW/vVb4GBj8m26zexebVoY4y4cj4D377EKRKbb12v/7GzNGeg
/J27lQc3V6K69ZPxbxsY+LfwCFlqXSVG38yZ+VpLx0cStbsIfwho5110yMaO
jpcPtS52TRLw96J5kPUmOnJHD4hYkgm4JjSDe6aSho9Hv/U71hAQRl9uFjCl
4ZptBrRvaQRcUPmsQV4ZRsJN8VtUfwKe+bLFReX5MP4+Mqi0x4SApu6CKZZK
w6hlPBzQp8jme0vaBqAMYcDg4g/KWgLmv0/+Z8k1hMsWCQRabgWS+vlFq5Op
KC7iy9l3pwIT33DUL0tT0fVLictGth4E+xgbHM5T8NMkWFi8LUd7yctLRRQy
jh04vMHBvRz5tMZp6y3JeOh8vFK1DFtv7y6sPuU8iO/uO+hve1yGH64nf6N7
9WPvrAbHgmQpzrmd1Vb62YdfVKyviLaV4Iznrq9b3Pswyaf412OLEtwRkzz4
e6AHxUQsBBxCizFk5pTz77AudJ+PNeC9+gbz4ipLHrp0YjF3leqRqwXI06PC
mDTswGdcCw6XL+XjyrNcyVyRNuQ+bj9eKpuHg3cGGPseN+KzRPtpwaQcbD2w
Z0esXQN+//E1bN4yG3WmIiK9A+vR1pyjwHFPFma92lH4iPEW91iV24jJp6Nz
8jdHlm8xuijqjR26E495rH5VqfkHML45+fImoh2802mqTngVBx7j1V/pH73h
Zr5n4pn+5yCfsybjREcQZC15Uw9z54HahV+KdMoTUHLP22D+gADVK/7SuyTS
4XTYJHX9RAtQlyRcRb0K4Uh78NYNfG1w9Oeq9z5yxWzfNsO9TbEdZK3c/eN3
lwD/Yhd/q0cn3AhRDNPgK4MsG0mOuX4SmD33iJ0cIwB5tvbN4w8D8G1DdK6M
Vz382OKVLmwyCMJ8RV84bRBs0/+eOd4zCLTFUC1JqQZQ/WBpIfCGDJejZYTp
Ao0wdmaTxPgFKnSfbF3fR2sCOf+jWZ8KqOBCPj4QqdkM/4l9aJRePwRHLtid
nK5ohqSGXPlzOATNtDMB1lEtMDFG/UDlosFq3nORAvvaIPNpF8/gRRrsT+Gq
EQprg/D3gXWdCTTwLLWGQ5/bAB9GNESK0GEbMSneKasd1LoHPbWM6KDzh3rX
ebkddnWsifoSS4ejBxdp6gYdoCeh0//2Lx2EE0BPfqUDQva+9GTJMeC2S/ia
fRc74dWKjs2gGQMe7jsSXJTaCWnvJvWFi9n8/awmWVWhC5yzG95ZkhlguONB
uax3Fwy0izJuLzBgu1p8tktdF8iP8D+sk2WCa4PPr+bT3fCk+0VJylkmGBQ7
er706gbPw3v/6hsxgaGwVay5uBv65OTax+yYsBC2+Tzfx25QomS3ankyYVw7
JtFrKxFi/gRujAxggka4xdKSBhE2jlUL54QywY2Pt/iBOxHqib/fJLL9762i
d3rr0ojQlmbz90YUE/YdGGsLbiFCpf/FGL4IJlQaNV/89IkIz2IpWgnBTGi6
2hO4fy0JLo5F31rxZdcT2qx/ci8JbFw2Rmq6MOHwuzf824AEm1I8Mr2vs9tz
K7CrNCTBo6EPy3G6TOjtKbblsydBEHNZPUWJCWEL8vcEvElw+NIx/7hdTJDN
G7xbH0ICk026/wLWMOFQ26oYnscksFWI9rGbZACfw33rb/EkkGsQXrrYwQB6
6eSiRRIJPJ32UU+w/f+dIlmCWSIJYtXPdBz0Y4Bi2A8fVgwJfjjaUBUvM2CD
xUw4K5wEqccOmOruY8CqIc0EI38S3L03vCZskQ4qy3V16s7sev2caBPNdAgz
+hKXZUqCWdMyCcdoOhz+Z73t9jkSfDCUCpS8Qgdes+HGlAMk6Bla9Wnndjrc
SVnnLr+RBHyvuJ8YjdDgl81QhNR3Ipw75PPfaCoNNn8ToQZ2EqEoXHh2WpAG
3eaxSdoeRJjIipyO7h4G3vQfK7XqRPDRD2tOCxgGToEIn3ABIvD2hqw7MT4E
P9pnG49ldsPkuFHW/UgqFMvv910f1wXrTn760iVHBU5QPOF7rgs6OK8ujvRT
YK6/PcpwsRNC/qTbR26kwN2iIwbXLnQC/U3DQ0vXQfgB2asUutsh7qfjanXu
QZg5dyg3wKodin5TPlxJHoDq+Yx9tottIDjXfvNEZT+8L9/lsl2oDcbbua9y
NPeCYPr2vm2SLTATdtAmYrIdlDN4plzuImj5JuzmZp+n8Pt8odnVeuDZ/Lb3
K0cbWHA/2JGgUAdnlqJqjQVaYF/5rY/qjGoY7DOYDtnXAIlbdjT6L1XA9LVZ
gxmDYigJr5txXHgJ07Zu+f9eFMBet/vaq4/nAKlKTnxf1isYv772WqN7JmBT
irFYagaMv3T9GluTBJUs4XHlEwbgZMa3Z7+5Dgy1IEOnohCbDzyav8qdi+mj
SUtc6iX4sv9n+GmO1zg86Jyoe6AMy1bddfH8U4Aa1OzK2RkCzrWd/2roU4It
jkY7gnXqUbJ4XW6HeyU+DP+6U0i4DV2IH1ZPvmjEIM+oBvvJNqxJm4q9zfYF
RsXmCxNV7Wj6UkKJS6QZx+KlCat1O/FmqavU/ogWTNOOY00ZEvGN+0Q3h2k7
OhbPJUu+60PPo3fpaeVE7LD5M7rzSD8mBSkOEK1JaNXRdJ4c2o+bFo5quwn0
4OPS7f+Z7xvAKrknNl03e/Fh7VkdSY1BVJufdOZZ6MPcJ7vGLoUPorzdxaTq
M/349NLsPc7OQeQ8d+Rjd1Q/Khdyi8+qkPHJnozs8R3//y6Dg6enAAUdqHqZ
jdKDaEi9Z+mkQsF3w4w/2vaD2Dvxxrj3NgWdi9cZf3wxiBEROjubqim47U9e
9o5tZDQyqIzUHaVg4s1jJnm6ZNRvUNY+/Y+CxtYGBTuDyRgm9Drl8Akqth3O
2ZbzkYyq5TLWp/Sp+CZ1e0c221eYXXw7m2FHxawvUscc2P0+4vFXsLpHRTnL
2I4Fewoul7dZBjyi4qrXF3aciKHg0uZK3uUUKn51fLlFjkDBUM6FLdRcKp5y
cxjqG6ag4/XzJRtLqGh0cqlF+BcF9/EeM39dSUWRd2fDVrZQcbkrdCa3hopF
/Isb7ilQ8appb8S6Oire4jKKenSBitxlE2lkdv7y6as+B6zY7dzTm1pbRWXP
v/Ozy55U1FlTFfya3f66jQmLK6FUvJ4r11j7iorlDhvG9iVR8f2bpAtqz6l4
IvDi785sKmpteb9V9TEV1Tlx//gbKmpy6trX+VPROTU4zamCfbx0Yfvb21RU
vnuCZVdNRZZe0NpTV6iY/iitsqeWyua1Q+fPK1Ox7pma2nN2rH5JaPrjbipW
xu/91v+Wikl1T1+KrKFicpza7VvlVFxL1rT68omC7eulO60LqMgn2WFs2kbB
qLPu5phJxao/w2vvZrHXd1aN7BVPxYElrYNn7lHQY7xwzxO2j2va+bmr8TIF
76TvSuFyZffLayzOIUVB8aU6MsWUioaDq4o5l8nYb5fRwKlOxX7PoRNkIhl/
nJLLiGZznL9roOOyLRn/7Uxh1k1R0M1AsdVagYzfuv2MrbspWE3ScKn5PYjX
Phmvc3hJwSTVv0+uhgzivg/pwy8NKJgd8uG2XtAACr+S4xKMZXNfgIrLsOoA
fu2p+NVmTkaR0no9MscAeo9uEtWQIuNxQy+SNpv3vgWYRlZXsvW63uj50St9
WPtFZttY9QAyZCx5fuZ34/r1Kb0p5n3IU6VEF1ndjTTax5Oa6/ow70AvUf9K
F+p0Rr+UtevFuWxCse6vDrQblJ5x5urBLaRt7ZUybfg9xPd6h0A3+pnI9l4x
aMDro2+rMKEFrUeSIt5KI8ZYcnCLvW1GGX7toqD8OlyzeHqBSWtCXpVm6q+8
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

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5482#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcmXc8V+/7x4k0SIPsPVJmFJ+GXJQWiUhDIqGsEAkhW1llr2Tvlc3buu09
3u+3vd/DXtmj0M/339/55zxej+u+73Pfr3Odx/W8Hof3tYW64SEKCoqzRygo
/nf//5drOeWCa/YXiG9nVPHX3pLb1QlxuJoVDteFGpYevmAGIRX6pAAUD0tU
FVv6isIw06IkyZKaCuIh6pOaT/4DZXJG0km/bPDyeujrfeUmhK1YNM4W58Gd
nfsWXf8pAR/l9jtCciGUU9uKJ3U/Ao/3jk5RQSWQnHu83O7mU6gIW1lqdCyD
OUblDtm3L2HVxI32rEElqN7h+qDG8xp6pzKvsQlUw/ktO/PwKUM4p5ERYRJS
A6v0F2iSD5uA0eDrge5DdfCkDdcf7mgOUVOu78Qt6iH753rLjeT3ECL5MYNN
oQl+GtR9sl77CLtH8n11UprhpJm0fcigPRyZ95HbPtoKf55Y2s7MOEI9n+B2
SEM7sEfoCspXu8JIEmvHA+5OcM+Oqclyd4f7RudZ62264AOHoN49LU84ni32
QYIOBx06iZtW4A25vPMSnPk4uOqggRFW8YU3wZOxfE/wECRUK6dv5g8K3mu0
EhHdwH19m7dqKQDOklI3PxzqgyMujJoKVaFwK+Jmyu3wPrinsPTzHnU4uAcc
DUq/0A8TrR7XaR5FQOCXYoGlOwMw/bhu6vNeFLh4Lp7Kww1A0g9ZzUTtaKA4
8rmp7fkgJNIvr6vV/IR9zvlIrN4QzNU8fX1YJQ56NoX9YolDML/gHlRGEw+/
7rRsf9cZhvvGZ6OCauPhwz5NfoLqCBT2XCo9JJ8I90+rNSicGINLr3WNhVVS
QDb00932D2OQNnGcpMCQCm50xj85BsegwVvvE9dQKjAV73DPhI8D5Vi5maVx
OqiVnthSWx0HOkmDcm/JDOjTsHXMFiBA8Pca/tydDKhte8wT+ZEA33/IJxh7
Z4G8jPd/29EE6PYKp4hVywbu00EdETUEEHaUZTvHnAMz+rPpgYeJwHqp+p9Z
/C+4e/jz6QkBIoxgj994K5ULf7U4r5vdJEKUMu3318G5wPI4/D2jHRE8t7X6
h9TzIPHIsRt8QUToW+nTpsXkwYMzjT60GURQF33EvcmZD5YRlJadiAgOR155
Ornmw6ttbVXjbiJo/Y3n9iDnA4bEPDg0QQS2UMVfC7cKYE9EmpZvnQgGj7xE
oxIKQF4jRFKOkgQ5jFIdFv8KwLv836Q4HQleHWKgfaRVCDNhEqfWGUlg/kE3
g7egEB561Ez6s5MgsY+1uuFYERSSBOZ2uUnw98KbUl6dIsgddVhS4CPBnw28
NltuEXhcfX9a50CzW4YMhfwrArGpQ0idhwSXEnObPz4ohsrXCrm8HCTg0WcX
Twkrhr6/VPPtZ0kQOFz95dhYMfxdCax5coIEj32dOr/wlUBlqDy+5hAJKlwO
OR01KIFeY5ojpzeJUJWTFGqdUAKG2lShd6eJ4CjNlJY3ejBeeP+vUR8RZJyO
9meeLYWj1P2H7euI8OFw8aiyUil8dP3d4JBDBK4u9bOODqVgT/s1wiacCPHK
rz8JpZdCScMZPtPPRBCpXsm72l0KnhyOD/X0D/w9VUwfu1MKxqeM1V7eIYLZ
DG2YIgcGul+axhkIEeGy4iA1y3UMyMaJ7DrSEOHvY9WeI08wsB7obZhFJkBv
h68c1TsMDPrk8+5UESA5keXWH2cMDOuJlxpHEEBR437m6DcMFPaRVqgtCYBp
/EAfG4kBpYwTA7jbBKjfOt53MQ4D4/7SBf2sBCj+4KnglYCBOQEBRtmBcYhZ
lTQJPojPevbKP7cfh/dcfXdUojCgIzw8z8Q8DpqTIr/Sv2OgpXLH2zNvDHit
pXVjXTCQ+Gf2UPG9MeAQM/ojeLC/ysruHMzIKIxvZNPLaGJgBzAaCe9GAUsv
y9xyBQMTg3g+t78j4LEq5zzIjAFUMlxk6jUC9321kl6vloLPlCqdFf0IfLq4
P/CquRTuC0R/TQsehtoR3ze4yFJAg8TnG6FDcJHhWQCVRCn4dT69d5lhCBJ9
/ybUr5bA7/R473X/Qfi6rru/mVcC7stn5lQcB4BNTMgIc5AP4pvXb51Z7geV
MYoJtZ5imNYiaefo9cOtNTZPI9di0Kj6+a5Jrg8YPdMEpTqL4GZx7uD7jF44
7luYsPauCGyJobMPGXvhlyrIPz7IZy+/Dzb7pG5wYuVf5bhUCM+mMFvt5jjY
u8R4SORxPhjv6FxUGsQCoTWLvD2UB7I6tDtDN7HA5Wvj81gnD2hi7JlOCnVC
vB8laVkrFzzk9Yo8tVrgDqZG8fSLLDCVL6UXEGyGuaKaPEbpTLCy5x0R+90I
0g26J+8dywAJakdpIbd6COzqsCDHpQJuJYdaVQ3B6tnUmdLABIg/xpgiMVkB
pum/FfYV4uHw9Lq3lUMZ6Dm5C1cNxwLTsPs5vewi+JT7nMXVKgrGBpysr+im
QbamC8kl8Bs8/+9qWOuVCJTt/eT7HRoXJHMUpZQ5xqGXjw9rXdrwRHrfi7Zy
sEmIfe61OMW0L3LDcnDKPcpGwaveSz7TwYiXPVl/BV+MKH5N5PW2xKJj1pN8
Y621yN5F/tqfz5ko7fJPpon4OhRClYBnnMpCYq7jiQPW9Qgvvj3qfz8HSXFr
2wocbUSR5sbX5Nxy0fGPaqbffjej6b1bN67zFqBhMVq6BykdaFWySMgEW4L4
bIl/6Lk70bl+7KtfGqXoWUeCYF5gJ6pIVpJn7y5Ft37L7Lw06EI3Hq5enmvA
oIWfm8uq9V2oe9+45uTVMvQu15a0RY9Fo3vNC4TUMmQmN336qC4WbQoHCp20
K0ePVW+xgRsW8blv1UgOliPNDoPwawlYdLlrgc1XugKlRExNbVZhEf7rBuM/
vwoUF9TbZjmARRfLz52wGq9A558tmycvYdFz/+7xZtFK5G4ypBNEiUO6b8QW
Zz5UIvX6mwHSp3Ho0UYvZ2lJJfIf3Hvpz4lDUW9fT3NsVKI8KgbviHM4ZMPe
pbYvWoVuaVdeeSKKQ1kc5M1bulUo+NirPw3iOHSrwu1Un2/Vga/mNdNiOLQd
umz1M78KmT69PV1+AYecnu6GundXob7VPeFbfDi0GMcVYbVUhVQoRfM+M+PQ
6hPXm5pUCHVOhVJZHsMhzdo1OuYzCPVNjp5i3caiw8MtvElsCP35zC3qSMYi
U64UvVkOhJqiXOii27DozWOxtz0sCLEEFLc75GKRZnqijwY9QimsznNcQVjk
72E1qblXhbzUTtzxtsSi61/DNNsmq5B+jQkvUsYi8fMbLklNB/svbOdu4Mei
oPuRA/iEKvTCs9xbfqULUer1/bhnW4UMYremM0O6UI/no+FtxSokwLCRg23u
RInBGVcH2ypRtq6SRuLzThRXcTtjzaMShXdec3450YGkZBeB879KRCO01lI7
3Y4+tq7/c/CqQN/ta/r9XrWjE21RVgn8FeicAfmOY3cb+qF/O7YMU45Ym4V/
nUprRW1qbT+zsGUozfeSMRt9M1L7mvlbIb0UyQq/MD+r1YQ6V0OTok6UIsqf
LY64uEa05kRg6TMpQf3Ki4+muBrQPV36pH8ni9E/kpwcE6EGCasvpv84XIAu
ZfbI9LAWIbBaLRZSSkXxWoFaJzfzEZU9DjN2JBkVYc4n4ltyEctI1udbxQno
U72u1oP8NLTcbsUf0/YDfRCjfXR17ysyTMj4bZDliKg+/h6mN8uFEDXb60LB
ifBK0FnJYCUfYlUNu7N/pcDPIL8/VJ+K4OrnrTzX/nRoJhfx1AeXQYh56soY
fy7os0ko91rUQscTfltDbDHUGjgGUze2g1XTCtU1u1ookOs0NKXvBFmo/xah
Vwc1on1rZZpdIPXb6ws8qAdbG/7Oy8tY+MOyhjYEGsHzDsmwyLIbshpPbQwR
WkCn+qKg2H8HfDfi7vRfIRamTJ02KFsGgGlmklpRFAf4xcdhtAe85yGGC6JO
wsF428qajfUQcEQWndQPwoOvyDXZhu8j8LI5b2rUqAfkd6U2xEQJwG10MYH9
dz+sS9D2PNAlgKZNztCsxgCsvrcQuxpIgGtm3j9iSgZAXiG1+s0KAbbEdlR9
HQbhTWxgQGgCESbHfjgJrA8Bw/NjGrFtRKDLsHg5+HAYTtQ7F2msEcFlsniQ
KW0YtinxPDlyJODjusL7T3ME3B58qu2qJ4EblfCsZswo4PZK3btJJFiSKS/i
XhgF97W/h0z+kYDbeu8O55UxOCPxOvvOZTLQ7tHm+LWOgYe+8GHvB2S4cNHx
8/ypcXha4vThiT4Zam+00j7THId5xrBVPz8yGDET42UO6rZijlbCWgwZPkg8
zlamJUAYZ3Em4Rf5gNOdI99fIED4Y5yGBiJDhq4srfcdAugE29Ard5AhbJqG
+dtrAnCm7Dk1DZKBOzRj2dGJAI8uKFg3T5BhUY04/yicAJ+H7BdVlsig4bDg
eCyXAEG7fGzPNslQ8En4alwTAfj78Y+nd8lw/kla/5kxAsg/pxfapZwA2Tu/
JHXWDnydYboXfngCPAQf3nI+QoS7xvnRmCMTcC9zTMSajQgqrosyBkcnwPOF
l/h/okTgvTigGXEQ/8ZckN8sSwRtjKzh04P5hteDFQUfEEF+S20v4WD9V5e9
Q5W0iHCG5zXJ8eD59z9HOcq8JcI0nQP19AYZEtYHN6esiEB1+rAzeZEMaW86
hLSciKD8Xj/iw8H5MrQ7n3/zIsIdP++a6IPzu+wb7rt+I0JTnW+ozoE/z2mT
ci6FEgF3VWSw4sC/kG5LkYQoIghYa38qyyUD+7mhl+0xRPBabf6uFUeGL/wv
nubFE+ExQflZ3DcylM1yqaslEiEIb3ztuwMZbtPK5aUdaO/Wujrht2TgaNqk
KDvIMyknz7SPj8iwsT6+6R5HhNjdztqP18ggFs1kRfOTCHMDrGck+MhwT+SN
g0IEEca6IssSj5Jh6Y7pbekDzpfgj6QeXCSB9Pk8UZIPEZSysS+6cSTQcmsp
uedGhJ8d5Q/DC0nAOasTbnzQJ7TenvG/EEaChDyFlNvviCDNe3P+20cSXL5n
MTv6ighva148b9ckgeYmQ8AlDSLUpCxiyadIUJimEM5xmQiGBTuLRbNEuFA3
GinBSwTh72fzb9cQYbvgkVEXHREYbx+LKTMjwrDC7ioaJ8CpjQHJlqKD+5/0
0+UfCPAzQz30iScBOPz5xb2fECDvrxnPmAYBFk7j1vdlCJB7vytje3gc7vQd
vTQ1PQ6T/Y9MkfgYYC5qRxyrHIO8cb9lVTQKw67XnUTMxmDy9aKP9sNReEck
7i6yjAEpKZ5F0mgEjM9jBD1NRyH2vKBMtd8Q4Jof7etvDkMC966yZ3ofqHoH
mKr/GgDpc8PyusJ9oHjO+Puc3AAYsv9gGD7gva2RRgr6jn7QjpfwOJTZA96b
vxxlJ/vAss5tkjEDD+O7JutiR3qB5ryYt/ybDnjXXv+3kxcHJ+y9g4piKkHr
YeGmjEMtGN1oZtWirICUjp3o6341EGJK5WBpUgaPv/te+i+2Gv5dOZaUpVYC
a4MDx1+EV0Ilv6yIlFUerCX2Er08i+H8aGBCVk40yOa/WFE8nwhVdB5MknwR
0Lnz9/6ti3HQOKpTX14aDPO6VV22QVGwEpc4RIzzggYvfnxm9TdoBsQZ+Moc
HVKMmvagsEFhxw1fpv+NQgn3tgLfPEpEFDrnkj9I/0SGdG9aJiiSUayIN6bw
XixyoB6+rBSRgtLo9fhqnOJRAEO+1BundBTRo7vpo5KARB/w/LRqzUCqVc5a
Z48nopvXxY+e2c9Eo3ctaILuJyGGluuKQ8w5qJ3aMyymPQkthLKRrPdykJDM
J9k42WQ0mCZ+ya35FzpUelgqMzIZGdlO/qcvm4ueFbM79JGTEV7lePGhL7mo
XeLM+HX2FNScpY2jqs9Fmhd0iFuQgr4xB8U+WMtFDPTzmAvqKYgiO5yhgTEP
vWo6obL2KAWZYM4feno+D5H5z/LbH4y/ycl3bkksD7ldsdclsaWgtsZAATvB
PLRmkVnybCIZvXJ3DZigz0OUJ7yNj0YnoxVbxyWBuVyEVt5L8txMRiFRnSWi
JbnI1OewPK4vCfUFOL1csclFSkLL213tiejyKBOON/AXWihNmvEVT0S67iPX
akpz0PgzclClcwIaeK6XmF2XjbJWbb/YrsSheXmjNjP3TFRWGaE/LRWFwnUl
5vQyk1FFIc3ADl8ESvn0kekPXRIKr3AT/b0TivyFh86taiagke3LArY6gSjA
K/cnTvYn6n0ZenxX3hGxOFBLZlz6ivIf/BP2twgE19bfFrzrMVAkvaiXggsB
5cO5vyUCEkCo8/4ShWIEHCOn4LbLk0GFZ+su1dNY4Gu/8tNAIwtG3/Nva59J
hd4b/da+skUwE5Mlt2FdALrbp69gQmpBPvKXt/unQhhi5f9ElVoHZ+8MfA1y
KwLdvSOcSpX1ULje4O0bVgKTwoGy2huNEEjEur9oKYfltPP0hgFt4P510foa
ey1k+R3tdcvEg5uCx4WRuFqgStZZ+6jSDZnn9dO2BetA5r9vw++Wu+G10qiM
png9VJGfvOe62gsWj0QVvkk3QrYxe+GP7n4gOsbffUjfCqlGhI8SnKPA85Yy
fdCvFbSXZQWu9o4CpTtXgdOxNvgXhL/G7j8GZwnr/9XttsH40p7gsd1x4Fuv
XLrd0gFeS7catoyJYFzzyClUphPwA18lTtUTIZTWsscyvhMSvzt7FnGSwDU1
ttnfogtUlJk7bbtI8Ox+jdqsDRba8dcag0UmYMQ0TG8rHguhHHW3210m4IXq
dbHQdiz86qDavdw7AUYnhBhMOHHAdea0lInDJOzc5lgJu4UDlUm8J0/HJMhF
ipwBIxxYc9mVD3FOgdnkVvPvLBxQWtsXS1RMge7zSbPldhzcfClxs+jYNISe
xltqz+Og9VgMMD6ZBve0oUljfjy8sOtKlJ6fBuKbhZLDN/DQSa+/Qb40A6H7
VFmUmni46fIg8JbDDKQLVC+fdsGDiYX23eXDsxDR1rnJF4yHl2V2ccL3Z0GX
18TbPwkPJa+S6pd9ZoHt8K8KtUI8kLI3m6+2zUKJ1vsl01o83Bc/tL57bA68
cmYaxjrxYLQggCTvzgGvstql9EE8UGNw/V1ucxAy+smijYQHigd4nq6KOYhv
eP739hwe/qNzKxDamAMOKbtY1mU8jKlQEnEi86AlYmJ6dx0Pq/2vLjW+mofi
XxJF2E08mLo1mO8FzwPrUT+Wki08LCP3IMuGebBzfPRx9yBOOS01xLIxD2eD
4tcSDuZ3nyyt+s23ABL/eHeyDtbf1b63tfRwAapdz0lxzuMB5/X60yn7BfBq
7vLdJOPhlBv6/DB+AXJiuS/LDuOBg+OaY2LTAmCCD0WuYPEgZJQtenxhAT6B
6lu2BjwIDLX4OdEvwl2Hcu+yEjxELBJGtsUX4Wpyk1BfGh7q/0uNt1VZBBrZ
uKT3EXjga1xI2jBeBPMjmz8DvfBglam8ae6xCKXHO+auWePhXGz7/Hj0Isg4
34yy0sGDVogr3+2CRVBkUlq9ce/ATwkm5x9Ni6Bb99o84SIeXP9pihMGF+Gr
2q2qZGY8iJqnJZ+aO5hP4VyvsocD0ZtuicLbi2DoyhcaR8QBZ267hCj1EkQ7
3P+QVI+D32MK0Qz0S8BXbl5tloaD3R5squnZJYgvkBbg8MXBsOiFiAW2JVAd
s+IvNcNBWWF1VSjXEiRN876+o4IDbllS8hueJZBje5jYfsDt8q6tp3QPNOfu
ZpMaLQ5K1iv/fj4Y762y0jEwgwVWVeboxoP1aCPrO00asMC98fCVzMHzKjw8
9+kOvp9Sob+/O08sge3Z7IwGBywE7TeLBB7s159x8coPTSw8EzUX+7yzCNIt
lOdCxLHQ4xd8N3xhEb7950pdQoOF4M+lh8dGF6FQVG2LsaILIo6dFH3csQhJ
SUivgrELBP/6jfSlLELqk6+XBqo6gSZm6ehMwCJ83z4y6vu2E8wcHYmS9otw
qa2yYLWwA/Svd8g7KC6CO58qd+3zDvi1DOdchRYhRurJkN5e+wFv+H1oP3rw
/joLY5UV2mF1sVL3ZuMC7KoWuOYT26BWLYnOJmEBzhyyf8nv2gYdko4Ke44L
MMN+4/zLylYw8HmRwiO2ANSXailaRFugy79TGT7NgxrDD03mpmbI7dssSLs/
D1d9qBknXjXD6vzJb4HM88BQ6JMgFdwErwZOiv/JmQOu2RF36fUGMOZNvTPa
Pgu/vJeHj/o1QKSN4dmtgFlQsJ380M7fAMnlgkyNGrPwo6/K+4VGPZgKm1XE
986AwLWT7QyFtfDnCVWEcNs0SB3+ZjPxoBZy4m+0N3lOw9DM8PbJqRroPXxB
QgumYcSnrDadtQa6O4N4XX9NwYDkDbI9PQKLjIklrMckNCa61sbQYiCK6mN4
NC0ZrE/7v2N9WgoUqVIfrctJB/6nsgQnlUCs3qr3kAkJxJujrzXcLoaHK2c+
OjcT4eZUOWd3QgGU3+Cbk3QhgB5PUffWv3wwEdgKDBcjQMOg+myAbj7QHHF1
LyoaB35JTz61c3nQaMCNUzAZgxdbzPavU7Jh2vmb9OfuYbi38Af/xCcL5EfS
bt0VH4bis2UpPdaZ4I0TfGDkPQQ7/+UcTXmaDm/yBk0oFAYh58Qp93n9ZDj3
dyQ0raQPprz+MYcJ/wTSkRSF7904WOW8abSd+QOs62/p9cnioEYjVoblahRY
XzBxS0zFQs3pqjqDj+GwvHpiV5S6CzJfP1F2cAiC7Q/8xV4RrbCzeEJT4Hng
gV/iH+BLC1xvvmGwqRAAui6cBoyfmiFFcxLA2A80x8xfBJk1wsX+S15Jlz0B
meO05L7WgrjmRy25H+5QdvZz2vUfNSApedWedNYN1M66P7tTUA3jZOryHN/P
sArSKuTJSjCcYKpuXXeAzfOl175LV8A+zj9+2c0eQirab4oElEH5+LmgveM2
EKfSNfvnTQlslB7CC1BZg9Lwl4Fv5CJ45xyQ1cfxHk4yt9l0mxbC77kYPr7X
ppChwy/LE5cHf06nxihpGMFGeGuk04NccLUUmCtxNoSiT4XHzI7nAPlzwcIJ
t1dAmNJrT7qSDgP+qsRLKtpQK4zB/2tIgfS3St4qJ56BfL9FFv59EtTq0KXm
yj2GhyPRS5ayCcCR9ErGd1gN/pZQjV04FwevKlgMJ8uVwaYqoSlAJxreb1XM
tDrfgfDhpcPnciPgxNWPyvNCsqCBGa54xRAEz7zk9tvCpGFyufPCtPI3EAgX
ywjkuQiTPg72Vmtf4TLjlYSPT4XA69K7R/xcHsB2gYaB/QYP9GTeM38Y6Qzm
Uk/N9RzPgjDDdyOpf7ZgeXrk5mzkcXivdMmVyuI9RCzlR92n3ZeLTlUp0+p+
C0v7HbLBCYtySsMcvQPoJWBo7oaE2PTLNQejmT/H1KBpX48orl0q18nM3cfN
cQ22lJhk3nx2loNTsitPPRngSqgOn+m6eFWcOic9U8KYHFtQxQL177iqTM5f
M+nYC2Aj8YX1/H5zFcMRhcbPjLfhHI+LlNocqeqq1ZM1Vvon8GKV2vuM1EYV
14nLlVSk12BnO35k7B8Viu7PWJ7tMYOIebl0S+IppKxpJCFm8QG4nt+KtNJi
Q/t/St6pf3aAYha7crIxP5qTuRRn3eYKR95JDrRoiaBBjkWniRdesPCx17oj
UgptC3xd7bfwBaeorvK24CuIwZVuQNk9AGiUDPprCwHFXWLzzv4eDI/MGd/N
HldE18au/kwcCQP/eim/2el7CP+wObzEOAoayoqupTg9RDwq3v+MZWKgRfS/
ZQ4zdTQd/PoKK288fHXbP9pC+QQJCWoOwJ1E+DJPaVR8WAvZU28TXvgkg8Wf
rtW0Ej3kLt7jL2yeAZjLwnaclgbomydvodiJbOid1L2xYPIWCVNLv2pq+QWZ
4d69F6XMUf1gUC5LRz6EXZMTWE+xRb/nOvdO38HA9VPH0xkufkKTRly6XDTl
sGRDI8A24YhKzPPipLsr4ETxq353I1c04imgXH2/GtIk2/5LNfuKfjfQfvFQ
r4d/plYuxiY+SMzAnGfvdQOsfiAUgqsfsv5pjiPYNYKBlMzdRqcA5CJUyq1S
2AziHUmcPqGhaEBOmlvZsANOrf7r8JkIQ0lDHj/Lv3RCXAJftCFEoIe2tYGN
2V2QzGraOcvyA/G+02WlP3RQd+86JVzMiUOafTbniCbdQNmkZFnhGY++qPp2
uh3tgY/iu8GP9RMQVW0ty8vUHujZ8z4ZfzEJ6aga85rP9ELt9wIuAYY01Oaz
WjNiMwAWPVN7IWzpaHvfSI2bfRCSWo7FjAlloMcvLofuVg/CyO55txaNLKTH
5xIoQz8M5Ou279NtcxFFADnVMmsUwq7qK/QFFiHvQ2IhzNZEcMU4wnH5YoRO
0P1pbzjQQzbDDsvFyMBJ3l+MhQTll7uO9D8tRburYlrNB/VB8f6Xui9y5cj4
ovc9tT0yeGyxajXtlqPR0qMBSg8mIKW8JbSwogLhX6dUxkdNQP2Sq9AdhSqU
4+G6Iy89CbXy767ZZlejn8+cz4PeFKQsOdXyn6lB7TgGVY6MqQMe7ddUta1B
L3AbAidWp+D4M/qStZu16KVaofwR52nYd7PqZx6rQ9hB8bL3fjNA41wbbXC7
HhE7J5gpOmbAVv0+a3tWPZp581TqFd0s2DzTEyh2aECG7KWytl9mQSrmg4Ij
SxPisHrkctl8DoZl9pKrvzShT1lOlYfS52DARmQ9YbMJJTsd+i5MmoMjqtOl
O/hmNKr9bf6N6jwcMVCQVpJvQQsDwyfN3OehzLg6ezmrBY2biexlFs3Df2EV
TFvureh71m/BasYFUDi0UC611Iq09o9QfFFYgO3xkg6Hp23IVOUq6Z3ZAowV
ehcsnmtHpoopk+4VC2DnfEN71a8dgUZ/UypxAbLtGfkqVtoRXZ6PdC/1Iog7
Lug8LelAR2375a/eXgRKbvEbh1k6EYhGD755vQi8xjfpJW07keya/oav0yJ0
YVXVWno60Zsr7c1JYYtQP16RXHGxC1kpfcdnZy8CD1f1wI5PF9J0XRtOrF2E
NOOFMQtyF3Iwldhx712EK1+1l2g4sYh/o9ZbeWoRuNzdQvTuYhH+c8OV7fUD
vrqtlIYssWhy8PzeF8olEFatp2ONxKIs/hXWHdolqGt6W2dYjUU/7PW4lBiX
4P2xpsWfU1h02o1zyv6AN0UY5bswtDiU0ASRXw54tPlHWmeeBA4RJw2yrA54
lVJnw/azOg5Nfc0kXDvQbRYjTiwfcGhcIf0WgXMJ/CStyu1CcOiC9GMJfdYl
4PhRLR1RgEMVqcT79WeWABvwjNMSh0N11pGe1MeXoHZtpGtnEYcevIvhEfy3
CEM8XwbFj+HR3drMJKHVRbAOSto8yo9Hiq+bpk6QF2Hz+YmzbtfxiMlxlmYI
twizQsGaIep4dJM30uJb1QHfRhqduGaERwE8n3vF0heBydOl6Z0jHi0Iz8iU
By7C9t7EbeHveDTzRHn4qt0iENoPu5vE4ZEXa756tvYiBDHv51/IxaNPbQI2
rLAI2E2son4VHjX10Lx2414ETUw0+UwbHtFEGjsv7C2AZGi97eU+PNqX17TX
HloAC+9T5+vH8eiB8xGF/sIFeHi5TqtqGo8sLM7TvfZfgLf6ycXcS3hE+rWh
cchgAZgEjwhMruJR/KB+T+WVBRAQKO6g3cSjYDsZ3yjagzjLLG/gFh7VptOX
xIzMAxUzT7fVgZb1suzDZs7DeNjOQM7Gwf5dUcp/9vMQtvTX8tbBeq6TkvxD
ivPQf16DW2IRj96Elrsj+nnI23X7ZTmFR+Rby9d/981Bdw2d9JExPNq8N7pj
+XMOrK4co1vtxqOY28NJD17PQdV+0eDFZjwqqX+q7SM4ByPfN/3qyvCI4Vj4
R6npWcjOaNbJyMSjoWvmziqps7B7ulPwyg88yj8aN8j6dhY+L410CHvjETo5
Y2onOAu32RrP33qFRzxFKX/oY2bg1ER9lel9POJ4gWt89mwGRouNd/cv4pEt
ifT22ekZUOa5dd38Lw49TBAJjnH+Xz9/UkN1DIdEjZgvb1+ehuXhREhGOOTN
FtgjNjsFrRnrrRVOOHS8xwv7+OEU5ExMGNLMYNGi8OGtHLpJsL/OsLxVhUUl
rxJ7qMsmoIKivdU5BIvoblsqe7+ZgHRxbyWj61jUFJXw8H4lGZ6Ox/75stqJ
gpVnRQZfk0DEYXfX7GMbsjn8afPExXEYNuXSu7PXitoz2Xm2Po1BsQWBW9qt
FWncDiInNYzCF92sYz+9WpAprW9ButYIeNlE/ypyaEIPqckFfZ6DIFN1Ju3q
hTrkE9V42GK9G3je1bhMR9WiAQm6GzJ3uuFs1MSpfdpalHvlt+C5SDysucVE
1i9UIyzpD6H7Jg7YJDy+lD+pRKpFgbJKqh1gjhe5sm1QiIZvE5JNAurAi+Pi
oIpuAYoQzNIF51q4fXS49eGLfHQ20HlByKoGIs8XPd9+lovaL9tbyrZUQebj
xP6xsTT0UrTFuWmvGIYbDcZq8kPQJwHWZrJ1ApSFWItXaAQim7h1FFkTA2bH
OV3+HfdDZjkPqU40RQAmoX/krO1nRE2KmKjK9oGKn0bpNlffw43eN2elEp2Q
xM1vJmscEeDZ3Pf6ytEk1Hj7LT5dJAoeRYU8KE9ORvI+r06u8ERDpYCVVLZw
Koox/K76sjIWlNEv5rC5dFQYqVRRPZAAyTJv2sUVctBO2+11+JAImaUuk40s
vxAvlkZfizIJgDd6zq//F+qlkIwhOifBoq3MuTq5XPQt3WIt7XcSxL5jr3zp
mYssSj9Yeqolg2CN3+8fKBcJHa+dU0lIhmc/nH97LOaiOkbZI8MTyZB5JdyY
92QeulnhoXCEJQXEb4O7g0AewnJzruVcTwEnkYiBGLE8RLyiopWrmgJ+v6Q/
RQjnoeti2Lh5jRTIuJw795E9D0nLKJJu3kuBJPpjHEoUeWj99EupKNEUUHpA
MuMfzEXeS/0J/RQp8NzQJ/lsSi763SVxn1yfDGdvjqxffpuLfO1PK6baJcMF
lvWFMI5clE/yrz7JkQxzotb/kvx+od3Hx/8d/5UEcT3Om/+ac5D7gyPyTomJ
kHokWVpyLwsJq4S+4GmIg5PqJPa652koT8jPii0uFiRWnqn2Dacgq0tHFwu/
/YTahR6BHcVkVNUVnn97MwJOUidSEDrikSN+triW6AtXn5+5QecTjF6whlo3
ffuGVlIK9UuzQ+D6mTrDitBgVLltWH3NIAoeYPcn+Y5GoCesh6UvcseB/lcX
ifLMOMR2ir0r/eDca5vOS5iWDJSmsxja6pYHR9iuO0xTYtC57tfXLcMRyP/b
4jAKK0MnL63/N1taDZ33IngTJCtQDyPu/I20GqgwFHV1cUAoIOt9fo5fHUTK
i5/KFKlD66pmxs+MmkBw6wVHhHMrCqlOcPS/2wWNzImpUsy9iFv/NmfX3X5Y
qN9gNPDvRVeGx7tD8/tBmXEs9BlVH5rHNmhd5BiA6NLci2pLfehZscjf9PkB
YC3Ea4xVDSA9Uzzh2qchGFR8yxx7YwTFj5SbzCqNwrX7LBF86SPIBFeHW40e
hWBFB5wzwyhi69FuoV8cBSWCw9C3iVF0OO03xdMvY1BTsjNn93Ec8YlezBVI
HAfpOa97t/rHkYpoWGfFxDhQHTrqI8tOQGFM9mynzhDA3ziBf8eWgMbyg63O
PiTAv5pjaYPniAhvTtN5t5QAO1RPRK6oEdG9mvfY8S4CYBkfT0XaEVF2nV/k
rSkCCP8Z/qraSESFfIbRBieJ8E/v1Wb4PBHJ76884OQjwpSfVHr7SRI6zMmd
H3GJCPltDwQmH5PQZ9XTT7HqRLD7latVZUNCkfoUut6viDBGPFdoHkpCFNtH
svbNiJCY5y2zUkBCT5k06CTsiNDOGnhUAUdCqR1f7VjdiBBu6Wf1fJGEer+2
MlT6EOG2JMu49FEy2m/IEmENIgKuoWsYx0tGWpeEr4hFEGFC5i/rhWtk9OC/
wOHtaCJcTrti8d8jMpqbNSU5xBFB/Stv3/YbMlr2en2rOIEIMi/mzY0dyChX
l4X7f/8T3Y5Qu3h+I6NkTarqRwda+nv6x/txZISduhFVEE+EDg6n6bxcMurs
1VDujCGCxsPT38sRGdHbHYv63//MvjRrdf0OMios4vwoGUoEHu48SBkkI7om
mm2Hb0QQDNf85jpBRkYV6a/cvYggoTUVu7pIRk6jdKz3nYgQpf2UYmuDjL4v
Ued3WhEhWcnhjd8uGbGajJLPviXCnXvmhbmUE0iu6q8/jxYRatX/bukdnkDH
Y5yKl5WJ4HRp1yTmyATisMV7f5UlwqpWO4XB0QlUb3Fr2E6YCFJnY0UtD+JX
g2oeUzATYXYzVqeGegINxB1T5TtEhKxh39tPKCaQYiaLJmmeAMiXsUvsDxn5
tJvzK/YQ4MOx6+fvrpKRRptSqnI5ATbex1XGz5BRXvXY3m4cAdp1Oq7fGCUj
2nkna21PAuSWWHxnxZLRw546N3MjAsxPfJuUqSGj9dXC7v+UCMCuyBQgE0NG
LXkPS6mOE4ChJcqVzYeMzkwVLvJgxwEd3vl18wMZJdQOh+K8D/J7nL7R8BYZ
XbWvihXYHINBFtpHBufJKD91jziaNgYuiaCbQ0tGoaeE6LSfj8FJqsHTEh0k
dM76K+1AwShggi8I/yd7kJ8V2q8uq42ApbZrbXcHAQUR1DM+SA1CRJDK0LVI
AvI27lYrbxqAp5V3j0rpE1BZelVR8osBMEwa3uueHEcml7Ddic79IPuitcKB
egxRsuI89zG9YMdGbGDvHEQW3+TCZGnwIG72onOFHovCGPo4G0bqYZ2rXJ15
sBMFEtq4U1brIEVaMYQjuANtPNLqKTtWB6EJWS6K1G3o8nSM7uL1GsgK6drL
H29A9tOlJ9relMMu+41JV4US9Mzu2jgvQxa8uxAYerfsoH7fvaS0Pp0GptlE
n9My+Sj8jumLsqZkcLwS7M9gmYFcbp2/ilOPhQ1OyZfkj74o85qntciSM6RO
0F8U4coBNSaPsruDcahparG/Ri4P/CJlokMuJSKWE4uh998UgG0lahz5nIxW
CGeGqn6UgAHQmeZOp6OoooQoxQgEaofZqpj/5SKBtBOMhqgaoncSso4s5SEX
gehc2+waiG4kP5/pyUf2sKTubV8HHX+65R/6FKJc2hL+5Y5GaEnh/1UUVIIC
6JlW5UKawLdtGysiX4ouBjOpmzxuBmr1/JvPJ0vRh4zD5PmaFvh9YYWyj6kM
PXt1EUNv0QrCj5dszyWWISyDs3Xq2TbIXdvwuShUjuosHd6OPmyH82i1ypWp
Ajm/M7r3kNgOqaVULD2uFQjbe0J/xKwDqDx37TYnKtAF+ZJySotOSOV4f6Ur
qBJp5N5i/DDZCVQqvN5Ro5XoHSaNiHncBRldSkiXpwo9vv3sVTU9FhgfliTR
f6tCGTfe3Ai4ggViW8lRq+Iq5GvRvC+ki4WLmktqJwaq0Fu/ZYybGxYUePG/
l1arECs5f/pHAhZeZixcOHcEIWP/XQMLhIWu69/O1DEiJGPoZL0zgAWdO0Zf
+9gRKk25XSbzGwssJ+ilrDgQuiP09I7AIRzckdf+lMaE0Lfjwr7oNA7yeZv9
/I4j1EwU0KfhwgErNuyR1HYV6uM5emrrHA4OPd8zzhmvQuN9D64HiOIgTkpY
lKmmCj2L+riJFceBWf2VWOfoKrT341l5qRgOtDJO2lJaVaGALhWzuxdwkPBE
+FSBQhUy5zd47MSLA4bmh6ZZtFWoFfNJ6AUTDpz3JS7QYCvRJIfGIdIRHISR
9jwHv1UifaNQE4ZNLJQ/IT+Wv1f5vz7t4QoBC/bnrP8+3q1Ag84yNJ+bseDv
R/1OKrMCTfT2qFVkYeE/Wopz648r0N9cy3QtUyyQ9oOWQyLLEe1YmHztbSwc
a7rilH25HHHu/XCc48Ae9NU/b3C2laEnHKGdPO5dAG9+KH2aw6C9jz0UCS0d
gG19kfB1swRNSGlUFyh3gF8jTVyRRQna6zH/lN7UDuI+eV8uTRYjrs0/NK7Z
bfDkUjtzckMR8m7U6WmTaoExt5l8ylcF6J/75eZv0nUw8GdhzfdiFtIrKTg8
p1MLmiq0Z1zaM1BKxd0IJ/caoEisVtAwTEeXphcjPjgh2F6LTUv/loK+Dnx4
dIeyFCZ3Es0DmuJQUhQtrd6bGFhwIf+nfdkDCV/54phOEQq+S38nODEOSJRy
ZK6M4gu4yyo7BpwzR7cNMapWF5yRM13yfXc+A0jw7cnhyk09yHsFOptKf/D5
9+b7Q0wWirZcoH00FQjECK2C/YlcdCNzRK5pKgQIEqyPTP4Vofq/rw2FsVHA
a+JToXi+Gv0+9+DrefZEUJChCr3+oQadOhl4TNQhCX7ggdKnuhaJdXtf/9mb
DLuFGkJvnjegUe9irUm7NHCiPaOQ5NWKmuQ+OFy2zob1Agd1YlcbElQkCtbG
5cCYN6vOFHMHWhMzXuBv+gVPTw99ck3sQjY7NCkj+7nwg8B9r/URHvUEy/7d
oCmAnjTW3p6D/nfESIpj+nMBCGnaUzj7dCOnIqOc3NUCCNtXClav7EGpT4qn
wzoKQTUuL+7B4150a5JlMepyEWw4KMV+me1FjY7UfHfCiyCUU5DWgL4fOXXL
jZqqFsPJerfR/p/9yNnpU3NvUjGMpq2+lxQZQOmnFLMbNorhRXSe/w0YRA8y
I2R5fUrAXqAwsb5hEOWwGGl6dJQAvb1/7ND9IZSntHlTm64U2Dtye3WVhpHu
NNbCwLEUPJ3pxFMah9HuD8XTIdmlMMPxJueC/AgyZ127999QKayX9LT2FY+g
af3Mq2qHMDB478GzKOFRJG/+Yo8oiIGsp1bf9X6MoiFxmsRlRQz8qTI4yXZs
DM2Q/ERddTEgzWlFyLMeQxXHH/hF2mDAxafuI/PwGKLN9kuQ/4KB52JbhVdh
HF20b732OQQDIvczl47EjaNDRl1HX/zEAFZvZ+793jha+JycTIjHgIS/5VqB
CAFpvNX1Y03AQOJlnPLiEwJS9C5lOh2DAds37mEvXQgoytjfvjsUA9+D2tP3
UgmInlas5p03BnwXDX80HtRTIw6PjkU7DLw8K1+s85uAMBd9N8cMMcAo0nr2
0Ukiwn0l/dFUxcCIR3JBhBgRBaho0bySxsCxZ0EVF5WI6OltpcHjLBhY3j0T
yGhIRE0aug0GW6XwouZoI3wmIiEKjQzH7lLwlVYSzAkloidR/qt6WaXQPC6V
8yKTiI6FF3wXcCuFvzdFwxQREcVXcW31PD6YL3jxviGOiL513OLyECiFdzSK
JmVEIgo+f9j21koJ1OcvdssvExHjvbV5gfISCJ2Ki9jYJSI2d4eRa24lEPNb
kKrvCAltkg6zRtwpgcPyO2Hjp0joR8ahcdWjJUCcTDx1ioWEFhVmemyaiuHu
EN0bQ04S4r/MR8PlUQz2nHWNozwklLi+MqYtVww6ofLRtnwkROS6ef7uZhEY
Jwn6SB5o/2kzqtXMInj6/p358YPxmnabk1a6RXC9P0qPkuOAp5euh46fKgLu
7dHis0wk9KmMme9hdSHcM5PavUN/wDdsjhM97woh9ujHPyHUJHTmPbWtD2sh
tF21K/q3TUT60p/zPesKgGuZ0uzLAc/XyJmkj5oWAB97X7joCBEpidompp8p
gLWCjMXfrQd+ZG2wUJbmQ70m20t8CRG16t/N+fsiH3528r7b8SWi6CmMz9W4
PAAVxzMK1kT0SORnR5Z8HtzUShnKfkZEkRw/ufgJuTD3VkrnHycRCUgxz9lz
5EIrOeT3zB4Bqfz6e4rJ+hdYX5dVpRwhoFkJyWmKrBywJJv+aA0ioBKGmLdr
bNkQdcP+nJspATW+PeGm/SgLKI+cqrC5SUAsoZtUj75kwqGr/hoKfePoWCLT
oZjVdJijo5jbUx1DD+hmXh5rT4Fb3HV6nFOjKLTmT+tJ6pSD74Xz/b7dKPJQ
86DjvpEMb8NIBMnQEaQaN+N9qiARxIucXX9wjSBfXrtJleUEYCi8999G0jCy
a2dSVJJIgKtvrEMy04bQYbei1IsFcbBmIOrKd24I3f88zEBejgXRk/7Hq+IG
0Y7Cm0tyLjGAdH6a/PAfQEKVb5c7cn5AHHNFrP/dPtTV9pKL93EY+OuZ8Dfm
9yIVa62SCMZQeFJRdqmQvRetLKd7MIwEQ6TuobrfU90oPRGpcroGAhXLqYcv
73ej4hM2L8V0A8Arh+9TdToe0UwVPPL0+QZ3+kW8MgxwqGX7GF//Yx+wtiC/
1kBY9Fz/RBpZ4ytcOcTeJ82CRQxZTmwNBl5AFTBWOOzdgSxX2bpSKt0gYEZA
slOyHVEIdtK9o3EFZYUTXrV9rcjFVYH5fMNn8Hja+PEWSzOS/MWu3ZBlB3+n
G26zFTUio3+MOS9HbWB4aE3pi2oD+kk9pHP/P2vQkM5+lTtdhyjFw7iZyy1B
ceh5SrlTLXL3fWsZiTeD8RayQ9fpGhSp9p7Q4WEEX+Yf/BG4h9D54Der+f4G
0Pkh+88T4wrU3fixiHPpFZzmbqZ2/4JB7omCLvEqLwCoUl22EopR2bsYjm1L
TYjYuXCBqqIAaWvvNdrfVQN1+tRDG/hcNI8TqviYdBdOLFIlXsFmotKzAvin
AvIwqmDLG7iVjExsaDGPeC5DhdAmNogjDmUZd7lVJQnCHYZbQWXOIUhky0hQ
xP00WDtlPVX46oqq1Tso8n7Oyt2IlixRqHsLlcpG/AJfSuQqOk/IyRv7w8in
R+ELhw+BfNtt7rsWURAnzH/nAw8nRDbTV35jSASN/v+sLj4Xh4rs3+T3i2nA
XiYi9nXhKtyc0vmWXZ8DsarqVn21t6DiSr7yowf54PEirjHsjzLQu29wPT+o
c2qJj29OdajD5Ew3OzdbKdC92oq/qv4MFLp39B7vlYHeGYw/p7cOCMbf180Y
rYRrcn8UEkpfgxL7DzPjl9UwmlPe/9PjDSzrH/sLrTVw0qc5uCjVBA7pifBL
HfCNnesddlpeC2B2ee/VRd0IdCYSnireH6C6qMxD3LgJZL/mndFVtIXoowxZ
p9qaQScl7q3d+U9wviCBq8WrDcIlI6mSL7tAiiT4ahLageBm9OAZyRVsDjma
4WQ64b6S8OiNRHew9mMconqHBdnwXEqel19AtEE5+AYDDur6rrmra3rD2D8a
5rQSHGBJj5X5dX3hxL7PYOsfPFy/Ja5DSP4O3R+3y6yNeqEwuEtHxz4E9P4a
iOwe74OeSiaBn9hQsOE7l9+U0Qc19Me5FiXCQfop2/gQsR/YTa2itQ5HgU/C
zMqu3QD0xzN2ok8/YOyN3Q7TiUGg4CstbNiMhqPpO08WRIbgxF+brDCKOKD8
EuLoWTwEV9mTivWb4qDszN41/I1hgBdNXpiAeJhkZOW7e3ME7M5eQuLCieDh
Jp6/xzMGOSU8oa+tUsCPWdnn+/cxKNOKKI+5mwpCwi/HX/85iBPs/uVypoHg
Sn5ATP04aJz5Lf+hLR2mb95S3D5NgL/DEk75CRnQeaX8RyYQ4PPYCzOifSYc
1nRZ4wwlHNTd6srzQtmQe+7n7+4KAtTtsWu272bDmTk2eTcSAU4dtuWzxeXA
Z43t+VIhIrzJXiA5XM+F2kP6HtfuEsFFYv1CVmIuPNIVXEgxONBWIdi543nw
eulpp3QkEb5f7PDi6suDnXKmXo1cItBK1zsOXs0HaeMn9RoNRAgWSssUj84H
hTI9zssDRBCsAgPKvXxI2SzOWpshgrQI3Xlp7QKYf33eJ3CLCIeqvvzKxhSA
weYKywlqErhx6iw/PFsIFA/qj7yhJ0HVSjT/nnkhRHfUq0UzkWC0Y7gturEQ
PrK5X83lIIG/hFb5GY4iEM0iqyfwkCDe5AybokURJFT9s7PmI4HDs2pTpuoi
GHX+gxc40KyJQ6EW9MVwJLANX8JNgmxvp0lprWIYHN+/LM5OAvU/t8+qJRaD
8YQxhQ8jCd6S2DWSZw/q9cM+zw5aEvwXNnebU6wEvC8m6P6lIIHBf3cY4t4d
8CBG8z3TOhHUKfcMmDJL4NoX8WneSSLIvw02N54sga68OGneHiJYraWvunGU
wvuADhaWGiLEDCjfU1ErhQKd5eDjWUSYFxN8VeBSCsqd1cu7IUTI64htiTvg
R/WEtqo1ByLc7p8soewvhTmTGvzaKyLUdTfT1O2Wgsfn8tuHFIlA+OIHeC4M
/Fa2/SAgSIQMx5CfnDcwEM3/dV+XmggMamtnQp4e8GW4c0MZkQCJ5KEHguYY
+BFEt3CtkgCe7gslNS4YqLtzuncqjAACgkYeWt8xcJo9l6/BnAAik1cziJEY
WDVatiy5S4AAJxHHvVgMmKooe/BzE+CeL9bT7oAfpWgdErjmxsHwP/p79w/4
8nGb8Spl8DhQ83BNvYnGAOVv/+C9K+MQcW5FqCUYA1c/1dtyjYzB+B87R6MD
fm0xWJ987zgGjzb7/96wxYC6mrbdYbYxSBr+aHxLHwNtwn1s04Wj8JyJQsZa
GQPXt08dE1QZhWUWeddmCQy47VW3d5BG4JPDHDucwoD+l8bryzYjoONyy7t7
oRR6/JQ//qAZgdKMbAr3hlLgMR6YGAsZBn8GdgvlqFJIY7ul8y5jCD5329jx
XSmF1z4PggYkh6Bjwtnj4kHfNi2RdI+jZBA6/o6ZPmksAXZ+SSXL8gFoU4H8
ZcUSmPqUm5twbQAm8x9qmewf9Bs2jW0rJf2QarZjSVNYDPggyULR7D6IR17R
pQwHvFgISrKCfUBVQDk5WFkEGu0DvLk/eiGv6zPVZYMiMPk0yUfv0QMzRVuP
8pIL4RHlU/pfinjQ9vP/0rWbD0su3Ufn83CgFOT2I887H2gEtUX4Dvp/klhB
OwdDPrwsdFGPne4CH5tTXvXsebBfTN8ZIdoG/G/VjDdpc2DBzuwD7d8WqAu9
vOS5kgXvRwV4fzU3wxXd2BcCuEzoP+qaeP51IzSXNJmdc06HIo3qL3JBNRCm
nH6zMCoJHlPa8gbrVEO+sp/GOc1EKNTMVM5+UgW8rZ86do4nAF1kjmGAPwa8
vOVNaLtjoH1/J+86Qy4kDCpGm/0OhleaIe0nN1yRfVejvvrnt2jPhC2A3S8I
zU/pqhy1tEOO4Wc2Zami0XqEwkxBqBvi6R68dO9hKlqRV0pofPEdWSVnJmmG
FiKFtKn8+7bRaJo5Im7raS36v4rMO57q/4vjJaJEGamkQSFZhRKVQ4kGUUql
KCTJzCq7pKVFyMheyd5c69h73Hvtfa9L5iUj45v43d+f53He7/M57/f7vD/n
+Xq8eVvZznOWJeKqV83dSJUKvDxrej1HNRkr3D3F3YQrsb6Rz1a7MgU3V+jc
0eqtQqqZw9t1vXQ8rN5eP/O3lqHLT7eXS2QhXWHTeGNWHXbcTuX60J2F/gna
sjMP63EsdpR30jMbuxfYPcIzGzBfaDtXZX0Omvh+fX5wpQnvHWWpPXw0H31s
4x2DnjdjCvOjvoXcfFT7u1/vx+9mjHQZ3McGBEx5XiKpXt+Cygq6j28qF6D7
Hse6vp1ETJsO0AVCAdoc9R0pP0dEmwp+jUaJQvRKdXP750PEpudeuic2FWHq
Ie6T6plE7HldwlRtUoTLn1quJ7QQcX/J5gWj8iI8mRM7KDBORAFTh6Nju4tx
F8XKJWqNiOusm41kzIqRwH72tuwOEiZ2de05kFWMejpup4n7SLhC0vv+cZFh
f+B1dxQlIQ+nzkY92RLs5H6wTViShEkibUqmZiWoNiT4qFeKhIvKO0QCgkqw
kKYbHixBwkJPTuuq0hIcj1rSeyBCwhM/lUt6qCXIaxDTdkyAhLc9lhLz/5bg
i5gTHds4Sai/ml11nhMxwkqtaPEvEZOIeuGGexAvbgqwnx0h4vdjcvXLAoiV
PvpuGxqJ+D6ze/z3bsSbFcHDoqlEjOSbTpXhQNz3RELd4iMRf/ZlUn+slCBZ
d7mF/IiIzu/tHp0eKMHk6KGThmeJePF99bnughJkfluK+3YQMSs6OtrqC8M/
Z2i7v6QFn8+q94/fLcF8g7dN+rRmPDzpJ3etrxib0r1691s2o/8xraOBvsWo
/5T4vHmmCbdulK9oVyrG6UD/FBVKIy4sJMtwvyxC/Uaz+/HW9Sh4nW1zZEwB
GmjucN5UUYejYjtXC3YVoHPIi8il7XWYvePex6BXBCz38OXZGliDgUUS1MBz
+Wg0xBdRe68S/d5U8Lfr5+CiXjZHnUcF8tm4UsV8spGcyWsKYeXY5W519G5B
FoabLsSz15aiJb0m+vliBh5JihO2LSPgUrXex559yXjupiCXz0IkFpto1MSc
9cM3bQ+DXxYFYdRY/nk/uY9YycaruTzxGQsKt37gy32J99qmhFZ3msPrE5cL
lW7cB88owrTQtjiQSZr4K9YSBGnDefnFoSXQtnWtWqkgE+K0nFyYu0lwzfbW
iq1rDZhuO2N9xZIM7zXvZHy8UwvJJ/cfKdjQChqCIsyn5etgx6429ubDbfBr
u5XE0nw9SElOj3I96ACB5mkNbZtmeOfr9C85oAcGJPJig9PIsJzLFCi1sxf+
thQbC+5rBdmq/2bGvvYCzTFgxzHvVgj9fMi79V0fXD1Q+izdqA1eXw86c1B/
ADidzXWH2DsArJiXipopUGu8YnJNrhs8kiJuOP2jQMuLlazX/t1wa7oKVo5S
wYelcdJ9vhu2oXipjCcV7pnMq39N6YH7C/h6v+AQJFpgDhNXH+wjF157d2EI
7ktnRBx61AdPqvVmAh8PQfb6/YMZhD64rV41HZo4BDdVOhzH7vbD/Wth1X/2
0cDl2IOetA8DjLje+aryNKjTjWva2zoAupUnAkW0aOAdTmeO3z0ICSIzS6HO
NIgou5cxGzYIov1c3VKfaVA8KTUS1T8IJdkyJlcjacAm4T4dz0EBdpqmhGwp
DejR5z3OXKRAmX+X1FITDXiPTuguGFNAquWJuVoPDaopNwJD3ClgKiGde3CE
Bqf9R1LEgyggH7V3x5tpGrRpWovGplPgFAc53nGRBhaGVekbainwScalbW6V
BtEFaruUBiiwbX/ogb8bh+HxDZNLd+Yp0Mf6S9GHZRiyqsRuabFSQc3a8wKR
dRgaOHvvx++lginxmLAB2zCEteosh0lRgRh50OI0w//9nuekjDIVqvRlxsyY
h2F6xvOEkTYVjgq9jp5cp0FWrCqz2H0q9KT9HShfocF1PtF8LwsGp24i7J2b
pYFEt8+w7XMqyHzy3+E6RgNHf3ftWca57TjyJtW4nwYCcVuX/n2gwvTklgPJ
RBrcl6KzBvpR4dCSS8Xtchq88VgYLWBwbrqmhZxlJg1u5TgcfxxOhbapCWU6
Y3+7PXKyw6KoECfXSO/7xPAvXXyuF0MFo5oRe2UnGnA9sSKEMewaJlVVAWMa
nNhhMPUomgrBJ27/s79Cg+yvX4tyIqigmnfAXkuGBoo3tnB4f6cCbFZNTd9F
gyhz52VaABU0eeWGwv4OwRuVd6SKz4zvj510FBgYgoyKX0JH31DBu/TZ+nEc
AiFB57RdrlQQamdXGQ5n8DGzpe0nGyqcWpo9quDG4OMLShEfjalQfXhb90m9
Ifi7oTqK7yYVHC7xfKWdGILH+2T2S15g7H/7p+0Px6lwKbxeilWQClMbBy+h
ChUWuLKCM2oowCQjLTfHS4WPr3nqB1Mo8JQ5l8I+SmHo0R0OaV8p4NT1cpHr
HQVe2kG7ym0K7B7dX/redRCKFuzeXvoxCC58V+ZmmfvgRkzCTjjQDw1lcUvl
X3qByl1pxFXZB13VN4fM9/RCseUR33rG/bGWtxr9KNYDii2LPaLxvXBBuGxp
E3TBrs0rgvs4e2BY7c6d2Ktt8PZg6Dk7nw7gyRU1p3a2wokH1zFQiMFRdb9v
7jJshVPaHvEVWe2g/P5vyg87MgTsdQmzaG0DiszsymQIEYZJUzIJW1ohYc+b
LJfVOpi0nHmUX9IMyuP5+a/rCWBg9TPIX6UUpi6Ruq/q5MM32vO3vnUlkE0N
+iA7lAsmmctH9vAWw+HYUc4h7my4/WhG/E0uAe6zPLaQf5sC2j/3+6B8Fuz4
5KEi9icApsWlOQReh4Fw+Ub7o72+cKwwc9KNPwh+h9k//FH2AbZcdPQxafkK
AZypR1SOO8HX7fd8NU++hBe3C+93XnfDQe3wdjN9LzTnTPd9eiUUH9PFR7Zq
xaL339NP5tTC8cyjjruLpDicPtLaVrwjEpWPdZ4/qPwD2acMDpMIUbimST7M
3/8TE+8uT8Y4RGO+eqilCXsS/meix7VJMAb/nX3SM3IoGdNsA5neqMVif6xs
eiB3KpoXS7aVlMZi+dERydtjqTgamcKaejQOPcNrt1j8SEObX2JXjb3iMJdz
cyRRNB0DLycb/26KQ+e9ZvIPbdKRPSZqqxlrPO4eKLXSS0lHe3kWVtqxeEzw
HFIJH0jHFlGNPY6X4zGmbS+bAHMGdpRxrZy+EY8N7Q+ele3LwLafr7W0r8Zj
lJ/WDzfxDOxtCc0gnorHB01beFUkGf1NeHNIH0888i/TIv8JZaAQ57BRwGAc
6suNh8Rvy8CrEVdgf2gc3u+QLTw2kY4y6d5yoZfisH4/v9jXwnQ8+Wrdmvd5
LG4T21lSoJCOp7feCTVciUFWgnbXRGMa9t4aDL9kEYPjIpOzfRxpGJ9B+x4t
Go2RLHsChNVS8GjGzJ6i+TAMyzNpt/FJwFuH2bfk8Yfi/LaRvkHhH/j95PbH
e4+EIE31e8pCdBxef3GbMLcUgIM98tfu3YjGMPPkYcO5dxhNWEoplwzAh4KJ
1jN8r8FMhLTZ+sNXUOUtf/FXMgNez3/vkDxbCst1jj/kVTOhNinzh4FeGTRn
3wgPZuhq4/rCAWvXcsj4wjGy9jUHbC1rHFOaK+GQQUBcxI4CaE/WCSr/UQc/
JDw9+XzLwN4oJ6GWhQx7/VJ1NQXLoVf+HHRkkmFtq5X7eno5SJITzgkx7tFc
4YmHDs0V8Kn+Q8yBsjYIcFpS5FmvAinV7HtXPnaCUYf9vqeH6kHjsIx7yel+
UG4N35sUWQ/SCXx5F+f6QfpHoTeTQANMj21US0gYACG7ysu4rRHsa2/uurCV
AoQb28RftDVB7mHVhyJ2VODKGvieqdwM2w3+1jg3UsFOwsDOKbEZit5A1z3h
IUg4sDjyzrEF2hMLV7+3D8FZsZ+RAc+IIK/yWaFGahhejjz5fSaGCH7dlJ+X
Xg3Ddj+XXKcmIpw4KnFtvWMYgrwuaofvI4GOzEaPLpcR+KJ+7ojreRIIvF82
/NU4Anv6xj16TUkQrEOTXxX4BdpHFco4kkmgZHc/ZWfBL5CUWfvV1UCCv2qs
/syso6C2V5yFb4IE24tJa6Tro+CaWU3oFiSDhvhrM8qvUVgvE2vUO02GIynq
DRzSYzDrtdx8TocMV34UP5tzGINDCqr54E4GxTIfqaL1MZAMf3Jrlw8ZdiX5
6hxUGoelS17KryPJ8ADXp9RcxsFMKyX5HYODFASPUo/kjUOtmzC7YDEZsh7a
KuLsOKwe5t94tY4MblIyRzaJT0D3b1Oz7W1k2Okeuk43mgChyRs3TPrJIP06
5IxT8ARw55xj1R4hQ9xMjGd48wR82HpntWWSDAfdv4bdYpqElagjQyO/yXC8
28YzXG4SVNzUvn9dIMOml6raliaT8L508GznIhnOFZO1S/wnoVtYjSdniQwd
Dg9WPpRPwvHDDoGSDNujy2KSOD0Ji0Nfnp/7Q4Y3WY/+vN0zBXw8t7/9mSVD
leU9nuRzU0CvCdt4iU4GV89461NPpoBsnvBXaZQMsRYfjY/4TDH6d9Cf7kEy
RI7Tnj3LngJPhaovAp1k0HRPNBHsnIKpsxzBW5rIMC8WzCe0PAXShmKcsWWM
fGQy4xx20aGpfG73TDYZtqzU3t99gg5mF+K2T8eTYbhoU+Xma3Qo+rLXPjaQ
DELqt7zOmtPB/jDL/M63ZBgzXH1NeEWHhWw+YzUHMgRyD1KfhdBhiSxXqWBE
hrJXrCMOaXSoEw5WWtAkg8zX1R0Z5XSovDgn6HyKDJn0AwKibXR45uQ+3MKo
j+1lm+baaXS4fUZQ6L8tZLjZTsgqnKUD50H77/9+k6DhkEB+xz86HK0hyw12
kEC7ifOjMNs0yBka/YkpJMFui8K5+B3TEF7Mu/laBAl+5lWN3Nk1DQcEf6RP
viTBFVungLMC02C/JczAyZgEJ4JnH187MA3iW+WD1hn1TiCeWvM/yJhPN9nk
dYgEbzcbH2Vj2M3qBUbbmBjj1SJXEvdNQ2qctn/4IBH4Ci+mue2ZBpG3BT7K
RURQ66dWveCZhgvXhs2WA4lwoUZgJpt9GnRNli812hKBPauJZy/TNIx+ANty
DSLohvfpZC/S4Rt1TYEqTAQJPunNnuN0cByL5zdYbYHP4h/yX/fQQefFrq6H
SS2g6WcnXVZHhwzHNSLtdgv0zK+anMyjw71T6lkeac1QIDbD0fmRDn2md7zz
bjeDb7iLF6sDHXLjPtiFbWgGQ0fzSpe7dOBKzXJP1GiCT/wuS6cP0UEggHib
/rsRao9ohnxmpsPq08D0nf6NMD8iYSIzPAUF+0tZtTob4MCDue1u4VNwbkZ5
0+/r9XBvWFQ8cH0S9JZvyH8ZrYPCJyFHJYiT8CTBtPexSx3sXb3ONxc+CQKv
A/N5ompBufhyuIT8JDz/xisAv6pBc+opRVJnAmxHX0v9dKyG1sHavj18E6AR
fDy2b3M1CHGHr9p3jsNMKu+9EZEqML/MKht6cxxeOrqw6JtWQOXK0rUs5TGw
4DrNPLdUDl2s/XF7l0fBeLfow8535VDKIxMFqaNAecPF1ppUBvKlpS+G+UaB
vayux/U3wr8moV2knhEo6Xn3doM1AfKCRKykGLrjpdPtL1sS8uG7xWmtz4ND
EDEt8cWalge2SrrZRm+HQGnbmkyiYS6sBcjKfm9n8LdJTyevexakXarqSLGk
gAd/iv+FxkwgbrvHyctDYdzrUFWrfZkg65t45qfNIAxY77ceqU2HL221A8dY
BiAY+Ld0f0gG5cgoiph0L2SeSQmo1UuClQqpUGvnHjA985toeywRdA0cMk9V
d8N2+5PKp3//gPkFrc+F97uAXmHCyVMRA7fc349rhLXDT27a97t10cAR3lXu
ONMGT783bsjviIJbt5Nh+lwbqAhKVuRujoTHr9+bHJkmw4xUBK/xs2DQfMxt
ZXmbCHWrlnfOcAbBp9TSt+5eLSDBlOh7LuMbPBhQ6c+42wyXxgzrP+71h4hP
GiN6Oxsh44rvDPe/z7DBl9UshlADnI5clO9jH6FyXup2dko1XPfkp3dMeIPP
8fZmq/gqYNsTZSoj8xYmZ78tGcVXwJlh6V7hihfAsWZ35GkNwubHLqpcue7Q
ItEvwLuxBN4QnGQ/criC26P9vAsXisCGvT5D9NgzGKsZTVCbywfhbMejz1bs
ISGa7H5ILw/kN7w40/PLltHPfxdwNefAgYNmRxp1rCAt1cD9V08mCOuf4WT5
+wT+sW0+LW6fATV090K5IVO4phBfdJY/HRS2bIJsUyO4bSMjMc2fBId0NH97
bnwAiqy5FQM5CZDFdUbwc+xdUJ+/GpluHg+nSD2T+vtvwHCApuEesWhgM1e8
9XtKG5btbA1PHY+ELrfsuq0SGsDTNBbsmxgKlu7hx4TF1KHzginfNvFgqNig
pLZcfQ7yK4LXtYYDoJF2pPzW4ln4sMbJWt3xFapbTIlfHeWhztSisIXJBxQI
LJMuK8chhl9y+TPJG6pMjs8/bT0K4tu9ejdwv4HrYX/7PIwPQc5g3+DHmpdg
umUw0GKGH7iqZDSfj7iAyOcymbxaLjCiqatyH3EAhV/Tj8r/sMAtq4o97mlW
cCcxh7cxZ1npykUHus3EQzA390y3PDOmZJ5m8fYJsx5cyMoIbF4nK+12R90D
g1fAF/hET17PUop8opSief8ksGqL7XYWfKZUnmkUy1G7nfFf9//YfUa2JGn2
mVRvNlWpOymnpLAxvISuxdx44/QRYHqVF/Pnd1XJoJmCSZPOeRi8vzOo0JBS
krrx39yWrTegQefRk0yFuZIVzg0GqjyGEH9/jnll/0ak/nrLTFwzg2qupoQB
4jZ8qiz55IKxLWwZFN82/ZQP8wWOCX7Ofg4fxdTVd3sexA1p95Wez3kAFueM
O5wWxaVAN1FOTi+4rMvEE+kjjb+bewmKQe9APTx80KxDDuki1NJjgZ8giNj/
73m/IoptH7h05LUvFLlLRYbuvIASBp2XDsUFQtaT8zcjsi+hd8W3ZZmVEGhZ
tWpRm7+Kk/fKLke+CockOxlucsFNbJ2TlqULxMDcauPA1kd3MHcoVkJfJg5a
LCXmWuz0saYlUXq70Q9QuBWW4vjQGFne+CSIbU8G1Wsb2722PULi0XvvmD6m
Qrvs7VOh049RdOyl+LpPOjyXsfhwzMwau/hu7d2ukQVJFwvuxOY9Q2K7lnPD
NQI8O7rlXcx2Zyz6y6nD/7sArJJVPTU+uqK24olA/+Ai6BZY2ef49wVKpv9k
jdhcCpYP3pY76LzFz/6fCjG/AjbpyTSvCLzHhqVjS/EZlbCayE0u/uuNbMSz
KmppVXDqE99lyf8+Y9qQypRMfg14PRWSHd7gj79tRqS0/zXAlwODO1SVAtBQ
INDl7e4m+Oa/2/D422+YJNdzzkG+GS6M/FJYPx2MzKnyCn+ACM99BuToMhG4
/cPMRNp3BgfK7DknahqJNfv4dBVOtkIfV85ynWIUPtMyE9pOboWKJa8G2nw0
Tpq+kLrJ0Q5bQs7I8aXEY9BprYxTPp1woVFAiSPxB970OzTCI9sFVuwLW8jJ
CWiv2NIT3dEFh3IXK0IqEvGZSzn504EeqPZ7c7tQLg3PPtX8ZZPbB6PYeKPf
OxvfeU/VfJinwD84tmx3LgeV4XXCjAYV9D12NRau5mB2+qwJUzwVArijbnE7
5aHPovQ3pltD0D0zlhv4uQCNc7y28WbRQCi+TNL5TiG6njdt8Gcbho35Bw8a
ihThtZxvlkb6wyByxTqtq6oYzyooMecwj0DY9z8sFz+W4kzLJfu5i79gAr+Y
GiyX4jMLtTD/wF/AEypylN2kDCu3th84MvILUmxu2k9BOX4/o7F12XUUFhcc
yAf/q0C38BtOfOFjcOGSxJCSWSXeju632kcbg72Dld6OXZVYqH+itUJkHBZt
nUx/51ahE1u6dd3PcehYmxs7YVuDPfMqIsVhE6CgFph+iVKDv7/Sn1R0TMAB
1onxac1a5K+rjzvEOQn1Yq5+P0TrcNCgxLX12SRsPtHeGOhXhwfNtW14EydB
uLBgR+taHcZGMrN/7ZkEibvXaTRyPfq/OhV45OQU2MYbbvx2ugGzxmd75Ayn
YPD6ey2NmAb8b2rG/KH3FHCwXq1zt25E442Jc3wMvi0I/ZDX2dqIPkaXtL/8
NwUhH1iNpk82YeW+m407Beig5NV9cvtKE4LE/VHFO3TYb3uxavFWM2q9Wt5D
sqfDWC/7oG5OMwq6q/o9/EwHstUpr/1cLShvIdoyG0eHaRO1njPmLahA/urr
UEiHRj0X6aiKFnRSGf811UyHp0JHPPZxEFE589bhmxQ6kF6ZLbvKE9FE9/BY
0gwdTj/bOPfrARHle+b2zKzSwavIz0HnPRGrtq1NCDD4dYOlz8+CdCI6j6t1
yHJNw9aqLjJvJxEvreVHyuyeBh6xB7p6q0T0F1e9s5vBnzm76wpeHSShW9Hk
7WEGvwpX/Pv5/jwJRbrqz31j8Orf6Yq5hyYklNXkZJZi+FkmrnhzviGhRiGt
NWkvI36I+HebGBLaiMYkvOCbhklZ36kiJKHTG/a/L7czeLrdTGS6h4RXRNvi
0jdPw/4XstzrCyQ8Pa5fyMHIXz53U+gEBxkdpV+9DmGsbzH9fWuSMBmHph+8
vk2lw6Zt2+hnz5Dx/cBuu0skOgTnGZ4LvUZGhbaPZ62RDhvZfumUm5Dx5C2e
rY1JdMjON61Lek7GRnthOaNvdLAu4La74U1GzyEWTTkPOlBiblzODyGjjrPh
3guP6FAVVmjb+pOMtw6MhwReYZxvTItidB4Zt+wZ+SslTYeo3yMCgpVkJCyU
RXNy0WHdZRo1Wsgo8e+bqOLsFFheP70s2E1G2TvxN3NapqAnV6U2jMoYT+s4
6pU8Be2DNwyLx8jo1yLamfh2Ch7J6B12nyZjq9j+IklGPV7sdozunyOjv5aE
BZfCFNwIyg3r/kPGWXOeRL3tDD4uTtpis0TGGh54zDk8CWvb2bZFMGzfnXtr
j+dNwlSs1L+Hi2Tk9zfeU/9uEqIcSh6XzpNx1Mu6u+/2JMzG7uRMnyGjcaJD
prXoJNB0migyE2Q8ItTo/G5hAh7NSG65SCOjR7SQnGTpBJwf+D483UNG7Zd5
Wx96T0D981UWURIZP0W8vSHL4OsqOZ6Tv6vIuHTDySeKfwL8fnfYXSaQ8ehz
T5McyjjEX8aFE0lkvB5VF+UQNw4uw0s/yhn7b6Wsrr5LfBwinzPdNmGcz8tX
P9lYp8bA+jybeuhDMv41qhzEpDG4floTGk8x4l9+zpQkOgamHsaetQfJmGld
VjBFGwX7iHPP77OSkc4q8oAvYhT+O+x88xGRhOuuF2NUuEfB6ar5guB1EjKP
CUYMTo3AqqjBwzPSJEx8/c5RPWoE+mNb+9nYSZh58rNRz40RYNacS6spIeI4
i1lvLGEYrpdKLunuIuKpvT63ap1psJK+t9heqAm/ZIQ9N6BRYG3dY8wytRHl
61woCW8p4LWxo+fQqUaUGD7tmyBOAfHX7wmcFxpQ4FKeyuzIAHSppEUvqdXh
KH19zGhDH1h8P52j+q8Sm8QfuGhAB8xE0mpdrSrRO5j6H/19O3znMEipHqjA
L6Xzhi7tbRBstMo/V1SOh4XUBHKtW+HPzVL9R7alWFq8nV84iwibNnmMzqXn
Id8zshuJqwb6pKx0wz7loq+dbLRMdxU8ePmQLc08BwOnAiy54yrhTWbQriGJ
LLxCMoynXi6HOyeiov/7moLPrLREFOMKYXNb7lOCeQjeLFK7wlb4A1bE1dMb
w77hQf5OkdSTsWAcajA4MvQVD7HEnmRujISaL99yM6+/xQ/9OSl63v5g+u1t
SK7UPbjonXjA+dZjZNsUunC9JxBCWOcT/VtjUIjYtVOTJwTMB0J35n6Nw+k3
nUr9UqEQ8v28ktmJH/gYVjiKWCLh55/PduLCibhrfdvj7JFIELcNWt5lm4Ru
yjup/TlRYPY7QOJadDK6SmWRSoVjQFhNRcw3ORV7rfw2rFXGwBPdWVLAmzTs
cW9qt9OJheD7X2xnBdMxfF9N/TgxFgb9RjKUbdPxi7pqitjZOEad94lCdjq6
hBMS1wPjIL86QOfPaDqOJF2+q0iNg40W7OmWHBno8vtpY+LueGg5dT8j+3AG
1pVqfzisFA8L22hlXZIZeIYjLtXtWjzMHupRmjiSgTZCxpTP1+PhGOeC/d+d
GTgaNvtIViUe2Nk9Qw/+SceVShapS/vioc7ctN26Oh173u1vSf8VB+1FVUIb
vdMx/3NosGZYHOQ4mzyahnRMGn0ZU0aKhdlSisj3zWkY8sPwuqVWLHxYdu5e
FkzFNsIK3xIhBs7zSAoxHUpB79NKFIubDP3m0qEn05mIg1wEkcVLYVA7wjnw
ekccPrBOdVTk+g6zM4cCYwxj8LH/e665jCBorDe6+V9IFGo6HU7b/MIPVBss
YlO+fEflgDshfhfdoHi+001e1wuzdMO8jm4KwumPxlen90aC2ngFxe6/Qgx3
3/RN8V0Z8L3iPL7uUownT4u0njQth7ajHOUbNyGulUlp1KtXwEXt+WOPdpQh
t1i88imOKgiuOjtie6USW0I5eHPiaqG8bGJ5TagBWVQX0s7PtoCbfuhGVZZG
9OPRMDS2JML0g92VHWONyH1P4uQclQgXhdiU3LOa8XfdDT2FehLImN9j+U+M
hNq1mq7FAa1w2PePwkBbG66/d1x+xt4Jo9f5d4lcbsev4c+iFxw6GXrn4TlF
bMeFW1zbrw92wginrv3nhA6021192Sm1C1RWC8JvOnZhYsHTwa1ne4DQpmvd
M9uLg2sHjjjt6Icn2jJjcvp9OFXrw3nAuB8GtHK2P6/pw6dJdVyjWf2wMLC0
9WVQPx484KqSqzUAHnPvLx4QH0TtkE+6V60HQUjXVkP54yDeHr1psCFzEG55
BVL6JwfxjD7n/U9zgzD+Sc5JUoeCZv29Oz+dpIBytby22yYqlinymYfHUEBb
Ou5f3TEqznpEkDaWUOBBZ0T30j0q6rwbf7ypkwL0TTZB3RlUXH4SotXGTIWT
j8k7PHqoKFrGVxy2hwq8TTAytnEIP/b8C1yRoILa8WmzaY0hPPbH5fR9LSqQ
zFKorjZDaFM3T3toQAVncrpaztchpAqQCAvmVHiSctfEN2sIOV6FK3I8p0J6
fd8J9tYhLLWJEEjxpIKmhkK/wOwQeis3X239QIU7j6+llnLQ0OQDadndjwop
qwNHZ4/QMKhvzDktmAqf6y2Zf56joW4D0fJhOBV2SWruo+nRMMszPPr/74Vn
D7u8D3lKQ+nqr0J3Y6jw8P27L/VvaLjqNiz1//fCEHXHn1YhNFzo8VR+GE2F
OesPrz2TaVh+sIU1I4IK2zYfZmUqpqGY2FULr+9U+E//ufp4Aw1vpV/7OBhA
hfWJe9/kuml44EVw0f/fC5/o/edMGabhqU9Tb2XeUOFvj1v2+DQNXfYlpkq6
MtZnU6aouURDNk4dkTwbKjDLTimxrdHQ9Rr7HpIxg+cNt0rs3jSMcaU8I243
qZAhFPbDefMw1uqeESi9QAVZquBXSbZhrFi6+ipEjgrBh31ZpRn23h5brh1C
VPBtabvvxhjvmfNu5hAnFcyTTkjvYsTb3urxrHuZAsYSpWp//9FQVjBWVm6I
AiK3IrOPMPK5+2SkX76eAqRc+8pwRr5PyLvuj6VTQEgraP0eYz39RZLNl75R
wNXFWNK4i4aNyubWD5wp8PGnsU5GPQ0XNf2yjulT4Pzw+xz1QhoWJ3HKoxIF
rh3Q7hBJpOHYn21lOw5QQDh55lu5Jw3/cEcmCeYPgsbgSYeXFjTU07rn5Pd0
EO7v2fTl0w0aEn/ml2YfGQTdXo5Y/wM0FMnQeCHjMwAf5s60+jHRUDB9mite
eQA+8vnEjdGGsG55/MrSdD9c2jFyMTxqCI9e5PplfKEfzH7ahPtvGcIwH6be
hp5eCKYFUDS+UDCgrlChLKsL5ne+VN2uT8FZ1pq/z7S6QJ3/OE+oGAX74lSa
uCc6wVX7Z7iO+yBqpYvoiwh0gsneQBVDQj/KGz0uE3ZohwHLYCOPpm7MMrJu
y2chQ4p+9ZN29W58UFMpFhdAApYM3xvvS7vQn2nC+ZwwCaxdTl9SS+nEyF2P
GyvOEyGBPGFR5tCODc38G/3WGkFN+/eLGiIRA1jVuaYXq+DJpwKN+6eIeK15
m1Dr7ipw7PmllqnUgqrZ0VWJpytht+FHZ9vORhRyvfzli1c56JyVXTi1oRaT
6w6PG14pgYpjUqnVoUV4UTH8brNNBljd83NpDYiEzXUsNRvbvuKq5lU+l4ZY
MGo74+fzIhBLJ3z4mhcSgFQye8+eNxRnKWs55xm6v276k4jz82j0D7Z3e2Oa
D1Q/AdO7BYnI7KDmPX2xAooTTnEn3svGYK4nm6/tqoRPW408X+zLwYj0Q/sG
KJWgutRfcL0zB9/e+pO926QaxPuY3dpP5OG1lbfGftJ1sM3nhfpiGAFLFje2
17fVQbj07/NqIgXoKum1182+Hi50bAt48aMAZVOXiSwxDaASffh8sX8h6oSy
LOQUNEFZxpnbdfzFGKO5pbbpeDN0hVQsdz4pxqAH4std0c2QEzfz9b+sYsyK
u/+zjqMFwrbX3lJcLEayOOZ+tW0BwvM4najjJRjNZZYlSmoBL/kf5oqPSvBe
vohjCS8RrpO33eXyL8EK/tnsirNECBC1T5cpLMH9jZTn4cZEKMpcrU/qLUHZ
td3Ml98QQc9Su9P7TwlSXzUsl8URQbr9a+MAG+Js28gdpnIiPPt40ixvJ6K7
a+YH1l4iyMgWSAsLIBY0Wt1o/k2EnRMaxgoM+29jW5/OJhIEHbrLvJkP8Z9q
cHoANwmWLjA3hW1BrG/vL/HdT4K3+U6SvEslaMAZqKcmSgL+BfWLbgMl2Gfy
SzFTggRzIt7TdCzBS7yPXdqkSPBj55ZQl+8leCTXPjRZkgRJTRfszjwtwcU0
3VeKYiRwb7JRUFcpQabLds7ugiRgv3z1ehZ7Ce6wNz3uxMcYf5StKIhYjBtO
7C4WZyOBgtP01h0+xUjIzA0MXCSCf4eIiczlYhTpzossYfRd+ewr7nvWi3As
zSNHPZUIRql3H0bcKUIVMW+ntC9EqE14I2u/XoicF3f19TP6tqLVnyKnyEIs
FhSF8INEcPK8efZdWwEyCbAo1w61gNFqtbGeQQF+Fq2IGHVtgc1hIkycNAKW
1RIn9nxvhnZ+rn+Z/fn4LtnyJ+/LRmDzqjukHJqLW/99q/031gCpeUqXH23M
xes3Eg6wXm4ARwtmqWSjHJQduCzXtlQHDrKul8/yZ2NaVtTuTSw1UGH1TYvD
iMFvnoPLvqeq4Qv3nVc1yem4NKaewvGoClQ4Tqn/Gk9DNTnq5/NpFdDSe2be
bzUZk6/4+p5fRfjF/kDoynw81o59ijdOTwU3womkw1R/XFwoqZ08lQihhqZC
x/J98ZDD4yH+zDjYEkw+wXHgE351d3HfMxcEr9mYFYRfvUCmxb43OVre6Mri
yXZgxgas7uqvdPz6hlxt9KuHLrjBRjyk0nwvEvPmK5xNKrzALlPo3sPLiRjZ
92qU6akPdG89saKglIfy3FdizBVDYdjryR2jBgIm2q3N/LcrAoJqLfU/6xUh
u9V0psBiJOj88lrNKynFiMioXsvCGDATn3x8f6QKRzIfE5mZf4L0z6qPPuyM
/5PC14ku6QywnMfOvkgiPv9e0vMuOQM4GgqiL54goby06VifcCaYaBrvOX6X
oS+Z2j4rcmbB7PGoEfHgNqx4qp9tn50NQptorHrC7Vh82k99nDcHfPVAb3t6
O0oI6Uv+eJoDz2JsmKtLO/C4/w+bwQO50Bi/2/ZJUxduo51K+nw1D3Y8mubo
utKNOopObgE+eTB77FGAUm03dt92JRGa8+BS/qHTWQU9KN0YvEMH8qFEduVu
5LFe7JY+0Fn1NB+WovKeqsb24r+YgLZrkfmg28alaevVh+nOiQKE2Xx4XSB3
pP93H1aI7WQO4iWA2DV50TK9fhwtfn4nUJYAWSe+eG8v70eZ+pGUgqsEKOis
GiCIDODZgbXzmx8R4N6I5lrGuwFUqNHk9HAiAFFfi2didAC1bN1Sjr4nQBPH
k+AbqoP4qe651fYAApgqWN0fDhtE7l9WF+XCCMAM7O8/Lgzi439FPZFRBFBa
Vbh48DAFn1qWPNGPJgBVe/WQswYFyZqvqLYRBMCtDXRNOwoOL1nWTQQR4ADv
2fGAIAqazOddaflMAJlnSu80iii4VjggKf6SAH0GNeYWAxSM7Fxu3mJDgAb9
Tw9/r1HweMH84Wd3CXBkONWudR8VSxYKCB7nCaDQeLthx2kqCklfSjh2hABl
EyYtMbpUTHCICQ7cQoCEj8s739lQ8bEhlpWP5oNpE8djwjsq/om90Vdang93
sraWy0ZQcd+nELGokHxYWD93Yz6Linpsc0/srPMhMsrp1UI1FTfWuA6qq+SD
f7beuGwXFT22RCtL78gHZZaZG6mjVLxV8LJEsS8PCjdtaXjwh4ovLHVXXeLy
oHhX0puLDF41o1RvY7HIg4LLpitG7EMoEilqNSadB+8V8htSeIbwr2PKZoXZ
XDijrNMvwj+E9PO+B7em50JFp92Fxv1DaPhL+JG1RS483nNQJ1RwCJVGKP2u
Irlw2+DRpwChIbzuqvtLbSAHVOf9snIZ/vEiMZkhvxwgdj0sXvv/fOvZCmP1
HMh9L9FrwYifbMI9QVnOBg5cctjAO4Qfpr8oWidkw6tjP6QJjPwm9rV+Pqyb
DbOXN9G+MfInhJqt8zFlAxDO9O1coKLklrKsS9FZUHLG2fLCMBW3EbiLXitn
Qba2l4EImYoL92YqJvoy4eDLdy2EYiq+VH5dFPQsEzJI/53a+IOKP/extqft
yIStLmbma5+o2KnNbqedkAFKVZ8PH7pJxfnC5bz01nQ41hDIpH2CipfOc/7J
ME2Hp2ret87yUHE8TuWnx580+O+gf7NpLQXdQXAv+9lUaB488Tc5goIGZt7/
rRmkAOdMZma5PQUfqiTd4X2RDKWjn53sdlNwUfI4f1JpIoTFbDWTaR7Eada9
mEb5CQfV/kRcMh3EgYg4jb4NP0HhmysTx6cBNJeuUkg/9wO+eKwFtO4ZwJ8t
ItxdD+OhR+Fxbkh0P3pae/448i4OmuQ+73+U0IcHFmVZoDUGHE0mIt8L9+H0
EnfCi7/RwBTTdHAqvBcb365GDglHwx7+rX2Zb3ow36l/dPFlJMgVrh5Xl+jC
Uy088naFITCSX+pl8KkTG+58X81TDIb4DUJKGpMdKFtM7KstC4RNsiniG8Lb
8bbgHZnJMX/ovfPw6NxcG4bI+LysfO8HLkpn93NfaEOSYr7tiuxXyMkaUj1F
JeODCP5+4pUvsGP+R7KlOBkNKE1jCX0fobna0ELajoQlVTs61j29Qc8ojt9h
qQV5brPdSOd+A+4i8qcsnJrxk3Wg1Nl/r6DUvzlZdakRdaoeKaatv4SJ+0qP
zEbrsDGydXdFqCskyc8yH9CrxfCWN4bK8k7QfMoi/F1dNfZWr/C+ZHGEBdNO
6b4TVQgygWkP2Oxgt5iclHZEBWrKR95PVraBtlwB972by3Hx9GDaBQNz0BO1
NXd4UorbNo9cGUt4BFk/F1TEg4vRu7d45ysjI/jd0A+P7xQgz2d84LBbHwxS
/llx8+XhyNn8s+JXdUEs4u1ySEsWbrWR3Llsqg1pqnc87N6ko0MIQXmgWQ3Y
dzjtE3BMRHsN1uAg+bMg8ECGu6A3Bj2PBZW1PT0GSknGehpuITjZ+L7tIewD
gzqm8N0e3uj4TZP/tso/pa3e4RoKTj1FUx+0anNkwxT+B/Lc76Y=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5504#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
nKuMtwi8noWpxMCEr7HjwPl09ZRZxSzMDd9TJu2cgJZtqz9WvtP8YMys6jgB
G6rHE5IM5kBDrrSO9b9J6LuRxJIpMA9PMv/+7p2bAkHXsmf86vOwX2D/Qgat
Tv/Nm56JeD5Pq9/LJpM609DO7LwYXDcPb47QF9DlToNOslw38+w8kL12fJ0c
mQb7t0W3rZio4KofzB20lQT8GlGde1SpELLR1n/tBgk+1cmXqRpQIf/G9P4b
r0hwx7NZ/449Fba+PtbFlkQCLoMnvHrvqDCttk3+ZQsJdk8dyDyeRAWx15VD
7z6RYH1wiv97MRXeuaw/vMRKhm+q7dP+zVRw23KkO0aCDIwbB0uZCFQwoFSK
+6mToaz6Us0dEhV8HMy7WB+ToajqP7Nvn6iw8Ykj56I7GbbQNf+X8p0KL6r5
6RSjyaAktOn/6hfNfy3z41QhGfx+mDm+2KSCE3Nw34l2MoRIW5aH/aXCj1Gx
jFNTZHD8b9eREZqdWUKfPv+dDK2v45eV/1AhmCnT4hQjjZuqPOx61qmwK8Kg
6xgXBTLOVxl6/aBC8/vyxsbDFJA1cIs0XaQCm8MtrzU5Cmz6jlyxnaHt3+xr
23plChSqsU3lj1DhtsRHUZGrNI4wPUF3sIsKAU4yJgI3KHD3QER4fQ0V5P2z
xbMNKLC+xtcVnUsF85zY5HYTCpgnpjIVRFNhhn9U0eEJBUKnns0zelPhZNRP
15JnFNj9Tksr2oYKjeu1V1xpeei/i+G2gz4VvHtDwodtKGC454FBAu38JDcq
Eypp9pk/KYvc4lQ4ttE0LE4br/rHrn+GlQr9/G1kQVq8wb+iu1m+zcNNjYzo
VDMKNCY2k/x75qHGUZu3+AEFUgyky21z54EtZSpVk8ZFHEv8Z1t852GvBrHR
5jqNw66Karw1nYdTVgpSh69QYOJ07VqNyjxwkcMGjc9SwKJW0tmKdx6W1mVI
0jI0bvJ+fjN1eQ7C0paK/AUpEMfc3JH/YQ6aSsvV/9BRQIM+WinMYg52XMmc
2/uVDNLRgfncynPA03XrV90IGTiUlpU4p2bhTldF4NdsMhzq1NZp2jkLzJGK
O8bPkWFjRYPeamgGrszKXP0nTAb93Ey6jZgZ+P7H/uMAjeutP7tqNovPwFbq
5dz4BhJwcDm+AnkKjBvnJFyVJoGYN//uzlUyxFvwhbzYRgKmtfMZr4rJkLZI
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
1wl2y+jlQRD5qOcs0EvjiXdTenqxg5B/OXSESuMfo8eFHRsXByHHgY6hmcZH
Z0o4egM+D8CCL2tYEI2fNMIF/gr4DcDB6yRnUTna+9zb61YsNgCeFnPrD2j8
de58J8+dun549mtvohiNz7Yyie3df6MfZEeZHHQepmNqq+6VrfN9cKZ26FvD
7nT8bsQudvB5HwR8zfp2ryANbR61xzn96YV7jTvLM0dT0VNncFCSsRcycsfX
RO6nYk11vOJZ5h4wX3QvfjSZgp93tgtw/OmC1sprsFCVjLbC7LBvsAOKtVee
M9D4QMGrMsizuB1Oqt3YGWabhBWdex88DmyDiIZ8hh/MifigXIz9gFwLuK+8
Um22jMET+gwr56XrgSPU74RCxAdUKmBmMCLVwu+35erc2ZGomveA8zIvQoAD
RUIqMhQrJL2ZnTLLQZSuvFVkrzcetXxdxFyQDd7ZmtueojumPVOwI91LhR0l
huctXzkhs6KwssRaHIxYXNjBVq2L+5cYew0/2cNw3sRDZiMv2P87POpWURoe
0F799XGPP2wu1mptcc3FLSwjanfWguBiBC9czS7Az/ZCbMI7IyGAu8RKObgc
Q/cVTtH4HNhlJ+xKGxvwRr6lQs6OVPj51PVoglcTDvbo29zZlQ6Wb9xIp9Va
kHcmLV1IMhtePJb/59jTjisLbI7hDwpgV/Jba7svvfij9mObQkwlOG5IhvIN
EFFgaTFmsqcK9pz/pXQycxijP5gc99xaAw/X7jqluoxglUTlZ1/FWrh+Mn5u
U3gMX8RECu3Iq4c6xinfyzcmUVfz1YF6zQaI/3VgW9r+KUw+lvWkZLEByEXB
HWbTUyiX+frc0tEm8LkwMzvycRovXjmm2J3aAnv/1B2R4SdjrFvjZtj5Vvi3
Yafj8pyMu7r+G28ntcJTei5t7nYyhlo6P97G2w5eOvR8m88oSMoVWJh37oR3
b+wldFNmUE1c/vk+zi5Ahk6V+sUZXB9/UTKa0QX7vHm/Ch+fRTvN7f753d0Q
Q/ewKLViFgf44bSBay/oSxrb5OfMYfIeOcZ9jb3AZBmpSaLMIZ+YV1glYx/I
diS1jO+bxyQZgmeEZx9ULTRfFHCYxy7Ddy/KG2h94K2Z353UeTzrInc/nK4f
gM52SaNvHoP/rP7Rt+uHbW4ioaoHqTh761Wk1EeavTTMAOepuEjO/hs41w83
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5526#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
70H+o23bF2dJeJ3uj53I7x68mW385PsACSNqL/D/pe7F39NlNMbNJGQ8L8Uw
RdeLygrb+LqUhJxLWlxjbL34hS3MWzqZhD1VX2VXuHvxLRWPBSGEst95kt60
53sxNjjuXe9LEnKX2izA5V4k3uSQjH5EwoUdn187X+9F2SWWqkMKJCQuGls2
3upFIbKYqcAlEvIZFY0dle7F04muddvHSXiF3u6foVwvXkZ6Tbu/o+ixlM5Y
eofCb8asI3pqFENFZy323O1FnZVz49YNoxiuEn5fmYKl6gS0tpJHMShVRCZS
vheXSp+yn/MYRUHJouie273Yaff73DGDUVT57DlIJduL4vYHQ3JujqLjWVoP
TkkKn8MtptsU/bwq7RQRFOtF0n6Vrz+/jmDEn/S3AqK96Npd5FDUNoKH9rAp
0wv24s7THx9wJo8gO0/gmZkzvej4TID5tuMItt98sRjF3ovMtYLCZxVHsI2D
aHWRoRe9D5UpfqLoWUqjOjWLphdlnLjZub8No/GxLs/df3rwu8wNxhNvhzF8
Os9SabIHjZVVD1QbDeN047WyG909+OfSd2UuwWFsvVF7Zif24MG71xSkW4bw
/CmuLNr3PahT0pGZ/3YIF+hrTtR49aDrhIXXYcMhvJm5Q9HEpgeFjzO9Jf43
iM+gnDdWugdnUk5JzTAOIuvT/Vavp7oxzenvQ+GxAWQ/1XVysImiL23KKZMw
gM6Ef49PZHZj9S9pPXWeAeSkXSp9ad6NP90Z5jN4+pF6rqu8sr0Lt7Hy2bPZ
Puw/Ycav4NmF1bJUarqJfXi4r8qMcJWi/29hit7MfTjKRz9w6EMn7lX8sZlE
6UOD1zXfG+924GhnEmjd7MLnc6+CHki0Isdl5qKL8Z0o9klY6OHQJ3TYqdua
8q8DI304xK89/YSVA3I8TlXteGVI4qOfXwu2zpepFvK04tsCq7eFec1oOutn
WdPQiAxMSc3zb+rxkEqK1Nv8IgSV7ZJrbYWYPex07CVzIQ7J8f47rl2AfzVa
S2ap8nFWj2+yqSkXF4jq00sxGdgdad/a1Z+OkvyNtU3eUeiTbch6/mwUBu5n
P3lyZyyUTxSfO+MdCx/4WSf3iSaCrIv+Q6bYRFi8/VWe3jIFvhacNJKn3HvU
E57dzRvMAotv418K2rLhbJ39gcDWYhC8NvqYY7gEqN5xGLGdqYVlx34G6fd1
ECm8s/TXSi0c2zpHn+xRD00cDK++FNTBomWyP9myAQizbgFblxvAaj3n6m/Z
JlA90PJaWrgZuoRZkGrXJ+BIqPzC/7UNjrrwm/6S64aDJJ20EvY+8NptqaX2
eQjOsBR+HzDtg+PHeG36VYYh6G6N1M+CPtCZPH/238dhMJ9vuiIm1g+u1h42
1wpHYGpETl/z7gCEDZ0UDnMhQfFLN4FLQQMwPMv3IH+DBHte39X42T4ATP2E
T5KGYyCtInn+yu1BiN+a5CqV/AyTenCA59IQzDGObu74Nw5091sUqcyHgJB4
QYPFfAIMQq5n5yUNAfVPc9dnwxOQ7vvF3OXgMOiv0dI81ZyEU3N5trk9w5R7
2ZPjTWemwONYivbyv2FQm31m8kd3Ct6G2X5aOTcCzxvI+VXBU6CeUWgp7DEC
0QuRdg1fp4A5P1onhWMUjguZML8vmYbkBiW/XqlRsDXaEVowMw3u/RcTyh6P
QuIS99Bluhk4kVAqkpE5Cse+zfo7W8yA1ERcXX7LKNRbDIxfjZ6BLXEVebP5
UfDJfNij2TwDD6NiVX+dIMGnd6/f57DNwpbzllvnFRIwR4S5fpaZhWsOBbSq
90hQ+Cuc75H1LAyLbHhZOpNgyfwR9+O6WbAddGzaHU6Cx3bfyj+TZ0HzjPkh
+VQS5X6l9ubD4TlQ4/kiufCRBCe67y9s6szBLubBczeHSPBF78iw++s5+Hek
hk5yjgTuFtT/7iXPwb4vmjzbX0iwnVaWpds8B2fsJnP0/pBgfFVRMIE8B8vX
mKleUI9BnMrQBuv+edjtJhoMR8Zgm2ip1M4/D5f150fKmcZAj9WqMu/OPNg1
nH45f2IM9r6Oza59Mg+uW1IszVxj8MdWOf6fzzzUjww4avOMwdDV7JNPUinx
KsPME8+MgYp3acXPunk4139nlHI+Qknn20NFn+chzmawRoWCbwoTKgJ/zMOT
ui2+Gl7K89/WLX3pFuC+giRMn6bEty+dTDq7AMacR0RqOcbAoeN694jkAvjc
yrGpZR2Dt2R9pkTtBfhqZMWbzkDJT32q4oMlxZ/lj5s97Rg8n5z83e2+AL93
v6s4t3cM7uzrOysSuQDSQweOd/4mAV0Cb0x7xgL4uURu6nwlgXrqifTwigUQ
suvO658ngfMSe4l32wLgpTfVN0ZJcLN44nw6aQHkv84mvGknwcamZeDXpQU4
ZNC/8LmaBDRCOnceby9AWP3jCyx5JJDaXb+2i5oM/GxOXPJxJGi/+Gzfx2Nk
cEnMdLQNIMHW490X8tnJMKfK8yvMgQTr72d3VvKTQX04/WX2IxL0zzkJLF4i
w7qX1EitEgVzSBqIipFhNk91T/9VSr9t9miny5Ahm1vh5zwXCTqD/pEuKZIh
gyqj9td+EoQsbZZOqJFB8kOZBf3XUajIEsM0HTJYLwedEh4eBRHnlWFfPUr8
tY4jOtWjMM0Uu+ppRMkfE2YdkDgKj2vCv7w3IcPFJfD/5DkKDerd082mZLCS
MC1kpOjFfNepT/ufksH2XKy0vdwouGtcIzyiYH4NuaKFM6NA/7O8qe8JGVwX
Ay2t940C07r8CU2Kf9AVhj9HF0ag/W7RyqoxGS5Uri13No5AsvewRZQhGeTs
9fozE0eAU2R2VuUhGRxTK3VSnUfg52PpBHZtMpRPXTvfqDUCe82af/xWodhD
2vfRCI8AM0eM8pI8Gf7VLuc9PzgC+Z+smBckyZDraLt+eG4YtHVeNH29Roa9
982Th6qGYfuWI+mgIBl+N5BzuyOGoaNwfOESDxmMJhI9DGEYGLZWFXMPkcH8
z1PpHfTD4PNw18/f/xZAqsvqzueFIeA0fXpD+8sC3Cb7WWsHDYHCq4vxIj0L
MKJRqlbRNQi3aPkXXb0WwM7+AFPMh0E47+txWNB6ASbuR8f1mg/CJFs4yyql
f5VGkxRVqQdhI/q9ph//AmwOj134eWkAuFKGzmrVzgMr8UXH+t9+2OsQSzZP
ngdtl7wQzZZ+mLmk+iHEax4I92UzA7T7QVCopY9Kdh7mT9raLNn3wZMPg1uJ
NXMg+DGpbFGkD0iF8/LMUXPQGNtg/+i/Xlh8en78heUcPCFsc00874Xfm5c3
to7PgUFBN52ldQ9M8vinMDyahRP6FkfupHTC3c7bbrTN01AoqnxWkKUTpm3p
2wlB0/Cq48B2RkgHxJ8rZNVXmwZCX9A7G8d2OP1m6VP1+BRo78459uJ2K+Rf
Ox41uTAJ/W+H2T7NNIGo2CbN+5jPYJVc9U9Kswk+zbzq4z70GXg9DL2WWxvB
ne5v8A7nMbhXFbf+uagBqFWne6o0SVDbwzKu610HZgauY+TtYYjuyV1Q96kA
Dp7MluitPsqU05or6FQOJeoqHL+U+uDe5d9abrZlsLn/+v2jGb3wM47nHBoR
QLh1Q9dJrQdiVBNGXXSKYOhQ1fxlsQ5o+d1S6quQCr/9uFd0dtfDPkVGveWI
ZPjsG25rlFsL4naHKlzHE2E9o/MDdVYNpPymfnVlRxwcYJsz87xVDjnN1Z+S
lkNARUyUcTAhBxgnMvbMvvGDS6Hyeesn0kEyx8UkUNkDuHieKHBFJcLSK4Pv
R4+bA612gVL/Tz8oPynDnxHtisx8hsN6efFo+TxY+4SiN9JwGX88YpeKfRZO
eRvLAXiSZ6fNoaPZKLbfN2HENgLJnqGyonzF2Kpedct3Lg5vHrsdLmpbg+mW
hvpe8hlIc55K0MCzFZf2ihy7rZuJfPMTsZ9X2rBSynli6FEWqnyZydtU60DH
XAkJYeMc/BX33Xz4aDdyiy5c3HGoAH/vy/w9N9aLueKB1h9eFaAUezBveXAf
1k1ZVOxaKMDr/QXyJ271I+HOCgNbSSHWiPwrfJk4gN/Pq2fK8RZjp0fp3ooH
w7jfY1l98VUxMorQ/pE6MIJ/OutfSHYUY8/z5FzushGUVtGR5TQpwQeinZut
h0kYQBvEmZJbgswG/766VlDw++5P419K0HmHjqvVozG8oL7L1sm6FIOoDuqP
lH7G7U+WLpNZpfjtZZKyzINxpErNt/k7VYpGvG+OdO2aQBcOucdDDAScnaRz
Nc+cwEABYYK5DAHP+083HeCdRDPO6g20I2C8wOE3sw6TaBepNdsbR8DAUV2+
m62TSPvhouotMgGz2c2r9MymsI4k5bh7HxG/2J94FV4+hd9uh48Uniai0leH
5hvU09gcTXVVXoyIn17veKKrNo1XA2bC+tSI2MFuKLScMI3ZilXHFE2JOPDs
zX/klWl8T/iPq8aBiKx01BHKojN4gzVTi9ebiKXBDbOcHjOoTyPhHhRKxP06
b3o1OmZQsEIm8VsUEQ/c45dbZZzFcq1/S/qxRGTfL3FlWm8Wn7PytAzGEZF6
pSVKKGMWH4mE9+tQ7OFLO0xJ67NYkjUx/oXin0iTlTMiMoez28fICZT49KFs
NvzOcyhSD6csKPmb159/bK2fQ4Y7J77rOhKxQK+qhUg9j/ZUOZu2T4jIxrP9
Zk1+Hp//aJkjahBRJMxY1TxkHvc8bqy/KE5E+1hfofO98/j9zLfCmTNE7L6l
YypIv4BjmpL7hw4Rsd7CWMhOfQHdv9coH90gYH3m4sDG2wV8X8J+830XAUW1
fsenDywgee5evn0OAeWSM+fe0JMxPuxbWa43ASOoGXYTVMgY2zgbJfeQgCGu
7/X3hZJR4XgRQUGYgNGqi6Z+7WQ85sme07iHgHscBCJE9i2iplnMtdKBUvSK
Pv3wkOQi/j1GUOJNLsWcCnHlA86LKHPR5F2BSClGP/m2bbu2iPTvWx2Hf5dg
nemu5SHuJZy8L3MjubYEV2KNX+ncX0K/pzavpcRL8G7JfY385iW8mHh149zf
YlSlSuJx/rmEOtR0nGNlxdh1vjdRT2AZL+zpky2h6CND8QGtTugyKuaF3N8g
FaE616E+i9plHDtVbnE8uAhvdHsuBq0v41NVM3mdFcr9Zc9XjuU7K2jh2H7P
+10hhs0eMzn9YgVd3dfqP0oUUu4rXtKGSSvIKDT6qSSsAAW7FYJnv6/gcWFC
jL1IAU42xllxn1xFxzuMaStF+dh86T7JSHoV38oVWzVfysMVf6ey3tBVTA7P
ZW+zzkULM90f/0pW8XN3oXhGZg5W72jVOz28itt1d8Zk6LKxP/JU1V3WNfQY
eqwuIpGFsWc9hhWur6HWzRAxHatM9MxwMbuls4Z1kUb2cXXpOHyXqe7bG4pd
kUlsZT4NBRbu7S0pWMN/2pVPOmnSsP6H80e9tjVUCuXKy5VLQSEadwmHP2u4
vaZ431g5GS9r1QX0Ma4jT8rDIqJmEjZGbxvMnV/HEwFRdxt1E5F/hTcsR3od
Xz1z+Jb1IAEtdjZ959VdR5vLLjeYKj9ge8mAk4bVOtZSD7YfJMbiy/Cfp664
r+Pcn5cnX+RHY4Ovy3ZLxDr2DVr8jkx5h65Rj9gOpKyj7AaXXW5kJELEs6rf
RevIdNSu7ZfXG7z6TYYlrnYdv4/5eDXYhuOdQiWf5fZ1rFBsVJV5EIoOPGTj
haF1PHtR9WxgQCCy7tXiC51axxpPm1QabV+0UPusPre4jqUTSU/9Tnlin3mx
6/zGOnI/E2XkGHqNtkeO34vYWkf5bYdQKaMXWOes/mr55zpe7/p2hn7EAutD
q1rX/qzjf8278pe6tPHDciFT3L913GIVHv/Ffwte8mbf3aJgHakpuW+/H4H8
IUHjn3/XcXTJlUF+yxZqBicsMn+vozNn/4UWs1dA88LEc9f2OqrrSddtrrlB
+7Ln0L5v60iVOZTfxe0Nf9/SpJevUviymItuavuDWEyHJOM8he+rqbkR/2AI
VSo4zP55HZv+ltf90w0DcnqYc3/vOr6+6nbM2joClkrlj175SMl/JP2Ek/tb
OCqQrSdbsY4l4izS02FR8OWLCe3enHW8wGhzyuDDe1gqZuy3i13Hz0f/BRDT
Y2Bn+BmHsIB1XH8xH5qSGwfmbQO9eo7rqKzI7buQHw+eTowdE8brGFyruI9j
KAG+mr7Rp1NeR5nZgANX+hOhry826se1dWx+lbDK3JUETSZHgyJOUXBfc3ZN
dQoc9rpjs7Kxhu4f9+VKFqYCnckpcs7AGhbbPBljSEoDAX1zAd7yNfwuOKvA
8yoD3o97zys6raEG3YYhr1EmmIWKPfqnu4YZos33fslmwUja3kara2uoMqm4
O4U6B1xufFuJ3FxFCBOIujmdA+F/j4By5yquuvYmCpfngrvNtmdv+iqG3//S
XKebD+MLApmCmquo+cjdMfRYAVQtKQYeE1hFiyxpvcsvCkDfPNu8cccqjhYL
zPKKFoLNzuX+mPQVLM7jVNF5WwgONOMjzQ4rOH8mIl9+oxB2ei0PfJJbQRPa
khqR+CJQ6OJSNJhbxhh6/3TGzSIQH/Ot/Fm4jI9NRDbcpIqB1vzazufOy9ht
Onn600Qx6A29e8d2dBkVojhEi06XgOgFvm9HPy9ha/QlW8XHJZT5UUufKWMJ
m68YlLycKwHtgH0xuteX8NzWlNIPjlJ460Vgid+1hFUl967t1imFMWXOQ79b
F7HFTOhbcmMpvGZvZDqouYjVbkU5PFulIJQScL6RdREPyFv5MHAT4JvBRkn8
BBmX/EJNTZUJQBNsLZ6YREbZyg0DplcEeG/x3q7tERmV7XOLWZIIMPhyfpOD
h4z6kyXtT5sJsP9kgl3K/AIWwj15KjIBxn+W52ilLeCKW/afvr1E4BgoMLhl
vICT3drT41xEyD9k+uDhqQWMYBo6w3KDCNXle+1KJ+dR5sVeodcqRBjS6HeW
i5tHt6TcUGoTIqSyMRiwaM9jDuMqTe5ziv/aHPV5+nk8KlD69oknEcI2mIy9
O+dw5ucVvSshRIirPmDH4zuHxduaTUeiiGAmEyh8VHwORW2O6W7EEOGdRmb+
7e1ZpIpZWeiOI0JDQ9h/vQWzWPhS0TQ3lgi7b1twFTyeRTHDtUNu74jgflhE
cfbELBqc5L8lG0bhsxAWb9s3gzcbDGN/eROBKJwt/tB3Bi/Qq229dyRCiDeN
SdaNGYx0M9U6+YQI9T+eSOlsTCMfgWa3lzoRvC5HsdgkT6Nh/qpNqxgRTkmI
n/uqPo2zuvoqy6eJMLljoH6SMu9EVvgFzVIT4ZKDqsAtyjy09bxAsniBANB+
pvbY0yk89MehQ62RAPm0uwYeskzhtCNxZO8zAixf69r9xHESWXYq8x2TJYBr
wsby+TOTGJgpurDISICtccnRzZwJPGN5rWYjpxQUzTmO6BiNY2r6a6uTdqXA
Tv+PS7T6M953L8SjIqWwRM125gbjZ3yz0rEoU1QCq3ICJ3qbSHhd1+qsr1kJ
MKl8PmPLRsLb1yNJQZwl4Fzx9oGa7SiSvN8NLXgUw/TAgdpfrCOYb/34wc2L
xcBdsPd6l9UwfrAqaNIeKYLKrX6HHQ1DmOU7JbzCWQSiET208Y8HcQdrv4xx
XSEc42obZS4fwO1RaY3sB4UQsMflHu3+ASQYHdmbHlgAWkJLcn5Zffin1RHk
/XLBwaXhecB8NyZIP3n02TUH/I53TVdyd2PIvcoNTpts0GoTvnruUyembImR
l65ngiRpT9BofRv2hLcrVL5KgSm1+kOahU04JXhBifVaMly5Wdj/8Fwj8r2v
Xwz+kgjSz1BKKb0eOU7B+kjUB2gjaOWYXkPcc873bYR+BNx/XU3gYyzGsnYn
s8O2oXA/T+1BF20BhqrFHXZf9YczJzwtRo9kYbqCoYv/E2eY2PSzCvwdg6oK
s70PGuyRKvuwjvLeN7Cg1VFd/iYB+0J389vEVgGP3GW234+TUCrJ39HbA2Eb
5ObP3krBzOY4JArXwY4OrUezf9ORI15SNoauETbUnHXfUOaRg0wZ/c4Vn8DL
8FKS0AoRhRQ3jDRUeuF5p+oHma0yvEQj/TD+Vy+kmp65NbqjAs/4ju+MT+6D
NjMH9hsnqvCXV+Oj1PV+sBl+8cZNsBYtVooZaV4MwSsbdboXQY34xDqFcPfm
GMh9Kf9Yz9SE57Ki43nbx6D8bcmRG0lNeOHI+wP62p8hcu3D7QhiM37a5dHb
ZzkOgRLRbQPTLTg1rF4YLTEJB1YnzscLdyCr2vvyPoFpkAskbDtWdaD6hS/N
ux5PQ3733R9rUp24Od1+62b8NNjvN5FwV+vC5z5PfjcenAG1qynBKQTKPntc
vbxFmoGhu1XicTW9eOQo+yOP23Pgwuyqkv+nF4fF5Qe8beegxP1hhtSNPjx6
heaiU/QchG8Z8iwQ+1DxKUOV6MIcWJUTyoMz+vGaayXzlN08OM4McYjN9ONF
agUd3TfzEC40aKFwYgB9J8tF6ornwSm5yP9lyADycQ7mK6zPA8PzD/LvzAZx
p/Upk4faC1BaK322O2EQD/33bpTPZgHonL0tZAYG0a1/r8y4zwKYnEjdO359
CDW/rjbuKFqAOD4bi/8shnAvLd+4ddMCHL4sqQnxQ3hts227ZWgBDHUv3pH/
N4S77nNPX9peAA3rkgrq88O4tubHe3sfGYZ5YpxndIfRLT1KX5aRDEO8J2ZH
fYfRdYJ39cIpMvDXV8ovlQzjyEWB67sukIHrjcdJ2slhlL+b3Fx3lQy5Jop9
EvtH0J/a5bi5JBlMLu9e8xQewcCUqLadd8lQ8pD0r1t3BC+ofnD3ViXD2cwI
Xi/XEaRlVH0Upk0Gh4ObuQ9SRtDzpbNq3kMyPH8esqT5cQS/S2ZvfTYkQzRf
E9gsjmBcYspfDhMyfPs5yZK+fxTzQu/zOJiSIevL7W9b/KOYVj8pNPuEDC+l
s5Qe3hlFaprbm8ZPyfCpnKlq1HQU78um3fpLsQ+oXO9/4j2Kn1c2/uRS/O8a
OojRJI9iwdYW03NKfFikyyXUjCKb020vTSMyUCuoj1uNjGJDE5+Mqh4Zmu6X
xgptjqLQF/tHT3XIwJH6o+b3ARL+5ny7GadGhlNHtM60nyJhvrjRkXUFMvB1
JbV8uEbCZSW2qYcyZAgK1I+1vUfCz5Kyb9dukmHvzNccaWMSxrgmGMdfIkMC
M+EIoyMJoz/vemPLTwZ3Vs7lqQASZkppmD1hJ4Nezax5ehwJp+ctwesYGUKF
9vc/yiPhOg2Vxce9ZOCtOWLOXENCAavX2oKU/RbI2R9c207CfRq0do1LC3DU
vjxBd5SE1KwGF91JC1B8IpOZPE9CEfu0I+ZtC3Cr7Y7Do68klFW1jPGoWABz
f9p7Xb9JuEsnVL81YwEuyjmJ8e4dQ7c9dD/EIxcAf8pvPKUdQ1qrgztX3Bdg
6YcTx3uGMewtC+NptVyARRfzdwWsYyjKGc4wTunvnIfLFwo4xjAfa735pBag
bFSlI/L0GF5ZeXE1T2ABjmS9MzbiHUMz1bhvFowLsPe04W96vjGkKffyfvp3
HuLCGVOyKPj40+HG1Ll5CMzacD5Fwd36toGc7fMQyXu4woXiv8p6u26icB7E
Aj2jKinxZ/gVFKcj52Fhl8mjEUr+/6zvcp99NQ/KJiPOQxR+8xz9YlUP5yFN
l+teKYX/oi1ddJT4PEgk5GnYUtbXzlh2A09R8GNONtr/fQ82GhG6vGce9EgP
rvlS6nNFriv419wcXKkO1Zn8QsKNn0xP6JvnwOzk1cuMlPpGWF2ZdEudg51X
L4bzjZDwWmgUs4znHKQYFsixtJFQQsz0hpHhHMxeEjOPyCYhPceVA4VslPcN
y3A/azQJuX4o8cz/mIUjZ1mD3XxICCIdB537ZyHsFzFi7iGl3xxC1Uf8ZiH5
p7zmrBwJL4pQKycbzYIX3V/tOkESaq1R3Rm+MQs7gjVKmahIeGndPzpwdQZU
T/+4JxUyiqU/pu0M5GZg4GJieKTFKOZM+fJys8wATXJR+nuKnvY8GTG/tzwN
p06cGyBQjeLbLUulpYBpqDe2eWfzYAQj/b/OeDZPAfvhA3NKo0OoMGuqLHB6
EoLEmhMNU4bQwWlmaZQ0AWpnZKrEKe8rtH/XHG45ATOnJAosfw1iz33T/Y1h
4yBu/FmjjWYQWw627lzsGoMXYvTPD3zpwwi34PNcgiOgEL47/1xmH0ba3mWW
rBwG4/BD6rf1+/CcOvc1aulhSKo8zuzR1osmZ99ORmgOQR56aulF9uAl5+/r
Do4DUPHnzqPbOzvx7zAxUYjQA0Mscd9Zw+sRb8RKV79uBN7vptp7xuvQLCPt
8r3UBpDzH+Bj46tDOUXyZmxbPfxtTFKed0TU4t4e8GGpg/hfDPcNysrRTYL2
wSWvSki/8Hr90Y4c7P3PfMv6YC58KTjMdO1gJvaeuCOqOJUJKonBf+YZ0nDH
V5YA3so0eFB+7aQaTwLOe43kSbskQFBKweO7f1xxfE042IzBDd7Um72TD0kG
LT/+duGjyXhWP9votXcavP3wdt1jIhU/KFFXZzhlQj/Tntfn0zOwYMX03D3j
fIg2v1MnypWH+0X+qBwNL4XU7AwaI8MSPGE55m8WXAuvq/Y4i6vXYKJt+86C
521wNDP00aWkj/jNKSbfj68djgqujX3ibMHmgWd3J0fb4SMDb8DEhxaUVlXS
mBDthMVjTDYeYZ/wljF/Q4R1N1C9SjN30WpDD7791vYN3ZDT/+TRXEMbehcN
bNsw9MCEK9N47bl2bKtgWcqi1H2yRaqqd6sdX+X9DM9a7YWDCv/d1TbvxLkd
nfRfRPtgkyZHXqehE7VbfsUJefRBtYPRSidTF74rCmR6R98PLipe9QzlXcix
3Frhxz8AL+UvVUdbdmNN6F56aYsB+DecTPtfSDeapa8vTOQNwHe60rWjBd2Y
8U/uXfr5QTC+oibks9KNtNbPXp/jGAK2U1KjwRo9mHVSOCRUewjaWz7y/bXo
QZm4KenqsCH45L+UeNmzB7961ZSb/B0Cpfqgy7tye7DB93TxuNAw0BM6w2Kx
B1kdhNsZTIYhdb0mandPD5Ze76soaxmGY4Rf47IbPUg+NmvH8WOY8p46v8jz
twcn94wdA54RSL9mdH5sfy+W1tTW0amOwNPflZVPGHsxIvd4xXuXEUiKv5DX
w9GLEv00Sr0ZI+AtcleIkb8Xu+lMyRU9I6D6fsvjqlAvGq0M7FLZHoFYF761
m1d7kdjYfymSfRQc2opbuaEXnSNGTntLjYIfx5bbpmQv2h7Si+AwHYWvmfH+
mbK9+FJ8S/2R/yiUXnn65M6dXjTIUNe6lz0K28kDBcPyvSiZbhI70zoKJkHT
VJp3e/Gpu/K1E4uj0Pq0fW8Lxc5S56P/ew8JHP7WO52n+K9Qdai6cpLA/3wy
XxAl/jNRMauM6ySwkcufnKfkrzPVPP1MjQQapTJuYhR+CtX//Zw2I8E97rit
SAp/G5ZHYd/cSBB0xebKJmV9B1jkYjMiSUCTWi+tcbYX/Z+Xzv/NJAHrN5/z
DVy9KDjLqfJfJQmyKoxobh7vRR9to8GwdhJw2Wv/aKbtxSscObH+JBIYbvur
xOyirM9hRV5okQQ9UwFuwf/14A7xa6x+3yn+Fxeikpd6UKVYWyOEagys1UsK
Po/1IN1G0QPp/WNwiUZ5HTp7sP+MTFo23RjsXmZ53VHTg1omH8rrj4/B4NSZ
CL+8Hlxfqb8cwD4Gl2/vNnkR14MHbvF27Dk9BnxrBlejA3pwf/N7GWHeMQie
GlX/7tCDVYcEnSnnHWhyp+4PNO7BOcIVfcp5B1tX7+YaKPeg1D/Gze9nKHN0
2JP3jjd6MPU7KPzgGQO1lfsXh3h6sFPtWHTRKYo9c/eI85EeHKVuYeah5O/e
+/yf9XY3/tW+x6ZG4SdiWEpfMtWN2X03D4hR+MfaWwbf+dSNhz8m683RjIF3
TM78FYpedgT/SJOnrH+ILSLmdWQ3drz67mZLqU9ZMMMFbqdunPG0T9Gl1M9S
uoDnnEE31o6Jr73qIAH175Om5nzdeFs6j0SoJsHif/TtOQe78YBleGxlDgnC
fhSGlI93oQp1wAa/DwmevTybKWzShQnBF29MCJCARU7bccS0E2Uu8XxIoyeB
qt1qCBtvJ6bp71a783MUctmalBxmO3A/K8gI1o+Cu89SbOT9DlRWji9spfR3
XqD24hXJdnR7Ael1XKNgc06kgeZXG3KMJ+dn/xsBpVzXKoGiNjx8bI+nMWEE
DuyfCvQ92YYu4b6325hGwL2N9pfSxidcSa18Xro6DG9Gt285Jn/C2v9o5HLr
h0GPZfKQgMYnPFcyzdv/ZBhkWlrIShUtKCmiNW2cOwQfar5pS7h8xMnG+Lof
BwdB+ulpKP3ZiEPEJQ6JkQHwk6Rm5chvxEmBz91rKQNQd6TRytWoEWte7d9+
fW0AaOylQy63N2CZ69f0mYf9EH2v9v6vuHqMnC7u6Q/phQdfiXBcthYfFO1X
+KvaC9mn+WVFfiIuzYitNDL1gkU1Z3W5CWLaj6AE0Q89MP79zwED8RpsdbtQ
dyq9GxIYRz8f+1uJQvispUqrA7gVwgoJMURUbbIPlxxuB7kDNoz3jxGxTvFz
vItmO2zIefz6L4CActN3BS6qt4HO4QC9c66lyPqFIKap+Amot2W8LtgXo8Ke
dVldsSZgIbY69Z7Lx+agiFnp8ArQ0VPi/56RiG1jj8cTvcshiYHFsWs4AQ0j
I5Rsncrg61PnTq6DCfhk+3dtsTkBjk0e9gr4GYvct+ceexkUwcOnK6fwWBR2
UZmStdRSoT+ET29G1A+L9nMVxb5MhvoQcvQzkjcW5ifxE1MTYX423kAh0BNl
e+0+lzPEwr58T/lKZld8HitueFYpEJr/2o3QWlohSWVAo4fPB2t8t+RnaU1h
ce/sF45zQVgVG8J7cr8lVFVcjo/yD0O7gz2t7GQbuLbQd+icQhS2ol2brd4L
WKwmREmwUNZVfso2OtAV1POT5nRNkvDBttykToobsLaWVcdkJyPd8zWBj/nu
UCD80EmdMw21HUvfX0jyBMnhdD8oy8KB5pRAuW0fGMy2MmFqz0bz/vG5J0W+
QN86KVI0nIPPTHTLTfT9gM0ywXj/WB5KzKoYRcf4wyhLLTehNx9/KihP8fAF
gNz4/i4qgwLk8DnLdi0nAHglLBIFpAvx3gG9pvSIQGA9ka2fV1iI3a8n7j34
EQjrixqKtixFaD3e3qykGgTFigV7XrwuQqf44it5KUFQopVgUzFZhMRLGxIZ
K0FwgL2l/ZpYMcqYXD5ieTYYxF77JW5FFSOD8sHbFw2CofMHTevKajF6ZSjS
cQQHw8uUC9Zst0qwvydmj1VRMGQmbr2w8ivB4uyFRGJ7MByWilB50VWCWSxb
hl0TwZCW2nXoEl0pxsbOxU4sB8OFts+bqcqlyFx2bfHol2Co0hAP6AgqxcsH
LnKFrgeD2v3SyOzmUnwtt+eh50IwrGrSMoj/LsV4F4Ul5pFgGJVhFg85T0D2
/TdlHRqDgYlsHRb1gIDnw//j6sgMhi/cD8t0/Qj4yHpcTcIvGP5mJSR/LiSg
6NTE8E6jYLiYLuHEPkRA/ocfW69eCQbNZsO0U9sESvwQA7q9wUBRZe0KExEN
sXSJ2BUELztTU52FiZgQEtqk/iYI4oV1TEfkiShDlfGQSS0IbOGs5i4DIh6w
P3r2zOEg6Lb4u/3XlohfijqTi5sCgdPpFl23GxElsy6Kz70IBFHhyOiXQUQs
0xZ7TuYOBEVvv+adkUTU4+bIIXcFwB5a4Z0WFN3a/w25efR5ALjOTHypjiPi
C4KibRBzAGhNF9v8jCXi7+EPL32J/sCpJfeW9z0RGR83PRVQ9YdQHtn0O+FE
5O4IFUlf9oM9+jv5nvgSMdFiPofDzQ9MHu3r9X1FxDwmTbvGY34Q5VUSkm9G
xIMNFTuqk31B43qV54wWEUvJfXGXBH0hYrVs31lJImp2/tRQr/IBsm5eeiA/
Ee+z9Oy4Le0DDjlBnIcPU/hQ/xW+2u4NbrylT8o3CPghcBOUlL1BJss8LbyL
gJebqi6W9HuB+PDDi0nZBHzxZ6ApVMMLXtMfDl/3JCA5mdbq0JAnLN656+Ou
S8Dql/ZyKhqeYE6spn1PRUD9OmbxPmUP2EydpxHoKkWryvCeB53uIDeq/oQ3
htIv+0nmCnfcoV2Cmc/2bCkOLe1Q+nbLDXZZfVJ/cL4EOQR0/Mk6LvA6xbKP
Y7EYPaz/DL5UcYZ3j4XH3yQWY3KF3i9OeSdYf585RDhQjOxNGgl1t17CG95P
co7VRTj+b2zslpgjxGrb3GGwKMJWmk+60zcdYDmVPXd3cyEKiKiKBUk9B2/7
9joLq0LcKk4Sp79rD+klLe0kxkJ8l2lXUabxDBzrIks29QrwylHOSdnntuCV
HqSSWZaLLasmQtafLOCJVvQOxa85eKiX8/AddnPIZu0pGjyTg9K0F45YuzwF
88er7BuBWfiHWcv0iM5joH5edD+/IhNVD51guzFkDKz80tH5cxl4pP9wHKPe
I7DnKuXuFU7Hqpd8tCdCDeDZatST05pp6H7XK2b2qj7MMXBGMTmkIu+OU1Kn
Jx7AEep7BhLFyQj2dTWW/7RAivzvcnZHEm6E7mM1LdWABdnTBkzziUjwTzkv
7qUGYSw3Mh8cTcBY2lIJk2f3IMetnqlf7gPaFO+vZOFTgA/Wh6OrzGKRL9Yw
4U3CbdgbvZWTHhCNLaX46D8lGdB42qDRkvEO7w3osH+7IgnS9XQdyg2R+Pbg
QbygfQsUCy1sXpDe4JLOzS0v0+vw4fVUh/mXcOSQC/R/FiECgjfehhnvCcPj
uk8cz14SglbaCpazF4IxxUnV73TUORCIjNQ3uOePQkoxousl3KAu6Lpv0NIb
jVRpz0t7s0Na66raF393/H5zKH7DiwEWtOT1r9xxxu/nWFknB/ZDpFr6nVev
7FE/U+dHOem32Nxxe5N/amao/s3I9432gpjxr0Q+LX1NNM68ydx+rE5s7OIO
u535AAYaUztJD0PEzhfyxrnHGIHaPTeORephsR7FO2MB8TYQP/h9N5XZpljJ
yA0VFytHyGhXjva+vhtyn7ZmGH1wBavbp17YyR2FtM/y/Xc8PKHCWIpGU5sF
HkjcunjQxBcCNjzZ5NK54Ep5ljHIBEJ/XrTfGh0fzKtbnq45GgqJcVdWuK9c
hGtkAevcv2GgJGIRt6p7CQyCpkvLFyOg/CWJYXNLFHbTa1zO730LD/gj5SWo
xSDAsFJZpzwKWsSnxReaxOExLctbn7j3MPg063J5nRSc3nAOiXkQB3SMaX0O
RvJQ7qZ3ne1qPDSY3BDYvU8JeMi6rzN9E8Dv3xfLbBtlGHSpdAvUTYLey6+S
POPUoZF27RenRDLcN9pp1DeqCfqL50XzeFLgmJh9XoOgDnDP32aRW0wFA5bQ
a978enC/5Gfu6Y9pwHxw54OUOX2omc6afpuUDtvv/HObxQ2B7ublhgHlTNhF
KxrGzmYMlx7WnxAKyYE32UMn4Z4ZsFpskZYe58L02CHjgywWYLNa+nXpRh7c
fCD+zXfNEtiyI7YVSPlQ8qWO3KljA0e5hmluqBTAnJ6lQLSqLXhWmK5XlhSA
Yuhe/cp7dmBael1Q2q4QEnYVXl3WsIdhP0Fr4a5CyBUUTDHTew5pxSJKg2eK
oN3pdAS32QuweP8hdc9AERx5QCfHHOAIy5Kr4umHS2CQNofNZNYZXvD87RvQ
LIEgeeMu/r8uoCDZ8lw9rgTWXi3Qqh10hdmXRCoWjlJ4XzR+6yqvG0idZn8l
96AUbOwtG3xK3CAv6c35mKhSyHyiGOQu7g78N11G3XcRQPSrbWKztgdwtZOE
dl0mgNheBsviWQ9oUGjxcjEiAIOjUFiEpSfQd/53fDmYALW0ZaFX/vME1rFx
OyASgD2F2cXKxQtU5V9q2I4RYDoff+3f7Q1zVnSNL/8SwM0gQmLExxt+fNz+
q3SCCJzTXryZND5At0vWf1GUCF7XLnPe9vOBUl1/flAmQoXhewWfvb6gf8ll
Xs6ECGzb+ELQzRdml4uo/70gQgfn2xMM277AP3aZVcebCEaHyu3/WfgB/wvh
ryphRDiVZGBfPeEHSs/fJE2/I8K7RtlBVkV/WD8S6bMzjgjXK+PZFsr8wUvg
gUQOBS+cYotbZg+Aak/PipFoIuRt/XT/7h4A3FmpJ73eEGH+ANtg91QAUH0Z
m83wJ4JpLIfb7RuBcPG0XBs4E2GvUITm2fBAYN7rOixlTgT1V0xsEjOBYBB2
8H6xJhHUHBO9tS8EQfhG35o3EIHGofjOzedB8O20p13lKSJMSyWdKCcGQb3a
f4wKu4nQTT9R9W4zCAhl4fdEpwgw6S/zLZ0vGFi5EqYdKwiQpPQspUg7GKbp
kkZpQwkgkMnyydMjGDgMksK+GRBgxf3B66W0YIjQe5Vz5iIBPqtePFjQEAwJ
3qxsmT9L4Y0KYTqRMh81RTaceFZXCl8NUrICycHwVAiu+3qWgv6ZFJmbG8Gw
ssAkPytZCjcqiaOuFEyVWW/t868Equ/G9Z5eDIb/cj6y2RBLQOaOEHmLEo+u
bPZgolkJPFUb4GuqDwb2j3x3mdhKoNa1mephcjBYsB0R7m8phlIlryuhryj2
nIDHwzbF8L7hLNVZ+WCQOqKTqXyiGITs23oYGYMhVp6WOaSpCJzgMr/ISBAc
t5D4Eva0CFrqDtkYUuar4bEHuboHiyDai87KXjYIgo2D/61mFcLEf34qt78G
grdH9cAdmUKYl80vLnsTCDFZh5bN7QpgspjdaRADgL+O6eyVPQUgeldY4YZc
AGxd8J7K5s0HupPXHXI++oPpjwnO60q5IB64QsuR7QfVL/xnbFUzoaf37bN4
Kh+475d1mkE6A958CVqMv+kNHf3/4MPFdEBdWvtEay9YZV6wDPyeApYq687n
yzzglPnA1T2iCSAMpaq+b15DXxDRbDrDG/S4VOukgx6Dy9blqUv/XEEpcUnE
odMAIrSZcupdn8PlRYJVV70mLNvabD5fPo9/RTclgt4cwXFZNuGuOV+8G9U1
F+ZjhvUpwpYH7yXjo7fnZ+xTvXHnvx2sL/em4uWUJIGufl+kiwCfX7VpyKwg
tt/qSAB+y3dunBDPwv8UvvIE5YTgRIqYhWpZAYoP0HPxVb1BNjO1jVciZXj2
icNV+9x4PCN7p9lCvByv9OdV6iUn4M40hwqSQgWejf3z0dsuEVXOnuRaeFqF
HawJ4rInk/Fw/Xo4WbsWgzkUXDZj03Cwmd0lvKwRfdoaVUpE89Dk1RG6aukm
DIigGrl/LR8P7+j5dayvCYOXTtl4sRdgzbqmNcdaMx64K8eceqYQH/SHs6We
/oQTe0f/Ud0txhpe4x+d/h14e3Hl2qUeInY+Szh8gbETy2pODnI9LkPbCPn2
k4mdWEB0ceT6W4ZyW8ejvEq70OseY5zghQqskiWX5S53I8P2O6Xg2Co8yNhl
JPOrF2/uSVzo7qjFCwJ/ik5f78OT30lzh9nrUM2UIcTpZR8euSMe4W1dh3t9
bBe9/uvDrivlg7vo61HwwqTFq6V+5Gjewqj7DVheruC3kj+IdyV3nSeuNWH6
7KHxW7OD/1fBdcdT/X7xrzIqkrJKKiIahFJSOFpGJKE0CJGREiqREWUlZCer
7OztRuXIyB73mnfY415bpZTV7/7+fL+ezznPOe/zfp7nvD7P5/XB9c8YKgLw
DfmC335qEezBi2mM9Rdef0OX9I27vdx60H7iXAO/TB0+V3p6YuhUL76dUnTy
ta3HmJip84E2vfh9n2J5R1k9vvvlKng5qhenrXZUV3I04Jgmj++OmV6cdesY
u5XUgKpLaYNnXpPRkPPM4CSxEaXgzMbrJWREv63rnISb0CuuWfs+hYw6exbi
bCybsPpl+LUXohQcZZsVtPvThKECrHJbkiko/8aQR4KvBa+dDXbFSgq+Wf+d
V+Z6C5bUCHdc6aPg3qylXqv4FgwNC2s5wEvFYUWygLZYKx7awBIi4UDFTt7D
WoLibTj4PMyxwoeKLN0S+t1mbejPcsZ0/1sqqjsfWH6V0IZFhftSbT5TcfRA
1Q2TTe3ona/RotRMxYdRqY0Cku0YpFOWRKZQcUeB37VTZ9tRnLin0nqBihLV
40VfXNoxJ/SbreE/Kl4gCbjyRbRj2A+LwA0baaime8KgMacdF591P3+6lYbS
f8/VUL+1I6sXS3XWdhoeC/ylf36gHe0JvztidtPQ5vGGkPWL7ajau0VXTYyG
2n7+G3m5iVjxiWssW4KGrsh71V6ciOZnZAxa9tOQbetenu0niVg0fcUx7QAN
FWW0e9gvEfGmOP9+BSbeZRCmq2hORGP5Nof/30/9XUmSyHYiYtdso4mrOA37
34huMnpJxHdrGgLSIjRk3TVTcD6WiCojb1rChGj4OdiSeiebiCGREqQsXhp+
vUG4UPaZiNMdkd5POGn47I1gk1IzEb/w1V//xULDJ9v5ZGYoRLTdNU8RX2TW
Q79Tt45BxHllZn8xRUV5ftNt9b+ImHC42fZNHxW1f48aT7OQ8GoI/Se5lYoV
Mcv75DaTMGwzdXtLBRVr0qfvhAuScJuwQKN9DhWjH/4S5RElofytcM7aGCrO
WQZapRwg4fS6jfFS/lTUzdxKapcloenh0Uj7R1S8tUlE7LAC0//RbwdCTZh6
2Gy8uVyJhLT0sdhgTSomtR/WcjxNwjVZbrA5QsVnXFMJBudJaHHn3WNRISr6
Udg6bmmQ8PO3gALCf1S0O6haHnyBhBtIuo+kximoP90lM6xFQgPJVR3PRgqq
TmYJ/v/9dHa96HBRDgVXL7rfmmKOm9sT++peU5C1fcNSHNN+379oli/2FIwN
VJ6wYfp3W+csHKFLQQU3K3ld5vza+r1cOjIU9Hh1c+YiMz6RVu/KKS4K5uom
y5gx4xcQfydvN0FG7xsfRPyPk5DnW8Tj7hoybhEYmKuUYc4/ue3dvndk9NH4
3r1xPwmT8v5SjZzJuF6IscNsDwkLrupYuuuScTHnCkctPwld30n5+UuS8bWa
x5+jnCTkA0LUs9Ve1Jv3vJz9j4iDtTulFdJ6sexs3bqiMSJ21NbmLjn3otmJ
3zdUeoi4KPSGL/9CL7qWiO1sqSPirKGK+OJkD6rwCOjNpRIxP749RXJPD4ZZ
xmTtvUrE8A9uclkT3ciZFM2aCkT8fL9HXaaoG1P8C1dE9jP1e36Xw+mz3Xje
XI7E8rsdB93M9ZoMu1CK3V5Ux6cdObzNfgQZdODJwiDdqeFWvNblzSvH04H1
nFmf7kW0IvWEp9JKIwknD421t5xtxXedSkoCKiT01PjDkI5rwUgWj4hsISKK
32mqsjjajOQjd7LVTVtQOqTFhH2lHjuSFf9rL2jG29X1JzY+r8f8kxdzulia
8XuVxY8otnqsum950T2+Eaeau81ustXhWW4tJ9WaOnzQ2MvTTK/BMVm/5YWe
r2gkH3f578lKLBpgFark/4r3DLW3rxxDfKvFqpKsV4mmytzKPt+/YGOCiVtJ
+BccC5EYUrr5Ce87stwzv0VAfw5TK9OlEtzQeCHrz9NUDBYN+8w5koIsEtni
XVpJaLJ/usuuLxFZ7Rpz7RUS8O+TR33v38ej7YDCWS/HUJT8VCvIqRqKgY3+
1uHgCYLdD6lJVzzBOrgZ5gNzIO+tS3tmaS5Qx13Cxb9WQ/LxvUaKP2tBstzo
96GHNSBQ1N9JbPsGQx3hzafFa0Et82L8upw6ELxn+8b5xTc4++oncNg0wPFf
dcfkjzUAcV21/+vxZpA+TfUSN2kFcS+sdl0kQj7xude9tVYI7Y5lNrEkKGf1
uq0Z1wa79u4U+Y9MgmLBwV8km3b43Hn9pll5B3xRkaHxRxOhMqsjYKtbF/wp
ZTc3bekAqVTKpPPvXrgqaHlPhKcT+t/XUb0tyLDT+ZnOn8udcNTw+VkFEhlC
7vkmj5I64f5KoJdLNgU80zZk3mnoAqF9mVnkmzR4OK28j+7bA+yKg/bHEwcg
y/Nk82JZD2T/0csJWD8IN40ys5emeuCSx/6boscH4ffFypw27V5mX3zusWLM
IHDwbtzqy0IGt6pq73rjIcjWeKRMOkaB6SWhbo72YZitKB5LvEqBbXmsfzSX
h2GTNwRdc6LAUi5v3WaJEUjQexf8pJACmSerP/M8HYH1twSs+1spED9xkU8r
eQS6Cw+qHpikwKtr/K6rTSNgnJQfYr2LCrEvfrB83TkKhctbWIyOUcGNc8Wh
5cwocInPm8hpU2HvyXuhGjajwFO1/ZmnExU+dQ7leBWPQrvszvy/L6nwzmTj
7lPkUWh7xFugH0cFb9Zd4jdWRyFuNDwz4wsVjnHd2Vx5dgz2+xYFpjZTQWp2
JWCd5Rhs3Phj63MKFXQa/DoS/cYgIrfZAOhUeMzp9jX2wxisO97s0feDCpTk
HvnZ+jHYPuZRb7RKhQU14H3DGANKkYPLF3YatLjt0ojgGId/sfsZ/7hpcNz5
a83IvnEI5hJ4Ki5AA94Sd88XZ8fh+vPQ5EPCNFi6+c3ZwXQcXpxvofOL0gBs
LhVkuY2D4sWm3hFxpr/Ig/Ky0eOw6cJlwShJGkj/N7Z1tXAcyD1UPekDNKCF
p5jxtIwDrSdE8//3WSekz5+2Hh+Hvp+y9ZuZ2ML5cde6f+PgqrUh8xrT/vHL
Ds1+ATqEavf3vmL615LaSPwjTQdDwqj2BxEaHJqkp+ieo0N1WypX3k4aMMvP
PnqdDhu+fJdK5KdBTby+SoEdHRy3N7U/Y+ZXeOtMXOlzOqRn6x3QZubf86nj
yY9IOtRYFj7mYPKjU6woa/6BDs+fcqwvYvIn9/GBFEc5HerKtaR0mfxGPDWg
0hrpMCWpcmOQyX/wveqiYQodbpZcWH+nhQr/BnLkBSfpUKvukDVQQQWr9qNj
zn+Y880cGr2cR4Xbup8N2NkZEK1voP0lgQoGMZt3VmxjwF9mnyEWRIW8Kove
hN0MaAkNtvZ9SoWUTUHH0g8w4NzVE3F0SyrcJf4e6TrKgPlr59c09Jj6EGuN
P6DMANnWGrtsJSqsjvBIJJ5nwLCfE4VXggpCkSkapy4yYKNS1kkvbipsKral
/NZngC+/eOTvXxS4UXCjjHSdATkh35cf0ygg6hHY3HKLAYOpl4NYqijwM/cq
K/02A9jPBT2MTaPAyBHjG7ssGXByV9fo+QAKWMWnEh9YMyCmbpfY+vsUWGXJ
dOqzYYCb/LJrlw4FxExtTf7//ZWwp6sGylDgTcKLLHYmPiXMMlO1hQLIp+Bd
ybQfNBQmD8+SgSvRRziM6X+3moWfaAsZ9mudKnhqzgA574Sf3ulk+BGZ81TQ
hAHQbm0z5kmGTzsFD79nxm+craOidp0Mlcc//eVl5idCU+zOlCWD/5emHY5a
DPhv5EiyAAcZNpt69JadYUBBpMi+IFovdCiJBk+eYMCz32dfffDuhX2qpr6s
exmgcFun0MCwFywXKyun+Zh47AGv0IFe+JxYMfSJWb/33imR/xp6YLU5+s5m
Oh2+Ra0ZS77tgdt724++7qLDCJ997hOrHpAReYK/q+gw2cNfmsjCfD6h39cp
hg4taQftX7R0w5Mm0+RgbzoMPfEmxEd3g8OlaZXA+3SIddttFSjVDW4fyg1P
KDH1LLq/rE6rCzRFybw3mschttB43cjWLvjiaFeTnDMOSleMK671dIJryujp
rqBxqHtTJXbHtBM2TtjTv18Yh4FOq4seth2wY4S0ft/HMRgIbIibkOqAW22U
XgwZAz06u1LHDAk4OFkDNKzH4LiISNNROxKMHPqZKsk3Bnkv7MhZNkTQ/dfE
rWwyCh3ffPfufdcKql6Onxarh8Gk81iYqEArqE/xeXAGDsPS6ZmaosAWWDWU
tRHXH4Z6o3f2pc7NoB5T8PJ+/xBs1NgWoHKxESLzZiujJgahx7brSNx8LXSx
ilV4feiDv7YzPwLsamEfv0V0v3gf0Nv6huOma+D0k4rCunfMfSHu3maNiWoQ
ybNu0A2lgrPU1W8vx77CyYlDr76ak0HlEW234OAnaAtTyHJo7ATDwnUnDtLL
IcD17+teuU4wKjktaz1XBoT9RfbC0R3QkK58P2b9R/hX9yL9shkJWvRaDmoq
FQN17/aMfa1t8Er9YnP3zwywU3gyphNQCyrqLlxWRz+AkUhOJ5ysgaeaEdw0
pzToW/Loz2JUMfenVXLLxmQQ+SkhdOB0JVxSEL9qVhMNRazbZi/VlECm4L43
Yb6REMFjW/CVuwicX/23MnQ5DMwM/O6uXs0HsulawvwGf6go+y7xrCoVPn7s
clgvLYr5jD136ByqWJga3uARbY03z9q3P9jrh7UNj2Dd+BNcH1j9MiI9Che8
Eq7u1PFDt8Drhjcd0rCDbfdWU68o9OAQ3RBkVop/Q3RyZ7lS0XT+SUGp+Tes
zP3vOee5NFT/rHSQnVGHMQfyE3Y9Ssf3p83KeO41oNZt0YtzFRm41v+2meth
M278zEXYuJaDAs/mhbWViajcGtIbtJyLSZerVm+uEnHiyh/9wu952HPJfdu/
zyS81m3X2D+Sjz8yCpF8shOdFjQt+IIK8YvR4aP9Mj2ot2eb0/JMIdbS5wu8
p3rQRk2WW1irCH9ElEc9Yva5vZa19qxLRXjlufVmLiEK3lN8p9+oVYy16mft
EkkU/G/Vd6b2bTFqeAp23gyg4g+RqAnjgyV439QyZeciDZdXrMaW7pVgR5a6
yJbsPrQONWlqzSrBl9t+1Kw37cey3L48yngJNm2hF81vG8Bz5Prfe3aXor6o
646WmgFcv+WG/vvLpfgwJVOg/uQgzhWO1Bl7leI8y5O30WGD+PddWOqNnFJM
6mH/0jExiMM2BwLfdpXiU8lUmceqQxjbVmKza6kUqwzPpDlHDaGBlerTCSEC
ujwopJGnhlDupZM6ywkCSv2djIxQHUYDD50P1pcJuOqrGpcSMYyhq6mVYlYE
vNSd/JWNMYyqy5T/FFwIWBPcP1B0cgRDum7tS/cjIFt0W29m4Aj2jJw97hJG
QPZ16VHjfSNIf1jrW/iWgErPRLnMD4/iv1ONxdfiCUiwrpYX9hjFwxfNPjj8
/75Qi5efu2UUF4IUw9fHEPDnUke5/M4xNG/gnecLJ6CZuIpyoPUYWt6UeZ7t
T8DQW4pfeErGUNCvwID4lICLJRF3Kv4bxwVPjvIAGwJuyFGxDdUax5STZ7UG
DQgYke+22TdyHI8sOdLJSgRcWhaNiu4fxy9NPwufiTLzn6i9XitBR9/eCgHK
OgK6f/hL2GBHx3WFBfh9sBTZTN13mhTTMSOeGN/2qRTpmY+Wav7Skff7yxG3
8FJ0c47pPq7CwPMBY6zrrUvxtPoj5QIvBlY/ri61VSzFIYJ3vWwNAwPb2Gcr
OUqx+JH7rkK2CRyZ/drP1VGCsvftZ+XUJnB22mj5emwJ+tz6bynbZwKXowg/
C01LUCgjhFOkZgK9KWrFe8VK0OLBo2U/lkksWrps8/BdMeaaqu846DKJpruq
74vfKsaU4284A/Mm8XX9Dt6HQsX4pedI/tLoJEbw7XrLE1iE2g+vZC1oT+Gl
NI7gh6eLUKSC7a7rsymc2DB+IW6hEDc4v85iK5hCeWrumrVBIXpzKfzbuXUa
U0oM1PeyFKJW3i5iMkxjv/rI36asAoxbTU2VuD+NbA7ryMLL+Sh4N0WPv3Ya
5xdy3Sjv8nGd7sx597lp3GVAdyo5k4+UqDyH3u0zmHtrJW2ELQ+55YUPmFnP
YMqDPY5dqrm4x6lW+lXwDG7PpPw0cc7BYnNe48SiGRzbZd/8ri8Lcyk2ha+W
ZtB1TWKzL2cWEp0eFRoJz2LVh5pOy+OZqOGuG8qrPIvh909IuL34gK6DfZLS
rrN4ReGT2khqOhb37doVFD2Lzpx/BDNr0zBX1P5eS/EsTofEsVespmD86/E9
kxOzWJgoJgMCKajiYiJZs24OxV6x7fSXSsam9MI2F6E5NOx05aHqJWLeAvY8
VJvDq+Q6EyHz97j+s9uZ0htz6D5iuCA4koAmZkcs2u/P4fvjUtmRK3EYEyBr
/vXZHPL93cwzui0W7RKXHP1D5tDxiLmXosRbDNmn1yn+fg5PPjgS1Xz8DaoY
qHZF5s6hhvRN/s5zkfhLbA+R8mkOM6SafvjqhuOTiETZn3VzuNSfryV8IxTV
9ag2/aQ5nLl1tTaqOhjv56j/F0ebQ7/mGYU3bQEoN9LmfWhsDt+Rjv780OuL
68vbIwOn5/DhoR0ypwae46cHewYqfsyhbKHPu6d17tjxd7NQ1SIzvqs5n5Rb
HuP2N3abo5bnsKCPf1k50Rb/FEYFnVybw2FirPWipiFuEjJzy/s3hwaBm37L
3j4NI89kGhaYmJXdJCXmigUMXJmy38TEky+uHTix3xH2/mTzmF+Zw/6I7aLp
Yk/Bd7PzhvS/czgvXHRvF7cX5L6oPHb41xyqOZhtC9jgA6ech0/4zjH5Fevk
zPzvJZyvuK2Xx5hDh29/OLl/B8KBN+faMwbn8Ahpi6vYoxDYUsXG7dQzhyX6
XT8cbcNgfd/bR3wtTP71aEIVphGguP3OU5+vc1iuYVnToh8FpaeOJzcUz6H3
zhOMu+eiweMfeA6lzWHKxsO3HHfFQb3O6/5gvzmkpYxEjy/Hw7nk1/95Os2h
/H+jvTI97yD0WsYBfYs5rNufGx3U8x6eKP0S2Xh5DqeDLBbLvybCgHdZWZLS
HJ5zP9TCnpkEGiEmHSKScxjY/W7NMCQZPmyxue7Nw+Tb/HBB2tVUiMkZivg3
MIv+nzIyHY+nwW1+C+Md35j63D3yc5A3Haarr34UzprFOnllgbN1H0DI2aZ1
1GEWf2+TzmSPz4CPsRbLWfqz2NZdxM5lnwmTM1YJZvKzuHXJyNd9czbob7PO
jP8xg2YMU0p5TzZ4luwdlmifQTfT4Zu0hByYu64inZI9g3wmH33sxfLAb0B3
u9ftGUy4eIyjdDAP+Fw+DY2cmsH9LLUlZy7mg/s19a2n+WaQRc6Ko4SlAMSN
oh98/zqNKnKD/w5cLwADTz4RjTfTKBulHP8xtwC6PRcU39tOY47+aC/zBIeN
lNdiRsz9pr9spSMyuRB8eV83Vg9PYVvr6mGx74XgZXPhpXzRFMotRCjTfYrg
oPBHO8XLU5gge8B6U0sRvL9yFom7p7Di/OLQ763FwP9zg6vr1CT2arHosEcW
g/0q8Rfn80kkL5eMC3QUg6ox1+FFrUm8ua9XuJm7BAraCdUrfJOoIcBpxfKs
BM4cXb5tmjKBC60yd+yLSmDoT7Fc9d0JvLNje7fZWAmoFTDomrIT6HiiMLqF
rxRc7i2u/V5goNV7HULW6VJQpB762/yRgQ0D0tYLtqVw4W6sWasrA9tJnNzv
w0uBfYG9eVWZgRt2fDiR/rEUtm/61Gn8j47ptVqp66il8Lv3gch3pONVVW3I
WiqFz+n7jcqf0REvvRKJESTAx5/blD+r0HGz2kJovRwBEg/d8fy7Mo5n1H5z
ymoSQJZLeepR+Tjmxy4fbzQmwIt49wtyT8bxsnD/VMgDAtC7sh3ljo6jfvA1
eQ8PApgNt4Pz7BgGb3ysFRhAgGyBi5EbMsbwiM6f+JJwAgz5VhiP3R5Do02N
jQtvCdCr3RuwVXgMv3LcSD4XTwBBV+AP6RxFt5PrpN4zcekXyxXzwFH0yboT
ty6WABtzbdRCzo7iQ8VmE6tIArzupf8TXBrBOklX/sZAAgw4DZxayxvBbS6b
QiW8CHBy2I9X7c4IvvMfLhFwIIDkTh6DAN4RZHQHP7Fj5pPdzDOx8+swTjpM
XTmgRoCJJ879a/eH8TPbP6GzhwhAPvZbXUFoGOPvmlEJXATwUkfVhtoh7KqN
+/1ishQ8TxtMfbQfwprjLwVTakpBmXzeYdPOIRzelCzPH1sKroZ/11XVDOLD
BzdDOu+XAlvBvZ6R+4P4L9a8bECpFJa0lg49EhjEDG9WaWJbCXDxmJGGm/qx
OTyKrzi8BNQjH3a27OjHkluU9TT9EhDl01D4aNmHFgNGPov1xRAo++1XzioV
345G7Jl0L4ageWpnozoVrzsVEffIFMP8apjQplAK3jnRO3bFtwhcnzmq8oqS
Uch4qcJQqgi6NojTZ6168VDRpYR3rYVAkgzy5MntQffsRx85NhTCS53C25on
ulE7qJVy6F0BFL0yTHV060J2MCTFHykArjn/FrbKTvy5T8bGSScfljwKfwed
78B/+fJRhcXZwM+96COm1Y5Wfz23hX3IgrRz3teOCrYhj/CfCM3ITNATX0r1
ftOCZUH15+5e/wDetbHb30U14sf2e+mlQcnQ2qe3kB9Sg9a5fc5Rmklw9sYx
UhV3NXYIFHfkr72HJt5I0abAryjIu4WelBEHAVEKQ9zbvuCGgSV/njuhUMQ+
Wq6zoQBt7Rizf+iBcIiasBK5JRt/HaqZ6Jn2BcM9klvTedJw6Zeuct31x7DA
93STsXwEfmWUcUUPuaPjxmT2XzdiIdbD+vmuyEQUNm49+upYBaiNrnDyaiQj
Y5bNab1jJVhfjoo6/i8FPXfTL/fXfWWuI53iXJcPGNMV/PfYgxrY5FD9bSgu
D0V7i0rXMhugl6qjl3iWgAOL08uTY0T4dfJ6MoviR6Q7Fr598IIE+gGcO0tk
ynCEcsW0f08HZItuyhwQ+YTP/qSdM7/SCUWW1V3VPIhS477fbQu7YZXwgUMx
qBqnhk2lPstQIYBP/4Pylhrc/jra71IZFRp1w7ifhtbg2ql9ks6nafDGm++w
W1QtKsbrPXS62AeunxaXiYl1eNaH/ewH/QFI4V/3eQuhCU86uGhGBgyBBtvE
6bUTzfj7pq8ja/UQc59hzcgob0Zuj0Ht+KUhqG050yP4pQWtKTT181bDUKFH
K3T60oZ1+uU7Tx8fgbcbB/yKSUSM0jBpTMoYBaMe19tdfCRU6hNqftIzCvv3
H9fzuUpCqfnCteOsY5BTFvTLo5eEPy79nbC7MQYus2wrl7s7cN5k52rK3zGo
0hLht+DrREuZ9aeydo/DKZ3HXf2XO/FVx1OZ8DPjcDSPHLDc2Il36GOH2fzG
IenFnLRuSReK3/mSbbKODtcYfYR9s12Y+HRM32w3Hapvs54AiW7clpmloKpI
hyPsZ+9JRXQj93J9eoQtHc5Nqd1ebOjGdl7Vro0v6PCi5B9pYa0bf7/z9rr5
lg7XR0J3O1n2oNHBn2oRVXRQ2j8a9j26B3tOVj5z7aIDS6ZbSXBjD1o0+DsB
nQ6RT37Zay734GFOrduDi3RQ+Gz1edehXuTBNy9vcTAg/+PHWI4bvUgde36m
nJ8B7sNje9b79+LGsPAfP/cy4Lo0e8KeoV6MTN+xc/1JBjz/vnntBBcZC0+q
ZJHPMiCeN6fN4DgZbf+hWYg2A1of59s8MCGjs5D+vKQBA/yqC+V8/MjYQs4U
TLzBAIFVs7iwXDJ+vmyevmLCgC1r1dIRnWSs3D3pfsqCASZ/XVx8/5LR/6Kl
/y0rBiSNrROz3EVBCdt3VZY2DLjQvdIno0rBGRw5fuUuA5ZP3rEbNKOgeenM
6kEmfsfS++HRcwqzz69XmbBmQEpUi+NEIgVTQooOh1oyYOZLT9WpSgrWSbNv
FTdnQJ9q33vrPgpqcmxVSL7FgNJ7BhL3/1LQi/Hv35brDNhl7OahxkdFS83y
Xls9BiRzR45/l6ai0KHqUx8vMOCvvEDuPTUqKh3dXvD7NAPYiaPHi42p+GoD
T+v+Ewz4+NzvV+1DKmb9VDimK80AwfDrDu/8qSjwTTbKTpQBGoWfz6nEUfHx
plc5PnwMOGapuet9LhWHPJPOvWFngJXE2qcqpKLZhLNcKrN+0qL3fyW3UVFK
JORqAbO+i2mMgtP9VGwMqk760s2s94ncmbdTVLw1K7K1uYYOIsd4yjIXqdji
WPmhv4AO98QTTjiuo+FnlTi3xXg67InVSp3lpOENNaus7S/pYF0Sqb2bj4aM
YHOTcw/pkLgvPeSfEA0NuxRa3YzosNmo/LuLCA3dMzo3HTtPh3D3G/vzxGnI
qrMixiFNh98SRHq8JBNf3ab7i5cOF9L4F88doOHWabs2lqVxKNWhyyYz8auk
Y9OHB8bhnsv4C8J+GpIbDy15VI9Dilz2D08JGsZdCb66kDYOBwIGw9f20vAn
0K1CX45DXMylMJndNFx8PRx/zXYc2MVWpXi309B2ZK+DtvY46HYeJ3zgYeYX
zm/+QGocfpxKjZ7joKG647fVas5xkNe7eZHOPMeOiRR1aE+Owf6M0Tuvf1Bx
L2vCM676MYg6pedHH6Oi8JBpClvqGMhRz9vO9VDReRtOn/Qag9dKKwNp9VSs
t1PgzDMag9j3V+o3f6Qy+ekqs1AYg36H1vGJMCrquht1vpschR/vhC6YeFBR
Q/5J78HqUchl3HX1tqbivZ4vzD5jFEKETXwHTjDP0SmLwWSNUVA3XDwisIeK
2v8WpR7uHoV1BGf9tfVUfCH5qSPm5whEZ4y5jDVQ0LFAgOtf7Aj8yn+Zsk+N
gv3eG80ejA2D5F7N9FVRCoqFhAVdKR2GIp3tmsErZGT1fn0l23cYRmq/effn
kFH35bMjH/cNQ8wGTXZzFjKqbFq4kmg8BOPen7if3e9BgeqGR5wPBmAsLy85
+VgP9l+2PjbOMgB+POHqCSvd6Pz22cCGiH7wM/T+vMevG/++45VVLe2DIAW7
O/HBXWgT49pz+CcVYn5u+cp9twObhzxrWgx6oe15kX3Pvg60KB4aFqP3MPU0
5fJtkIRcj963y7v0wLDAC1kxAxK6PJ6Si4vrhpWKwoGDckScPuX2g3eoE9xk
myruBrfgqfvPKmXvEOFIepRDzkwzKnHln0n51Q7/HU8KSdZqxteyxN/ivu1g
Uuv74tv6JnTdtimwWqcNrl2pkyi8U4+/38oppXQ3AUu+v0rO7yq0leEPdV6q
gSnd+5BwrgpH1cW1A0RrQP3iYsGn0K943vRP8EXNatBoc+WJO1CJq5cGJjlj
v8JBUROx7MRyZOiF7SgO+QxLPw4mJG/NxfPdjbWcankwlLzvpBpvIhQtf7rN
XfQetWwzYP+5FDA6tdrc/TkZ/RynVH89TAex4CZTNkxDth0bjyS15UCuerq5
WHY21q0/Zn9esQReNB/8doy3GMmJ3P1q7ZUw4E43aK6qwJFX4//tDf8KTZsE
pB+uq8S0B521m69UwdeGqb2nEivxlWCx8WxXNYStK9s12fMVY19nvC5r/AbT
WbEXLh+owQXxr0mjT5rhdOgNjVPX63FXXgZZQrIFnh4fGj3VWY/BcRd3DHS2
wN631etqtBvw0eshieBDbcCzyNVhfrwRV9/VVrowe3GnA6/Dyqea8BpvwEGX
o0ToPvKst1WvGVs1Su1DXxCB5+0LXjNCMyp0nwpZESGBzc3/qledWzCPHOOg
q9sBo/pl/vz9rXiBSM/OeNsBj78cJfHLtWHFm+Ybq0Md0HTt1HyEVxsSo223
+j7oBO0608CXm9tx6Ld+U4V7F7h1stIEo9vx5s8YjqCKLqZuEviSCe04YLXV
99RaF8Ri+J6fXe0o6Tr1UvppN2ztC24Y4ybini/bwgUtesBEm//EcUciGqpK
nf75pgdM7+Z3JPgS0fs01e1rYw+4Rdy1Wn1LRMsvCmvS0r0wdCflTeIXIoJV
ZEy9US+UZFwanWgh4unbOxx1XvXCMrvYS+k+IgZZPzrAP9YLsbdmarL/ELFw
sYCqx0OGEtm9D6ZYSfidymn3+CQZpujpbw7xkDDBmN3B1ZwMuvsax+yESMh9
g8XH/BUZtuRbchHESKhmp3lDqpAMlJ1VDWxSTPtD+ws6e8igM3WTbnSUhDsN
f16/uUIGPrkqxQpFEjZI7TyGeyjwusji/SEgYUeBwtF/pyngEmXFln6WhHLs
/FeEzCnw/dVj4yPqJLT/WpG15QUFksJD09s0SSipF3CtP5ECheqMaU8tEv4z
FwnyQQq8+PJeVUObhIc1fV6x0ihwYiUbJZlYxVok7cYiBWa5YkJEmc/fyakC
v61U6Eg3GVFg+vu8ltX08iAVMrxkvt9TY+ZT/LrF7AwVbJTPrVSdYdpvjSZz
X6fCYdb8S0oqJNxUZR0RYkcFp4aDQD1Bwm03RIrGn1Mh8dSgRNIREg52X1vm
iaICq7WybfghEp4Skzy75QMV4rZVOBcw+XqZsMNh6CMVjOvKqteYfN5MO+bm
V08FzXTZevetJBzeu2DL0kMFg19vNspxkDBaQPnapVEqvLJM27ZzhYiJcrdt
HOapQD4h8lhlnojRNtt7rZap8JgvuSF+hIi3I+xnjrDRwLrcIe9UNxEXNrat
69hMgygfaBaqJ2Kq5rCXBj8NvHC5SbmMiFrp0aPhO2mQ3Bpnmp5BxK1rfCUl
IjRYg6nTN5j6yrRNCsoVp0FBvrb0dX+mfnjTtz+TpEFCTPBYmhMRS6ciefYf
oEELR8ERNQsiRoQPwP/vi8dlCoYULzP1eHzYk52Jy9Yb1HgrE/GoS+8XZab9
r4z5/AMHiDjwpG5el+nfbv7k80N8RGxvtRU7zZw/oHSzYNBaOz4p2fdgCzO+
j3rH9C4z2lHt4OjKZz4a8PxRFHIltqOu7BY2LWZ+d3cfvL65vB0vijq0lbPS
QOC7xcqmpHZs4NtTtJnJz+U6iwWnl+0oc8tU4DyTv8uZL+UN7NtRQSzS7jaT
X47pkcLUq+1ozyWsasXkX4q0ZmWn1I55t+cypcupQN3aZO7A3o7sjn+ifmRQ
QUnpuLZ5Vxse3BWWmBpNBfWEtUOTcW3Y3ehq2OdIhcA9ctxiB9qQ9KHeqO0W
FV7eUgnYPNeKltcszL5qUmF8YE5yT3ErCty24MsRpoLW9aTXradaMaX8XhS1
lAKQaxW3eroFhzfsymeLpUBMOXd6JUsLJnvHW6h6UODHhfjbvZXN6LXqQ5xn
rh99R74kYeVm1BTmS/esIAOEuBVGHW7Cf0c+yTjGkiHSakdF/EQjfr3uMej3
hAyPHLPjJFIaEa/s1z0oTQbPK7XCnYKN+D36+Zc3wb0Q+leSR3GpHlNi60+9
keqBGMX1rTN535B46aHortVuSOsW8Ei68w0z5YSpv5q7YWwTzwWZnd/wcAMt
MftuN6wLIeWP+dTi8NzuvwEJXbDbTXVS70YNqmY1O61MdkCUwbzE4/VVyOu7
nHFNph1Y77VQNsyUo0vBR2/RnjZ4wlpZQzAox7rU/TWsl9rAPicz1eBLGTrk
+YZfUG4Fo48FXq6hH5Fx83VmP18zqCRZ7r2rVooXSJ9SPT7Wwdmi0oNREwV4
M+JNcZRUHXwzNRwZNS/AN0YPcsvefwPX6iHltwP5OL83Ov38y1rwsRs3iyjN
Q/P0vc7ORtXQaOBm0VSfhQVlyvEPJSpg1KiFrvUiBcMathx/vf0LdHeW1Wpm
JGNifPH8AOdn0KlmGX5PSsKnc76OFr/L4LrHxh57mUQUT/Osa6SVgJV8XN8J
8TgUyVWNF1jKAt+JvSk7VkPw6RvGgb18mVBfUUHMfvAa49x0rIKPfICDgoVz
yj8DUeC+3uW/bimw8r264b24P0rttn4jERUDFdEWHUMmHjjPfviu7mVpbPBN
W7lltQUsOi/O9ty2wemqhQb35QtQbJNWxn3JGeva8p4wkq7DqIDAsKqvH9oP
bm0qtLWGu1mim4PeR6El43KHT4UTbHnYIK6h9Bbzy6fvZ+x3gQzBmOtfmmMx
SlvxW4WbKyw+5b1Scuc9Tk5mPPUaeQa86pYy/rtT8dCfOgG/3hegIDn935Ry
Gh7lJc9If/SGVg+/oAuG6WinMWKTHOQDkX/fTPc8ycAGmpKOo5AfUI3pIz88
MjHAyV1rI8kPDprNDY4+y8JjAh5bJp/5w6chspD0gxzkjzpXtglfwsrh8c2P
jHPRTn7rz0DdADhiXPTw4fk8lLHTCe/rDYDCkOgVVa98bN1cEPuo9RUsS5BK
qqbyMb1OLpRFKRA2Vdku8+kXYKWp2r+J94GwPb15TXR7Iaaxu4WYXA6CMtmt
H3sfF+LX5+Lfj8cHwc7CtgXD9kKMHctXWhsMAne/1XMJkkWoHM8dRRUOBnLx
zoeZrkW4y/+i5y/dYHifpejt2lyEZXxHKI7uweBttEDgESrGgc015KdJwRAS
5eBvY1GMpPsUjmOVwZBQYJjpk1WMh16nnGroDgY1n69cd+aK8bagXJTJeDA8
KDxM5pAtQbHlH+4ic8EQpWj/0O5+CQrOnIuR/x4M2WahLm/TS3Amcqq1ZjoY
2Bc+V7/sL8HXP6IUloaCYaJ5t4XqtlIslDEXW2sPhv1fv6ZVnCnFhzev8yyV
BUN5n81WdvtSXNSYTxOMD4Z3bLbm22NKUWF9cInn02CQnHKNXKwsRUPRTVIm
esGww9aHnDpainY35AT7xIOh8pJdzD42AmLxhTjxH0FAcxlxddlLQHpSwoJJ
eRBsfyx8I0WJgBq2/9mUuQcBy7M4zQx9Ahocu3HxplIQCP03H/XKioD3uZVW
HvwOBIK75TcdZwLOn7YjiWYHwsONDeG/fQi4ztjvYKxxINw6svmHbwgBPx/1
vcbOGQhhbqycrNEE1FG2Tw0qfgU6FhvAMY6AuxIWLty88QruLiSJ////ri8V
+R68XQmAoe9H/eWZ40+E2vY4xgaAf0qYbdgbAi4F9OhsUQgA8SiV/4aCCZg6
Mu1pVv0S1C+dXn32nIA3Fd0jhLRfguRu+TNPHAl4mzKo/IjoD5mbtv1rvUVA
17K0iXR9f9gu7VT0Wp2ABSnGJbNMPRfXd0hXSRFQ3emetdclPzBR/BDwgJsZ
z8zfe9ENvrBUnXY0cboUu8ij9banfYF4s7/ftK4Uv59rEThK8IGKe+Sgjwml
WHdO5tm+Qz4w7XHG4frZUhS6UtF3h9sbRF8t7fjIU4oqJvty9ni8gHY20Rwy
pQTXnh9Tok0/ByfPV4Hhd0qw5oSUmEy9F7jobXtxVqIEn7BTPkodY+LWJ6Vj
I8UYHinhvpzoCVeX7nAdvVqMSZNiMemLHiDO1jOzuKkY128RMfcguUO7yUe/
4c9FWKq7t8sj1w0Oba/hN9lehJR/1f4PbZ8Cy2hwGVdVIea2KCjsuegCTxZT
HAVtCjFoUE3PXM4Z8uoG13nkFaCc6HPpreudYGrVPkt2Tz5Gy+cv7+t0AKOt
FX3Nd/OQyPfpXHWHPdjtJ1JHw3LRaVX3CGvBA7iga18X052NVX1ynhvGbEFk
VyvF5UcWch+6UJbCcxesBJ5k+W3Kwrj9Zjx5GtaweCrQoUQmA5dYKtI2DVqA
tpPk3h3KH9DbcEj9kqo5bOfI+O+oejqK6KzkMHLNQLRiZpBXLxUVGUd7EhyM
4ZakYI+IfgoeflpysTfjBohzsvY/uJyMTRJnsv+wXANrP6kPt9US8Z1llnAt
nz6klGw/qaP8HsNuGU7XtOtC99mDDAGLBBwu8ppLvXURKg7SHd014/CHym2u
dbc1YbJO6uiOQzFo18tQyM0+D17yhW+PbozGn06NnWlwBsS+T90WGI3EpgRP
1gwFFUj63R7C+TkcG4X8WLZ7n4DrV2IsjENDcd2yyhFhy6PA37Ccn10fjLlc
joK7K6Qhlr3hyPO7AahFFXQ7O7gPdjacYCFu8MVDRyzPPLLZDbcrt+yUSfFC
1bmzXD5PeeHg4X3ud54+xT0bXryVmWGD9vsFZaMfHPAHKfjR+2c/VbKv3pPf
lmmGIbsrzeieHSocRnxHJdIKPmsYB/i0Pnmo+D/PJBWr
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5548#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", "\[Theta]", "\") cos(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5570#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
UYzv1K0iH97oQueJf60yoqVIq/yNg6uoB31PVle4Xq7E9LtyDXs8BjD3pJT4
kH4tJnNsFrb0jaHyUTlB4bRWvHZ4+UEg1ziSdSYXFGTaMMn8YnXjk3GUvl5C
KOxtw8X0w8cfTI7jVF/LA03aDjzPLdOaMDWB5TYX3a7lELGLsO06U/0UTt36
UarK2IWCSW62jzem8Ps4/d1r97swoW9bUef5aYxYGfy+M64LGYrlDnLGTCMz
rj/tv9iN/z5BVb3xDJ4t9GdiedyDF1OKj/kNzmKp46pYYHAvtjtqiPr9N4ec
4pknPIZ6MYz33mVH4TncH73t1+zRPhwOX2cUtp5DJzoFuf6kPnQtkd58SjuP
AT1KRzoy+lH6YyNNAt88vjZ9fdxlsR9vnBwKaJSbxxG9638thQfw95gFKdp+
HmcVu/i2kgbQY0pNw3xmHvNCx7n/BQ7iOYOdy+825/FEvhQjTfsg3pqjF77L
SsGoyzE0B3YO4aFdda2WUhQMije2fWI+hOxeozsrlSnI8czolUfyEFqfvujf
+YSCGaqlIhlDQ9ihmi//1I6C+jc2w3pkhrGFQ29bnzcFK0THT3SYDePy5Xcn
D4VQkMl+43Z27DDW5pDk+eMo+Mj0vOgb0jBmZPot/0unYKxu6Q+2rWGsSD3S
FVZAQQu+zyN+J0dQ/BZv6fYKKrceuU7WGMHIF+7O52opeEHaLWDLYQTl2HX5
RJoo1Key3HzKCBpKF66ebaXg6tuIlPnuEbR+ozjR0k7Nr/7vCYvNEazTnJFe
7aBgjPjsfRf+UaS/JmyRS+WtK32zzEqjKM/re3AHdT0L9KRxmo1ipOLZ3pkW
CrKqiAWGfh7Fgzyd9s8aKJhDf63AvWgUa5NDaUyrKMgn/O3qWO8oeu/f8YK9
hIJfNvSCY36NYgNf1qh6NgV/A5l1fDcZE0skC0USKXg8TFExlp2M+w7sV48O
oyCnZK/aR14ypupdupblQ0H5Y2WcSaJklDkjcuqhPQVLG/vTZy6RcXHIpyfZ
hILnHuzgVrlOxmiVrSPBjylYxS8dOahCRqWUsT0nFClIPLrzpfd9MhYcZy17
Kk7BXN3QnodPyZh2JE//ynEKFnWfUlB+QUa7p11GLQwUvBcpIf3YiIxT/pJX
tq3O4/bmeDlvMzJm/MdmNjM4j+9jGXd0W1L9Fyfn2FfPYwLb+pmL78jY0krb
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
zErG5SsXLdq0ZyBMjp6VeoqMz8tPa3K9n4ETUzO/2M+TMcT1xge7jBk4VEgV
tPz/fZulg0mq/81CTBWJrUCDjJFsQTmV/LNA0nTJj3hAxqU+7wtnb83Cx/4u
5xx9Mh68kL0a93oWWG46hSw/JeOBM/W5e0NnYQXohZ+YkvGp8ZqyacksnHwV
4bHzNRkd046lVQ3PgkaXyNZeazLGJx3o37mFArNkoY1uWzK+O70yfeEYBShX
rVa3OdDksxab2kCBdWZ1e8P/35/x2Kejq0OB6v1XeJdpnCT1Su2GLQX+9C3H
FtD4ikWI3OFgCqz92ZebRnt+i6TAN2ImBW718/N225Ex1jaV+S6RArIDvv1i
NmSM+9V4vGKMAu6HL1RWW5Kxd49fAN06Bb5/DR32Mifj4RNhEkeZqZD596Wc
lwkZbZf1ZnefpIJFTMqeaiMyckk/SW0+T4U7PgqvzuqS0eaxiY+uMhW0k+hy
R+/S/HWMz6t8QAWhLEMeoioZh5S/6/00oYJKmd7x71fJWCm1ZWbejgpvnyly
3rlExtOJ3lk5H6kg/fV16Lo4GUUPu8jLB1Mhme7G8TF+MiY6cZ8NiabCpNTI
bcajtPzbnLuQm0IFvRRinwMzGRmjxTmDcqlgLPLP9CwdGUndWihVQgXroa3F
zykjuGndxRZdSQXLHV7f/2sewcyAhfPEOioI/62/Kpo+ggaMrDdyG6lgd78l
5p/3CGoy3ASNFiqIHs+8xfZiBI8+/CtT3kqFq3KZTuNKI9jdLo0rNK75uJPP
iG8E/xK6Nddp+u83dirHbh3B7GLdlLomKoQWxe2OHBzGwxsydo8aqDC8499X
HcIwnmXLCquopuWriHJj3GsYv93+vjpfRoWMvvdvJPRp8uWTwRP5VLBKSAm6
c34YP0Q6eMdnUGF6p+tp5T3DeIYgwCyaQIUei83BQyND2EgxNnILo0KMkp5G
beYQjna5Lib6UkG3u0jzjvMQHgnsOR7sQgW6XoPCRlXa973e3NJlQAWjXHcV
l7lB5JW8mySgQQXiiVCnpoJB5DgxNKcsTwW3N0cO7n83iKIS+s83OWjx6tAf
iWMbxOrT117KlVFA5fmfdGvxARxakmXji6PtP02nSJHVfhy4k/pzwp0C8U+N
a5hK+vHiSlz74k0K1Lhk79SS60c7+XFGy+ZZeNS2f0+ifB9KjT5yvZk8C82L
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5592#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
T1KpjIwnupUjpAMWgH0+bWV+hYw/6hPf5hIWgCKdylvzdAjdnEPIlXMLoGD2
QfND8hDqLxuH32WkgWXj9MWukSE0L7AuVOKnwQPvJyzjl4cxI1n/4zUlGpAK
uOq/Ow7jMSz8ofKIBmTNbRMVBDreue1chRkNrpDepguOD2OKogC/nQsN0kYf
uAlxjuDJ0X9SAQE0OGFXzdAkN4K39+jd+hNDg0c+I+MrxiOozW2k3ZJBAxR3
/k0IH8GuG6F+C4U0YC84ofkJR/DoroIjBpU02FwsfiZ3YQRlxIvyz9XRYGjC
Znaai4ItvMEk42YaFLjHrASfpmDRt73239tooLSfyJP3kIKmJwbjxzpocPcj
WUTqJQUj3FLdD3XSoJBae1kgnoLc45U+be00EFT+km1cQ0EKs8LFnhYalP6a
b+amUFC4k/P5mQYaqJhKlZ5bpWCu48NRpxoaVA+HzX5mp2JJhsGqxjsatBUu
7RE7TEUCl8WbYQINZMyn4eM5Ku7wig/5nkIDFua7uiduUbGVpXJfaSQNIvlG
y5d1qDgbQNPb6UeDvq1PU8WtqMhZbvZOwJkGiZnBhAV3Kmpz3fbtpcf3s7GA
1+5gKhao8FodfUyD9wZ2/9XFUdHK3eTg6es02BaxSY6SScVd/SOmS2dp0JGX
eduwiIobyfoKjw/RgHCSLUGvkooqesey3DloME9jyetGKm5x2UvSXlsAp7iN
4xlNVPTUduVcH1uA1LljfxdbqRgckFil2rQAn69tCMW2U/HoiramXfYCcF+/
PP6OjrVVB0If0/PtQnyst0wbFQX3d+7ifr4Aujf9C0SaqVipZtUUcncBsiaH
d7jVUTFp54D3nMQC6OjnpZ6vouLANT1Tnm0LEH61/7lJMRX//QiJ3L00DzdP
DTb8yaLiMvMtZYaueVDyFOdYj6cio5sXtSNzHi6mWX7VC6HHKym32tljHhYF
7sCZV1QcVDtrvU9zHlSfNK7aWlNRtlQwJf/UPMRe4VM4pEdFs7+P/p1mn4f5
bT9s4TYV/5bfU6+YmoP9Zv+xdNLfL25eNKnefw4Szwb/kOeg4jPd6+H3dOiY
UXG7MP39Lx0PDFmRnAPCqinjk/cUDOpJf21DmoXqc67KFHkKWm9l+bCTexa0
K4InlfgpeM50+su70RlwzybXXPw+gv+iqjODsmZA70PX8aWMEdTXertvi8IM
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
2toK3i5lD3oO/q4pSDm679nlpxB99QTGxPHgGQ+XrHWxMBBZZI9rNDuEF6dv
uf0SjoWqddUzN2SPY9fag4MmbEnAvtJ3oK9QCYsYLhwVYE4D6R/K/U6Rp9Fr
46HImX+ZINeyoWCqex7Vf4Cw4VIu5M69dzv3zwArmqHNxuUDbO9Ji+YwvIxN
4oEpUbaF8COmTPCB4HUEgfuKj02KoYDhjcbV2xb4o1PSblL3I1hzK28ci7BG
S9I2Q1+lMjCJH5R7yXQH3ytUnfbmqIKGsKz8aV8HDKy2aZr5Ug2Gk7RVr73O
2Hz0T0t1HUJbTOJy1wE3PCn2c/52US3kfczUEdO+j+ImMcb6MXUw3OWcsvDC
E+WlO7TXHtVDpwAn8zsTb1QJFFtSUmmEK2bfBE1mfbDJ1N84encTlKz9Utt7
9gkKHzbL0ltugkM9mlrXtj/FJNfpixbvWuCf9kfjfLYgtJmVTVPuaQdH3ufC
DukvcMAp8WVYRAd8+qpuMaD5Eks3hxbfv9wJgW+FLwddfI3idseEgjq6YPiK
OjvzsVDs5ZV9HOTbDbNNx90Y2MPwtl94ttmeHshdv2PxaiAcy+R+WmY39QCx
y5g351ME/k0ObWjZ3Qvqka3fruVG4gtujOi36wVDuapIr6A3eKvRd+np1j6Q
dOXrabz+Fk9ddRdWE+kHA703OgEX47Bwy5HVLJt+2C2y/T1BKx6LIniWClP6
IfxyT/qGQgI6qh4RebyHAO+DbCYy+RKx3jOCLGtIgFMWdm6s4YkYuKRfdTOA
AO4S78+6BSah4/f9jYe+EMB0yx1HaYZkFJWTdEuj8z1mkS0/eB8mo9/0svkz
DSKc009V3rKcjFI/7Rdr7YjQFHfpQc+dFBxxXKZcfE2EYrbgkmufU7DFdp5b
uogIZ4Q6er3o/Xtq7TrhSj8RaiPVw1maUvEio+O7T9+JMJvomEqTT8PweHbF
2ywk2Eohvv2WloZS7rc/aomQoFKwYvMKVzqmlJramZ0kQXdm9+UBbzq+ZPz9
kXSeBBLPN+1ynknHgKbvKlzXSTD19RjG6GZgaSjVPfsWCbKP/R0+9iED7T9+
47V1JkGbeDDTjp2ZaNrcMHXGgwTjfVenmO5m4nYLmXm1hyRwfbGkut6aiYQc
zcCrj0jgItv9p00oC2vMM64+f0CCUVMukfP3s7D+Z7FOrzsJ5JoufbvcnIX/
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
EC0=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5614#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1:eJxcV3c81e/7VimJligz4tOgFJGiuEllJjIqJRmVKCIjDSGZ2Xtlr6yD7HHb
2evYx3Zw7EqJrO/5/fs7/7xf1+u+n3s99+s813VM3+z24+00NDQn6Who/u/7
/39+w3c3zxV/hM8EzrxCmyWpxpI02+lCf9haN1R8Z30IMu7GMmX4R0KLbFrN
ythxCLHQH2r9Fgf091QZXMxFwMbsgPmVyGT4EcmpHnBfCi4Txq+/cUyHtgsv
u150X4eTjtqxS8JZwD8oELhGuAmmThcnX0bnwK50/T2FOuqQYfzIwJAxDy4q
mW+U296FjynDg++tCuDR7ben5E4/BMYnhRYvSEWwvVlJyuSSPjTwJMWMS5ZC
Ns+Hpmfxj6Ge8buWbwQC2aHerezuM8CFo//818pBaIWZbKXxAsJWeddNblWB
92rqix/7XsHtRU+DVKtqyE36TynZ0gqq+tsJ10Jr4NkrxbrmNRvglZdtn+/5
DlM3f/oVmbyH2XmYz/5VBxrOPcKf+e2hVqTB7cqeBsivkvF0TXOAwAk1BsZz
TXBZ66JI+5ATXKpn191zpRma0yJXbng6wypdEZvU9RZg1m1U1lFwhcEHVo2D
x9ugKVC7z4/iAVctDP2ymDrg6n+lBYR+X+DmUtt2zrUD7m5LGw8f9YOgmrko
2bUOYJznobk17w9Glflzf/qI4Jkbbkc5GASlCtxc1tc7wW4zr+aSQDB4XRH7
dDujEzqddMb/uxECYqWa7yg2XZB3m68kwCUMpORdj7r0dsER3i4Jm7RwqDJe
P6Ys1g3b7M6K5hAj4N0CRezIdDcUdPqPT52MgkDLFfqnAr1QMDTfPb8QA96u
qVWzFr0QsJuWgcU5FtpyRQSuFPTCxjJPCCNXHHA397ezifdBsL8LKU8hHmbT
vq0GWPbBW70Pk3uH46GUsBmZn9YHddZhtHavEkBqsDqYyNQPfsunEhZDEiGv
YepgmXQ/FL+V6/HnT4JhK2f18yb9MBq+1zOoIAlSKu1W+f36oVlbarjuejIY
hGYyRuX2w53R1YG1tmSwsEnZ/rmrHyQSLQJotFNA3VmtbPZnP+xaT+JIHkkB
h+M2PoV7SPA57L/QKsOvsK37/qWf3CQ4U4jK/01+hUppe6aR8yQYb+h7yGGW
Cn6Ur3TeMiS4v6tUyOR3KpAenDH6p0SCQ5Nrg71WadC6/yQ3920StN1738O/
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5636#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
DlPjQnpc8uloe29NommhFV7MF5ikn01Bdkw1jX2DcJgYGV/9NRLLXYqqpdLK
Yc5E/ebBH2EYbnLO4EtAKbPfX+D9ryMIa210OTLe5IPl3mOhbfc8UIk9wz/o
SyKo+xnZ8710gtQmycdrTVFYGP9hY/e+NFjTP30nIrwRTZLU9vaty4DsWnga
daEZiZbRpjunM6GONw+VG1uwf+7gJuGiXDiUd2FBP7MdX/40SVU/WgrHT1of
pSv14FLqhnGtA2WwrGRhIZ/Six/+VJHddhEgamNAT97vPqT7j7x12VgBTELN
IkcP4tmL6uN2U9Vgrb4s3n+ZhDwPOq03DtfAvSWF7KsMEtYZnp6VaK2F7Fy2
b76PyFguMP/mWEo9UP5I7uwKH0HKsHiXqwLCPjueoh0ZY6gXfWmllacZqIsF
2nN7xvF6beOLGo9mqCq97UmPGketggsGgTda4MK2BL14Jwp+Hg2T+PmzFT4G
3mWhc05g5IVtj29da4OOaInLncYT+Iaf+t+z4jbY7Xdo9mH5BJblv86LNGmH
BqHNJ2quTmKU0BUz3ep2+DQu90o9ahJlRlzSHm3qAG4pyde2Y5NY+nH8iHVu
B/Ad6QhXuUrD5SbLg3vmO+Dslz9RX71oyCervUaS64QeElshG4GGUz8ruVw9
O6HwD6z50WkolSm18V9zJyyVDTg5sDF5do/bIfW1Tthw6Eg9itGRn7xrm4Zc
FxyYfCVrdYGOUkPfZ+btu2D2tfVWRyM6qgqUqh7O7oLOn4qnKPZ0/PjC6C5j
rAssz//Vi/Kio73Sq2kWNiK4SnbRc1/SMbfzw3qvo0SwaR1Z5o+ko088PeqK
DhGoOtuSaVF0XBmTWbruSITfyyXO/8LpOBvUIxEUSQQN47hF90A69hzybn1d
RIRLbRVXbnvQsZKL/+/ldiKcDxIxy7CmY8TtmoryMSLEWJ76eO0mHX/Y1DsI
zBChz+4F2CrQMbls+f7970QYFYoLYhGh46ncs45xv4hwqLs0h2eVhnfePjia
ukiEgrqb4mmjNFQ0raQ8ZvpHPo1db8qjYWBUuPNmZvwmXn8puyc0NFSL6jB5
R4SH0oIPmy/Q8OH0CfmHo0T4O5ZpUctFw/ubzfhFWolQWFyuYD4wiRnPt2q4
5xPhhr9IEenlJHZvcMx9GkKEfNPXwlxMvap4VrtY0IYIbweKC3avTmCM2z+C
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5658#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5680#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
11ydHCnAdR1xbgfHdvxPJprsaViIHx7/chb62Y6rrC/lr1oUYXXxfzf8ljrQ
6s+fx72eJZgSpcT+Crvw+9untfuLEG2rWP5GrnVhoqCqSSZvBUq+r7z063g3
GlrG3KvWr0Dlz4dWrD9044B+xv3wyQr8LizGMqTTg0+Lxih685XIZvH0X/Sr
HjSQmBVSFq3CNwMHH/kV9SBp6tvxWYsqlAmMXE9g7UXn+so4pcUqfGqPfwux
F3vNAh0yZ6vRUeDrb+bZXvyQqnO4TLAGdbM1wkz39eG7HTCtblSDFG+BiZ33
+3Dikn7X2nANkmXPMn2c6sPVZaoO06ZaNNSeOOZK149eSr4q/9HWYaGnV+0V
/n40rXmg2nSuDs/6fp2xe9iPUYM7L2qk1aGJ5hITqaYfb0ZOTK971iM1717P
R4P9eCPYKOtiXj0uvfAiVX/rx/bj0a8SZuqRfd+gQzs7GWUzBIhfrjUg09k9
Go4iZDwUdUmIz7kBD9nGbw6cIaPJl58b8YkNePHKQZ/Wu2QU3a3E50/diO9r
NAnaj8hIyZwoI59oxLUOqY8hVmT0EdCQZ7rXiFXpVbYEJzK+KVFsOuTRiIfJ
lVt8nmRM/bMa9TexEXMODhyz8idjoHH/RkZrI97pJS0YviGjmJ4Up+CPRgzY
FfmM6gMZ3d/nqOpyNOEVXdK3y8FkrDNmXlSVb0LhHssUsc9kjE7N1vzvQRN2
1JjSlG5jfHp5+YJrE87xvbNeCCGjTs9DcZmIJrQ40+1d8omMAr94wpqKmvBe
+IOJ4++3/bXXFKz3NKGbe941uUAyfpzSOVbwrQmLdRbfTBDIaEOl4kHDSMIM
UlaksPt2PoKpCV1HSejXauu6y4GMVH9f/eSTI+EBWfcrPhZkLNOS+Lp0g4R/
rbgkPuuRMZ2fy+a4Pglb7UMJlzXIGGpKudltQ8I3R5zT/C+R8ZPlhctTniSU
CbE7bCS1He/Gp0f3gkjYx/TxWe/R7Xz8/NTD/4WEPwuuao/uJeO3gIHuK0kk
vC032UDc6EcG/s5EuxwSHjkx4TIy1o+PAp+3hxeTUIAty1Kvvh8P3nNULKog
4Zm3zXkyaf044rN3d20NCZkvdb8zetuPD513PyisIyF59rX+nHU/lt2P9grY
xi+1Z2Jrb/Vj2ITS0tltfYd0pq1NsX5MehIqWobb+iY6En67+/HsrTMre4pI
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
a7G324dBInIJOSxj7v+QrUUt56XTXiZLSJd25Z/hdA1yHwsbm7+2hGqG15iv
fqxBc4ZPO3qOb9dfSkRgxHI1vuyfcJKcXUQqq6O/PSKrsI416aKc+iLSXnX8
qK9ShVKHm+4kCC/iDk8JWvqNbd52NXpv1t8F/EY3d6rlViW+olHz/JKw/b8d
93wF1BUYJ8QtdXB6HneylUG6DuKFYyKZwTnzSJ4+dPN3Tjm6JEavVrlunwe5
Q2JgVIa3239oCDPPY5O8FZMOqRiHNnxlLQXmUPxqx/QLwWKU3Gku8H5mFq+d
EXuv4lWEY3VHSI5JsxgqFGVx5lwhnhaRY3snOIvHLEjvRUvyEDRvW2qwzmBy
t6xgKE8efj+YadjVPI1MeX8uynvm4s7lFX8xn2nMO3w1T/cGES9dnTX3XJlC
aYl2h97vWbircYfYv8JJdHvYrvvVIAvtpeaG8k0nsaj8Oc+V2Ey0tb73+DH7
JCqwSmqOm6fjGi3tzjIbCnLacgemiSRjgO278BKuCZTneJbhwZeE3h37er9W
jWPOgYXxkKOJKPTZ6kGi2TiOZneqrh+Px5M62rsZ88bwRRgro4x9DKZpKUy+
9B7B68/lysY/ROMB86s6y7XD+HeTfUjwaRSyj3PMt+4cxlccVsKV3BGowhPS
e9xnEAetnSRVvcPwgAtVclHFAE7YZT19++Mzsm+8dF/4Tca7gSX53euf8G1R
K52+VT8G0+bt4X/1ETcFrjTnx/fhvOymUJXQB1TXkaruH+xFg3izLAffIPSl
7JFLvNyD3sonTKJfv0HD47fumzp2o9b7c0p/+AJQ+Ln3Bk9yF9rZEjAhwg8f
N34ODdrViep+UaXat3wxQX2naJBgB8bn0mhtHfFGR7XwcL+L7WhXfrmvba8n
Gh/7d3JXSSueshc+wn/aDVUDWokiK83IPZRc88v3OXbcu2oYcJSE5naHjd+x
OOIpMYv/bmg04riuf8Z7ijXaUB3mvZdZizdEXj63UH2CjmkOOf2D1eimu0DL
omaCg1dk9gvTVyHDnYuNWY2GSMgstjSQqMBHXol+wZ666CcTx30xrxQFXsce
yDO5ixNhoR937ixCO/0OjyDlW2jyS4j52p08zJls1ylXUEbNixYOF+Oy0SVK
t2KuRh4laAdf3htLRdbXjnY/vp3Eq6V+7C5OX/ETVz5V6kMOvByfltDIG4aa
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
j9V74Dc645ScHCJ8k3t05q6uB/qZhJRrBBGBp+ShbDXFHYdVPGkLzIkg/bDh
6Nwud3wizb1nXpEIOz5/UXM56YY29kTh2ekc2GDwOP7QygWZL011NebmwMOJ
HTJGAS/QDnc/TXTPgYZT5vzKyc/x6J6gbMKeHBA73X+PatwJPd0P8MW0ZoP+
q5FfhC1HPG3nenAuMBteTaUKKHM44smngavSO7Kh5fWPqlJ1e+QZXM25U5IF
zTJ9fBzWz5CTWjG2/2kWTK7Vdn1/a4dGGznVHrGZ4FaRccCoxwZFRP60PlhO
g1alTNfsv08wlcLrHXcmDdR85CrGLSxQo8oktN4jFTZyhmvUx8wwovp2Jy9t
Cvgqfsokjz3GhV1zl9+cT4ZV72KvYUtjXHaVy9V0SILz5/u7N2iNkMBXWfJg
MAE89x4sE1I1wBennp8aZUiAgzpM13dT66PNFyt1aal4ED+6qHnDXRcZN7/Y
DLvFwY4koZ+rpVoYw7HpZh0dC1aeLnENbncxRZhfUxtjgP38J/1erdsYSxDm
NFyIAj2CEus+rVsoM9VErOWKhL2Vx2Yrt26gTXq49ZhSBCSaRfLZuF1DC80B
8Z9PwiBIonPxuIwyfnw+JqYS9Bnq2nxER/gvIe89mQ2+rGA4oizgYaZyAZkI
0Sa1zR+Bb4hOXeaOPC53CkU9m34PRUOsLQYEGZwxPETj+CcIAhlYOzNFJTHX
49BDfv43kGL9h5wTcAL3OoZ9Z7/2ClwXq00WMwSQUy6r6bY5AT5+THrzzf0w
dp4Pkzfx9wKHffIMf73YkHnWsLHgiiuICm5yB3cxYo2u2zn35/bgGSmiZzKw
Va4fKVPketsC4m/XooD2TDnBN4FySf8esH2svFrGUln+d8hS5V8G4DzDNUrf
w7fln9uvV2iEP0KiyGPHDPr+8qgo62qqKBvMJhZWPjb/Xq79WLlg0NIZqajP
Rp85uwPz0rLogiI8MHA69lig8n5c2HRaIbv7YMP3Dp+F21w4WOQxdF7fH0vX
1V/2xx7DTZXHtyQVAvBTL3/JDKMIfmD2ZWLdHYTCvN/Vn4iLY9NLLcnra+8w
8phalJr6aVya2je8NvQBw6w7zq5Oy+FHnnsBHZWfsOxthDTTNwXccUTkT0hc
CPodC5IMy1PE+9AuvsMrFPOIjfWWqZfxFkFcr0TqC6LgZyPzcyrosK9yxnVn
FPL9bLDO61HDVxfuppubRyNv8VG9KnV1/DrbzRIuEYuvio7XHn1yB2NKg/bp
7o/Dqyfpv5pH3sN03zQ+o+U4/EQ1Qf95VhtrEmMLy6Pi0Zpx5PFS5UO0eVL0
pMMuAVsKdzp3J+qjfdjN+MTLiRg9Hi0kt2mAd5N8mI4MJeHP+7xsW0VGyGVy
PdM7Nhl/V1uW+As/xsnsu3jSOAUP2VdL/Ygywb6d2a8GR1JRqeDueGiiOUps
UmX9+JqGj6la3bi0n+BHenf/Q4/Tsa3DHUkHrNBJKt37b38GNh0fUz3Yao1Z
XieZbV9lYnrMf42X8mzwbakPm8ShLAzOkGeSjrLFPyVZbsHlWfhWfcezdedn
yHSNrXN8dzbykly+MZnb47EMXz2hu9lod6qE2u6+A161/WevP56NEo+zOKIu
OGHuLQfb08dy8A+NxWCElDPq7Tz+oVovB23WF5vuCj7HnP3u7X3tOciwkVuk
s8sFpVMz9l/YQUSPOYOi1g0XDMtXrRY5TcRet/qdmtOu6LHf+b6fPhELZ14K
One44XNrzgyVl0R8peN8t6PIHTMDby2bZRBx+hjctL/pgQwew5k9bUTsqR21
FqnwwIucTrNeS0QMNKFyIol54s7jfP8Z0+dirFm4ytFwTzQPsPez48lF8x+J
Ot92eGFND7k1+lQu8p1ij/9j4YU+72rUKQrb2HquhqndC3NnxmgkruZis5bO
+qS4N5a/lzrvoZaLga3HBK+88UaxXaeb6m/l4r2Ktm/rM974DAf7/27LfWNO
5Bcr+GCZWSoDz7Vc9Pet+KLx1gdv8CUYc0Eu7q96EOM15INCRhfNV8Rz8dTv
kmAmAV8cS79F9Yk3F/NfiJ/JN/XFH/19njsYcvFwsb4UJPriruXpItnt+Lym
mUUsxnzR2+HBlHArEX/rblRssRAwUzyO2JlCxLjhmIz87X796KDRFXFvImqp
3im9b0bA0tiTsgr3iFi1vqsn4xUBva8yv1kTJOJZev29dvEElGcQb76zmoPh
nNE5Ftvzhy6HyoxOUQ56lOP1B9vzx8w7aRUalxyMyjZLYmje9s96feDa2Rzs
imH4dnp7/lC427Z06kc2Tt7uio2vICBXiMZdYnI2sq33Jx3OJKDH/M/7XTrZ
aGG8577pJwJ+Uy8qf0ufjQ8vqAYq2RFQMio5fzYzC5c/Wn52vUrALg6OHyOa
WfhrTtKoj5WAu/Kfwsx0Jsq6q9tw9fviyqhF3i2eTNx6pU/Z+347fxXnStee
puPgq7DlU3M+eOnaIuFcQBoy/ed295uvD9acaaaQo1LxBL1F90sOn+3+KXf4
THoyxvHe9nfi9ca4gdslTIlJeHld76TpOy/8ebHl0cPPiZhxrYZsvOmJJIXI
0DiDeNwhJ53YlOiBF1482SxS/Yp/Qq2Zz66544GVY6nvJePwOjFGL5DghjuL
hV6UTUfj6vXyoqMWL1Ch6JkX9VoI3op8Xfnx9DPs3snmoP3gEwbPcpVLi9ti
BmNtLF/+e3z93LHQmc0anyTv0jzv/QqDf1ySYZMzwZ1BYv609fexI+BteMTZ
M5je5T577MptKM/c6OT9JAmy10NyXJVtoPaltwLhv5uQGBbwXPGIL2RJ1ww+
GHsEKa3H1B5/DoEVx52WxRsOoKv+ZTC9Kxnaazfl/vS9gst/5xW0U1JhlNPi
Q+7vAPAfqJm29U2HFNf9Q99E34JHu7aA3NcskFR617HW/w5Sxf75bbrlAtG6
vTYyORgCn+o3qfqUgo9aOa9cYTQojt5YY35dBgUjlTeYbWNA40Idzbf35bD2
X8SddrFYMHty/uCARgWM6r4rW8iKgwoBNAs2r4I6mqQIYm8CXBWcTD8YXwfL
rvSyt6LTgTIx1kQtVw+Ml1f3loRkQNR70wtdTfXw22KfW+e7TDiva83zfaUB
9LS6/4zVZcEhJvHBZBkStMknuN7qyIECTv7IX8ltkLdeKvd/FVp3PNXvF29R
RGYo7WWUUZoqx6iIFMqMyk4l2WRvWRFRoozI/GZmd+xxr70vrotrcy+Rhorf
/f35fj3n8zznnPc5z3Per9fnGn8RJM2s37fd3Q679+oG1CUXwfu5Mg2r++1g
dNFVYkmyGHosqjPJU+0Q2OzsfUC1BD7601d6v3WA1znTf/eCy2D55N+9j8a7
IMasjhzCUgmciiz+e/Z3Q4Kt1oZ19UrI9Mr1mtPphmJnjbOasZUQNqH3oL6p
G2L+k+gLFa0CA/brsnUfekDM9LG6ilI1vNu18CS3swd2yaZxrYZVQ5/Z6QNB
W3oh4d9XsnJPNRy9/0t/1qQXVozKruU8qIHdoz+Vifx9cGbUlhZtXQtZZDZl
T7k+yCcf4DUuqIU43jqjHxZ98HWjh2zwj1qwi2Kt5yrqg5Ui7jaiUx3crC28
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
5pYrGQT5tTraXvgfuMwDUA==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5702#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", "\[Theta]", "\") cos(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
ra/g1V58d2BZf3RyHBpFyc+3+fSidegS49jTCWjnrEwI+teLu/zWZ6qtJoGx
JWRkZ28fCrWnswtmToLJA5YZH3oSigX/qbUlT4LeT96p3+dI6Kd1uchOiwxX
7Ertq/xJaKJNN/ntJAXy9KYSxo/2oy4L0e7zHQp4mNd6HYJ+rJt3VznvTwGJ
axfjte71I00rU1Z3c1/Xr2WQGl/1Y2R5rM4v1imYusiZviu7H/XozuYqyU6B
ecipX5rEfozf7WZIC5sCz8N9OvRfNv0PyCeeK5mCLWtf7tv/3uQfFd4Z3rEp
kDVznl7dOYAs15k2ijfr6m7ugmYE2wA+3KtQNX+CCkY3tc9c5R7AifcxxwhX
qVA1Un/y0KkBtKCLBREzKuTd6TuyV3gAlwMrtGR8qbCsObVX4PwArgiEfB5P
o4JFaNBxmwsD6MPQM8BVTQX/8JV4suQAJprk6CwMU2Hr3Ll5v02dY0Gk3PpJ
hV9+oSkmEgPoNqx+S5OJBv82vti5n9v03670ZpyXBq7f14WGzw6gscKTwQ1J
Gjz+WNThcmIAKZnPxfPUaOC/Zm1hengAIy6vMnw3oMFtm8viqSwDyOoR0lhr
Q4NMOnXv85vz3rjIV4aTbjSwv7vQdmy1Hw+EDbw4ELx57iXsevN4uh+trohu
RMVurrf1StYxUj8KCPx8kZZGgxgZmQKo6cf8fbL7L+fQgFzZmNKZ04+H5C8t
WRfR4CmDsONgTD/2LolZn6mkAR+j9jVDj35sjjDbcCTS4Gb+dxVLs03/vzml
b9XT4G1zV90WjX6stjLvqWmkwSnR2UP85/oxJOLGm9omGgQEJldPsfWjIbhH
3dnUgYEzSnIrJJQ4o9rg3kCDbWMuanIkEq4F+ZrL1tJgbuSP79xnEqYmW3dE
IA00j3ARlSNIeHG/k6VbKQ3OLbf3GViTsOmxZMf2fBqY/LP6dP4aCYsMBD/w
Z9FAdZqk2sVDwuu74ttpm+c86iQXy2zyce+12/yKr2hAd1mY2aW7Dxd+v65W
8KHBbN7s8+jMPtyo5PQUMaNBJZe43QvNPpROf82qeYcGDLwDKub8fVg+b2Ko
fJUGFzo+bliv9aJ4Al9TzXEadO3g+ENO7UWXB27pQk1UULXteHngSw9OFqrd
VcylgrYdp5ZHSQ8O17KcVIqmwtnPLX4XfHuw6Df1Ist9KlBddUqTeHow2blV
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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5724#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"2", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
I+nSxhtLaKiZv+4ZzlyDsr9vGBD///+/uO7KoaZqTM67fwOLaCjiT2u4G1CN
D2KNaCV5NNw1782qp12NEX1p4zWfaejC1cO2b281atS9Ve9PZuQ/pnAtubsK
rUM09P9G0VAqevvLXcFVKJrS+Ur0HSOeJ5rmJtpVqPTc+9bdNzTMdWzj/ryz
CuvPj9TH2tBQJvBb7WJTJQ7IPOwfNaLhUdWICnWPSrwswtknpk5Dr4fsbuWK
lXh9UUfp1SmGvckGk7QFRKuz5+o6DtBQcUqU85w5olpBidaxzTQ8G3Bw6Bqx
AuWGvTd706bx4qa2/I0XKvDSVROFueZpPPr9jUXYgXIMdvyZ0uAzjb9uHhHP
9f6KxVqbY5QsprH0T05N+68ypC21x9YoTWP/5rh2t7pSpFXafJyen0KVLs/l
r3eL0Y18bvPs6SnU3TpBmKn/gnefOWwbYZ7CDptt1xbFv+DjXlbL+fZJVI/d
n826WogiG/7MWhlPon4ZbUHbuBCXHt6aoR6eRO0ALuIQoQB3/bBefk6bwIxp
kzCV0HxcMZaRl34wgf/5p13SXs/DQwlcdMOjE9iRnX56r3keCtzRSqiaGEcX
+bszAmdyUZNie+Gi3jj+x7S+8c1gJv6jCwJVdAxVDsaeDez6jL45T7dnj4yi
SM2HQuXGDCTKnn7FEzaK1BsTHscxDTlbMrPbV0fQy+qpVmnFJ7ylabJ6MGME
abYOou5VH7EsM2j5sP4IXt60/ti+MwWHDLL9LxUM4wdhjiMzg8lo9e5WwXOj
YXzns/2NzHwSqqT2fb7PMozfB3TVhg8k4v7+/j0W+YNoZ1X4qto4BncU2lwS
p/TjwHGLsNrKaIwoYDY9xdePwSxX94Qci0ImEwL5uFEf6hAeCL3bH4628a8L
pQbIqDxZ1no8JRSjA3f66XKTMaI3eNlXNgQbApXDExhz/k/3zdKXXALRyDRN
fLG6F7n+0s+zn3yPF7X2R3Av96DOr2XP3hl/PLLW9jNJtAd5DSOYf57wxm22
A2vCAV14QPvtU84/HsgjH9+qWN6JAotfgrH/Laawm7etz3SgFc/Crf4pF9zI
/eyKmnsbnnblfd8m7ITDAkZ3blNakPlvR6t6viMG2MSGnRZtxubT2S+KbO1x
RZJevO7YiMPbbBu9zJ+hZ2JARVtDPWbrHNgj984G7c0OdzWzE1BqJEPfsu8R
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
+x+Pfb2A
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5746#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"3", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
f2rnFxU9f2+CQ6j8/wBRkuM/
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5768#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"4", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
Ace7BPgPL3ejjBsfq5xLHfqrq+PZmC60OXuJTlehGiWnylyyZ9swPSnzD6d7
ARp8U6/PCq3D3l2cp72O5WPDsBzrvru1mFvrki2FuWjSGTpsebQGP91w8Wjk
z8KhrTeIRXcrMTT9gRnrkUTkfVM5NPgrH59IsgQZPrXBlea10H2HPLH6Y1Kg
0h1t/M8xzLjx3BPcv/hX67afAejiX8PRK1YAPHR3Hni+hondhv8UHQLB5/Jy
/uHfwfAwZfdTWd8UaGkqT3pdmgiMNh6/JQSKodG8upYHk+BXUJDAK/MSWG2v
i4rNS4aX2qrzg0mlcP6WR9p7o1SovNXucnm0HN6tm5lJH08DjQm36LnxCjBy
yP9zui0Nmk9JM9P3VII/n+Zy8Hw6fHXWnKW6INiltH7WevwZ7P7eyS3lrAb7
tFcpuzo+Q98rTLC2qgatOhzr480AOwe5mINV1RBcKsbz50kGiIRKuQVtqYE1
Hr9/idEZsHaSrXBKpgYC3W9WMNdlgFWbv9R20xp4/6j+ijUpA3xFXAOnAmqA
Xuwz596hDOAWzJ17m1UDmw8Nr5/sygBLe9mN6doaOCqZe2WpKANsJLP3bGuv
AQZe3u/17zLg+o9FOlJHDbBP7Xg0eDsDyhVn9B8310D67c1jr1ky4Gx83pnS
4hrIy1RK217+Gd7TdQm3R9XAmEB4do72ZzAvmP6YaV8DSrL1YwRqOmz5IX/p
/s0a8E2dHGx4mg6aWozZs2w1YNzw7GjveBr0WqpTHgxUw2jL1On41FQ435Ca
LX6pGg6HzvpXpScBZxJvn+XNSmCxtou40ZkI702W6Z/ergDDvJ97Or8nAKHB
bPg/lXLoMIjVP7MjHg7fG+Ms3V4KGg7y3hbJEaDtKJnDXJAPua77tTQiXMH3
rHLSo81QoFZNnfjbYwvm+62onqof4FWobNORlMfw/bf1TqnO1yCe62Qcu2CA
t9Q4dKVaHPDVa9ecZikf3FETJnuOnIhbKoKanrvGYemr6S354ZX4IraYK7M2
Hjsk+x5dX0a8HWglTdmWiEzJZud9hGqw36nnKIdjMpY3/M7XDaxDRU2bjtPX
P2PbkmJDkl0zCiV9zI95kYE3NLiWmou+oNiSFMd8eCY+spjO/73YghF/6V7I
DWRj6/B/Mz7WbfiaceJMHHMeGnNNLjGd70JZ4x25pwPycPGFiv94fxd+S7n8
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
yRC+56TUvF7+LNqgE3fmfwNg9zo=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5790#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"5", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
JkZ9ShI1Li6EJYGpT+q/U6Q+PJGeXrE+nwi0xxVM9/37cMuEpHbt2UT4toN/
Ze53L7ruurBp5Vc83AcVE+ukXnwam+oteC4e9hFv/9tzrheD6s/csYmJA2Zn
V+Vwnx7UL0yqaPKJAem7WpS3Qj1oZu/a7Hc0GvDAhbY9Wd2onPJpw43OKPDC
s3L22IVyL+rH1sUjwOGOY4mtahf61+we2t71AdI0l6KflH1D+4YGwWGfMJA6
667I+6kTbee2bNuzEgJN0d3607yduHKd3lZdHAzh3ZQnZ107cAufeOg79yB4
dZlDTPxMO2psyIwgagaA5OtO3+nYNjxpbMax9d8bsNy0kFC7TMYkt7AG5sbX
oF7Y2v5BhYQ556fFOUO84d8bK6bAvhakjIhWbXzvBaHcmw6O2jXjYbcVrqDP
HpCdwl286NOIDldolwxOPAcDpTJ+A64G7CUXjaeMOgF9+YqUyWsCXlr7Wvas
3gFeBDyl3GSuQ0mx9p3H+x7B1+S5A4SnNah455wvv8hDeGsbMdk1VoV9kdcP
E6XuwbWiaaYfBpWMelFDHvpaw69j2ce7npajjaUr+ZiuJVxiZlHUVCvBQdP5
y61/TKGw8YMeje0rWncFqfqqXIHZQhfa7bo8fPHgS5W3xQVIGfFzfuOeg4T1
NZOvBC0Qy3q3tvVhOgYRC0WnpJWhroeiLtmbiCarx698tZOGYLdmYsOzSDy2
fHm6SFkIftauFnx188PLU//tmVX9o8LpF3Ne0bmvbOaNfkPBiWjF/wGZDAll

               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5812#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"6", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}}, {}, {{{}, {}, 
            TagBox[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[Tiny]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$5834#1"]& ]}}, {}, {{{}, {}, {}, {}}, \
{}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         PlotRangeClipping -> True, ImagePadding -> All, 
         PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangePadding -> Automatic, 
         DisplayFunction -> Identity, Axes -> True, AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
             Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
             Mod[
              ArcTan[
               Part[#, 1], 
               Part[#, 2]], 2 Pi]}& )}, DisplayFunction :> Identity, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> {60, 60}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}, PlotRange -> {{-1, 1}, {-1, 1}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {Automatic, Automatic}, Ticks -> {None, None}}], 
       
       TemplateBox[{"\"r = sin(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\") cos(\"", 
         RowBox[{"7", " ", "\[Theta]"}], "\")\""}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          
          ItemBox[#2, BaseStyle -> Directive[Italic, FontSize -> 5], 
           DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Italic", ",", 
                 RowBox[{"FontSize", "\[Rule]", "5"}]}], "]"}]}]}], 
         "]"}]& )]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableSpacing -> {0, 1}]]]], "Output",
 CellChangeTimes->{3.8248186345243464`*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"97aef095-161f-4267-bf83-eb70fe9c6da8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"N", "@", "1"}], "+", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}], ",", 
     RowBox[{"Pi", "/", "12"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8243824073299026`*^9, 3.824382427649118*^9}, {
  3.824467664401264*^9, 3.824467664820445*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"341b7ec0-614c-4965-be56-771d27633b55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "12"], ",", "1.5176380902050415`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "6"], ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", "2.414213562373095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "3"], ",", "2.732050807568877`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "12"], ",", "2.9318516525781364`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", "3.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "12"], ",", "2.9318516525781364`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "3"], ",", "2.732050807568877`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", "2.414213562373095`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "6"], ",", "2.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "12"], ",", "1.5176380902050415`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"13", " ", "\[Pi]"}], "12"], ",", "0.48236190979495863`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "6"], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "4"], ",", 
     RowBox[{"-", "0.41421356237309515`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", "\[Pi]"}], "3"], ",", 
     RowBox[{"-", "0.7320508075688772`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"17", " ", "\[Pi]"}], "12"], ",", 
     RowBox[{"-", "0.9318516525781364`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "2"], ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"19", " ", "\[Pi]"}], "12"], ",", 
     RowBox[{"-", "0.9318516525781364`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "3"], ",", 
     RowBox[{"-", "0.7320508075688772`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "4"], ",", 
     RowBox[{"-", "0.41421356237309515`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "6"], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"23", " ", "\[Pi]"}], "12"], ",", "0.48236190979495863`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[Pi]"}], ",", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.824382428262248*^9, 3.824467665118148*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c691e877-0e21-4e3b-b923-2cd5d92d82bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.824818303297821*^9, 3.8248183036216173`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8504e7b6-728d-40b6-a264-5269b1a62ae2"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 15 Mar 2021 13:31:43\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "15", ",", "13", ",", "31", ",", 
           "43.858598`8.394629722178564"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.824818303873581*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"2a963701-5ccc-450b-84df-7f101dce8766"]
}, Open  ]],

Cell["superTrig09 HW labels:", "Text",
 CellChangeTimes->{{3.824818306460272*^9, 
  3.8248183113471746`*^9}},ExpressionUUID->"8f974afe-1f35-4136-a707-\
7ab871cf0f3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"a", " ", "x"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"b", " ", "x"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"part1", ",", "part2", ",", "part3"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "4", ",", "1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", "4", ",", "1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.824818312715335*^9, 3.824818383396884*^9}, {
  3.8248185055344048`*^9, 3.824818514889531*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"9503d58a-839c-4828-bd9c-38c519b23629"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
jZrurJlfMnq/c0SCcE5GbXqWJ+zDy5Ap7UmBIqMMaXY9OvuLU4aETU7dadQs
QyEuUdfVVpYj/Pu3MzcflKFj3/nP+aHlKFBYn249WIYKNj7Osg3+icrlStQW
NJaj6IXRMjZvKtElrqR+xIcKtJ0/3q+sU41Sq+bzaCq/0VgKSlm+n4kKrvSl
8Hm1qHLj/sU3rJno++P0yQBGHfrwcdfd0idMdM/ispXy6jp0LGLTfsciJrIY
+jQgblGH0l7JldYZ1SO67qvKssI6ZH99gvvqTAO6r/vf3r9BTNSjmrJQ0L0J
6a3q3GewrQHlxSXctPrUhCJ0VFbMHGlAgWvjmOk/mxBtbZ9BwLkGpCv7PuSc
ZDM6rl9w4E5AA4oRfaFEBDWjUxZSWrOjDegMz1bTKbEFbffaHrYktRG1xK6y
H6lmI6tFQ8mBS5pRllDSsU9/2AhvUD77UKUZBVzau9tmKQclVJkqHTzQjAw3
mAn8suCg33uNXz62bUZ5SV7+n7gcNKlZYhKV3Yyi0seybPq5qLXNW97LrAVl
nOma73ZrRd0huSu077PQWim1WwVvWtHHZyJtT7xYyDf/Vuf72FYk06sh8z6E
ha6vFSg3K21FBuoez5xyWEipU9a/QKwNvYyQtSiZY6GgS6brw/3akMHOb8Nu
j9nIyf6H3omIdrT6wN48pfMcdBCNX1iY0o6cu1tcvR04SGzRFpfSvHbUGuDZ
UuPEQUFp0d/2cttRll/mEvE3HJQ15qW6amUHGr8id1mpkIP+PLSU6AnpQP1i
i3/+leOi7wb+KpEJHeg5U+j6KyUucpGv1D75vQO9emjwR2Qb9f6bhx5XNHeg
mBhbpzgdLtpMUx5MWd6J+tSf3Ha9zkVXPcZ/3w/sRGsyRzMys7lou+WW/m1x
nehCw70ZR4KLJlWuiPRldiIjs0Q/2XIu8vzJxq3rO9FJS66bSAsXxS0oStNa
2oVEXg/FOE9xkT139tfUui7UuzzK8ShGIvWU3fz0HV3ISOSquZAYiYpME9cq
He9C0pYha6VXkKgtwD9AzL8LlU7uXP9LnUSfLlSmFEZ1ofKUd2EpGiS6oS5U
+SitC+VczODfPkSiuYYHjKHqLpThuWwwypRE8rJn79ZJdqPY5KQ2/ysk6uSH
+PkodCOvuCMWbg4kSvzB/KyzpRt9uPji5om7JNpnrdedbdyN6lPCH4c/JZFl
5BaLsJfdaCypxbrwLYnGhLln48O70c9ENlM1lES+Dj52WSndaOG/dlv7SBKV
a/a6VNd0o5qI/UVeCSSyjXvnw2nvRtmvlzw7m0IibKHuO/5oN+rGpg8vy6Dm
40QnMaR7UO5EUcmiXBI1aB/NllLuQcbTt+9Z5pPoVtJ8/qo9PcjLr0LmUTEV
r5NV455TPci3+fdSi1//y08aux7eg7j2Me6nWST66lIk8TClB4WKjux15ZLI
rPeWjAfRg/KcS388ayPRy6+/1aLae9CxjlcrV/aQSHW18+7k0R60Z7nixJde
EpV4qB38weCh1G+v/df3U3qae1nUK/EQ3B+hhw6TKCRv97n23Twksq6RGfG/
/U+lbrshPR6inbS3fjpGotqXb+7NnOShZTZvQzX+ksh+/KCr6DUe+pR6/CVz
gkRi1iM+0o94yAJr2fq//dC4ooh3617y0Nwh12fvpkh0UM04ems4D8VE/3Yv
mCYRGTCTdCCFh+S97XeVz5Do0XRCtj7BQ35xO/0TZ0m0/PzJAosaHmroWh18
ZY5EGT+Ff11o56HX90/r0+dJZLo9q/HmKA8tr1OPvU9xf/CFdmdGL7JOVo0v
p9iTtmTgxbJedFGEe+Ivxeuv5E8EKfUiWL8ycY5iotoBi9vdi3J8uJ/a/7e/
umfVgnS9XuQoedAkmuJ/EZUyxMle9CXfN/wAxW+Endb+utqL3Gc13mVQ8Wxz
2LCpxakXtZ1t3ytMcVVD4+4en170q0bHQ52K/6qm+8Gx970o+PaJp4jKTyhu
pxEtpRdVpKgoKVL5Ry/osFhI9KLmLQIPuym9NO/6nZOr6UVVbJ3Hbv9I1MJG
11Xae9Fbjs+2GUpvR+3Be+qjvcj4rV+Q6TiJliSFuR5k8BEetTfj6SiJUpcY
vDRZxkcZDQHuPiMkMnSafGelxEexeJPUnSESPdM3/+yox0cSrF9WDXwSrf7C
+Op2ko+MpHPXHOWRKGdFeoHvVT5KeLs44WMXicZ5kk0JPnx0SmObFI8kkb9p
Xnv2ez669tHlbw2bRJu/2g0UJfNRSoNu0rtmaj14lGNkNR9ZbsOCsmopPSWv
ZZe38tHzQ8FrTH6T6Og7CbuMYT6yPm6xtayCRBofTeq9FvUhHte673QRiRaX
1n/cadqHNtZN4mLU+hExuWelcKYPmVcft/pIra/ZhuVSYjf6kJGbirxiIol4
3acfkq/70GK1faEFUSTKFWo39P7dh5YceS3n/pJEX1650e6SfWjU3JGr4kn1
F2nFLJuhPiT7Y8AuyZXKR+mygrpkP8I7z2Pm90h0WXdwhDTuRxxcNGWHDYmW
uk8Fqlf1o3dpwjdXbaD8vTDMYDW3H8lN//pRvYZE828PCIgP9qOBObvdF2RJ
xI99eqV1wQBa3JnF3SxO+atYSOOF0QBKWZlccLyPi+wEl7S1Vg4globZQHss
F517mfG2gj2ABF59mUwM4yKLZeb6Wf0DKLk+6bt5ABcdVAxOfyExiJjSz58c
fcpFy3UU3HcZDiInMncVx5KLCp9t3OhTMYjo0y0XTjC4aN/820gl1iBKqHnm
5jjJQV8eCEjn8wdRDffeaqdBDoq2rxf4KzqEVP3k5jc3cZCr5ZMGG70hdK/5
xsODCdT9Sa3OZUfxEDIxNZdde4SDWq8csLtuM4xulNfPSt9iI/mPf+L2XRpG
NShNJe88G1l2fmwTdhhGw0dTj+ufYKPq/xZbRDsPo9JXm9qk9rARcbxHq/H9
MFJ6on/WZoaFIg74yWixh5HelzBXgacs9J9UV8HSkyPI/QleW3S7BTFCmGMv
zo4gyahf3z+eaUEJa4uU6FdHkPSlmhXXjVrQxI4P3iMPR9AD8Sd+EUotyNf8
7LGqsBHk53r7Z2xjMyoM5bR5tFLjBp+79Hc2IxWlBoHpS3+QrXiTbUhTIxrd
V6rZ5jiK5oSXW5fVMlHJ8VSdUudRNKD6H4v4zkRBdsGGn91HES8xZn1sNBNp
hl879SBwFN0TPOy47RYTedMWOUpljSKoSE86vYiJ1pZZftYaH0WleqzT4kfq
0NETfLno22NoU6CltltSDUpxWDB57sY4Ynev1653rUSMJ90u595MoIcl2acS
0r4il+B1R2TeTKKA7jnxXW5hYMB4sqHIaxpFsJ4pnBsrgOQj15sG42fRXr+B
zpSNNTDsv9aSmzaLvkSIe97QrYHt7MbGX99mkQ83Y+PqszWQZX+wMal8Fj2t
ShM3DKwBCJBpuNo7iz67HD5eN18D1Zz8um6VOfTQV/Ss1+9aGL0p/Zv7cQ71
PU5Y036GCbt+VBhXpcwhxTAd/aMPmHCf4VKVmz2HfHpTjJL8mDAT2PcrrHQO
3dBQfa5YwARGDlF5qmcOLdWMkF+7th6kha79bFCaR0fGHGy2cOthTwgUV8XO
o5ifrmJTOo3QuTlF43LyPCqSwY54WjeCX2F4Oi17Hn1TGPeYvtMI/P7HUTvL
5lH5+tEQ3w+NEIY0Hofw59EixkmlW/ON8PSWlWy6jACenutZOJ3WBF0yzTXO
VgL4gWxT/Xu0FtBoN31ZcUYAN9Kdc7+9rAX8k8r0ll8UwAkvgcijG1pAU+sr
pF0XwHV9jomnm7ZA0NV3nzudBfAJFs1IJLwF9HNPeOlHCeADIfsVerezIPlc
LS7dLYCnmkffGdZmQ+yVR/3GfAFceXFEQ7oZG8JuKAV5DArgNl3DCRYX2ODt
/HDo318B/JGE2EXcjQ0XQ9aGs4RpuNFJIfwNsEG+9tZ05AYaLlZ1asHu7RxY
0iz/sXkTDX8QPpo9iTgg1lpybPF2Gu6b11QVasSBfwOyCW77aPiNmSGG82UO
1IkWWtoa0HDe/Jo/X8M44K21JGvjdRpeHLT78MwcB1z0cs9euEnDT+1+xEsW
48J9k0sL3t+l4ZNHjyzFpblga/3jwkJnGn71hGzTrBoXtB6cXzLyioZ/lVmc
1mXJhX+p6TeyUml4XfIZZasELgxlW8sPZdBwesKhbyPpXOjOEy5T/kbD48M2
rriYywVm5WmF4HwaHnxIekXXby6k8OhVTrU0/OIV+ozeKDXfarONWmM0XCnh
dNu7HSTcHnqote0fDWd8Ziz22EfC07woizUzNLxwTeachRYJoVZDbjQGhn8z
4IyEG5NQHeTNzl+C4XevvnpJXCKBcyntT5oMhm8K6e3LuU4Cf1eTSLQcho9/
SWCG3CaBUa+o7roOw/lVuZunnUnYK5X/8uAODN/1YO91ozck6Lb2fNi+G8ON
9gi7nwgmwSxl4fe1+zE87cHUnGY4CfZGVt3YIQw3v3VhLvMjCU7ybjN/dDEc
70x2OpREgmdf/OIOfQzPNi/R/ZJKQrTXhGbhMQz/VKufueMbCSmWq06km1Pz
v3lg+r/9yRxlnWsfTlH/r/mnsi+fhMZi/3du5zA8eSbdtbiMBAls8/ChWxj+
RmzH3asNJKyoMRPa6Yjh80Oqge7NJChFOsmvf4jhytKLm93YJGhplusxXDGc
eV3925p2EowXDP839hzDX8oIHC3oJMGKLX230wvDkyYa5g/1kOD48EJUkR+G
D4NkML+PBLcjL7Iz3mJ4d8mQs+QgCb7Lv/yKCabi0226tWyYhPc9TR1v3mO4
/aG6WzMjJCRkzU8+i8Lw64Uij4tGSch+rrTobiyGv63Me319nIQiMyOli/EY
rn75ZPzEXxJq193ROPEZw3fHnCo7948E8k/IMZ00DHd7c64veZKE/vz8y+qZ
GG5ttkWKPUXClC/PWfEbhgcJv9/DnyZB+Izk22W5GJ7Bij3TPEPC0i27EgXz
MbxR5Jxn/CwJa+as8seLqPFa4ZRTcyRs/uXW2FWG4fpefXX9FO8PSxior8Tw
115P/trMk6B3rYZeUo3hgwfMpDMoPrHv34osJoaXrFq+o5fic6IKW+OaMDzy
yzvDeYpvNOnoBrIx/Omr3HPU8yI8/mhn5d6K4eQJ/7tVFHs7Btxy7KT0/a7x
3IPiIJ3vnrY8qj6Paf5rKI5d2hZu3o/hH64dCguj4vnSIZypO4zhq8+5xfyj
4r/TVFHyYgzDLX90Vq+jePev103V/zB82zVVb1Uq36n84/xlsxhu4nSjRoLS
IydLZuYUjY6ffTTz8Seln3Mia0GkIB3PfHZA8gKlLx4ZodAlSsf9N1eKNFP6
Y2/Pb1NdSMcvBV4N3EDVp9hL+ZDDYjpeYcn4foKqn6dzn1mGNB3X802+a03V
V/92iu2kLB0XrftYgQ+RUGW129ttHTW+6ahpCJ/yx9Hp0DJlOi5XaPRsEY+E
47rweYEaHS86td36XBcJTVsO17zbSccPHV0qFkySELJevIO9h47PvYnvfEz5
1XrF77E1B+h4ZZj5TU3Kz+2YxfIkHTp+pmcw5VgtCTETsqojR+j4udmcK3FV
JNj2c/fvMqbj83cud9X/JKGv3taGMKfjnQEdO8oKSEj+qXpT8DQdF7neKvki
j6oXDLrq29BxjLaM2PCdhLFPjnHMS3T8M66TNkWtzzkn9wHefTo+MhRt1xdG
AnFDf37TYzo+DiufvHxHrYeLC6Vuu9DxdaUH/MX9SRAxCdw560XHT0Sk1oW6
kyC1Ns5JKpSO12lserzAngSm9NWX5hF03GKHs5Ev1Y8CxTdHhH6g47Y/1p4Y
OkOC7HhmgWISHb+dUqxy8DgJ68uKRffl0vGq8bG8/btI6M7xknuST8ffBukq
RW0mIT7NaFNRMR1fcKtCsEOJ8nNovalxFR3PsGoznZGm/GHf9e4cScePVe9a
7j7OBf2lgkovaAx86blbE3OJXFhXoxPtIcjArwt9VmmK5sLMS/dVz0QZuAhR
3e8fzIXPwiIyj6UY+Munxcc+u3Nh0bSYiMMaBu74PSTc0YYL9W2L+Me0GPg+
clP7eXEuJIcftTXRYeB/p18zTwlwwf20f7vBEer6tvund4xzYE/9Epb2UQb+
pKZJ6iWXAyFl0pW7zjLwNdjLKFYKB86kyCfLujDwxXIbA8cMObDXzlpV5jk1
3xpnzaU4BxZvCI9b4sXAnydJtkjv4EBhtEKEhB8Dl3kWu6p4OQeUAtf6zkUy
8LhInlFpOxv6HqncaicY+NbxqfX2N9ngqL9zV4KAIK7c2e2S8IAFQ4c+Rvsz
BPGQlJ7ngVdYcPmArKSTiCB++CRhc/kkC05vFeAZLBLE94c11ebuYQEuXRk8
oCCIB6Ot17f9bQHx9vOzW5Eg7nys/N4RuxaIfBBQlP1YEPfYelnsi04zrLgt
tC3SRRA3uMN8fX97M/jbPXjv+VwQ15G0FVFWaIbnNjaOJ18K4sMNNfIa/5rg
qs5GlekwQTzsSCZbL74JdkoVvtDMEcSXHZA7NivUBOWf/hwrnhLElSy/XDmd
1gD/SrEf2Lwgfvy+6eMLwQ2g1LN4HU4XwtXWtaqZuTSAq+KO0e/iQrhp0rLK
HtMG0Ii+HZAqL4RblzGFOgbrITV0rC5UUwjfaCERr6VUD0Gv/prdchXCzdRD
JC651cHlO1PmCmLCuF5S7MrC6d8QqrNz6riwCH628MtHdDMfEj5bvMsTF8G3
GX8S27MpH74uc9q5YZEIbnxW7rFcLwENXfn2c8tF8OqYDHbMGQIWuZt0fFIV
wQdYdofevs8D95KrlbNGInixsUy1ucl3uHU4KvzjGxF85Kz8t1VhaeCSUrR/
cbAI3ohlPlq+KA18ZXhNj96L4AcFDG/PuqXC557NS47FieAVCs5HZBqTgeeR
4zGTLYIL5LcGv7udAP+VNd44yhLBBS3Fd7THRcH1rdMLckgRvEniWjDbJxIe
Ba1KVOoUwU+984p93hUOwZcvdk33i+A+nE0aqY9CgCkyejJuTgT3Kre9/S7e
DzpuSE8soovimx/G2m7ofQV/mva+cRIWxef/q9o95+wNkvFPq0wXieJv8AMn
DBNcYJVUzLUfS0XxPkvez8gnD0HtQamI0gpRfF9K1HvPhJuwv40f67tSFFc9
rFKVmXAW/v/7Xfz/v9/N+z+nnjDK
              "]]}, 
            Annotation[#, "Charting`Private`Tag$3994#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.4999998329138098, 
            0.49999968252502563`}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.4999998329138098, 0.49999968252502563`}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwtm3k81N/3x4uZQSmRKBVRURSKVMh5FxWpSJKkEtImVJLSRqXok52UqBAq
ZEnZct52yjJv2fd9ZyLLjPU338fj99c8Xo+573tf53nOuXfu+/EYaUt7ows8
CxYseMK7YMH/Pg/pLdWelhYgh14dKOvY4ZqlkXLvL7+kADk5xRO4xP8cbpEe
CBWTECC/7F70O8jPHpdyCtnbRATIfQ8igmN9HyIV4xp/iUeAXO/eanHPyxtN
+cdXVbfzk9dfe6/kuL7Di4UNfxMi+Ml9PbnHpQy/oqnKobCsd/wk0eYtu2F9
Auq+S9UvCeEnT3e/cqSHJaD87cCoHn9+cuv21gub/BNxWNbAXPIJP+nqeao1
724yOrnnFL6w5ieFUr/QaFo/8Mn+T2E2G/nJ3GoL81WeWUi+uGsoJc1P2q7W
6r1ER5yh9Hlq1/CTHkvvjWs/Qrx5dviCnig/aUCcDjmkTqLlbZWtW3j5SYE3
Gu6pCtkIn35mjLTykXlj3xdp8uTilGBF7b23fKTyBwHPr7cLUO14hOeOYD6S
v3Um83hsAd547ag57M9HZhyUCvrQWoB9G8Xfn3vBR/bHVQyp6RZirZb5xX13
+Uhx8ZuHti0vwu8O3eN8pnyk06uAlwmvivF65ZSI/3I+8rKziZztiRIMMjIw
CxDiI517frmtcCnBTGbEh8DFfKTrGUs4+74EGaWHlYN5+Ujdji+vfveV4Nv8
sCOh/xjktjXHVjKcS7Ho+77n0X8Y5PX3DayHrmU4rPqqPKacQTLLt6k3vS/D
5ckDYp9/M8jEmto9FJbh2a8BH2NzGeTrlJaLLjNl+C+6OycxmUESzx00fzmU
o+Rrz9kMfwaZET9jc0OGiTriLTo/vRmkm+pPgzRFJl4OVPkv6wX3eaHajEJ1
Jn7zbZTIfswg21Wu71Y3YqKep+KugpsM0vm1T5T9Ayba8T9+WGjPIJ8LDboN
PmdigHtNQdFVBpmeUSur5M/EZrdHJ35bMcjaVY9HaNFMdHSpuME8ziBFBho7
B38z8Q1HNp0yYJDfS8oO+1UyEW+7LPyjzyCf9rm1TzcycZHjBp8qbQYp4BlU
KTHERKVR55pqYJAFNnxU+RgTjR1KJWs1GGSf2FkN3RkmvrN1iqtXYZCfPo+8
c1tEYV7/r7EGJQbZZBKrpSNMYf8lKc0mBQZZo60XUCROoeqFol8t6xlk5vND
ySs3UGjWsUakTYpBXmyM2ti5mcKH56+fal/NIP9Tr35/XYnCX2ckejuXM8iE
k1UCFbspNHinCVNCDFLZ5wjfSy0KK1vPBgkJMshwoQW1i7UpNJVxHdrAzyBt
pCxNjh6ksMkqQkedxiANEh3OGOtTaPkxP8RgAYPc/j2haK0Bhd3dPaPWM3Ry
500lx89GFP69vOWD9xidXFNUPCd4isJbX46yI//SSdFHscHtpymcGnQwSB+k
k/MV5r13z3L9KvpHlffSycjHQSVVFhTSHFJmOzvp5LjPuw3/LCn0SKwxnmql
kwcf6zIrrClc+o/zRaiJTlqlDn51tKHQT3UN78Y6OmkZfyOy9iKF4k5aZupV
dPLckcPec5cofPvDItGAopM05dtG3ZcpXMdx479QSif/9N9jel+h8KP6x3N3
i+mkidHNwSmulr9X+N07n06uIGc85K5S+PVn35KP2XTS2ET35QquVp1ffCH9
J51M2ifSkMcdn0YoZpan0cmn8xGmO7hay81weVcKnRQKqByw4a6Xm3vjylQi
nbz9h9/lFNePLj0wWyieToa8URkS5PotOfBj5cbPdDJUsHqz6wUKjz2vs1eP
4q5XNr/yuxWF1cXTBQbhdPIiYRDx5Tw334slJS+Ecf2mjiSeP0dhy2Hi1t03
dHJ7aoRirTmF1l6WJd5BdHLLxkReITMK+8qfrP/oRycH742vZpyk0E44+m66
F52MFWi0/HmcwlGjYqrck05KrrDIUzWk8HbAwKYudzopLbFkq+1hCmeqljya
cqOTm8fnPKx0KXwkrlwj9JBOPl/eXiShQ6HnG8en6rfp5KfvC6OK1CkUagxq
NLhJJ3XcrsrgDgoD1qapXLCnk+WO0ntuKVMY+n62zfsiNx9li5at20hhQpS7
VtdJOnnrU3uo3WIKd/TGBE4dp5Pts7l3LWgUpm/+PShkSCc3OY15CM8yMTdW
KERdl05+ZEiJJnL7qzopeNJ7F530NUov7uT25+mx9KMfVbn6jIpceQ4TW3c0
fUxXppP7YsLsndOY2J8qbdy1iU7uXeoRwxfFxNmszwnqq+hk7+GQrSvvMbGk
XklwWpRO+mxW4qM7MPHtxLeLGcvo5Ma0TpmPVkzUVERJTX46eeXgylXzeky8
G/rnvz2TNPLS0g3sVcuZeCjNtHd2lEZGF3+tfE9j4qqqJu2sYRopaNQ+kjJQ
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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4036#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9999992960659713, 
            0.9999993910561469}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9999992960659713, 0.9999993910561469}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwUmnlUjP8Xx6dtJkmLkiRki4qULEm6TygSWiWERJYkZQmFtHxDhXZtUikK
KVJpvU/bTLv2fd+bmfYFrb/5/fWc17l3PvO+93PvPc8951lvcdvQkptCoWzi
pVD+/zymI3Rodv0SUvatdnn3bmeN/cmPR/nXLiH3+z6+MON7EbatZ72TkFpC
6lhsn9DxvQ1C/xh/lZcvIdWvOWk+8naCyljnb9e5l5CmRkcNE16+AVP+qVV1
Xfxk8tARvSKb93CN0Tya+IGf1IyLPvKRJwFMVY6FZ7/nJ/FkhJ3teAIcff9L
tzSUn9w/0Je4wzYR5B8EfOz34/gbmTYUmn2HYVk9s7Vu/GTmi2/VOkpJYO+e
y/C8wk9eEsqczMhKATetuPCrm/nJLTuM+16ZZQHp6aC/bj0/earhcvrjwiyY
q9TlbpDmJzu1jHfZq2TD3QvDljri/OT03vdmDlQEiwcq27fx8JObgrKTlfRJ
gLisjLEOGqmgO+CjVZEDDiOvb31uoZExHvX30+dzIGW3+brLDTTSwdbBMkg+
FxRzuV1rftNIIYdzaS9cckG6+cix1GwaaWwqLbVMIQ9mBKsaHofRyINt+Zc0
zufDHqMPHruDaGSQUqW4y7N8uBN8T33Yj0Z+Nn3mteJDPgxuXhlx0ZNGhhX3
DW3uy4cGDbNrBx1o5MAuCY38ywUg/t/2VbP3aWTyT8G8884FoF+yUJxkRyOP
3K/4sT+8ABinIxU336CRV+3GbmJtAaTY9k3RTGnkrW8Kx3L202E8JfUTaUQj
K88LiJ4xooPi/Iszj/Ro5NzqgQZ5KzrEvFTIYmrTyFF9mvODADp0/J6z+XCQ
RjbeWJgaiaODtES5jJkGjRwpsg54l0UH/yhbt7LdNPK5RGKcXxcdKgY097gr
08iN9xjVjRN0WLpDbEBjO42UNun31edlgPb9nuA/W2nk6WSh0mkxBrhkJOsm
bqKRFr3W10s2MCCb6/n8dRkaqf/k2qkyJQbMHDFNWC9NIy9tj3CbPcAAu5qZ
5X5iNFLXPfK/hlMMCDTUO+svTCPX2T7vrLvIgMyKD5EBS2kk/5p82VU3GNB5
8u9AII1G2q229Ai3YwC17LhSEA+NjGooPHz1EQO26UY+CF6kknEWUT63nzHA
oGgqO2SWSq6Vnk9Ic2eA/ZFj1LA/VPKzBdF1yIsBYQXhJ95NUMmcLSo2y3wY
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
QCaXRs7jNYG+Sz5sLQ==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4078#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.880086295040964, 
            0.8800862462386179}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.880086295040964, 0.8800862462386179}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
N1S3GjHwipixjNYkicory+cNvgy8y3LWUpwlUcMa/L48DmGgW85nk+2LJOq/
6WBZoygGvjdneZC4yNSjVj8i49n8HyMj9G6MQqbKT7YmqLH5P3VeI7FrJZla
8qj6/JkqBlaH+LTS1pOpRJnwmG43A9tsfo7/FCZTFQQMuEUH2fy0t4k3YjOZ
ytHMt+npBANnuJe3BmwjU2UEAo49XmAgV8NOVfcdZKqFm1PqKk4mCkSdOH5n
F5l62TT6iTwfE7fevWtpJUOm8mSerKKvZeJ+AdpLbWUyVUvYzo9vC5uXO5mR
SvvIVJ+p/NMu4kw0TlidIX6APX+99SG3XUy0fKRavQ7IVCOXUd9Nsky8qW/O
IB8iU9/HmFgdUWCii6jH4rgumXpgX8nMChUmeg9+W9ejR6bWqqd6WO5jYlBG
tVSdAZmqvapK00CdiRHPZzTzjMjUN4akS9Vsvk4w3Xom6T8ytafNQaGPzd9Z
uw5fjzQjU21T/XqC/v97wPT1J4EXyNS0OnpOM5vf/xQEvPWwIlN3zx/mSWbz
Pf1N+o+7V9j+PPi1LMHm/3HrzjxrWzL1RavZhCxbLytRWk7fJFN9Qz/KlLPt
+clyo4fusP2N4pois/WmGmMeFUcyNYvjUFgNez7JcBdRCWcytVxH6YEaMFHF
PkJJ8BGZ6ryqumHfQSZqaZYc5XInUz9ePcBfzY7HYNXohclnZOpKpV93SGpM
NG8VcqA/J1N//f+Pnex8XIs9+KL+JZkadfHQPkVFJjo6X/qc/5pMXbXtnIHC
HiZ6HHuRlhxEphpeu0splWKi/8ZfFVGhZKrKqHr+vx1M/Mhs6nnzkUw1u3Kz
r3IrE7+nLs89/UymDng3NKtvYmLaM8m1Dl/I1G9bqByH1jMx31hf8vI3MtW+
172Ayc/EjvF3Rod/suMzGWjjXWbgEI12VTWFTI05lbLac4aB8/59j3amk6nJ
v8JCP7PYfC+/N5abxs5PeJpfSjvjfy1ceTiVeRvOWd7fiymOJJQkMjWDZKgI
v6d8ljQowmioKH1alFApe3JEZbLFabV9ljiWpmw5vecta7KlEG3IYQZDJyVL
fOeP+fO57ue6r+d6rvu+nuevm9KYd6e/1EjmTzcSFb0SUXrNUV2DDQwo0PHx
t3kuomyOtTPr2hiwKTFReV+FiHI2+aZS9pIB6e2KG3r5IspLWl0/p5sBKg5u
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
dt2xq/c88b95VPBvHpX5/wHfLAiF
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4120#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9999979295914276, 
            0.9999976066250078}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9999979295914276, 0.9999976066250078}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwtW3k4Vd/3xr2GSiJDRRqEVIrSp4SsozQXKhVC5mQeGoiEJNFgzlDmKWRI
opR9zEPKPDQQ1x0OIrN7Dfmd7/P8/jrP+5y99l7rXWuvs94/zlYL5wvWPFxc
XHcpXFz/e54+JXR0YesKXCPm+LfB/8LK1Yu9xwU2rcC/GThqi0c4I8WtI68k
JFfgidd/PyoOv4+EOHXsvWtX4MURbx9vD3+OWrP88mx5VuDdD3AJ29BEZCAw
s6GLJoB7OescyHycj67X/RwvSBXANS7+DmpyQijg2OsEGzkBfH4mQE+K2ozw
kLt6m7cK4H8PiMYWPGxGi61neHo2CuD2fycCH1BakLvpmPUpMQF8R+M08gxo
QRZ3VHYrUgRwnwER8+6AVgSvP5dN9PPj7dK060M+7WhesK3H+yU/vn5Hdv6q
S93owMXU4P9i+HFjrSZfdmg3cou9qTEWwY9vu/ww/X1TNxqSW5d0LYQfV3+A
NqYf7UE9msbXj9zlx4uO62hpKn1H712YM/wG/PiDgsThf4s/kGvH/NoIUX68
lG1riDv3oegLukaRa/jxei79ea/kPvSpJTU5ahU//jvY7T9Kex/i+3pWOYbC
j6t80z/k/t9v9LIm4dyrKT48aveGxpa536j+/ZGgzHY+/OzP6yKbP/SjTbHB
S2URfPi1wJqQUWka0l73W/vzcz78nNzuLHUVGroRpfKkPIQP3xzD4rI/SUPv
wn5JVjzgw8WuDTAc3GjoVPAe1Vp3PrxUwJ5nvpqGbnq1ubVc5MOloj4GbbIa
RI0mkgRdlA9/d/3s5rrHdKSbqAHza/hwuXiVP7lxdNTRbxq9RpAPLw67X+Wa
Q0e9lqnaalQ+/G9NkGpMEx2N31BMfj7Ni8uy1fsurWagdbc1jdQ6efFTVfIr
/YMY6GWJWaFuKy++0gEydF4w0BaOv4D1V158+tHeFZx0BtrpXff+eQ0vLuZ1
+RezkoE0/fVEGcW8eELB1g7ZBQayembR9DyaF5/JutMjZc1EQ80B29LDeXGP
AwelPrsykZNI5t2Pz3jx/XXiCuo+THQnckSBEciL3wCa3ddoJgqOu/lQ7Q4v
Hjj6XOlULRMVZARqMq7w4rGnHbwjNrHQf0RW1PxFXjwjLvTDggILfdzx5c8a
PV7ctqdLEFNhoarcNfFqJ3lxOPK7zfgEC3W9jZl7rsqLn3UqYTMcWWipPLtA
bQMvLrBo7KP8joWafigJLojx4sr1FjW8n1no5ey762XCvHgHe+RsQQ0LaexB
mzQEePHViRyBh10sdPdV+5PDc1ScX7SmTHGWhU5/MCCWJqm4/vaO4JwlFtrQ
2Xu0fIyKbxtp9lqmEqhUkJjXZFLx4fvTZfKiBJr1WrTFOqn4hJN7tNtuAtW+
8KvmaqXi93UjLsapECiqiG9LRRMVx2/M7n5xiED7R4S7taqpuMKlQRA+RiAq
f/Q+HpyKqyZv8npymkAdMlLPKsuouOxKrp+9ugRyN5I7drSIiu+rCBbjMiLQ
kdvZSZR8Kq5svnWmxZRAa8OVFquyqfh4hqrAHUsCvW04VKSdQsXtlfb3HHEg
kD+jXIg3gYrrjEGirQuBznNr29XEUvGLClJvLG8SaFxVZ+vxMNL+8WLxdy8C
4frt3nxPST52WJTr3yfQcxeDntogKr6H/7JCuj+BTJ/0qjwKoOKs90ELjQ8J
tCfL4vkJXypeaCyC1QYR6F8Va5jfm4ovRjn+iw4h0LffDsfr71BxkWt+cPgZ
gRzX3Vk66UzFnepNnVdGEEhDZdFghT0Vzzvy13VvFIEEdf3eNdhQceea6k17
XhDolx2fcLAFFS/zrvDliiVQbmCI/WlTKt6stTs1K45A3inCdSuNqDjf3eIw
+ZcEOlMeJfPlEhXPmXYwuPuKQJI/JH1CzlNxou4LJS2BQMMzid/PnKPiSYr5
SamJBPooIvef4CkqbmhoqOGZRKDHu7NDm7Sp+FpjV7psMoEMTin9eYJRcfUp
nswMEitYvztxToOKP7X2Cf9HYrbvodTVqmS8BqXFiikEqntZ/u+rChVPzxra
vJfE0aVHjZ4pUfEPh/L7V5HYpqO+WGcXFb/ZvELgM2l/YPycyJrtVFy8zyRD
m8S8gu0OzTJU/Iexe1MK6U/HdoP655uoOO+LWyHdpL9pR3u36UlS8b6FyWka
Gc/Naxb3hSWoeNXoL8kaMl5tL9aPFhEqrhn6aI0PyYfYC4cDYaupuHTUa8bq
eAINvp0IO7+CikcJGBfcJPl8yTfvb8RLxbOVD3W0knxfNuK5aclN5lvV0nBV
NIHW5K20dlii4E2SJ/S2RhKonlv08i0OBf/SGt8gGk7W1yWpEz4zFFxI0aKL
9pxA6q+3qT6aoOA26fRHz54SKE9vv2TsEAXnO1ey2Zusj+tpGqtSGBR82njV
znKyfrawtRezByh4MEdmay9ZXxGJl/o+fafgB9fVbXnrTSCPsdsp/Q0UfOII
88FHJwLtPXI/YqiGgs//NBJm2pH5jHoUMFlBwYNGNLf/tSGQyeEYG+pHCl7i
cP9kHHk/jjz5sFMhm4KvpT8vvnyWQAu/K6T2ZlDwO5Oq4y4nCPROpVFQLYWC
u7p1Wt04QqDtP3+MnYmj4IgyYDBzkKzHnYtvnYMp+MuOg3zeWwlUc4+a5hFI
wVc2P8oKliKQT6tglJ8/BTe+gB/zECfQhIf0nYi7FFxzvVfXuACBuuo01Uvs
KHj492Z5ozEWCpU6oYjbUHBxT82bliwWOuWsK91gQcErdUOene1noU8SZss/
jCj4mtTcF+WtLJRs7Vf17zQFN/UaXCVXxEJGHx6/4z9BwS/Xn/ymlMNCYqvD
04WPUvCKjwKYVCoLBb5LeSSjTsG/NqZkRoazkAOl+szxXRT8/VnHZjEXFjqQ
zNfxdBUFT4qxCbWWYyG1ZtcGLX4K7jQqvfBOkoU0l36Vz/BQcH520ejAGhY6
blj02mSeB++mPxDr5DDRFRGz+7uHePCnz/O2yDUxkYffh51fa3nw0Itf2eF2
TPTB3MFP0J8H/y+9O3rkOQOVP+++jd/jwePjyzZp+zFQ5ecjDjc9yffaeiK+
bgzUuGHDlV8uPHidYSpvqj4D/WitUcy9xoMffN5Li1vHQPNam3vOHObBHZbc
ln1j6EhDpm1PCJsbd9xp8Tzz0SBKEl21/+I0Nz5vrJmz4/YgovBqH5Ia58Zl
2p/Ro//3fWUVH81hceONm+2eqWgNIoM3sQZfurjxDy9j+r045PdY1dx/VTE3
/iCvQ/SuDQ3l6ox3hrhy405lnxUrVAbQRi+he0+GuXB3DUthvvO9qOXlXgOb
3mVUJi36evJeO+JKc47u7VhGNeIJu3fqtyPlnDcd+k3L6N9WKnLb2Y5CP+w4
f7RsGZnU2E+qdrchva6tp7fELiNhg+KpjL1tqGXNWo0f+stIVE1S0324BbX4
T27WafqHuKbrjdb3NSGuYGXTmqp/aDCiNTQutAkphzm91Cj7h2rNI0yNjzah
0MTh9buy/6EnVc5HUl5/QXqfaCICQf+Q+P7Xgbqejahlpo1SefQfOsqTJT0u
V4+abYtY/5UtIbaVZ4/UxyrU9ntOT7NoCfl1XM0puluFui5rfDyes4S0zkNX
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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4162#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.7697997095378671, 
            0.7698003517337862}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.7697997095378671, 0.7698003517337862}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
PK1kl9MtLpwtKNYYIfntzr7si//ucUEfr8fek3y3Ho9/Z+NBPl/w793XdgL9
OvGmvOUZF6z1v23U6iF5tc5r9lQQF+5EXP+1b4BAKyyct5eGceEyN+tK/AjJ
Sx121gfjuOBFxRc9xglkec04IOszF/6YH3SunSL7M67zSzmLC69encv1J/k6
yU1tPDaPC/Hh9QWI5OtTVDkF6RIuJInXPrEheXj81UqzwGou1GLLxm6TvBwm
SXku3MyFQNOfEuOk1vkw/PMJhwtiTqFEN6l7txKDk91csMlvO3OS1K/T/2x0
HObCJfNTbjJkvt37C4z+TnHhg6XcafJ9jxiFqV5WlDFIypL+t4asx/1kZHaD
8Bg4LX90CMh6tza87DkpNganQ0Ucm8fI/lm6rf21dgz6WSseckiedum6prdf
fgzeXD358Gw/ycM3LB+lK41B3yual87/fz8wcfLLVvUx6J5dmhxB8vSlx5rt
UQfGoObcB9pVBoGWCylJSB4Zg2XDz3MTG8j++a89+kp/DDImJBinq0h+XbPk
ruBpMh/wXrsWE4gSM5308NwYbArwnxHOI1CiYi+Daz8G6jxvWJ5JoDHNMu12
1zFQ01vBd/0Dyd8m6UfLHo+BrM1IpcdbAr2/Hqqf6jsGB1+turWeXG/aUdcs
7r8bAyPJrb1tLgQSyzW1PR81BktSS8SXXSX5vObglaOJY3DjCbX4hxWBnvOt
dBXLGYOvCiZunw8R6Jz0jNtU/hh0OCz0DuwmkKp6hxe7ZAyUD7p/zFIgUPPF
rMDkpjFoFPg60yJMIPlys1SdiTFY/yPwrksZB0206WRtXRiDc3/q+4ayOah8
Runncuo4vDCV/DBK7k9H5YVy+qpxWNGw5G/AY5KvX8d03d5NajNRKqhw0KuP
z/vPao1DyjeBIIG1HGSDO3MPHhkHqdNNRcYkX9O4RylLTcchtm6LQ1AzGxmd
7lsX6zwOj41Cb0ffZaPNjg3yfg/HIaJAqKLImo0mffMUHb3Ggd36PNzlKBtF
fHu9TzN4HALSdbXdxdiod526SX3GOGw8JpR5Mp6F3DsePufnjsPrsJofy7KZ
yGTuYmDvzDisahoo03jLRAqrTr3/wzcBx1dtOzHrwkRVR2UTw8QmQAh3D9NS
Z6I1ycWFu9QmQEXibGrVJwb6cnP5jN2tCdDcghYDfOlooEF1intvApYmMidp
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

              "]]}, Annotation[#, "Charting`Private`Tag$4204#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.49999844571550134`, 
            0.4999987648725938}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.49999844571550134`, 0.4999987648725938}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
0zejdxPWi2NiS+219Pxz8O9eFf67V2Xxf8oc3So=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4246#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9078580336920552, 
            0.9078580483236268}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9078580336920552, 0.9078580483236268}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
7cHD433VFCoPWr3z0kI6LFkYkV1TQqG73j/M3sjTYdpq6uJMLoX2Xcl0mFIW
+exFgdfSKNRgrRvsv5IOk331FsciRPkwmYmpWk2HwKa9/cV3KXRkN06fpy7y
xQ/5uHhSqH3jHm6kNh1Kiw1qS09SKFpVsufTVjoMp/0ItBXl9YRS4+/l20W+
AtvBBFHoO3FUMc2QDuuSNw6uXEyh5xPK68aM6BDC51eTkhRyGPmybctBOrjd
f7nfYHIU/fjocKrEgg6q+2fHkjijKKNmnSvjOB1SDs0GtheNIhc86rfvFB1c
n3ixbV6Mot8pHi9aHOlgs+v7Lbfro0joGcAbvEaHc5/Zp94rjKISl32zGl50
uMo+Zpgv4CF/+/nSV3zpsP1xRNScHh5iHXqsLQiiw8YD9u5Vr3hIesULT+kY
OjQxMiPLdXioRf7cA4undNArVrEvkuehx5IbnsY8o0PwAkVSfmIEKf/Jeb8q
jQ5y2/0chTkjSLWqXEKvmA4FTJ5qsfoI6n8btOhWKR2CpNdMT7NG0MtsY42y
cjrYo6KLyb0/0IaYj4cPNtDBeUJwyyT6B9K92Bd5+qtIm+9zkJodRvtkGWr3
aOKAUhOv3cgcQiu5homBDHEIt1+yyCBgCPEfBCy5LSEOMTfljCOth1A6yVLw
khYH/zJ/9gLWEJKamcO6tFwcAkMsvLZbDaKP36SGTXeIwwKjhy8/jPQjm0yV
DGVfcRA3/HT5TUsP8tinvSVVjAEua0uwu3QnonYmJ4aJM+Be/vwzOc86kNN2
5QWeLAaky6xSGNbpQMc1xQb3SzHg3Gz4LWTVjkC+Loq3lAHv/KcaxxNbkeT3
MwJNxABLqSm9/brNiH39UVmeFwMcWd5WB+nVSOkKcxPblwEvL5832rupCoVd
uB539w4DVsoqbx4/VYnunDrlcewBA5YsGzt/BZejc4br18zEMiAp9skfHPge
aUt/uGfwlgG8Z5oy4nfyUXXKL9PyaQYojJ64Et3ogiYriSJilgHo6Y3b9R3W
WG1g4UqgM6Hmr2YzF4lb2G/V5vFCSSbcktzyrPn2I6yfeOVRlgoTtjpdSj+q
nYSzYn43xxgwYZeFVucj2xz8pVBcv+NvJjiffM8ofpmL53XKPpffw4TdNau2
zx3Nw+cUddweHmLCXmu7xZPnCrFqhLtsoA0TdiZMr5uvg/GTkP/MLvsxIb0H
i9+mleGKdGZxZgATvo5ENzbeLsN/6uRX8YKZcD/yzHaKUS7q67p/HB8xoa5Y
zCiWVoHn3r0aceI5E66wQnYd/1KJ9ZIDBdEpTGB3KCVTh6rw2YpI+/Y0Jlhm
+iQDrsIV4vk6R3KYkGQzVj0/shr7+E5+3FvBhAtik8Mq62txBptlEFDDBMNn
UwMWwbX4M1Z88aGBCTKvGsP0B2qxnnCrh0EbEw5t1zURj67DTouNvnh2McHp
y5RpD1WHI/WP7S74yoSzT+d9ddxZj3/fuC6vPcgE1mpegHVPPV4RHeTtOsKE
O5MrrWo2NmCTgqj+jJ9MMAsJV+u4LurPEwW5a6eYMN2+QLOV2Yid3KYtls4h
oYn1JmoxwcHpxwPXys4nwcTkEI2nwsG//pblsxaSkPVgl96/WzjYU3pDwi8l
ElqKrWcWO3JwyWThlYHFJER1LAsqE/GBePee3Z+WkyBle2vc5hEHh2TY/ihf
S4JG2aJmzyIObo4YLS7UICGW1hc9Xc/Bil6eoZmbSFG/s+q99JWDT9ixzjzX
IWFuV9HPLoqDE/dH6ET9RUJ8SNscNMvBA1orWCHbSXjeLBkYJeJRdeXMTr8d
JKhg+PBDmYtdaPrpVw1J0I7rVduymotzBqtuXTAi4UPwwIrrWiIebTQ3tTUm
4WZh7qYcfS42yPuuamFCgpmDbtuwIRf7x1+a2GdOAulcylY+yMVVd/jV6BgJ
c2KVVhmKeG6ec1Cs9gkSZF6cFz8v4j1TM/lLa21J8K3YOXjfhosjtz3bscSe
hH+l7/q/suPiTys0ZWXOklB82TWs0pGLl88p7iedSQi3uN35TcSnDmNGBXwX
EmiMoHUzIv5MbW+9N+Ym8pP9rWRFfErhMyf7r5EwK3y1f4PI107+qdl1k4SR
CrtBIxGfXgvxonN8SPhYpaXqJOLTYvc5rWW3RefjXs8EifiUOBGZUnCXBMby
cLcsay7es0vVM+M+Cbv+CYj7ZMHF99dnGz8LJcHFamvIAhF/cxYaLHsSTkJl
6h7HfXu5WG665tf9JyQsDdtqGoK42Orb0XLfWBKO/Tzr+0mHi+OreiM92CQ4
S8zR3LKei9dECvVtUkhobJZTlZbhYmfvewvM00goJ30kIxhc/K+94nejLBJM
52zPXTvBwdu0tQI355NgW2A0Gdwm4stF+NiatyQkuqp6WFVwcBlxQH1xCQma
JQduwxsOPsi15zKrSMBdgzcsHnDwo/xfz2ZqSSDM8P2gaxzc/vSWx89GEtYr
3/PtOM3BthejFnW2id7vT2hJqzYHvzBXG23oIkHXc717oCjfw/qvSz58JaHE
zPrbcToHu0nW26cPkPDa95XiaGwjLvh1bGviDxK8HgoG/ewbsbCjf04kJcoH
q7DeWb0R300Ry/KZIGFI0WSFeU4DjjHUnj5CsuAWKjzR/roep6YfjXwnyQJL
mUvZPo71OF/OU3utFAsSXn7sM1Cqx619pReFiix4qPOcK3u1DksFHOpJWceC
b+Yefk0qtTig4lydwJgFzgaSAVvkq3DEhpCzTqYs6Gld07k5oxI/f5zNbLZg
AcuuJjdzVyUudZiElFMskO09+Q45V2A+MyDH1JUFcXebwx6kl+HLexLik8NZ
cF+O2H91rAT7ZpZtWxjFgpSjXZWdbiU4VGGw/WYcC1r8rpPOoxinD2yQMX3B
ArX7K//wxorxYODbQH4eCxQ+x2mJ9RTgk1VtLiZdLCAS74wMeWZjZ82ZeW+/
sqA2qIy8fDYL33yy5JVaLwuYY0bvhl9l4Cgn+76ZERY8tePMsbdMxS2s8WMv
hCw4nG12qSU+Afe4yE9I0SXAfOpIRHFnPP7V/le4JykBdo/G5g65R+MFL30a
DktJQFPR/R0xyQ/xEunn54tkJeDoQjuL417BWP16JUtNSQK+dXBNPr30xdu+
DSeFLpaAwPdDBcGprvj/+yrh//sq3/0PAf2EAg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4288#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9999968252526752, 
            0.9999983291387685}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9999968252526752, 0.9999983291387685}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
CUD242m01dCZvs68heg=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4330#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.8800846352624601, 
            0.8800862931371882}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.8800846352624601, 0.8800862931371882}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
/+ZT4X/zqaz+BVDD3wg=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4372#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9999984167464923, 
            0.9999981697722071}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9999984167464923, 0.9999981697722071}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwU2nk4VO8XAHDGvhRRtNOmQqVoE45UWigqlaRCkhAtkq9KUSEkRBGSrClb
9pRz7fu+MzNX9i1ZZuzL7/7+muc873nfe+773jtzPs8zG0xszt2kcXBwbOfh
4Pj/56mTS4/MbhAgVnXcTmmoDlQ7lPpkhH+9AJHx5LGkUvwjkN8wGCKxWoCo
fiH+MyDOFZZOF03tFhMg1sY58Ld/+wA1MU7x5jQBYvHm3TP6kdGgz89e1djB
T1hUmxy755EOt4raRhLD+Yl33rbP/TcXgb7iqU/ZofzE9S+lg+X1RXAiNEOr
PIif4G18/kbxZTHIPvKP6n3HT3B7BNjbtZfAsIyO4fqX/IRT/dkUea9ysHPJ
LfIw5SdoqaYjYfRquDWm8DDQiJ9wdesaaZKvAf1roRujDfmJvXOa9o+e1IDy
vidPc/X4ieTMj8p9q2phvnuv4vRRfqJT2tf72Ok6eHns6yezLfxE2JC5SOy7
BiA8HHSlNlD1PrDcIEI2wFyNFq15LT9xIdFwwXd7Izy4Nnzz5HJ+4t7z9VsG
sxrB5JHiDnkufkJhVuuFR0MTfPrNTXYt8BHsm7pC/quaoYWr0Ttkho9IYIdZ
Rhk2g663PWvpGB/xMqWL1UA2A3z9nTXazkfcZAxulGptAYd/Xndi6XyEx45d
G9ZLtELaXiOpG818RO1GsxeiZ1thZy7tRX0VH8F3NplWmNcKa9uOn0rP5iM0
1jqoKgW3gf6GVXM2P/mIKm1OY6+qNvC7NRC3LY2PMN/Kt7WUkw5CLM9lH+P4
CM1l23yYJnSYEa5tfhLMR+zY3rf9mCQD9p0Pd98bwEdsVbG8aneYAfcDbVWG
3/ERFwdczzlYMKB/i+Tn6x58RKawOWs8gwGbrfrOrnTlI0S3rv/PjMkAox+Z
XDXOfITL1wc2kTQmNKsZ3tJw4CNeN7n2OR9nwvJXO1bNPuQjtijviFpvzgTd
soXS5Ht8xJupK1pOrkwouhS2c8ttPiKc/5T2+1wm0D7db2eY8hFFN74f12Qy
Qa3riO97Iz6CP2ridsYUE9Lu9rD59PmIxDfNw8ztJIylpUcT5/mIiMWLl3zU
Sdg573b5Px0+Ytnp0DHOiyRYHDEQ2qPFRxBpfzt3WZAQ+Vru94AmHxH9z/7K
6qcktFfNWYdr8BGy9g7vCS8S1kpUShuqUfv/YB+5IZQEfcPQ2uXKfETcFO2N
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
VW8RpyZ5X8hfaAIOSV2Hs9qL2Hl/j1npxyZQWO+VUXxkES0PXXC1I5vAW15w
b/qeRVxfP/R2+Cbln5O0nX6ii2idJ3dI/FYLVDuPSZ0pX8AcJ3+Puf1twOGu
cK0gbwHrlxTmnLrTBgo+1sEqWQv4NGKr6POwNvAOHVgpF7uATs6syA+8dND9
1bGM320B7VY78x3Jo8PzPGndZ88WsPQxSfP9R4fE0mteE3YLOHBt55eM1QwQ
bWkV7L65gOu0ckZe3WFANbuWK/fIAkpq7rAY52YCx7yoxsFDC5j/c6SyZisT
FLh1nifuWUDi6MfLj08ywVusbO7ThgVseTrxWvY1E4hVAockVi2giat5+I5o
JoxIH//vjegC3n5wuXQij/LNrjz248V5/MPg/9E4zYTn+ziVxifm8aLC4qlB
MRISVeG+xfA8xkjPhOVQ/Wf70aeJf7rnMRMbcvUPkyCqnTWsz5jHC/aKhQmU
X9TPT8tX189jr+6LmgLKL3cN9lseL5/Hua/Ckh8pv1SZJ/fuzZpHOw4dAwfK
K7XkpK5a8jwGGLF3vY0jofGiyk/Nb/N492ScxuufJLRUPN+kEz6PDx3D1psX
kkA/WuB5KWgem/Lol+VqqHqyBCauv5tHee/TfrWtJHTuOXPd3GMeRcxKHl3t
JKHnq2/x3RfUeINIRtkACQPSTbv/ezyPIxsrxNaNkvD3w5ogpwfz6PExWOfs
BAkjS4243S3n0fCloLr5DAmsVxF3fG/M44t8fzSeJ2Fyrq/x45V5zJdOSlal
fDLzYId6+Pl5dN2RLzRHxQsD975+05pH9h+5nGAq5jRJE0s5Mo9Qp9wkRfmF
u2Xm8a9D8/hX4uCVV7Mk8OtCd77iPOqU3zCtmKQ8VvTiTIXcPC4/PSQ+NUbC
UrXi9IZN88jLM+nH85cEsVThDcw189g1Erh2opuEFfJn3XvE5/FDfmt/CeW1
leH+48NC8xiU8f2YUz3lw9WthpNc88hY+Ou8tpQEKZ/1hYuzc8hLmi4EZZOw
kf/GLn7WHBo7/FrP8YMEmWfRAaJDc2i530nvZAQJ2ycGOVd1zaFSw9rV9v6U
v+4oWG6gz+E3mdpxz1ckKHTZ1m+vn8O1dhk2brYkKF7JVN1TPoeF3mlbLE1I
UD6pIXrk1xzurnCu7lMmQY1w+U8rZQ4TM2a2vNpCwuH9ZR3nv8+haHqNnZAI
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
PKHjGsss40ee4xiQvdeNL6MNPxYXay55Sa2X9itF4FUbrpZplAt/PI6852Pa
p3Wp+M8Iu9JiHE8QiQbfu1tx5SUZd5mT49ix666UP60Vlx/x+dHAM45+CvyZ
94Sb0e/zpw+W82MY2PHQ+GpJE4ovfHvCyR7Dzyw3JcNXTSiWWai5o2sM5b3W
TIXMNKLorrnWl7lj6M52O+TY2oDCa25xKT0bw0yBnWcV7tehp71tX4ndGKZ9
PKcQuqEOhRqdKq5bj2Eru/qdTnUtCvoEf/C4OoYchXb+TnK1yM9XK9d5aAyf
HY6te9lSjTzjKnq+U6N40Nq86s+OclwoFYscuTeK3Kx3rRnXCTwbIJMqaTGK
yo1Nx3PPUb8PN5UL1ExGMbxePZCr+zee4jDp9jw3itmNuxZe82bh+71JW7Yr
jmKjKMdpGqTijs86UcasEax8eTV4/4ZwNHzoGV1rN4JvNeTuRP35Bgkan9On
rUfwY8Pb/fyV8UATTSmSvjWCcxoCoQn0RIiJbeu1vjSCmvtYrCOFycAiZbcJ
HRjBMXAHTp9MkPD3Pes69g8JMYnUf09y4QEI692eHEar5l+HKo0r4OgRfHWj
ZxjvxhmZJ0pUgsTx++lXG4bx5aO3okallZBxpnn1ueRhXJstEM4jWQ1zVyP+
KNsM44iWyKqe+zXw8omKjXDvX7ztPrTOkb8eLjz/95m38S+uHi6J/3WpHmRe
fqnlKPiLFy9FcclH1UOxB/8+9pe/+Mfy0ytv9QZYElQ/x7j2FyO2TgatsWyE
95lW7gmNQ7jo4Pjru18z3Pot9etrwRCKbdGX82tohgM5tX/DU4aQ+4RfsOOK
FmgtPnA2wHcIjz/ounHOtwXWN3OvdDozhL7lSfWJz1rhX1v6yceqQ5TTA65b
ZrQCQVo8fihPjfusSVsx0gomvdXM24JDKH49mKVg2AbRE8GR5woHsTtS00xz
Kx3sZ3SatFMHMSPaO+nIJTqcWqAJHI8YxDB5Y01pFzoM8dy2OuQ8iAUTgR02
7XT4LbD20957g9hwbPEsKcQAryVVVbuMBpGrWKBNZh8DFFbsVdysNogtrGUe
+10ZwLmqz3T9jkFcQ1exn49jQO3aoPcr1w7iPW03If86qr/czDkjPDOAv1vz
lRTXMCFDsYJgpw4gZ8vUN+5gynOSb06IRQ3gQVnN3yfSmRAzo1298/0AnqgA
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
pPy18sbl3Es1fXCAY7leOuWzlFK+CtOOPvDwyZ1ZR/lNd09a073xPnj98We/
KuW7oUDTDkfufgg2q5uQoPznxin+12NFP+idG+X+Svlw8+2cyQCZfhhh8XKz
qJiotqFF7e8Hi/wVo5NUvuGB9UuST/TDSqWdjSmUP6dCyyWJy/1QedqmVJby
qR/f440VFv3wqoBn7DLl190223e0Pu6HL66yjhqUbysbm/b3evZDR450XBfl
Xws1Fw1WSD90mymWqjNJ5I1SOs2Z0A8/5H/suFRP4pclnZeWEv3Azzussq2E
RLWHPiZravqhTmKvRQrl71Y63NnW0Q/kpkqlOcrndkeHH+0d74d/T8e3cXwm
Ufx7sLMG9wA4mFeQxFvKh+Jab3RWDIDKnOWimiOJ2o+nPxjKDMDAK0L5sSWJ
L09djLM7MQCGuh6iuzVIlP7BnfHi8gDQzvKd/S5H4q9VybneFgPQ8ldxuk+c
RHafSHOs5wAUH2nQj21noq9udkd6yACw/EXW7i6g/Jdh9Tc/fgBEKu5eexrD
RDPXEhpZPQBrBT7TLC2ZaChimV7SPgD/Dnvbw2kmnv0gbJUyMgBJ+cuFeXcy
USVap+G16CDYPgr+e2eIgWJFDdFKuoNwa+CObokhA/l1HhlKGQ0C/cgvGZ19
DJxvXLlM8O4gRIdxVlUvZWBfzxUH8u0gPF9vu67iFx1/83Zou1cNQoHZs+u1
wnT84fWC8yE5CMuOn1a8zmzDGIktadf/DYJb/bXq8fg29JUxl9orMgSXGIf5
D51uQ3PN4VHyzBDMKZdn3nNsxeUuM+/3Vg7B0wS34nWplPeWBmtJM4dgskPe
cfFRMy76q3IIDQ8B1+L6Y3zKzTgQ+fx2+5K/YBiwI94nqwmJAl4Vj9N/gX+2
Qao6pRGteMT/tJf/BZmCD1FzTvWY91JOzrNsGGQCTknZ7a5C5UX/zzJtw8Ar
09l6/00l/viPQyJnYBheKC5ZYdFXgV+sGzgmBP6BrWe31LWgcnTWf9Z4/cQ/
ONOgKD3NLqHerzonxYJ/0BupUjnlnI/tt1Wt7lwfAQlj5ZqqUz9wbfRYlPKt
EfDJavRtb0pE/a7oP3w2I7Atz1Avtzgeq6+JXfriOAJRiKuLJmOQON97uClk
BNZdtU7aGvgRQ1V9JA/TR+Afz/zm6t1+cG1Zd+7yy6PQ3X5yx+cDv4D7Yz3L
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
NtKhvXLNKjOqXh0XN42t2EKHl5H/HTyeIkCfiL8VXpjRYdzFQ3n8hAA9/aO4
8qclHYqmjVe6WgiQyzeBkeFuOgwlD+WmqgvQ148uh97a0cGFWJITJOCjrLqV
noyDdLBcpzRPo4iPPPD3QKtDdCDX9l+NieSjsWfeqe0n6CC748ru76Z8JPQN
GR68SIfeukfWsZE89NbDam6NPx2mrkaLfT7GQ0HOC6W8Aujg6DycKKrPQ+w9
9/Vnw+jAnlwsP97cjaRUUn2l4unQ0Kj70n+W8pfcqVt2j+mw3KLEr7+Ki+6L
6TyOT6ZD1jHxIuNbXKQ4nv9O/QUdXteZpBYrcJFaTZXo5jI6JMv33TBR7UL9
pWFLrpTTwe+GaKPNZw5Kz921prKKDgULnneefsJBOvEf9+5upINmpGJ26jIO
2uDeF3OUpMMdrmNeHLsTWckwNG7SRODkaOvk+Mt2pNpi9iSUIQKVlXfEn7q2
o5lbIUrXREVAZ5N9ZvzydpTJYsv7S4mAF3vrd8+wNiQ5PZ/97woRiD26yEHE
thV97JUcsjYVgTfO//WaJzShw9lLsxQDROA7X/Hx4OtK5G2lb5gxjwEhz0+r
7Ay6j0e2pT2JFGHAHY87axY5JeCTWxQlfNkM6FzN3T66JAkf1J03+JckA7b2
L40b/ZWKQa4+dng5A9xHuOd+78zFYp+OzeoiBlxim/6aaCvFiZeiKgv9GZB2
wLpY9notXuzF1EsMYMD0+S0dz9bX4cgzlx5eD2ZAwPyXfHtBHQ4+dMj7n1sM
aLn1skFErx6fMlulNZ3AgKzfLRUtdY1YX6ripkkpAxRl9uwq7WvBmfMNJzTe
MuB9RHWOzvpWrCGSflyikgGFEvmlIldb8eI/t7f0fGBAa++KoBb5Nizk2Y8E
dDPAra55OJXSdu2zUeuqKQZ49XyZW+regSfeEyXEHANGR9utTAo6sMbAIlWg
M4Htsf77pdkOHKi+/lexGBOkxS2ZBmGd2PiJV1TOUiY45wfOuEVz8KnyoOlh
ZSb4n6rbKdvBwbE9UcdWqTPhYtNRn3LZLvxbKW996homJE2tP6kU2YVz4sfa
4k2YUPLtwePUy1wsKBYx7trKhLQXnFTdQi4W58o8lbNgQvn3xBsvvnPxKQWD
c3f3MOEk6arjad+N1aLPy4QeZkKvi5X+LzUets4L9qs8TsUXpFVbbHg4oC36
C82VCXf0RmMignhYIFWQ5+fJhOa9YaUv+Dz84PZvm7OBTFitObVQ+xofV2cy
y7JDmKDFCZntzeDj8Xo59eEbTLCZ3DPi3syn/LNh/EQUE4I18yeF8gLKDxaO
KTFM+O75ymRukwBnW/5d9SmeCXrGTWSDvQAvuH4h2vEpE27K3pFueSDAm9NC
Z+OeMWFFkcZ6eoEAu1bHOHNeMGFRXXeNsEWAq0VeG+zPZ0LToNKfXUwSj6nW
PIwoYsJDuTeXHyuRWHUbh9FYxgSpjlz7AgPKLwETH3dUM+Ht/NXeuoepfj+R
bRJSxwTakbXsSC8S87FCakUjE1SJyKj8YBIvILUW0tqYkCE+dDjuPtW/Czd6
m3QyITvleBVKpTy3zFLg282EBVn1Kil5JI4x/se8iKTeZ8HdgdpyElcfdM36
/ZkJoy51tzMbqPx8LsnpDzLhigsk7uGQWCUu7LLnNyb88XLPye4l8b6i2P6s
H0x4NBF6uOE/Kl9O+u5vY0xwW+rn9OwHle+fogLtSSZ8oU8eh98k5snVKZ2Y
ZYIw3N0oeorEYobckKc0FijelCxInaXytR363stgQW8AJ//c/84bOTdlt3w+
CyYEIVpzVJx5MFRbZiELnJwg0IGKR7fKzLAXsUBpaK1qIjXecGVS46wsC9ZO
PlSso+7vK6WTNLqYGt8fGMClnv92othrYBkLguVDfFooH4r0WJjzVrDgWPWM
XjblR8v37Qot6iywvDrI9/pC4ttZR75WabPgicV42XIe5dno72XFa1jw5diF
Ja9aKe/5+0Zk67GAzTtpSX3fsONx9rGnBizgxbs8vUt57Mlf0Qaxm1iQvz0z
kk95bGCdCvv2FhZsTpe9tojy2GrFbG6gKQsejkmO6lIeyx+suXLGkgVy253/
WX2WxFNNttZHdrGga6nX+fnU+psUflKz28eCEyFe+9t3Ur4KnqlF/7CAIeNI
11ElsbhbWIK+IwsW+U1to4oBW9vI/at9hAXLD/eronEB5qnoyki7suC5XiZz
YYUAr5hf1s9yY8FLybMVTv/7f/bTsmjGgwWSS62iksIFeAQfc+q/yIINdo7m
NGsBJhxjnhVdZ4HY2b/Gzaj9YrFdzTcrnAVX6hNFtmfycfiq3F3JESyoOvCp
1jiMj2Wn6kbDH7BAY/EvL1UTPtaKERoffsYC/not7aF4Hna7fFPC9gULHhv7
3vzkwcMvnRU+WeZQ6zW9M7hnOw8b6a8LXf+aBYI7XNtf/3Xj3S3OLcwaFtxK
m/qcqNWNo16PJk9/YAFxZthkdJyLOY+veP9oYoENt2ST3TsuPuIeu4TbyQL/
p3G6jge4+JxYg3PmAAsGwbUl7lIXjjfTn9rPYoN3QAERHtmJMzL/jnkjxoaS
HDEnB6tO/FrWV19bkg0Xgy/qraF14o6+cnehAhuM3VZ38k53YMmQPZ+frWTD
8BG5yEaDjzik+lT97C42jJ0V+/PjUSs+a5H0KO0eG06YR6SF4FockF1ptCiW
DSJdBsyBmRocIT/I8XvIhpvlR7cYbKrBmQM60tapbPiz62d9aVY1HgwtDZ0p
ZEO90vs559sV2Kmm02NfNxu27hZjHtxTjN10p8VLSTbIS/rY9GS/xn4PlJ5r
fGGDvVNojZ1EIY496dw3/Y0NUele95w+vMLt7F//pArZICvH1k70ysCfPeT+
SNJFwfvgfrV0zTQ8ytl0z5clCqOHz8jkcZOxRPrVxr2SohDvsOpMuV8cVpJ6
erpERhRclL/xowVRePWl92yNxaLgn/skUfnKDWzUO5QSsUwUlg3OJvZd8cH/
f/4k/P/5k2/+D6PXA5c=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4414#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.4999997993249816, 
            0.4999999310693437}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.4999997993249816, 0.4999999310693437}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
15PfvD3g//eA0f/vARv8Dz2l488=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4456#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9999964803331465, 
            0.9999969552831968}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9999964803331465, 0.9999969552831968}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
NPz3V4X//VVx/w/1sFPR
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4498#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9285011593195615, 
            0.928501876392745}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9285011593195615, 0.928501876392745}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
83sV/xthHb8bw+CN5t0Xd31aRYWDu0TUN1IZ/avn9tF7FW+Lc9zqk6BC0mBo
Ca/bKnrerpL6p0IFvumtZ5YtV7Gi6QVHsi0VatdvkG/XXMVHx1VVDnRSgWmz
uvVVtVWUnkpIy52iguROr8yyM6tYcJr8UMNFA28x7mMZUqsYP8OteesoDYij
F54fFlnFODazb/XnaTAh55L8dfcq2pjlniFu00BdheWwP98qRiRQdWcdaeCg
rmi6lmsV+Z02PpX3p0GSlt13p9UVXHCiT099pQGf0YLw0/EVfGJpFZ9QyuAX
p6n/LletIHebSOFRNhKY3CXvFBeuYN2wL183PwmSPmYh8r9X0O7O7K6JnSR4
fxneIvp9BcM11MLOy5BAxBzUioxYwTw+/b0ep0mY+GEUsPXTCqoqlgRLXSJB
Paefn8ttBaOWfzTHMfjCoXCXur39CpZw/Ot5yeCLpIo7XrOWKygpJWsSw+CL
3rqQqsdmK3hjLCVWmuFv+drauSn3V/DMdGLtbgcSFHu3qOjorqBmk9Pexy4k
mNNuuDZorqCDst/gRk8Swsf9iy+qrWDZwft3hHxIqJ2pZy04s4KBOuF9tgGM
/Jb5Tp84uYIBV7cUn/jEyI/tikOS1Ap2ajfcvxpCgv7a93kHRFaQKZP/QGEY
I98NlUthu1ewxVbzmVc4I9+ta05u2rqCwfyGGSkMPpjYdf7Ve74VPOFzw1SC
wRO7Dr7NYONaQbOOgHVsjFhdonDGZnUZ3z+k7JBk7Hc4ziw9PbuMSZ0PhFMZ
PJF0Cp6ZjC8j263odE8GT/SefZ3UR1lGPl8PwxwG7/Cp/R7X7lpGDLCtUmLw
hOK1ebHaxmUcvqfis92Pkf8tmUfnq5bx0vGTOmpejPzvWsTlFS5jpOemrlo3
Ev48TKUd+72M+TM7K+KcSKjvmVNXSF3GEzEsKuq2JDTfkM9Wjl9GMQmeBn0L
Bm9UO+y9ErWM+85FnOx4TELn2WJPreBllODfdRvvM77v95pZPb9lfLfUy7tO
l4QBqct6Dz2WUUBd9kTRNRKGd7UceWWzjDTZv35mQMLYR6Fgx+fLKDk+HnFX
mlEvXn0290fLGKZZ2pd7kIS5JbL58+1lDJpVHUpeT8LCc3HFqGvL+PpxZLoK
C4N3hp/GxasuY3mycP5FOg3Y2hZsck4uo37yoVq3ZhpwqQOl6Ogypgo9YCkp
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
AP/t7db7GOtlZcrrnKfR6Nud3e2M+7ZNuFk0ymYa02M9Mr5yM+K+iZkak2mc
W/vT/M04DT8rrLQbGkzjHu6g9x97aLg1ZC2xcHMary3aSwjV0nCLlrC7sMo0
2h3vlrBIpGFQ2tEnOYrTmHSANeVSGA03b1DS1JCdRpbNj5k+e9JwU/XtnXYH
pnFRX9rR9wENBc/4pDSxT6NZVGXE3s009A8P+/hoeQrPLv2YzGamocBKvC3z
zBSaKT/0+DNCxQ1ZJcrig1PY75z5yyKPinwSS+3OBVP4IUkksF2XijxCD1il
7aeQ9sL5kZwLBT2tXpDlllP498eVVxeMKbi22bFaz2wK57heHB5WpSC3T8hH
D90plOlNTh1fT0EuznrRgZNT+Kxwy78DfoPIPi2v6ftvEkWXMnYWuw7gSsWG
rxNPJ/HI7eu2gcf68GqQ8K/NJpNovKD0aI6vD6PvyxUrGEziO9vgikOjvXiR
yYDiqTGJvinrh7giezHwWPL+Q0cnUUFJ/3zH2l4UD78Sc5c+gbYpj85dTelC
HQvP2HrLCYyJddT2qGjFxNPhGfNmE9gwfTQyyqYVWfjSSnc9mECuSV7mArFW
/Pa9g2amNYHk383GOz60IL1H5OBa2Qkc+o/z3VfNZtwU4HvVdeovZgu9Wh9P
acDnwKNpPDeOo/IfNokb1+DZM/j2HnUcI9qMMsyrqnHT+WcZuk3jKDcqJBAl
WY2Zl1u3aaSOo6xF4faJxUpc0o3uk3syjjmzYd/HwsrR2Vb+CQ9tDE3jk811
thfjdYe/4RzNY0hp6LPP8SlCYefIeqbiMfw6J5tswVWEZR5cx2cix9BS1nwN
z0IBrgtuXOq6M4bZVz0bzMcJDMwydU9sHsWOHVb6509n44Pc/3Liikfx40Z6
21fdLJTNrx+LShvFmJc+ex7ZZmJ7mezVIN9RNN1zZrdGUTrubGXb4nh5FC19
di2F26Xi344MFZtTo+gJJw8pp6cg0WNiYyE2ivRKm5XQyWQ0oNV2G3OPorpy
+VO350kYOxvyVaNkBEFRUP/+xXi0WrjSovZrBL9tYJpLmo3Diyssa85HjyDl
IZwc/P4NR9mNTU86jWDtVO5NedEYzF2zPezY0xE0dNQIfD0XjV7r/vyR0B/B
HXXEmZ7KKJTceOzoPoURdAuy/i37PgKZt5KGO8VHMPx1HtNF63Cs3x4cuGX7
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
dg+mhi0Qh3aW+LbETH/83/2T8L/7J8v/H2v3Ri4=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4540#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.7697976212629734, 
            0.76980035741191}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.7697976212629734, 0.76980035741191}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
nhz3sDYZ2ZYSVp7JT0Go5WPnschMNBPl9eaj6BQYvnn/7ExZFjL+cJUphn8K
jlgpfPo4lI1uaRJ4BjcmoUH2wJXdu/OQdF/NmRtFk5C05y+T7rEilFTysfh5
8iRoFyyzfjlYjI5Gqal4/aDdc61Gn15xlCDOJzU6Za8nYanlfafMVCmaX662
kVGYBIc0eiQhVoae9Hpu3BCfhFNqNbF7AsrQSPEVN4uDk+BxzIrz2EoZanGv
9o/dmoBXZywjRnPKURpndTpfyQTw7bhHanNXolsPOdVHkidA7pVv1L5nlWgl
6T4pIWwCPsT4e9iVVCIFlUUeeccJGIvsvLF5twoN+yml0ZtPwFsrKdODv6uQ
2+Cnq/W3J2C9nCencaoKERyOvL4vMwHaVQsu3U+r0fOK5/v+OzoB01f3/RGL
rUbsHHl/yBwTENWn7cU8WI0y7tOr5e6Mw/FCcfOnnDVIN1Fr5A1lHL4WHu64
cakGrS6HOKkNjsPHTwk+BVY1KOzSGBdHwzg8knzoEhtagxS/nk7pKRwH/6bt
ai6sBo30O6tGJdJ0uu/rUhypBrmLVA89DRmH1Rq6KUt6AhK253SU/jgOGzZ0
m/cPEVBt2X3OTftxuJouOVp3joAs2BOSKkzGwSXKNzdfg4D23lu87KszDqct
9WqFHxBQZrzSoO4l2v7vucN4nhPQ7aVPDoJS47D873X/B3sCWrvYuXfi8DiM
P3O2cXQhoB+fjySmso+D+fcDDpS3BKTU9/zSq39j8DfP/vQ0zR4VzutHc2PQ
V5x44Bntfw9benuW/jEYIRWM2tDincC02Ftrx8Dxw2szRtp+dWyh8aH5Y2B/
2Dn/GC0fy7tjF43jx+BGZO+BFlq+nHGn+0SDx4Bl8uw2mywBZVOdbRc9xmDP
77e7B2n16qNqtmLbMbDW7tp3GU9Amz6ccR7GY3A2xPD4pbEaFNlzH2ndpPEO
WcB6sKwGKf+X0MNzcQwkHfIf7w+vQWPWi9ZDEmPwRuXhtxWbGiTK6h1jxTYG
o3siWVN4a1CjXqei3CYJxk8csPUhVaOXMUe6cTMkUH87+/DQn2qUq5i3K6CG
BM5Hj+6zPleN7nrT/zbIJUHVWb3X8itVaKtLS+FYLAkymjej6jKr0KWXY5bZ
biTI/+LyRPdoFRovPs3iak0CCaMP++92ViKvXa+jVI1IwKVaEC//oRI1RXN2
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

              "]]}, Annotation[#, "Charting`Private`Tag$4582#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.9514276352861067, 
            0.9514221375322576}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.9514276352861067, 0.9514221375322576}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
YCF8Ly4+xeswiT/jqIeSh//AZvFGqdDXk/hbuVDjw0gBbG4fm658MInvr3qX
bh3Kg0364k7iZyZxyC+YWErKAqET7r8aOCZx8UjPQftdEcAjfJddznYC+67a
yCuap6GLlXlfyYsJ1ChR1fN9n4FrGu0rjB9PoJZszu3TXpm42t3/m/PVCaRc
S/Fc+JmL3Fy1Up1HJnAo28Gp92YBckwq63nMjaO9glQRu0IZOuhoKEqMjeOA
6sWifMlypPzU35rbO47HNjQc+iJcgZT7z/r6G8dx2e9NH+9sJbKRkdaqqeN4
PaIme+hMDS6XCoSPmY1jctD9Hc9i6/G8j3jqxgfjmOiUORO7ugHDbisVqtwY
R5Hfhq3B9xpQg+VGt8uFcXxbLHcmVrQRvQ8l7dpzcBwdXvjZ+9k1YT9b4SEd
qXGcuvGWU6ShCZWrm09aio3jT2pD6F6JZux4wHKnUHAcI14nHR8raca9P7Qj
TKbG0LnlW77pQgvaPbqZ9nFoDNfExYmNnmjFWiXLvwldY1iqniRBd2pFq4bA
nqX6MXTlkt89KEjFP6tHxL+njqGXQOePqwI03NjMejgvfgxZztmJlWnR8EH4
+tN94WMYtWW81+EDDfmPHb0r7z2Gx5JGHlVN09DIwiWy9sUY/grn/3s7h44J
x3+k/3s8hiOLhXMtA3Rk408pEr07hg7Z8t72GxgYFUPtfaw/htLT1Ljr9xi4
YDk666U9hqNNoYqergw8d5KdO+f0GPbl+xqM/mLgFCkpsUaBOR/HhzHCMww8
Ha+iICszhokKYnW9QiR+f3VB/bLEGJ5oWX7ZcIDE4dN3DOxEx3Blf2h7hyaJ
x9a/uhe5aQw57bzv890h0bPjs1UlPzP2vOx6yYbEnoTgj9PcY9jGadv/24NE
BZtUHxHWMQymEgcOR5C4wcvj/IeJUSw8JnSkIp3E7P2ZZg0do3jvR9bMqyKm
t0vb3cXqRtGk99JzaCCR+/aqX2YFo6i6aoL2XzuJ8SsytZg8itdxnc2qQab3
vxtM8IaN4uG3uZm8kyTOydkJGH0dZfaFnzeL/yMxsCpSNsZhFM/KR6tcWGL2
Fw+qLsyZj6JDVn2PO9PnA5TZZ6duj+LIjNlYFzN2C9rq+fXiKAp/fHvpLNPr
8kqnkjtOjuIGnagDhfMk0uof1cnIj+KWGbGMC0yvv33iNflGfBTfhtUcZb5/
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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$4624#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> 
         NCache[{{-Pi, Pi}, {-0.4999998708022416, 
            0.49999999996733646`}}, {{-3.141592653589793, 
           3.141592653589793}, {-0.4999998708022416, 0.49999999996733646`}}], 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       TemplateBox[{"part1", "part2", "part3"}, "RowDefault"]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.824818356643139*^9, 3.8248183839170856`*^9}, 
   3.824818519679994*^9},
 CellLabel->
  "Out[5]//TableForm=",ExpressionUUID->"151e67b0-7ec2-402b-867b-bdfc56b7b693"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.825061115193306*^9, 3.825061115507371*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4f8e188a-34b5-4140-92f7-338bff653f95"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 18 Mar 2021 08:58:35\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "18", ",", "8", ",", "58", ",", 
           "35.731279`8.305623541651496"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.825061115748782*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"23275e6a-268d-4079-9a02-c25bc4248be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RowReduce", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", 
      RowBox[{"-", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "3"}], ",", "2", ",", "9"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "1", ",", 
      RowBox[{"-", "3"}], ",", "11"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.825061116935083*^9, 3.825061159982074*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0ec1b322-14e3-48a1-9e12-c00346a7fa62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.825061160930409*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"93fa8634-bc58-41ae-b53d-5e348266e05a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.825061171457683*^9, 3.8250611761984367`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e8af8655-d64d-4e0a-a74c-59ce90e52c3c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "2"},
     {"0", "1", "0", 
      RowBox[{"-", "3"}]},
     {"0", "0", "1", 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8250611771471767`*^9},
 CellLabel->
  "Out[3]//MatrixForm=",ExpressionUUID->"c1876b91-1b9b-4690-b4a8-\
f123c5cf97a4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "z", "]"}]}], "Input",
 CellChangeTimes->{{3.825061352828974*^9, 3.825061364689501*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ded3e2fa-04c0-4e43-8f1b-cc110fe3cc5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "1", ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.825061321957542*^9, 3.825061341200178*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2696d336-abe8-4b76-9db0-727ef790dd2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "+", "y", "+", "z"}], ",", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "-", 
    RowBox[{"3", " ", "y"}], "+", 
    RowBox[{"2", " ", "z"}]}], ",", 
   RowBox[{
    RowBox[{"4", " ", "x"}], "+", "y", "-", 
    RowBox[{"3", " ", "z"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.825061367197773*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"8ab3f1d0-5f1a-4966-ae63-b1ff1d96f6fb"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"7", "x"}], " ", "=", " ", "28"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "7"}], ")"}], "7", "x"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "7"}], ")"}], "28"}]}]}], "Input",
 CellChangeTimes->{{3.825061498141676*^9, 
  3.825061546897747*^9}},ExpressionUUID->"0fa84165-6b96-472c-8be1-\
50a76eee8486"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "1", ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.825061630334382*^9, 3.8250616422506733`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"90ffd944-b313-4cd9-a355-bea3a79cda98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["4", "35"], ",", 
     FractionBox["1", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", 
     RowBox[{"-", 
      FractionBox["1", "5"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "5"], ",", 
     FractionBox["3", "35"], ",", 
     RowBox[{"-", 
      FractionBox["1", "7"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.825061688598403*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f50187af-248f-45fb-9a31-7a1a52d0661a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8250616778786497`*^9, 3.825061683960792*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b39c579d-4919-4823-8730-1e997698e67b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8250616813121147`*^9, 3.8250616932314167`*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"a937cf04-d941-48cc-b7b3-46e09b4d744b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "1", ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", "5"], ",", 
      FractionBox["4", "35"], ",", 
      FractionBox["1", "7"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["2", "5"], ",", 
      RowBox[{"-", 
       FractionBox["1", "5"]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["2", "5"], ",", 
      FractionBox["3", "35"], ",", 
      RowBox[{"-", 
       FractionBox["1", "7"]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.825061733455224*^9, 3.825061739042183*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"cbfc1f3f-662b-45cd-a06b-1a7b4bb9ee9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.825061740224326*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"863da332-8423-498a-9155-9b8aad1a24a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.8250617775056334`*^9, 3.825061782349762*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8b6092cb-57da-4554-a63d-c3748d1ee339"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8250617827117968`*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"3da89170-3d64-4294-8155-\
9398501aee0f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "20"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.825061864554048*^9, 3.825061890670573*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1fda0fba-ae3a-4912-b326-37d07671a0a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "h"}]], "Input",
 CellChangeTimes->{{3.825061882325757*^9, 3.825061888373847*^9}, {
  3.825061921248129*^9, 3.825061931636693*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"12633abb-0390-4569-92fc-51ed5927f086"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "6", "5", "5", "6", "3", "6", "5", "1", "1", 
      RowBox[{"-", "1"}], "2", "2", 
      RowBox[{"-", "1"}], "0", "7", "1", "3", 
      RowBox[{"-", "1"}], "7"},
     {"3", "4", "0", "6", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "6", 
      RowBox[{"-", "1"}], "5", "3", 
      RowBox[{"-", "1"}], "5", "0", "5", "1", "0", 
      RowBox[{"-", "1"}], "3", "1"},
     {
      RowBox[{"-", "1"}], "3", 
      RowBox[{"-", "1"}], "6", "2", "2", "7", "0", 
      RowBox[{"-", "1"}], "0", "4", "1", 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], "6", 
      RowBox[{"-", "1"}], "4", "4", "3"},
     {"7", "0", "7", "5", "3", 
      RowBox[{"-", "1"}], "1", "4", 
      RowBox[{"-", "1"}], "7", "3", "3", "6", "1", "4", "3", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "4"},
     {"4", "6", "2", "6", "1", 
      RowBox[{"-", "1"}], "4", "2", "6", "3", "4", "4", "1", "3", 
      RowBox[{"-", "1"}], "6", "1", "1", "5", "3"},
     {"0", "1", "7", "0", "6", "5", "5", "0", "3", 
      RowBox[{"-", "1"}], "3", "1", "3", "2", "5", "5", "2", "3", "5", "2"},
     {"0", "4", "2", 
      RowBox[{"-", "1"}], "5", "4", "2", "4", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "5", "1", "0", "2", "3", "5", "1", "7"},
     {"3", "0", "1", 
      RowBox[{"-", "1"}], "7", "3", "1", "1", "0", "6", "5", "1", "7", "7", 
      "5", "2", "1", "3", "5", "1"},
     {"2", "3", "0", 
      RowBox[{"-", "1"}], "3", "5", "6", "1", "3", "2", "5", "4", "6", "5", 
      "1", "0", "5", "3", "0", "1"},
     {"5", "3", "3", "6", "4", "1", "4", "4", "7", 
      RowBox[{"-", "1"}], "7", "3", "7", "1", "5", "0", "2", "3", 
      RowBox[{"-", "1"}], "1"},
     {"1", "0", "6", "7", 
      RowBox[{"-", "1"}], "0", "6", "5", "5", "7", "4", "1", "1", "3", "7", 
      RowBox[{"-", "1"}], "4", "7", "4", "0"},
     {"6", "1", "3", "6", "2", "1", "1", "2", "1", "7", "2", "0", "5", "5", 
      "7", "3", "6", "6", "4", "3"},
     {"4", "7", 
      RowBox[{"-", "1"}], "3", "6", "6", "5", "0", "4", 
      RowBox[{"-", "1"}], "0", "6", "0", "6", "1", "6", 
      RowBox[{"-", "1"}], "2", "5", "2"},
     {"5", "1", 
      RowBox[{"-", "1"}], "7", "7", "7", "1", "4", "7", "6", "0", 
      RowBox[{"-", "1"}], "4", "6", "6", "7", "6", "0", "7", "7"},
     {
      RowBox[{"-", "1"}], "2", 
      RowBox[{"-", "1"}], "6", "4", "5", "6", "7", "3", "2", "0", "6", "6", 
      "4", 
      RowBox[{"-", "1"}], "0", "1", "7", "7", "6"},
     {"2", 
      RowBox[{"-", "1"}], "0", "4", "0", "3", "1", "6", "4", "6", "1", "3", 
      RowBox[{"-", "1"}], "3", "2", "4", "0", "5", "5", 
      RowBox[{"-", "1"}]},
     {"5", 
      RowBox[{"-", "1"}], "4", "3", "4", "1", "2", "7", "4", "5", "3", "7", 
      "4", "6", "0", "7", "7", "6", "5", "3"},
     {"3", "4", "7", "7", "6", "3", "2", "4", "0", "3", "6", "3", "7", "4", 
      "1", 
      RowBox[{"-", "1"}], "3", "4", "7", "3"},
     {
      RowBox[{"-", "1"}], "1", "2", "7", "3", "7", "4", "6", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "4", 
      RowBox[{"-", "1"}], "5", "4", "7", "1", "1", "2", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"6", 
      RowBox[{"-", "1"}], "1", "6", "6", "5", "4", "6", "4", "7", "2", "0", 
      "2", "3", "3", "4", "7", "2", "2", "7"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.825061878054453*^9, 3.82506189304573*^9}, 
   3.825061931969013*^9},
 CellLabel->
  "Out[21]//MatrixForm=",ExpressionUUID->"578f494c-fcdc-48b7-83b1-\
9213ff026855"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"Inverse", "@", "h"}]}]], "Input",
 CellChangeTimes->{{3.825061933921067*^9, 3.825061942856987*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"e56bc560-7f88-4c2b-8b42-14561fdded82"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["37667600146851353", "596140855230015735"]}], 
      FractionBox["2317676391263573", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["52331260304580668", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["24015345193898754", "198713618410005245"]}], 
      FractionBox["43774205835409199", "119228171046003147"], 
      FractionBox["49281892673818086", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["66082729606264174", "596140855230015735"]}], 
      FractionBox["8550863921913183", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["5460162857121095", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["6017246591366084", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["175967387553097204", "596140855230015735"]}], 
      FractionBox["179943680690159777", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["3210894435355492", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["245462320401945877", "596140855230015735"]}], 
      FractionBox["112587611025695374", "596140855230015735"], 
      FractionBox["30070652164984037", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["19875725313944741", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["53854402074948334", "596140855230015735"]}], 
      FractionBox["65937412461892177", "596140855230015735"], 
      FractionBox["239759137602736072", "596140855230015735"]},
     {
      FractionBox["8944230684002199", "198713618410005245"], 
      FractionBox["10921852212937303", "198713618410005245"], 
      FractionBox["8169480457375992", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["1551356428181584", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["3102697310024900", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["17555313357968429", "198713618410005245"]}], 
      FractionBox["13652921897926177", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["3099232350305652", "198713618410005245"]}], 
      FractionBox["2288337842941239", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["424713101389834", "198713618410005245"]}], 
      FractionBox["16877095597389217", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["12840814028154676", "198713618410005245"]}], 
      FractionBox["11548739944544158", "198713618410005245"], 
      FractionBox["16452358260929451", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["19722689257777882", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["154233622814976", "198713618410005245"]}], 
      FractionBox["541401070653265", "39742723682001049"], 
      FractionBox["11500593097254617", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["9711774775051671", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["21080829596632936", "198713618410005245"]}]},
     {
      FractionBox["42107944296407", "10104082292034165"], 
      RowBox[{"-", 
       FractionBox["203626168378207", "3368027430678055"]}], 
      RowBox[{"-", 
       FractionBox["318432731043728", "3368027430678055"]}], 
      FractionBox["43534164160181", "3368027430678055"], 
      FractionBox["271287452317348", "2020816458406833"], 
      FractionBox["252054722428311", "3368027430678055"], 
      RowBox[{"-", 
       FractionBox["14573166669269", "10104082292034165"]}], 
      RowBox[{"-", 
       FractionBox["26140179445767", "3368027430678055"]}], 
      RowBox[{"-", 
       FractionBox["18902440018154", "673605486135611"]}], 
      RowBox[{"-", 
       FractionBox["173261832210904", "3368027430678055"]}], 
      RowBox[{"-", 
       FractionBox["322196889675074", "10104082292034165"]}], 
      FractionBox["501705001386022", "10104082292034165"], 
      RowBox[{"-", 
       FractionBox["127237317570752", "3368027430678055"]}], 
      RowBox[{"-", 
       FractionBox["765326410538732", "10104082292034165"]}], 
      FractionBox["185916438633419", "10104082292034165"], 
      FractionBox["176447128785157", "10104082292034165"], 
      RowBox[{"-", 
       FractionBox["92693309678071", "2020816458406833"]}], 
      FractionBox["183568264861891", "10104082292034165"], 
      FractionBox["631157074275122", "10104082292034165"], 
      FractionBox["458445197715857", "10104082292034165"]},
     {
      FractionBox["6984790466099605", "119228171046003147"], 
      RowBox[{"-", 
       FractionBox["1708980666199625", "39742723682001049"]}], 
      FractionBox["2408419761723077", "39742723682001049"], 
      FractionBox["707825392953703", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["9288697686933296", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["3197687774443447", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["8134687855643281", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["1656356205724818", "39742723682001049"]}], 
      FractionBox["505605256889805", "39742723682001049"], 
      FractionBox["1337695334552085", "39742723682001049"], 
      FractionBox["3117959542684187", "119228171046003147"], 
      RowBox[{"-", 
       FractionBox["22572466454566", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["530047403044287", "39742723682001049"]}], 
      FractionBox["13197878711685416", "119228171046003147"], 
      RowBox[{"-", 
       FractionBox["873737696796194", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["840562348803952", "119228171046003147"]}], 
      FractionBox["2150438711527133", "119228171046003147"], 
      FractionBox["6961093336299863", "119228171046003147"], 
      RowBox[{"-", 
       FractionBox["501413359082087", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["11867623875713789", "119228171046003147"]}]},
     {
      FractionBox["82797354844070573", "596140855230015735"], 
      FractionBox["2976142847109802", "198713618410005245"], 
      FractionBox["6820455415390078", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["12743974302684881", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["20609854783081859", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["14133750695618546", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["55072762834296161", "596140855230015735"]}], 
      FractionBox["19428336276086977", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["1296471143481463", "39742723682001049"]}], 
      FractionBox["13114262680789309", "198713618410005245"], 
      FractionBox["40659392011006594", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["58069184551835357", "596140855230015735"]}], 
      FractionBox["7463265134648212", "198713618410005245"], 
      FractionBox["50682015213716512", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["20720909236803574", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["31837199533365767", "596140855230015735"]}], 
      FractionBox["8156117786468915", "119228171046003147"], 
      FractionBox["36754632297960424", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["48507012947161552", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["29951135416218547", "596140855230015735"]}]},
     {
      RowBox[{"-", 
       FractionBox["26555343707959787", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["7380989791877453", "198713618410005245"]}], 
      FractionBox["7811730377375818", "198713618410005245"], 
      FractionBox["14178750223957684", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["7092335910710974", "119228171046003147"]}], 
      FractionBox["1361942518992899", "198713618410005245"], 
      FractionBox["36609257243917124", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["20894197438207233", "198713618410005245"]}], 
      FractionBox["4385083034015414", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["3899624023479241", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["22266033460829206", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["5158102001703802", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["607548810033103", "198713618410005245"]}], 
      FractionBox["35341950493572812", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["30648708816282254", "596140855230015735"]}], 
      FractionBox["80537345445073703", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["7868045076494156", "119228171046003147"]}], 
      FractionBox["35159598724822829", "596140855230015735"], 
      FractionBox["3523504608828448", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["18520781529081182", "596140855230015735"]}]},
     {
      FractionBox["9544700272719976", "198713618410005245"], 
      FractionBox["6890830990545487", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["44691543012119447", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["29795388826098086", "198713618410005245"]}], 
      FractionBox["12584002635012752", "39742723682001049"], 
      FractionBox["48534152213386874", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["41876280487536762", "198713618410005245"]}], 
      FractionBox["18247290001372002", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["3161674759298256", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["13494486722155666", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["36234073742409747", "198713618410005245"]}], 
      FractionBox["40522470728531116", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["11221145172360273", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["66191854092198146", "198713618410005245"]}], 
      FractionBox["47614630702841497", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["10961290557955429", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["4792752140822092", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["26245558219959042", "198713618410005245"]}], 
      FractionBox["19940941409684906", "198713618410005245"], 
      FractionBox["62293045947233691", "198713618410005245"]},
     {
      RowBox[{"-", 
       FractionBox["17840647745908193", "596140855230015735"]}], 
      FractionBox["13944644010287243", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["24191201689192148", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["14983356897939924", "198713618410005245"]}], 
      FractionBox["17344203103621580", "119228171046003147"], 
      FractionBox["14041862310286811", "198713618410005245"], 
      FractionBox["8685323044244471", "596140855230015735"], 
      FractionBox["10264875965578268", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["4148411483358436", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["6398780712396194", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["33094532617515424", "596140855230015735"]}], 
      FractionBox["2170027343120192", "596140855230015735"], 
      FractionBox["412743436354333", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["102362013501234172", "596140855230015735"]}], 
      FractionBox["37454568868804024", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["3176749535488018", "596140855230015735"]}], 
      FractionBox["485929451841058", "119228171046003147"], 
      RowBox[{"-", 
       FractionBox["31322573193253249", "596140855230015735"]}], 
      FractionBox["51990678438619642", "596140855230015735"], 
      FractionBox["106328707183883212", "596140855230015735"]},
     {
      FractionBox["14102314336103509", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["11750908979756664", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["14113285271623006", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["6132488029407208", "198713618410005245"]}], 
      FractionBox["12972886149773555", "119228171046003147"], 
      FractionBox["4467566761034282", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["10015731745752853", "596140855230015735"]}], 
      FractionBox["4918828670721626", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["269403793782794", "39742723682001049"]}], 
      FractionBox["7864660244912967", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["10377851126755663", "596140855230015735"]}], 
      FractionBox["5362375873257989", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["11391536788727494", "198713618410005245"]}], 
      FractionBox["8835571862226281", "596140855230015735"], 
      FractionBox["19872488896259143", "596140855230015735"], 
      FractionBox["27667413765773894", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["6534829182500429", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["15070651118458003", "596140855230015735"]}], 
      FractionBox["2189114400088834", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["597564870066656", "596140855230015735"]}]},
     {
      FractionBox["60265308480522623", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["1352694714326448", "198713618410005245"]}], 
      FractionBox["16364286465268503", "198713618410005245"], 
      FractionBox["11299491493261054", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["18716210233718834", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["23478618356370746", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["11173222863425441", "596140855230015735"]}], 
      FractionBox["2332371654693932", "198713618410005245"], 
      FractionBox["4873926574044919", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["1355631040951941", "198713618410005245"]}], 
      FractionBox["62293277093333359", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["55505148101138507", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["4679761621388163", "198713618410005245"]}], 
      FractionBox["99662383353712432", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["47609147653815934", "596140855230015735"]}], 
      FractionBox["35020886967796513", "596140855230015735"], 
      FractionBox["1055597176420139", "119228171046003147"], 
      FractionBox["33505498896161989", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["58058911231206547", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["90522787172955412", "596140855230015735"]}]},
     {
      RowBox[{"-", 
       FractionBox["5104903715867447", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["1887949127469", "39742723682001049"]}], 
      FractionBox["9353197772580737", "39742723682001049"], 
      FractionBox["5065244605878760", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["7166875990068182", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["5840201572222067", "39742723682001049"]}], 
      FractionBox["7904564746449727", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["1923659735379798", "39742723682001049"]}], 
      FractionBox["2843818139780330", "39742723682001049"], 
      FractionBox["2248141068141254", "39742723682001049"], 
      FractionBox["5936418355727408", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["8280743627009200", "39742723682001049"]}], 
      FractionBox["1588920658030543", "39742723682001049"], 
      FractionBox["6701299733175952", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["7925612078004673", "39742723682001049"]}], 
      FractionBox["612145154063599", "39742723682001049"], 
      FractionBox["3138654132246274", "39742723682001049"], 
      FractionBox["2937801777565943", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["2230702826950972", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["5063220123665712", "39742723682001049"]}]},
     {
      RowBox[{"-", 
       FractionBox["104175161378318", "3368027430678055"]}], 
      FractionBox["117049943842354", "3368027430678055"], 
      FractionBox["1135539163318606", "3368027430678055"], 
      FractionBox["820615337305928", "3368027430678055"], 
      RowBox[{"-", 
       FractionBox["376032584531712", "673605486135611"]}], 
      RowBox[{"-", 
       FractionBox["944841110193492", "3368027430678055"]}], 
      FractionBox["504565484870621", "3368027430678055"], 
      RowBox[{"-", 
       FractionBox["558920877104991", "3368027430678055"]}], 
      FractionBox["126307651707441", "673605486135611"], 
      FractionBox["281697888752758", "3368027430678055"], 
      FractionBox["1081535035015391", "3368027430678055"], 
      RowBox[{"-", 
       FractionBox["1114332705901868", "3368027430678055"]}], 
      FractionBox["568965698219699", "3368027430678055"], 
      FractionBox["1432038033892633", "3368027430678055"], 
      RowBox[{"-", 
       FractionBox["802644541936741", "3368027430678055"]}], 
      RowBox[{"-", 
       FractionBox["145915961532013", "3368027430678055"]}], 
      FractionBox["161633745730506", "673605486135611"], 
      FractionBox["366450441646871", "3368027430678055"], 
      RowBox[{"-", 
       FractionBox["678435534962873", "3368027430678055"]}], 
      RowBox[{"-", 
       FractionBox["1397792371577883", "3368027430678055"]}]},
     {
      FractionBox["50870115760368626", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["1010076584034521", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["32305192021187379", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["16350060208663672", "198713618410005245"]}], 
      FractionBox["24314745932980234", "119228171046003147"], 
      FractionBox["29462480372028633", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["95992734011948357", "596140855230015735"]}], 
      FractionBox["10147955879272359", "198713618410005245"], 
      FractionBox["346582267903947", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["1226197490611287", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["124352281844425112", "596140855230015735"]}], 
      FractionBox["116447849725125751", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["28564945816465226", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["74600905338372851", "596140855230015735"]}], 
      FractionBox["108512270555764067", "596140855230015735"], 
      FractionBox["17439307885426261", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["10884629529174349", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["34279997036619122", "596140855230015735"]}], 
      FractionBox["35266116549077441", "596140855230015735"], 
      FractionBox["34909946576544341", "596140855230015735"]},
     {
      RowBox[{"-", 
       FractionBox["15713751045423516", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["19580635213397707", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["26374562310688433", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["5029428468415994", "198713618410005245"]}], 
      FractionBox["11505536395134082", "39742723682001049"], 
      FractionBox["421705994315076", "198713618410005245"], 
      FractionBox["7467026160929877", "198713618410005245"], 
      FractionBox["20227312831604213", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["4379528188990393", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["18038160659290129", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["6624622221732528", "198713618410005245"]}], 
      FractionBox["15776297691658199", "198713618410005245"], 
      FractionBox["1101112522978943", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["28849836260074149", "198713618410005245"]}], 
      FractionBox["13669020883350898", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["15440897370598701", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["1382625298508062", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["14596939011449998", "198713618410005245"]}], 
      FractionBox["35552632420859219", "198713618410005245"], 
      FractionBox["25410954718470224", "198713618410005245"]},
     {
      RowBox[{"-", 
       FractionBox["40598359746695656", "596140855230015735"]}], 
      FractionBox["13995587093699991", "198713618410005245"], 
      FractionBox["41864051274290304", "198713618410005245"], 
      FractionBox["28114741092615157", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["41987816665350176", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["28599772766657623", "198713618410005245"]}], 
      FractionBox["91515066522060337", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["14595679849533234", "198713618410005245"]}], 
      FractionBox["2078884488338190", "39742723682001049"], 
      FractionBox["12022691112656527", "198713618410005245"], 
      FractionBox["149151778243582687", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["116440933809407531", "596140855230015735"]}], 
      FractionBox["28137808203212176", "198713618410005245"], 
      FractionBox["149032153783553716", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["102799742492639857", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["42476334057715421", "596140855230015735"]}], 
      FractionBox["15692632597939454", "119228171046003147"], 
      FractionBox["5524775003584957", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["61259811509901076", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["133748015241491746", "596140855230015735"]}]},
     {
      FractionBox["9905970430007249", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["6096200689442", "198713618410005245"]}], 
      FractionBox["5038879969275287", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["1143452275007354", "198713618410005245"]}], 
      FractionBox["1119765871489595", "39742723682001049"], 
      FractionBox["6423896644163566", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["5846712774660048", "198713618410005245"]}], 
      FractionBox["422085729052053", "198713618410005245"], 
      FractionBox["618526421365253", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["997028354840439", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["11577503817834513", "198713618410005245"]}], 
      FractionBox["6368929296254194", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["10268892638956397", "198713618410005245"]}], 
      FractionBox["5258025129758536", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["2521621210050907", "198713618410005245"]}], 
      FractionBox["7184158497891339", "198713618410005245"], 
      FractionBox["1295063681636325", "39742723682001049"], 
      RowBox[{"-", 
       FractionBox["8122839495165298", "198713618410005245"]}], 
      FractionBox["3133164419901004", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["10871296302336726", "198713618410005245"]}]},
     {
      FractionBox["7168718253023644", "198713618410005245"], 
      FractionBox["13160099624473558", "198713618410005245"], 
      FractionBox["13872308790783597", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["6146959621083484", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["7171896970150392", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["9011817707592849", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["5226490733277578", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["14705998874601242", "198713618410005245"]}], 
      FractionBox["3358372637782276", "39742723682001049"], 
      FractionBox["1271597419433141", "198713618410005245"], 
      FractionBox["15494259275705287", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["10664576469733281", "198713618410005245"]}], 
      FractionBox["4654122215785238", "198713618410005245"], 
      FractionBox["24271296951950496", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["14941941986789652", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["13422650119304091", "198713618410005245"]}], 
      FractionBox["4748660072608317", "39742723682001049"], 
      FractionBox["11547775744693377", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["14716711780240431", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["16159240557864311", "198713618410005245"]}]},
     {
      FractionBox["6712805203995053", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["10056240327427558", "198713618410005245"]}], 
      FractionBox["1885994021021263", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["7380217352257061", "198713618410005245"]}], 
      FractionBox["1907933995602850", "119228171046003147"], 
      RowBox[{"-", 
       FractionBox["563607594322426", "198713618410005245"]}], 
      FractionBox["24728986743566689", "596140855230015735"], 
      FractionBox["4486937155176082", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["1156863842019866", "39742723682001049"]}], 
      FractionBox["7194912000310524", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["21086288035879241", "596140855230015735"]}], 
      FractionBox["58973749445162443", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["4830672688688528", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["37723423521894143", "596140855230015735"]}], 
      FractionBox["6622340106466481", "596140855230015735"], 
      FractionBox["47790495447576658", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["4720915153999915", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["1159122275765336", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["3088453043332342", "596140855230015735"]}], 
      FractionBox["4874390505088118", "596140855230015735"]},
     {
      RowBox[{"-", 
       FractionBox["29424994152498118", "596140855230015735"]}], 
      FractionBox["15593381935166283", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["16657165231536048", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["15909656553066599", "198713618410005245"]}], 
      FractionBox["13048497201694114", "119228171046003147"], 
      FractionBox["32077803861602311", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["40950626095489169", "596140855230015735"]}], 
      FractionBox["1750402619104363", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["2761743189941615", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["7518789007898084", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["57386479685173844", "596140855230015735"]}], 
      FractionBox["47910530449048027", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["718528242365762", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["77337213940064327", "596140855230015735"]}], 
      FractionBox["63018719740271099", "596140855230015735"], 
      RowBox[{"-", 
       FractionBox["2298605342339363", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["4482114150140287", "119228171046003147"]}], 
      RowBox[{"-", 
       FractionBox["4285876029087044", "596140855230015735"]}], 
      RowBox[{"-", 
       FractionBox["2156188905025048", "596140855230015735"]}], 
      FractionBox["79525555829912972", "596140855230015735"]},
     {
      RowBox[{"-", 
       FractionBox["34205750750744834", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["8541122601114863", "198713618410005245"]}], 
      FractionBox["41631102090425183", "198713618410005245"], 
      FractionBox["40828107294072394", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["5952973591693854", "39742723682001049"]}], 
      RowBox[{"-", 
       FractionBox["32533170619968631", "198713618410005245"]}], 
      FractionBox["58280239487940653", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["16432295049492483", "198713618410005245"]}], 
      FractionBox["836752341563747", "39742723682001049"], 
      FractionBox["1533769207367869", "198713618410005245"], 
      FractionBox["37685200846430558", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["35642023023615994", "198713618410005245"]}], 
      FractionBox["15190331712055387", "198713618410005245"], 
      FractionBox["37337382407225774", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["27301457130948298", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["12625116929096064", "198713618410005245"]}], 
      FractionBox["2316306156976358", "39742723682001049"], 
      FractionBox["1492865398339918", "198713618410005245"], 
      RowBox[{"-", 
       FractionBox["8808271662000024", "198713618410005245"]}], 
      RowBox[{"-", 
       FractionBox["23722973129439919", "198713618410005245"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825061943265538*^9},
 CellLabel->
  "Out[22]//MatrixForm=",ExpressionUUID->"8e8beced-7871-43af-ae72-\
d9247be2de86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"h", ".", 
   RowBox[{"Inverse", "@", "h"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8250619619747467`*^9, 3.825061978182452*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"42ddac25-9b8d-45ab-8da4-786e7e4f06b4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8250619784721203`*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"d1cf5f80-2bed-42ce-9d70-\
727798ef27ef"]
}, Open  ]],

Cell["Identity Matrix Above", "Text",
 CellChangeTimes->{{3.8250620433682833`*^9, 
  3.825062052093759*^9}},ExpressionUUID->"0b0502cb-d7e9-459b-ae9a-\
9702a2d9d7c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IdentityMatrix", "[", "20", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.825062053935665*^9, 3.825062060384941*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"85227841-1eca-4160-bc05-2f4ba4892f89"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825062060905128*^9},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"7574a553-eefb-4ad1-9408-\
e5872670853a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.825146158655552*^9, 3.8251461589854403`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bfa6df21-cd3a-41a5-b84e-a771eaa7ebca"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 19 Mar 2021 08:35:59\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "3", ",", "19", ",", "8", ",", "35", ",", 
           "59.226868`8.525093740213253"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.825146159242095*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"95670e06-fd06-40ab-ab6f-f67a530f5858"]
}, Open  ]],

Cell["\<\
find the equation of the parabola that passes through these 3 points\
\>", "Text",
 CellChangeTimes->{{3.8267101088040333`*^9, 
  3.8267101209890213`*^9}},ExpressionUUID->"e3e2f9c0-df69-4a1b-9ea6-\
c3be09e73a5f"],

Cell["\<\
{{1,-6},{-4,49},{5,22}}
y = ax^2 + bx + c\
\>", "Text",
 CellChangeTimes->{{3.825146161808942*^9, 3.8251461881491833`*^9}, 
   3.8251462891000137`*^9},ExpressionUUID->"681fe3ba-c232-4236-9677-\
40230b733457"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RowReduce", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", 
      RowBox[{"-", "6"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"16", ",", 
      RowBox[{"-", "4"}], ",", "1", ",", "49"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"25", ",", "5", ",", "1", ",", "22"}], "}"}]}], 
   "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.825146353914611*^9, 3.825146414700323*^9}, {
  3.8267100519300013`*^9, 
  3.826710052484559*^9}},ExpressionUUID->"97a40b6b-5731-4a8c-809d-\
5bd25a1de6ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.825146389966948*^9, 3.8251464151439753`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"44b58277-f016-431a-9845-9e2a6de84718"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"2", 
     RowBox[{"x", "^", "2"}]}], "-", 
    RowBox[{"5", "x"}], "-", "3"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "12.5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PointSize", "@", "0.02"}], ",", " ", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "6"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "49"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "22"}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.825146426303783*^9, 3.8251465120395184`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"dfaf4797-361a-4af4-9e63-1fc1119a9288"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
H0KHiP//h/wPedI8kw==
       "]]},
     Annotation[#, "Charting`Private`Tag$2493#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.02], 
    PointBox[{{1, -6}, {-4, 49}, {5, 22}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 12.5}, {-6.1249940023727945`, 246.9999793367351}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.825146440118237*^9, 3.8251464577972727`*^9}, 
   3.8251465129967813`*^9, 3.826709956201771*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"5a85ef47-c1cf-4c4a-ad78-978048beb892"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.826978627441743*^9, 3.8269786277886667`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a889932e-35d7-4659-a0b8-5b25a4983114"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 9 Apr 2021 13:37:08\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "9", ",", "13", ",", "37", ",", 
           "8.07184`7.659547531707552"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.826978628088867*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7c1071bc-c849-4a69-bcea-422536e3a5fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{"Parallelogram", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "lower", " ", "left", " ", "corner", " ", "and", " ", "2", " ", "defining",
     " ", "vectors"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.826978630933567*^9, 
  3.826978686432269*^9}},ExpressionUUID->"0c4f629f-ed39-48b9-8f38-\
df551adf9097"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[PolygonBox[{{0, 0}, {5, 1}, {7, 7}, {2, 6}}],
   Parallelogram[{0, 0}, {{5, 1}, {2, 6}}]]]], "Output",
 CellChangeTimes->{3.826978651572701*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"dd50ce3f-14e6-4dcf-a08a-94b3f5432d1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Area", "[", 
  RowBox[{"Parallelogram", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.826978756820014*^9, 3.8269787661660547`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"7f2159c8-29c6-4366-9d8a-a9a459cf6c59"],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{3.826978766757553*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"5c3679a1-06c8-41d8-bf82-65160b051e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8269788371758413`*^9, 3.826978841632934*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7ee0bb35-47d0-45f2-94da-90e9224757f4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5", "1"},
     {"2", "6"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.826978841868462*^9, 3.826978866045929*^9}},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"46d095f6-374c-4008-bda7-\
71aad553aa75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.826978850707341*^9, 3.826978856276607*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"642ea0dc-e978-4992-a7ad-341403685c94"],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{3.826978856488646*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"279c46cd-7ac1-4425-8af1-ed03314834ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vectors", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
    "3"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.826978968018969*^9, 3.826978969648623*^9}, {
  3.826979000028955*^9, 3.826979014403234*^9}, {3.826979046736807*^9, 
  3.826979057800308*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"2d6986d9-4e50-47aa-93a8-9c549103eae7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.826979058633812*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"7d1087c9-b9c3-407e-be0c-b2fe2ecb4854"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", "%", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"/@", " ", 
    RowBox[{"=", " ", 
     RowBox[{"short", "-", 
      RowBox[{"hand", " ", "for", " ", 
       RowBox[{"Map", "[", "]"}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.826979016549973*^9, 3.8269790432201347`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"1bb533e2-192e-4e63-b4e3-ebfff11c93d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "7"},
       {"1", "7"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"7", "5"},
       {"5", "7"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "6"},
       {"8", "9"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.8269790221318197`*^9, 3.826979060549371*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"05c6289f-2507-433e-b86e-2bb350bf110f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrices", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     "300"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.826979065690377*^9, 3.826979081042326*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"914bf128-ac72-42db-b359-e4db0e718845"],

Cell[BoxData[
 RowBox[{
  RowBox[{"determinants", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Det", "[", "#", "]"}], "&"}], ",", "\[IndentingNewLine]", 
     "matrices"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.826979083004341*^9, 3.826979091077599*^9}, {
  3.826979170628274*^9, 3.826979176212564*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"d414c3a0-8ae4-4f44-b80d-aee3d47b291a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"matrices", "[", 
   RowBox[{"[", "199", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.826979124608898*^9, 3.82697913115792*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"3f1699e5-fab3-491a-95cc-89c92008bcff"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"5", "5"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.826979131365756*^9, 3.826979178928527*^9},
 CellLabel->
  "Out[19]//MatrixForm=",ExpressionUUID->"f90ccad2-a23a-404f-934f-\
38a50f99d8af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"determinants", "[", 
  RowBox[{"[", "199", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.826979161345839*^9, 3.826979182920683*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"e7f8b476-6a3e-4dce-aace-561e89da8aa0"],

Cell[BoxData[
 RowBox[{"-", "5"}]], "Output",
 CellChangeTimes->{3.826979183468973*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"29f19918-1461-488a-bc64-a521bc8d9e02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.827393375072646*^9, 3.8273933754008083`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"55eb0f81-91c1-40b3-be99-f67426a5b906"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 14 Apr 2021 08:49:35\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "14", ",", "8", ",", "49", ",", 
           "35.864292`8.307237241425842"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.827393375886194*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6e958c8a-efad-455b-8c9c-4e368e3d347a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SeedRandom", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.827393378962978*^9, 3.8273933818626623`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"88b8d59b-a9fc-4b04-884d-262c5e069a0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"generators", " ", "=", " ", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.827393383974124*^9, 3.827393400803767*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6519a0c8-c016-40b1-8c69-606af7b69ed8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.827393402458269*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ef307da0-d5cf-46fd-9339-d7830fc0c5d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
  RowBox[{"Parallelepiped", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "generators"}], "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.827393404144204*^9, 3.827393448008572*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0570c899-8df6-480f-ae2a-51d66d8ee5ae"],

Cell[BoxData[
 Graphics3DBox[
  InterpretationBox[
   HexahedronBox[{{0, 0, 0}, {-1, 2, -2}, {4, 0, -4}, {5, -2, -2}, {6, 
    4, -2}, {5, 6, -4}, {10, 4, -6}, {11, 2, -4}}],
   Parallelepiped[{0, 0, 0}, {{-1, 2, -2}, {5, -2, -2}, {6, 
    4, -2}}]]]], "Output",
 CellChangeTimes->{3.827393587154258*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d1d3ae0c-ecb1-4c8c-8b87-d37404880b65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Volume", "[", 
   RowBox[{"Parallelepiped", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "generators"}], "]"}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.827393476887487*^9, 3.827393484931677*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"9cb0c85b-fc44-470f-a69a-509c91a2d0a5"],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{3.827393485443776*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"7b1bf177-8e9e-440f-a44b-b63180d86cd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2", ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "4", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8273935072241297`*^9, 3.827393508624845*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f5507410-03ae-4382-9ac2-b5b92b3fd657"],

Cell[BoxData[
 RowBox[{"-", "80"}]], "Output",
 CellChangeTimes->{3.827393509359622*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"7480b67f-119b-4086-b6f5-e3a78897c6b2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "abolsute", " ", "value", " ", "of", " ", "determinant", " ", "gives", " ", 
   "volume"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8273935157378597`*^9, 3.827393527863521*^9}, {
  3.827393599265078*^9, 
  3.827393600988318*^9}},ExpressionUUID->"370a9243-09a8-44b7-8f7a-\
da80db57c256"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.82739360488684*^9, 3.827393648896324*^9}, {
  3.827393899694831*^9, 
  3.8273939126349277`*^9}},ExpressionUUID->"75510601-b2e5-493c-906d-\
82c7400a23bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "b"}], " ", "c"}], "+", 
  RowBox[{"a", " ", "d"}]}]], "Output",
 CellChangeTimes->{{3.8273936202452*^9, 3.827393649369507*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"b113939d-2f35-4aac-a2fa-4408769f435d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8273936582012167`*^9, 3.8273936733753233`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"5d732d4f-c5f8-443a-9019-f6e9f7d2ccfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "c"}], " ", "e", " ", "g"}], "+", 
  RowBox[{"b", " ", "f", " ", "g"}], "+", 
  RowBox[{"c", " ", "d", " ", "h"}], "-", 
  RowBox[{"a", " ", "f", " ", "h"}], "-", 
  RowBox[{"b", " ", "d", " ", "i"}], "+", 
  RowBox[{"a", " ", "e", " ", "i"}]}]], "Output",
 CellChangeTimes->{3.827393686717867*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"3e7851fe-0171-4e08-8dd9-8239e47cc55d"]
}, Open  ]],

Cell["\<\
factor
a (e i - f h) - b (d i - f g) + c (d h - e g)\
\>", "Text",
 CellChangeTimes->{{3.8273937898852777`*^9, 
  3.827393848326729*^9}},ExpressionUUID->"31a01a51-a44b-4a1c-8756-\
29fa41559fac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bigMatrix", " ", "=", " ", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.827394082219318*^9, 3.827394099000107*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a7a58c97-7292-4d51-b24a-0b19cc4555e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "8", ",", 
     RowBox[{"-", "1"}], ",", "4", ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "4", ",", "2", ",", "9", ",", "3", 
     ",", "2", ",", "1", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3", ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "0", ",", "9", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "0", ",", "1", ",", "7", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "2", ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "0", ",", "9", ",", "5", ",", "7", 
     ",", "7", ",", "6", ",", "8", ",", 
     RowBox[{"-", "2"}], ",", "8", ",", "8", ",", "5", ",", "2", ",", "7", 
     ",", "0", ",", "4", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "4", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "6", ",", "4", ",", "3", ",", "4", 
     ",", 
     RowBox[{"-", "2"}], ",", "8", ",", "5", ",", "7", ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "2", ",", "8", ",", "9", ",", "9", 
     ",", "1", ",", "3", ",", "0", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "3", ",", "9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "1", ",", "4", ",", "1", ",", "8", ",", "1", ",", "8", ",", "1",
      ",", "2", ",", "5", ",", "9", ",", 
     RowBox[{"-", "2"}], ",", "5", ",", "9", ",", "8", ",", "5", ",", "8", 
     ",", "1", ",", "3", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "0", ",", "4", ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "8", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "9", ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "3", ",", "9", ",", "7", ",", "7", 
     ",", "8", ",", "0", ",", "5", ",", "9", ",", "5", ",", "2", ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "5", ",", "1", ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "7", ",", "5", ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "6", ",", "7", ",", "1", ",", "9", 
     ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "3", ",", "3", ",", "2", ",", "8", 
     ",", "7", ",", "6", ",", "0", ",", "3", ",", "6", ",", "7", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "1", ",", "1", ",", "3", ",", "2", 
     ",", "0", ",", "3", ",", "8", ",", "5", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", 
     RowBox[{"-", "2"}], ",", "6", ",", "7", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "7", ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "0", ",", "0", ",", "9", ",", "5", 
     ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "8", ",", "4", ",", "4", ",", "5", ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "4", ",", "2", ",", "5", ",", "0", 
     ",", 
     RowBox[{"-", "2"}], ",", "4", ",", "3", ",", "5", ",", "6", ",", "6", 
     ",", "9", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "4", ",", "2", ",", "9", ",", "3", ",", "3", ",", "0", ",", "4",
      ",", "1", ",", "0", ",", "4", ",", "9", ",", "4", ",", 
     RowBox[{"-", "1"}], ",", "7", ",", "3", ",", "5", ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "8", ",", "7", ",", "4", ",", "3", 
     ",", "1", ",", "2", ",", "8", ",", "1", ",", "3", ",", "9", ",", "7"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "0", ",", "7", ",", "6", ",", "7", ",", "5", ",", "4", ",", "9",
      ",", "0", ",", "7", ",", "9", ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "2", ",", "4", ",", "0", ",", "2", 
     ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "0", ",", "5", ",", "6", ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "9", ",", "2", ",", "2", ",", "4", 
     ",", "2", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "7", ",", "4", ",", "2", ",", "5", ",", "6", ",", "8", ",", 
     RowBox[{"-", "2"}], ",", "5", ",", "5", ",", "9", ",", "2", ",", "0", 
     ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "8", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "6", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "5", ",", "8", ",", "4", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4", ",", "2", ",", "1", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "8", ",", "4", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "9", ",", "4", ",", "9", ",", "8", ",", "1", 
     ",", 
     RowBox[{"-", "2"}], ",", "7", ",", "6", ",", 
     RowBox[{"-", "1"}], ",", "9", ",", "1", ",", "7", ",", "7", ",", "8", 
     ",", 
     RowBox[{"-", "2"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "2", ",", "3", ",", "1", ",", "4", ",", "2", ",", "0", ",", "8",
      ",", "9", ",", 
     RowBox[{"-", "2"}], ",", "6", ",", "0", ",", "9", ",", "8", ",", "5", 
     ",", "2", ",", "5", ",", "3", ",", "5", ",", "8", ",", "7", ",", "6", 
     ",", "3", ",", "1", ",", "9", ",", "5", ",", "3", ",", "5", ",", "4", 
     ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "4", ",", "1", ",", "6", ",", "7", ",", "6", ",", "9", ",", "8",
      ",", "1", ",", "6", ",", "8", ",", "2", ",", "1", ",", "2", ",", "6", 
     ",", "9", ",", "6", ",", "8", ",", "4", ",", "0", ",", "6", ",", "1", 
     ",", "9", ",", "9", ",", "4", ",", "3", ",", "9", ",", "2", ",", "1", 
     ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "7", ",", "8", ",", "4", ",", "3", ",", "5", ",", "0", ",", "9",
      ",", "6", ",", "2", ",", "0", ",", "7", ",", "3", ",", "9", ",", "0", 
     ",", 
     RowBox[{"-", "2"}], ",", "7", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", 
     RowBox[{"-", "1"}], ",", "8", ",", "0", ",", "6", ",", "3", ",", "5", 
     ",", "9", ",", "3", ",", "8", ",", "6", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "6", ",", "7", ",", "2", ",", "5", ",", "7", ",", "6", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "9", ",", "2", ",", "6", ",", "2", 
     ",", "0", ",", "6", ",", "3", ",", "5", ",", "4", ",", "5", ",", "9", 
     ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "8", ",", "8", ",", "2", ",", "6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "6", ",", "6", ",", "3", ",", "6", ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "0", ",", "6", ",", "9", ",", "5", 
     ",", "4", ",", "0", ",", "7", ",", "6", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "7", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "8", ",", "4", ",", "8", ",", "4", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "3", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "6", ",", "5", ",", "5", ",", "6", ",", "9", ",", "0", ",", "7",
      ",", "0", ",", "6", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", "5", ",", "0", ",", "3", ",", "7", ",", "0", 
     ",", "7", ",", "2", ",", "6", ",", "0", ",", "8", ",", "1", ",", "5", 
     ",", "3", ",", "6", ",", "1", ",", "8", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "3", ",", "4", ",", "5", ",", "8", ",", "9", ",", "3", ",", "1",
      ",", "7", ",", "9", ",", "6", ",", "8", ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "7", ",", "4", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "2", ",", 
     RowBox[{"-", "2"}], ",", "4", ",", "1", ",", "6", ",", "4", ",", "6", 
     ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "6", ",", "8", ",", "4", ",", "1", ",", "1", ",", "1",
      ",", "6", ",", "8", ",", "7", ",", "6", ",", "7", ",", "4", ",", "5", 
     ",", "5", ",", "4", ",", "2", ",", "6", ",", 
     RowBox[{"-", "1"}], ",", "7", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "2", ",", "5", ",", "1", ",", "5", 
     ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "8", ",", "6", ",", "4", ",", "2", 
     ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "6", ",", "5", ",", "8", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "7", ",", 
     RowBox[{"-", "1"}], ",", "7", ",", "4", ",", "8", ",", "5", ",", "2", 
     ",", "2", ",", "6", ",", "8", ",", "0", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8", ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "4", ",", "7", ",", "7", ",", "6", 
     ",", "7", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "8", ",", "8", ",", "8", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "0", ",", "5", ",", "3", ",", "9", 
     ",", "2", ",", "4", ",", 
     RowBox[{"-", "2"}], ",", "5", ",", "3", ",", "8", ",", "3", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "9", ",", "7", ",", "8", ",", "2", ",", "0", ",", "3", ",", "9",
      ",", "1", ",", "5", ",", "7", ",", "5", ",", "2", ",", "0", ",", "4", 
     ",", "0", ",", "9", ",", "1", ",", "2", ",", "2", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "5", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "2", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "7", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "7", ",", "2", ",", "7", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "8", ",", 
     RowBox[{"-", "2"}], ",", "9", ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "6", ",", "5", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "4", ",", "7", ",", "0", 
     ",", "3", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "7", ",", "4", ",", "8", ",", "9", 
     ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "7", ",", "6", ",", "2", ",", "1", 
     ",", "5", ",", "7", ",", "0", ",", "1", ",", "6", ",", "5", ",", "1", 
     ",", "4", ",", "9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "3", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "7", ",", "7", ",", "6", ",", "1", 
     ",", "3", ",", "3", ",", "6", ",", 
     RowBox[{"-", "1"}], ",", "9", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "1", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "3", ",", "5", ",", "3", ",", "7", 
     ",", "5", ",", "7", ",", "3", ",", "9", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2", ",", "6", ",", "5", ",", "5", ",", "5", 
     ",", "3", ",", "9", ",", 
     RowBox[{"-", "1"}], ",", "9", ",", "1", ",", "0", ",", "9", ",", "8", 
     ",", "5", ",", "7", ",", "0", ",", "1", ",", "1", ",", "1", ",", "7", 
     ",", "2", ",", 
     RowBox[{"-", "1"}], ",", "9", ",", "3", ",", "9", ",", "7", ",", "4", 
     ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "5", ",", "1", ",", "6", ",", "0", ",", "9", ",", "9", ",", "7",
      ",", "2", ",", "8", ",", "9", ",", "8", ",", "2", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "1", ",", "6", ",", "5", ",", "7", 
     ",", "4", ",", "0", ",", "2", ",", 
     RowBox[{"-", "2"}], ",", "6", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "0", ",", "6", ",", "5", ",", 
     RowBox[{"-", "1"}], ",", "8", ",", "5", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "9", ",", "1", ",", "1", ",", "5", ",", "0", 
     ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "5", ",", "9", ",", "2", ",", "8", ",", "9", 
     ",", 
     RowBox[{"-", "2"}], ",", "7", ",", "2", ",", "5", ",", "0", ",", "9", 
     ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "4", ",", "1", ",", "6", ",", "7", ",", "9", ",", "7", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "1", ",", "8", ",", "6", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "7", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "9", ",", "0", ",", "5", ",", "5", 
     ",", "8", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", "7", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9", ",", "5", ",", 
     RowBox[{"-", "2"}], ",", "9", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "7", ",", "5", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "8", ",", "5", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "8", ",", "6", ",", "1", ",", "6", 
     ",", "1", ",", "0", ",", "7", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "3", ",", "5", ",", "7", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.827394099406199*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"efb47737-ebb5-4b30-a818-2e931c4f71c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", "bigMatrix", "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.827394137481063*^9, 3.827394147569777*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"aab4a54a-eac2-44c4-b03a-47c623cf68f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.006874`", ",", 
   RowBox[{"-", "80221515250496496604725081368300"}]}], "}"}]], "Output",
 CellChangeTimes->{3.827394148172327*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"298cd311-bc26-4391-b829-72239e0d8870"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", "\[IndentingNewLine]", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "1000"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.827394159353002*^9, 3.8273941782548647`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e672719f-05ca-4339-8e16-1ab84f242c2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "31.455705`", ",", 
   "50929431394046758999324844416637787106523427291379096440572883498521402697\
859622359463727806287523557481885879178668380382265535088702007325482877156327\
150853314710725051889026135802285050727366727011591771919956652290649974129549\
996794582803494841257408931022604861061139979286283200899810458395771282109911\
459418857704756925140652945880547413342279660649182141262314238619871385601502\
859185884141503950881410710011017804396599887319797308664561635505148038387078\
000765697957637029539075024266858744478444056496018962539876155497965588762362\
277426090073753146935076887611549298518442213173324531491268660809065706627299\
378219949320662668685514036462979432463829147553600207264262316355059590366862\
841343337688447122973130686675233224882924511135765561501668943620324881317636\
172044401535072843787930464637038440073041329947542721684666378242127162692751\
386457128393428500210526293361280589730443269903793983081448206041974616812951\
306927145967084023648827114193599932756751673357192965967893203928766558823348\
570294999906578747114519524136871172336335449353853087779872496731904116764166\
213962970051319189312702043320346023410036140262726773412338736207015858794492\
214672477244844904290712738899657831992136007627725205469582158142771681066773\
908267683285770183311421514761117563120020091240330708053044304534821067350256\
760756610041875062216846469309415160107468756390148107948495818997102508416937\
186883928694694065040554966634321520172606943048113838871506519175519749676625\
264190044014482412209206189638579727983782926758512780877079323868838692363790\
074209088300555097392835619475677854358174922943788031192102375358755629146568\
523240227302167017941446839724266765602811290474584810387029503217157622673860\
085852519334957895928852075307654353313151873767948805012526091765839641536940\
77142310601103503779626307813048"}], "}"}]], "Output",
 CellChangeTimes->{{3.827394179148217*^9, 3.827394183949415*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"61ef920b-1eb8-44f9-94b3-25324930405e"]
}, Open  ]],

Cell["draw the (9,4), (8,10) pGram from the matrices03 HW", "Text",
 CellChangeTimes->{{3.827394459609671*^9, 
  3.8273944738175087`*^9}},ExpressionUUID->"952aa609-1c95-436c-95dc-\
37faba553ff0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Green", ",", 
     RowBox[{"EdgeForm", "@", "Thick"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Parallelogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.827394475384551*^9, 3.827394512879526*^9}, {
   3.827394577939909*^9, 3.827394609579308*^9}, 3.827394770296885*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"883da22e-ad0c-4e8d-ab61-2d0934f0dd0b"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 1, 0], EdgeForm[Thickness[Large]], 
   InterpretationBox[PolygonBox[{{0, 0}, {9, 4}, {17, 14}, {8, 10}}],
    Parallelogram[{0, 0}, {{9, 4}, {8, 10}}]]},
  Axes->True]], "Output",
 CellChangeTimes->{{3.8273944965842047`*^9, 3.827394513258794*^9}, {
   3.827394583430725*^9, 3.8273946098932657`*^9}, 3.827394770895445*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"a68294cd-d0e4-4aff-aebb-89cad10fdf6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.827824593625387*^9, 3.827824593981352*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"66dc04bc-f093-4f6b-a74a-f51310a1a3d3"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 19 Apr 2021 08:36:34\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "19", ",", "8", ",", "36", ",", 
           "34.191461`8.286492638468314"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8278245942098513`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"11c7a853-9e0a-4c8d-98fd-dee2d3c0831f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"corners", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.827824601580594*^9, 3.8278246575989237`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"db5231c7-ff14-441c-92b8-f50243f73409"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8278246414437923`*^9, 3.8278246584124937`*^9}, 
   3.827919799021779*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"1ca28b74-e5d8-4897-bd25-ab082e2f6959"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"Blue", ",", 
    RowBox[{"Polygon", "[", "corners", "]"}]}], "}"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{3.827920194960514*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"af5c12c5-f84c-4e94-a977-95af7ae83e51"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 1], 
   PolygonBox[{{3, 1}, {6, 2}, {1, 7}, {-6, 2}, {-5, -5}, {
    4, -2}}]}]], "Output",
 CellChangeTimes->{3.827920195199246*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1d412f23-ca52-40b5-b9ab-dd8f9ad90877"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8279201844560633`*^9, 3.827920184811749*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"00db3748-50f3-4e07-b76c-455bb8327143"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 20 Apr 2021 11:09:45\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "20", ",", "11", ",", "9", ",", 
           "45.51747`8.410753091530223"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.827920185538353*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"b7e3e182-20ed-47cb-bb57-2b66f89cedb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EdgeForm", "@", "Thick"}], ",", "Red", ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"Dot", "[", 
       RowBox[{"corners", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
     "White", ",", 
     RowBox[{"Polygon", "[", "corners", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8278255854917927`*^9, 3.827825772525242*^9}, 
   3.827825984045615*^9, {3.827919430693275*^9, 3.827919461726944*^9}, 
   3.8279197943939123`*^9, {3.827920010822315*^9, 3.8279200457662973`*^9}, {
   3.82792020464292*^9, 3.827920212351737*^9}, {3.8279209823161793`*^9, 
   3.827921006393168*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2226d4c5-7f9b-490d-b260-56a899e8aeb0"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], EdgeForm[Thickness[Large]], 
   PolygonBox[{{12, 4}, {24, 8}, {4, 28}, {-24, 8}, {-20, -20}, {16, -8}}], 
   {GrayLevel[1], 
    PolygonBox[{{3, 1}, {6, 2}, {1, 7}, {-6, 2}, {-5, -5}, {4, -2}}]}},
  Axes->True]], "Output",
 CellChangeTimes->{{3.8279197947179413`*^9, 3.8279198003187037`*^9}, {
   3.827920029141513*^9, 3.827920046022607*^9}, 3.827920212671151*^9, {
   3.82792098662684*^9, 3.827921006787969*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"9ac1a49f-9d94-42c3-a345-25e19306841d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "0", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8279200614196663`*^9, 3.827920094152817*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"d5793b40-f820-4f73-9f85-5c3ba5e41414"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "16"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.827920095318573*^9, 3.82792029951231*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"88d5e3dd-7eab-41dc-aa9a-cb8cc4582964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.827920300965868*^9, 3.827920303425173*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"762fef5f-06ba-4b01-aca6-873ad0d31e46"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"28", 
      RowBox[{"-", "3"}]},
     {"0", 
      RowBox[{"-", "16"}]},
     {"34", "5"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.827920303727231*^9},
 CellLabel->
  "Out[14]//MatrixForm=",ExpressionUUID->"5b0124e1-f212-4642-9410-\
bab16ab358c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"28", ",", 
      RowBox[{"-", "3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "16"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"34", ",", "5"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.827920512408395*^9, 3.827920515309167*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"510f936f-af36-45b0-b999-3eff01a1a5fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", 
   RowBox[{"-", "3"}], ",", "0", ",", 
   RowBox[{"-", "16"}], ",", "34", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.827920515763485*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"05306ab4-cbfd-41fa-9a24-e4d4e373d65a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", "%"}]], "Input",
 CellChangeTimes->{{3.827920518169064*^9, 3.827920521306952*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"557f3d6d-b876-4fbf-b694-c3671394779c"],

Cell[BoxData["48"], "Output",
 CellChangeTimes->{3.827920521619104*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"c79bbc27-984c-4f4f-be86-cd1900d1e134"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EdgeForm", "@", "Thick"}], ",", "\[IndentingNewLine]", "Red", 
       ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"Dot", "[", 
         RowBox[{"corners", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"h", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "v"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "White", ",", 
       RowBox[{"Polygon", "[", "corners", "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", "55"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "70"}], ",", "70"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "4"}], "}"}], ",", "1", ",", "9", ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "4"}], "}"}], ",", "1", ",", "9", ",", "1"}], "}"}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8279210255849333`*^9, 3.827921088078599*^9}, {
  3.8279211348619947`*^9, 3.827921169846451*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ce2ee754-df43-40d6-a207-beaf6e60adef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Area", "[", 
  RowBox[{"Polygon", "[", 
   RowBox[{"Dot", "[", 
    RowBox[{"corners", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "7"}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827921341020774*^9, 3.827921357525855*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"b06fe8dd-7f53-49a2-bc86-cd6f00fd952e"],

Cell[BoxData["5166"], "Output",
 CellChangeTimes->{{3.827921346154016*^9, 3.827921357711664*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"07134d84-e6d5-4e8c-901e-c3fd0d6a2d43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Area", "[", 
  RowBox[{"Polygon", "[", "corners", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.82792136037075*^9, 3.827921372993211*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9353885d-1018-45d3-90e3-c2b5f1374f05"],

Cell[BoxData["82"], "Output",
 CellChangeTimes->{3.827921374361821*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1d1e1182-e01f-4c10-8d20-7422fff48df5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5166", "/", "82"}]], "Input",
 CellChangeTimes->{{3.827921375680941*^9, 3.827921383745685*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"c3c92a73-0415-4c19-a584-be411a110c8f"],

Cell[BoxData["63"], "Output",
 CellChangeTimes->{3.827921384273418*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"824fda70-3edb-4822-9e40-7850f86a8b04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"9", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "7"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.827921398680517*^9, 3.82792140717845*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"14183407-c269-4701-9929-2a3f7c8ed1b1"],

Cell[BoxData["63"], "Output",
 CellChangeTimes->{3.827921407525193*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"3994ca20-76a8-4d0d-9ff5-a7095775b9e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8280054382463827`*^9, 3.8280054386070137`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d6ddfb4a-66a2-4969-8be7-fbb50cf67e8b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 21 Apr 2021 10:50:38\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "21", ",", "10", ",", "50", ",", 
           "38.823875`8.341673858820638"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8280054388424683`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a92f3b6e-2665-477e-9363-ad01377658cc"]
}, Open  ]],

Cell["Matrices03HW", "Text",
 CellChangeTimes->{{3.828005443660369*^9, 
  3.828005446079567*^9}},ExpressionUUID->"d98e3b36-2234-427f-b7a3-\
7532edbe4a9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"a", " ", "d"}], " ", "-", " ", 
       RowBox[{"b", " ", "c"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "3", ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.828005447204517*^9, 3.828005467850183*^9}, {
  3.82800551328432*^9, 3.82800552014939*^9}, {3.8280055670039873`*^9, 
  3.8280055704134493`*^9}, {3.8280056174650383`*^9, 3.828005623892624*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2567dcd5-b8f8-419c-ad8a-96e0491ea2c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.828005469909278*^9, {3.828005514828458*^9, 3.828005520402547*^9}, 
   3.828005571096849*^9, 3.828005628075042*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"76dbefdc-d855-4626-a640-464d0557a2e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"Tally", "[", "\[IndentingNewLine]", 
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"a", " ", "d"}], " ", "-", " ", 
        RowBox[{"b", " ", "c"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"b", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"c", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"d", ",", "0", ",", "3", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.828005637709882*^9, 3.828005645386861*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8d943cbd-105a-45e7-baac-3440af780412"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0., 64.}, {1., 30.}, {2., 40.}, {3., 42.}, {4., 22.}, {6., 
     32.}, {9., 14.}, {5., 6.}, {8., 2.}, {7., 4.}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9.}, {0, 64.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828005646049164*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"7ef94864-b852-4c91-81a2-52e3f1b4d9f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vectorList", " ", "=", " ", 
  RowBox[{"Select", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"a", " ", "d"}], " ", "-", " ", 
            RowBox[{"b", " ", "c"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"b", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"d", ",", "0", ",", "3", ",", "1"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "3"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", "6"}], "&"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.828005895219331*^9, 3.82800600979722*^9}, 
   3.828006083273218*^9, {3.828006328337698*^9, 3.828006335239195*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"12dd5fec-0d15-45a2-81ab-a0156e4d2ae3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "2", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "2", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "2", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "3", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "3", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "0", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "0", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "2", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "3", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "0", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "3", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "0", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "0", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "1", ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.828005900864628*^9, 3.8280059058815613`*^9}, 
   3.828005956649352*^9, 3.828006010094133*^9, 3.828006084556712*^9, 
   3.828006335705123*^9, 3.828006658508007*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"b0221ded-1d44-4735-b4f7-1e4f36a69cdd"]
}, Open  ]],

Cell["\<\
^this previous output tells us -- indirectly -- all the vectors that generate \
parallelograms with area 6.\
\>", "Text",
 CellChangeTimes->{{3.828006100132268*^9, 
  3.828006121180698*^9}},ExpressionUUID->"0361e9a1-3403-425f-a65c-\
78fd27addff4"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.828103031345724*^9, 3.828103031613929*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3c51271c-8b53-4c2d-8efd-0f1e313fc1f6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 22 Apr 2021 13:57:11\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "22", ",", "13", ",", "57", ",", 
           "11.86844`7.826968624750705"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.828103031887936*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"897adf7a-f123-41f7-9640-fece853c705f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "\[IndentingNewLine]", "}"}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.828101888779752*^9, 3.828101924731718*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3de2a615-c3eb-4982-b309-f5912abf9a3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "c"}], " ", "e", " ", "g"}], "+", 
  RowBox[{"b", " ", "f", " ", "g"}], "+", 
  RowBox[{"c", " ", "d", " ", "h"}], "-", 
  RowBox[{"a", " ", "f", " ", "h"}], "-", 
  RowBox[{"b", " ", "d", " ", "i"}], "+", 
  RowBox[{"a", " ", "e", " ", "i"}]}]], "Output",
 CellChangeTimes->{3.828101925382801*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"7a4957d8-c4c1-455d-9843-34775addcc78"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"detOpps", "[", "2", "]"}], " ", "=", " ", "3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"detOpps", "[", "3", "]"}], " ", "=", " ", "14"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"detOpps", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"detOpps", "[", 
     RowBox[{"n", "-", "1"}], "]"}]}], " ", "+", 
   RowBox[{"2", "n"}], "-", "1", "\[IndentingNewLine]"}]}]}], "Input",
 CellChangeTimes->{{3.828102918867844*^9, 3.828102997851177*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"11240638-0fdc-46ec-905a-e2c8a89f3473"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"detOpps", "[", "6", "]"}]], "Input",
 CellChangeTimes->{{3.82810300565594*^9, 3.828103009233734*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"26b20bbb-8ac3-43b4-981e-7345349c15fd"],

Cell[BoxData["1955"], "Output",
 CellChangeTimes->{3.828103009684718*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"2b8551da-8b00-4d07-ac38-aa7a43956680"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.828188685839332*^9, 3.828188686149688*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f4d4d20f-d720-43a1-a93f-8c739f96d8c8"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 23 Apr 2021 13:44:46\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "4", ",", "23", ",", "13", ",", "44", ",", 
           "46.339952`8.418530556215181"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.828188686356701*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"5a6bdd27-539f-452f-8108-d523bec8ee42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "1", ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "1", ",", "3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "2", ",", "1", ",", "2"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8281886890142*^9, 3.828188728902626*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e6364b07-0de7-4770-bb88-720b01797e1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"27", ",", "12", ",", "12", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8281887294220657`*^9, 3.828188738603799*^9}, 
   3.8281887973747683`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"52169bc5-3137-41dc-90ad-84b56627bdff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.828188730730239*^9, 3.828188739789665*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b373f40c-90d9-4b3f-9691-eb7e804912a5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"27", "12", "12", "16"},
     {
      RowBox[{"-", "2"}], 
      RowBox[{"-", "4"}], 
      RowBox[{"-", "5"}], "2"},
     {
      RowBox[{"-", "4"}], 
      RowBox[{"-", "6"}], 
      RowBox[{"-", "1"}], "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.828188740009598*^9, {3.828188794646758*^9, 3.8281887990968027`*^9}},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"c1711f94-5d1b-4d1b-a2de-\
73dda14afd86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"Out", "[", "627", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828188745475175*^9, 3.8281887853769836`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"d9505df3-e3e7-425b-b2a9-a7d707e9dd67"],

Cell[BoxData[
 RowBox[{"Det", "[", "%627", "]"}]], "Output",
 CellChangeTimes->{{3.828188767412263*^9, 3.828188800582106*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"f6014e5e-1cdf-447e-ba18-5c3fa1c90f4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "8", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.828602481625009*^9, 3.828602513076144*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"1def4507-93d7-45fc-86dc-020c572842c1"],

Cell[BoxData["93"], "Output",
 CellChangeTimes->{{3.828602507110383*^9, 3.828602513644518*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"f68b8067-df51-4bd3-9a83-08a9953472c8"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s generate ALL the 3 x 3 matrices whose entries are \
integers from 1 to 9 w/ each value uese once and only once,\
\>", "Text",
 CellChangeTimes->{{3.828603971332028*^9, 
  3.8286039905414333`*^9}},ExpressionUUID->"e99e8c28-cf89-4218-8512-\
cb2794efda39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RandomSample", "[", "\[IndentingNewLine]", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "9"}], "]"}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", "3"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.828603992356518*^9, 3.828604020362564*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8b19b65d-f3b4-4ed5-9122-6608b3bca685"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828603999921782*^9, 3.8286040220960484`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"05398f2f-a83a-42f5-87a9-6c654f1c951f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Det", "@", "%"}]], "Input",
 CellChangeTimes->{{3.82860403535063*^9, 3.828604039011758*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0d23ea6f-7e73-4dc0-b212-89f267777b24"],

Cell[BoxData["117"], "Input",
 CellChangeTimes->{3.8286042112527943`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"512c10ef-62b4-46f7-ae0e-093d3a827623"],

Cell["Possible Options\[CloseCurlyDoubleQuote] 187, 85, 236, 120, 9, -238, \
113", "Text",
 CellChangeTimes->{{3.82860421371555*^9, 
  3.828604226905941*^9}},ExpressionUUID->"713a7a79-f7a3-4960-b2aa-\
d9cdc6fba30e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9", "!"}]], "Input",
 CellChangeTimes->{{3.828604201708034*^9, 3.828604202555355*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"e0c85329-dc0f-48d9-af61-6bc568e64ebe"],

Cell[BoxData["362880"], "Output",
 CellChangeTimes->{3.828604203104678*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"29eb417b-9703-4838-ac99-d4d0fa35f2a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Permutations", "[", 
  RowBox[{"Range", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828604313736614*^9, 3.828604337346405*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"9cf8206e-ed01-4fb0-b004-5cf7e13ed066"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828604328663445*^9, 3.828604337631135*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"2f6d63ae-360d-4165-bfbe-b243f9c08cb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "%"}]], "Input",
 CellChangeTimes->{{3.828604345522279*^9, 3.828604349537448*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a8ad082e-1e19-4088-bc5d-c12ccdcf559c"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.8286043499409637`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fe3f3337-3076-428c-aa42-222874b937e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "!"}]], "Input",
 CellChangeTimes->{{3.828604351630062*^9, 3.8286043523224154`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"f517d450-46d3-44ef-bc4c-9c4d1622a421"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.828604352732396*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"c7f658cf-05ea-4da7-9174-ceb3bdbd29a5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrices3x3", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", "3"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Permutations", "[", 
      RowBox[{"Range", "[", "9", "]"}], "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828604355991487*^9, 3.8286043896032953`*^9}, {
  3.828604430736348*^9, 3.8286044447712812`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f2d47204-28ae-4c8e-8b7e-675cc1c737af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrices3x3", "[", 
   RowBox[{"[", "99999", "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"99", ",", 
    RowBox[{
    "999", "th", " ", "matrix", " ", "in", " ", "the", " ", "list"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.828604461854368*^9, 
  3.828604490458807*^9}},ExpressionUUID->"af007f62-916c-4fa0-b799-\
ec98f73746d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8286044719222*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3102ce7d-c36d-4a37-a5bd-6f8bf44e3699"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.828604508493663*^9, 3.8286045112368517`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"cc3d16db-3749-4f91-98e5-80f71372a710"],

Cell[BoxData[
 RowBox[{"-", "163"}]], "Output",
 CellChangeTimes->{3.8286045114470778`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"5b9a44fe-954c-45c4-82df-ebffcc6a8897"]
}, Open  ]],

Cell["\<\
biggest possible determinant with these restrictions?
smallest? 
average determinant?
most common determinant?
total of the determinants?
more even or odd determinants?
ListPlot[] of values?
ListPlot[] of tallies?
Prime determinants?
fibonacci determinants?
\
\>", "Text",
 CellChangeTimes->{{3.828604593211898*^9, 
  3.8286047271166363`*^9}},ExpressionUUID->"2df5d117-db5e-413a-adab-\
78af4dca3ce2"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.829137658122871*^9, 3.8291376603305407`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"a344945d-0415-49b5-ba8a-55153c2f2e7f"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 4 May 2021 13:21:01\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "4", ",", "13", ",", "21", ",", 
           "1.058885`6.7774237850878"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.829137661062888*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"a030bafb-19b1-4d87-a5c5-468adfd289fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "5", ",", "1", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5", ",", "5", ",", "0", ",", "1", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "2", ",", "0", ",", "0", ",", "1"}], "}"}]}],
    "}"}]}]], "Input",
 CellChangeTimes->{{3.829138953531543*^9, 3.829138955845787*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"efea6e38-f125-425b-a7fb-e20f6350a2cb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "4", "5", "1", "0", "0"},
     {"3", "5", "5", "0", "1", "0"},
     {"3", "3", "2", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.829138956424755*^9},
 CellLabel->
  "Out[90]//MatrixForm=",ExpressionUUID->"6c748470-7c22-4485-bc18-\
31a66b4cf033"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RowReduce", "[", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "4", "5", "1", "0", "0"},
      {"3", "5", "5", "0", "1", "0"},
      {"3", "3", "2", "0", "0", "1"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "]"}]], "Input",
 CellChangeTimes->{{3.829137662776888*^9, 3.829137683110434*^9}, 
   3.829138961003524*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"9bc0ac9a-6913-48fe-a6ed-0ec4e82cfe3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", 
     RowBox[{"-", "5"}], ",", "7", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "9", ",", 
     RowBox[{"-", "13"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", 
     RowBox[{"-", "6"}], ",", "9", ",", 
     RowBox[{"-", "7"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.829137683610182*^9, 3.829138961531619*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"6e267e1c-b4d4-4813-aef3-647d9c5d0e34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.829138971747389*^9, 3.829138975858852*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"405ae651-64e6-4ca1-965e-771970656d11"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", 
      RowBox[{"-", "5"}], "7", 
      RowBox[{"-", "5"}]},
     {"0", "1", "0", "9", 
      RowBox[{"-", "13"}], "10"},
     {"0", "0", "1", 
      RowBox[{"-", "6"}], "9", 
      RowBox[{"-", "7"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.829138976247665*^9},
 CellLabel->
  "Out[92]//MatrixForm=",ExpressionUUID->"4b943af4-3cad-445e-9478-\
87584a13a6ac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "2"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.829138871917647*^9, 3.8291388853962297`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"34db185a-e4fc-4a12-a319-50dfe7753a60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "4", "5"},
      {"3", "5", "5"},
      {"3", "3", "2"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "7", ",", 
      RowBox[{"-", "5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", 
      RowBox[{"-", "13"}], ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "9", ",", 
      RowBox[{"-", "7"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.829138902243895*^9, 3.8291389286335707`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"ecd5bcb4-ca53-45e7-b6b1-c68c5411dee8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.829138919258758*^9, 3.8291389291733932`*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"addf03b9-6e96-4c15-8044-7f0ae5ff17ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "4", "5"},
      {"3", "5", "5"},
      {"3", "3", "2"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "]"}]], "Input",
 CellChangeTimes->{{3.829138935024914*^9, 3.829138941359762*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"c7de6337-4424-41e7-82ac-91754ba7622c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "7", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "13"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "9", ",", 
     RowBox[{"-", "7"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.829138941849084*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"3ee18e99-756d-4352-bd94-c10744f6bb7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "putting", " ", "an", " ", "identity", " ", "matrix", " ", "to", " ", "the",
    " ", "right", " ", "of", " ", "an", " ", "original", " ", "matrix", " ", 
   "yields", " ", "an", " ", "identity", " ", "matrix", " ", "to", " ", "the",
    " ", "left", " ", "of", " ", "the", " ", "inverse", " ", 
   RowBox[{"matrix", " ", "--"}], " ", "shown", " ", "in", " ", "written", 
   " ", "notes"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.829138996013566*^9, 3.829139048201775*^9}, {
  3.8291391049594297`*^9, 
  3.829139109640585*^9}},ExpressionUUID->"9121a63b-39cb-4f9e-8277-\
4ef459b2bcf9"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.829726419984336*^9, 3.829726423309381*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"58e13c61-d8ce-4bf0-b1f9-d99faeac5671"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 11 May 2021 08:53:43\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "11", ",", "8", ",", "53", ",", 
           "43.510265`8.391166705810184"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.82972642052171*^9, 3.829726423528685*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"a8914b1d-d854-4e58-b8c5-c6cc7f604ad9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrices", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "9", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8291240698529654`*^9, 3.829124102680874*^9}, {
  3.829726428176425*^9, 3.829726428339871*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b5724b6d-9967-4cae-920a-b3de8e61d6e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrices", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8297264721643763`*^9, 3.829726479447209*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"134848df-0a7d-495e-adeb-17fef912dd7a"],

Cell[BoxData["362880"], "Output",
 CellChangeTimes->{{3.829726480934155*^9, 3.829726481288651*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"d2af6f98-e27b-4374-9078-179e41f76010"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9", "!"}]], "Input",
 CellChangeTimes->{{3.82972648452568*^9, 3.829726486363171*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c6dddb7a-784c-4eb2-9575-ca8eec18888f"],

Cell[BoxData["362880"], "Output",
 CellChangeTimes->{3.829726487138392*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ccd35492-c134-4284-afe2-0694bd0b5a37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrices", "[", 
  RowBox[{"[", "123456", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.829726488729774*^9, 3.829726494516699*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2130dd9a-d31b-435f-9c36-3cdb0d0b8bfa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.829726495090982*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"945fc0a5-b0df-4b17-906e-cb655e3cccf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8297265081787663`*^9, 3.8297265110538473`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"cb292b7d-4fcc-44b5-ab63-e2986d416d61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["11", "237"], ",", 
     RowBox[{"-", 
      FractionBox["16", "237"]}], ",", 
     FractionBox["13", "79"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["53", "237"]}], ",", 
     FractionBox["34", "237"], ",", 
     FractionBox["2", "79"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["41", "237"], ",", 
     FractionBox["5", "237"], ",", 
     RowBox[{"-", 
      FractionBox["9", "79"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8297265113692913`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"95c06bd6-99b0-42dd-a621-7092c899618b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "1", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "3", ",", "2"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8297265785411158`*^9, 3.82972658358197*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b7553135-2a3f-4c98-9f89-0f9b6deebaa6"],

Cell[BoxData[
 RowBox[{"-", "237"}]], "Output",
 CellChangeTimes->{3.829726584031169*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"6ca60649-ea89-4123-8a3f-05a6eab12968"]
}, Open  ]],

Cell["\<\
How many of the matrices in our matrices list have inverses whose entries are \
entirely integers?\
\>", "Text",
 CellChangeTimes->{{3.829726621792294*^9, 
  3.829726643209652*^9}},ExpressionUUID->"f2d548f3-825b-451f-a74a-\
ff59fdb5fa67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"inverses", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", "#", "]"}], "&"}], ",", "\[IndentingNewLine]", 
     "matrices"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829726980051036*^9, 3.829726997680406*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"48aca538-d39a-4a21-921f-ce32ae6fc2ce"],

Cell[BoxData[
 TemplateBox[{
  "Inverse", "sing", 
   "\"Matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\"}], \\\"}\\\"}]}], \\\"}\\\
\"}]\\) is singular.\"", 2, 11, 1, 31667568761422492939, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.829726999482267*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"f38aaee0-be3f-48b5-b5ed-ea55237a658c"],

Cell[BoxData[
 TemplateBox[{
  "Inverse", "sing", 
   "\"Matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\"}], \\\"}\\\"}]}], \\\"}\\\
\"}]\\) is singular.\"", 2, 11, 2, 31667568761422492939, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.829726999532021*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"9b8af655-5e73-4097-8cf5-6520109b4e33"],

Cell[BoxData[
 TemplateBox[{
  "Inverse", "sing", 
   "\"Matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"8\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"5\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"9\\\"}], \\\"}\\\"}]}], \\\"}\\\
\"}]\\) is singular.\"", 2, 11, 3, 31667568761422492939, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.829726999573876*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"3adb4e83-2e03-4234-83f5-1ea43b053f0a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Inverse\\\", \
\\\"::\\\", \\\"sing\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 11, 4, 31667568761422492939, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.829726999642655*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"459e0b39-c4a1-481b-8050-835552194fa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", "\[IndentingNewLine]", 
  RowBox[{"inverses", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "#", "]"}], ",", "IntegerQ"}], "]"}], "&"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.829726672060837*^9, 3.8297266771757517`*^9}, {
  3.8297269450051126`*^9, 3.829726960713498*^9}, {3.829727025140834*^9, 
  3.829727025975213*^9}, {3.829727119727604*^9, 3.82972712935852*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"20cdb9a5-8341-4484-b253-4c0e9750df62"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "31"}], ",", "13", ",", 
               RowBox[{"-", "3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22", ",", 
               RowBox[{"-", "9"}], ",", "2"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"44", ",", 
               RowBox[{"-", "17"}], ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "28"}], ",", "11", ",", 
               RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "11", ",", 
               RowBox[{"-", "9"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "7"}], ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
           TemplateBox[{"2298"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"11", ",", 
               RowBox[{"-", "12"}], ",", 
               RowBox[{"-", "13"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "28"}], ",", "31", ",", "33"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"18", ",", 
               RowBox[{"-", "20"}], ",", 
               RowBox[{"-", "21"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"14", ",", 
               RowBox[{"-", "19"}], ",", 
               RowBox[{"-", "11"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"8", ",", 
               RowBox[{"-", "11"}], ",", 
               RowBox[{"-", "6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "27"}], ",", "37", ",", "21"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "17"}], ",", "19", ",", "20"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"28", ",", 
               RowBox[{"-", "31"}], ",", 
               RowBox[{"-", "33"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "10"}], ",", "11", ",", "12"}], "}"}]}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 17, 31667568761422492939, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 17, 31667568761422492939, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 17, 31667568761422492939, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31667568761422492939 === $SessionID, 
   Out[17], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.829726968786525*^9, 3.829727027287958*^9, {3.8297271214018583`*^9, 
   3.8297271300585403`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"47135561-77ff-4536-b92a-385e9f67334c"]
}, Open  ]],

Cell["\<\
^ This previous output are the inverse matrices whose entries are integers.\
\>", "Text",
 CellChangeTimes->{{3.829727177028088*^9, 3.82972719121704*^9}, {
  3.82972722130916*^9, 
  3.829727221636059*^9}},ExpressionUUID->"4abbe2ea-5149-47be-8650-\
5c6394c4d6ab"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8299061460132313`*^9, 3.829906146334634*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b5e94f1d-7571-483c-aa32-b20233c5d598"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 May 2021 10:49:06\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "13", ",", "10", ",", "49", ",", 
           "6.550588`7.568855272811991"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.829906146566646*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"01a2d421-a529-4156-aebc-c19fc77142fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrices", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "9", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8291240698529654`*^9, 3.829124102680874*^9}, {
  3.829726428176425*^9, 3.829726428339871*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"ad68a260-5573-47c5-8db9-23bafc380522"],

Cell["\<\
Are any of these entries in matrices \[OpenCurlyDoubleQuote]magic squares\
\[CloseCurlyDoubleQuote]? A matrix is \[OpenCurlyDoubleQuote]magic\
\[CloseCurlyDoubleQuote] if its row sums and column cums and diagonal sums \
are all the same.

8       1       6
3       5       7
4       9       2\
\>", "Text",
 CellChangeTimes->{{3.829906205438139*^9, 3.829906213061839*^9}, {
  3.829906290659821*^9, 3.8299063127835617`*^9}, {3.829906398993626*^9, 
  3.8299064617218637`*^9}},ExpressionUUID->"2ea12ba5-4d2c-46fa-a9b7-\
4c3223f870d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", "\[IndentingNewLine]", 
  RowBox[{"matrices", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", 
     RowBox[{"Total", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], "\[Equal]", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"row", " ", "sums"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "\[Equal]", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"diagonal", " ", "sums"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "\[Equal]", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{"other", " ", "diagonal", " ", "sums"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "#", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "#", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "#", "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "&"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.829906465454371*^9, 3.8299065108672857`*^9}, {
  3.8299065617793217`*^9, 3.829906591910696*^9}, {3.829906649355021*^9, 
  3.829906855847681*^9}, {3.8299069002480173`*^9, 3.829906945225192*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"4719cf57-6992-4ebf-ad44-12fb823973df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "7", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "9", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "9", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "9", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.829906701977644*^9, 3.829906768940493*^9, {3.829906930647551*^9, 
   3.8299069526998377`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"ed8e72c6-8505-46d1-86f9-5daa77515385"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", "%"}]], "Input",
 CellChangeTimes->{{3.829906988005672*^9, 3.829906992669434*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"58e86323-69d4-4459-b269-f7efcb1edfe5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "7", "6"},
       {"9", "5", "1"},
       {"4", "3", "8"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "9", "4"},
       {"7", "5", "3"},
       {"6", "1", "8"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "3", "8"},
       {"9", "5", "1"},
       {"2", "7", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "9", "2"},
       {"3", "5", "7"},
       {"8", "1", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "1", "8"},
       {"7", "5", "3"},
       {"2", "9", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "7", "2"},
       {"1", "5", "9"},
       {"8", "3", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"8", "1", "6"},
       {"3", "5", "7"},
       {"4", "9", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"8", "3", "4"},
       {"1", "5", "9"},
       {"6", "7", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.829906993465827*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"e30fbc6c-1436-48f8-a26b-07a261b9c208"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Det", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"Out", "[", "7", "]"}]}]], "Input",
 CellChangeTimes->{{3.829907298908143*^9, 3.8299073577495317`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6598fafa-8aeb-452d-b456-489e9bd6ba8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "360"}], ",", 
   RowBox[{"-", "360"}], ",", "360", ",", "360", ",", "360", ",", "360", ",", 
   
   RowBox[{"-", "360"}], ",", 
   RowBox[{"-", "360"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.82990733346391*^9, 3.8299073579717407`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"2525ebde-36e8-4e90-8dc6-8428f2f25ea7"]
}, Open  ]],

Cell["\<\
Use the previous logic to write a function called magicQ[] for 3x3 matrices.\
\>", "Text",
 CellChangeTimes->{{3.829907634156069*^9, 
  3.829907649807665*^9}},ExpressionUUID->"d4690580-0022-4e52-abc0-\
25defe8b410b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"magicQ", "[", "matrix_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"matrix", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"Total", "[", 
     RowBox[{"matrix", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"Total", "[", 
     RowBox[{"matrix", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], "\[Equal]", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"row", " ", "sums"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"matrix", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "+", 
     RowBox[{
      RowBox[{"matrix", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "+", 
     RowBox[{
      RowBox[{"matrix", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "\[Equal]", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"diagonal", " ", "sums"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"matrix", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "+", 
     RowBox[{
      RowBox[{"matrix", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "+", 
     RowBox[{
      RowBox[{"matrix", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "\[Equal]", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"other", " ", "diagonal", " ", "sums"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "matrix", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "matrix", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "matrix", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829907652185624*^9, 3.829907728255509*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"ef9e99d3-9026-4293-aa46-c3ccdd6b312d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"magicQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.829907731352956*^9, 3.829907752844953*^9}, {
  3.829907783561145*^9, 3.8299077960178757`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"36326917-2f67-4cb2-8bf2-f8783986c97e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8299077552126083`*^9, 3.8299077966643333`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6ef5dabd-c727-4898-9537-86ed05df1d3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"magicQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "7", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "5", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "3", ",", "8"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8299077677042437`*^9, 3.829907770942484*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"4cb946d1-8d1e-435f-9603-35bc337012a0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8299077714355783`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"78e19d89-b10d-465c-959e-d391cf5bc625"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", "\[IndentingNewLine]", 
  RowBox[{"matrices", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magicQ", "[", "#", "]"}], "&"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.829907846607731*^9, 3.829907863890156*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ed6437a0-8b41-45a0-b69d-dce26207055b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "7", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "9", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1", ",", "8"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "9", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "9", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "9", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8299078679369717`*^9, 3.829907873975456*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"b7eaa5f4-9d56-4490-b084-dac84443e1c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8300017799731197`*^9, 3.830001780286323*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b881f92a-508d-44ef-9c95-93dcfee64224"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 May 2021 13:23:00\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "14", ",", "13", ",", "23", ",", 
           "0.492109`6.444636296918267"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.830001780503964*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"45379dc8-6e20-4182-8579-ceece11270bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lucasSquare", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "-", "b"}], ",", 
      RowBox[{"c", "+", "a", "+", "b"}], ",", 
      RowBox[{"c", "-", "a"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "-", "a", "+", "b"}], ",", "c", ",", 
      RowBox[{"c", "+", "a", "-", "b"}]}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "+", "a"}], ",", 
      RowBox[{"c", "-", "a", "-", "b"}], ",", 
      RowBox[{"c", "+", "b"}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.830001782173028*^9, 3.8300018352460957`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"957d26de-cd88-4242-ab55-df2a24abdcee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucasSquare", "[", 
  RowBox[{"{", 
   RowBox[{"7", ",", "4", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.830001893531547*^9, 3.830001898011175*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7047f4f9-e19c-4a67-9c9b-0c23df41c1f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "13", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "9"}], ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.830001898500204*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"fbcb8b49-921a-4c64-968d-bdecf74609e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.8300019003708487`*^9, 3.830001903348982*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"1b97dcda-27c3-4c79-bfd4-e245c87062a2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2"}], "13", 
      RowBox[{"-", "5"}]},
     {
      RowBox[{"-", "1"}], "2", "5"},
     {"9", 
      RowBox[{"-", "9"}], "6"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8300019037009563`*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"960d617e-31eb-40bc-82bd-\
938845abc195"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"magicQ", "[", 
  RowBox[{"Out", "[", "6", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8300019798967857`*^9, 3.830001987663191*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c51077c1-da5b-4172-a057-7f0151abecdc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.830001989227262*^9, 3.830001997155366*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"84507231-4018-4c7c-b78c-bb0aa2bd743b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucasSquare", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "6", ",", "7"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8300020594470177`*^9, 3.830002065118454*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"f7d1e789-2b70-471f-8538-48d57e6f6854"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "16", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "2"}], ",", "13"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8300020657179317`*^9, 3.8300020930869007`*^9}, 
   3.8300022604123373`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"39db7efc-35bb-48e6-aa61-8230b1fd74d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.830002071240528*^9, 3.830002097610732*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b3af180c-9096-4e51-896c-e08b61f437bd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "16", "4"},
     {"10", "7", "4"},
     {"10", 
      RowBox[{"-", "2"}], "13"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.830002080187875*^9, 3.830002098277128*^9}, {
  3.830002256685212*^9, 3.830002261525488*^9}},
 CellLabel->
  "Out[18]//MatrixForm=",ExpressionUUID->"54617198-8ccc-4e31-9c65-\
070f4488c53c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"magicQ", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8300022478099318`*^9, 3.830002253175741*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b91a1cfe-6bb6-426f-9fa7-3458e27862f9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.830002253442751*^9, 3.830002262576799*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"6e13ff42-e720-4e8d-993f-17d58dfaa727"]
}, Open  ]],

Cell["\<\
Based on the outputs above, some {a,b,c} triples \[OpenCurlyDoubleQuote]work\
\[CloseCurlyDoubleQuote] and other do not. Make a list called abcTriples that \
contains triples of values that will generate magic (Lucas) squares.\
\>", "Text",
 CellChangeTimes->{{3.8300023232974873`*^9, 
  3.830002376951439*^9}},ExpressionUUID->"8eff699f-78e1-404b-a4f1-\
fe9730c1b5f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abcTriples", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Select", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", " ", "c"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "1", ",", "10", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"b", ",", "1", ",", "10", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "10", ",", "1"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "2"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"0", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "<", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "&&", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", " ", 
       RowBox[{"2", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "&"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8300023779649763`*^9, 3.830002413781652*^9}, {
   3.830002462173986*^9, 3.830002622760563*^9}, 3.8302615489982157`*^9, {
   3.830261588943679*^9, 3.8302616135210733`*^9}, 3.8302616807475863`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"c5c72d12-f076-4103-995f-7cc9efe7c720"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.830261614297105*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ddf837f9-1c6d-4099-a37a-cfc63ab5b98c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucasSquare", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.830002638158504*^9, 3.830002645728544*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a0842a10-8f18-44b4-85dc-97adeb22d180"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.83000264608978*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"650f6bbc-95c2-4cb3-9233-19cfb98ca0f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucasSquare", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "6"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.830002647350876*^9, 3.8300026534300203`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d189df9b-9371-4889-92b0-ee97324df5eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "10", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8300026538647337`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"0749a4ec-7b9f-4759-8c3e-183a797d64cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"lucasSquare", "[", "#", "]"}], "]"}], "&"}], ",", 
   "\[IndentingNewLine]", "abcTriples"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8300026551613483`*^9, 3.830002670227948*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e2cdf6ba-9cae-41ca-8e82-4da68cb4bd20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "9", "4"},
       {"7", "5", "3"},
       {"6", "1", "8"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "10", "5"},
       {"8", "6", "4"},
       {"7", "2", "9"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "11", "6"},
       {"9", "7", "5"},
       {"8", "3", "10"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "12", "7"},
       {"10", "8", "6"},
       {"9", "4", "11"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "13", "8"},
       {"11", "9", "7"},
       {"10", "5", "12"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"7", "14", "9"},
       {"12", "10", "8"},
       {"11", "6", "13"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "11", "5"},
       {"9", "6", "3"},
       {"7", "1", "10"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "12", "6"},
       {"10", "7", "4"},
       {"8", "2", "11"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "13", "7"},
       {"11", "8", "5"},
       {"9", "3", "12"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "14", "8"},
       {"12", "9", "6"},
       {"10", "4", "13"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "15", "9"},
       {"13", "10", "7"},
       {"11", "5", "14"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "13", "6"},
       {"11", "7", "3"},
       {"8", "1", "12"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "14", "7"},
       {"12", "8", "4"},
       {"9", "2", "13"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "15", "8"},
       {"13", "9", "5"},
       {"10", "3", "14"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "16", "9"},
       {"14", "10", "6"},
       {"11", "4", "15"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "15", "7"},
       {"13", "8", "3"},
       {"9", "1", "14"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "16", "8"},
       {"14", "9", "4"},
       {"10", "2", "15"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "17", "9"},
       {"15", "10", "5"},
       {"11", "3", "16"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "17", "8"},
       {"15", "9", "3"},
       {"10", "1", "16"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "18", "9"},
       {"16", "10", "4"},
       {"11", "2", "17"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "19", "9"},
       {"17", "10", "3"},
       {"11", "1", "18"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "11", "4"},
       {"7", "6", "5"},
       {"8", "1", "9"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "12", "5"},
       {"8", "7", "6"},
       {"9", "2", "10"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "13", "6"},
       {"9", "8", "7"},
       {"10", "3", "11"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "14", "7"},
       {"10", "9", "8"},
       {"11", "4", "12"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"7", "15", "8"},
       {"11", "10", "9"},
       {"12", "5", "13"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "15", "6"},
       {"11", "8", "5"},
       {"10", "1", "13"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "16", "7"},
       {"12", "9", "6"},
       {"11", "2", "14"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "17", "8"},
       {"13", "10", "7"},
       {"12", "3", "15"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "17", "7"},
       {"13", "9", "5"},
       {"11", "1", "15"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "18", "8"},
       {"14", "10", "6"},
       {"12", "2", "16"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "19", "8"},
       {"15", "10", "5"},
       {"12", "1", "17"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "15", "5"},
       {"9", "8", "7"},
       {"11", "1", "12"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "16", "6"},
       {"10", "9", "8"},
       {"12", "2", "13"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "17", "7"},
       {"11", "10", "9"},
       {"13", "3", "14"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "17", "6"},
       {"11", "9", "7"},
       {"12", "1", "14"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "18", "7"},
       {"12", "10", "8"},
       {"13", "2", "15"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "19", "6"},
       {"11", "10", "9"},
       {"14", "1", "15"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.830002670836071*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"1569b22e-f6c0-43eb-85fb-0909de937f62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "/@", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lucasSquare", "[", "#", "]"}], "&"}], ",", 
    "\[IndentingNewLine]", "abcTriples"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.830002866227324*^9, 3.830002888786263*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"f7827b36-b7e0-427a-a74a-57387dfd8a63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "360"}], ",", 
   RowBox[{"-", "432"}], ",", 
   RowBox[{"-", "504"}], ",", 
   RowBox[{"-", "576"}], ",", 
   RowBox[{"-", "648"}], ",", 
   RowBox[{"-", "720"}], ",", 
   RowBox[{"-", "810"}], ",", 
   RowBox[{"-", "945"}], ",", 
   RowBox[{"-", "1080"}], ",", 
   RowBox[{"-", "1215"}], ",", 
   RowBox[{"-", "1350"}], ",", 
   RowBox[{"-", "1512"}], ",", 
   RowBox[{"-", "1728"}], ",", 
   RowBox[{"-", "1944"}], ",", 
   RowBox[{"-", "2160"}], ",", 
   RowBox[{"-", "2520"}], ",", 
   RowBox[{"-", "2835"}], ",", 
   RowBox[{"-", "3150"}], ",", 
   RowBox[{"-", "3888"}], ",", 
   RowBox[{"-", "4320"}], ",", 
   RowBox[{"-", "5670"}], ",", 
   RowBox[{"-", "270"}], ",", 
   RowBox[{"-", "315"}], ",", 
   RowBox[{"-", "360"}], ",", 
   RowBox[{"-", "405"}], ",", 
   RowBox[{"-", "450"}], ",", 
   RowBox[{"-", "1512"}], ",", 
   RowBox[{"-", "1701"}], ",", 
   RowBox[{"-", "1890"}], ",", 
   RowBox[{"-", "2592"}], ",", 
   RowBox[{"-", "2880"}], ",", 
   RowBox[{"-", "4050"}], ",", 
   RowBox[{"-", "504"}], ",", 
   RowBox[{"-", "567"}], ",", 
   RowBox[{"-", "630"}], ",", 
   RowBox[{"-", "1296"}], ",", 
   RowBox[{"-", "1440"}], ",", 
   RowBox[{"-", "810"}]}], "}"}]], "Output",
 CellChangeTimes->{3.830002890704419*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"cc0acff1-97f7-4d01-9f92-eacea1036973"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.830260694280055*^9, 3.8302606945517693`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"409ac648-5f3d-488b-9ea4-6e405a7c90a8"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 17 May 2021 13:18:14\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "17", ",", "13", ",", "18", ",", 
           "14.770019`7.921956039325659"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.83026069478619*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7d55d3c3-5abb-4109-b286-71c1ac4d63bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucasSquare", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "5", ",", "9"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.830260806188526*^9, 3.830260810702029*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8478072a-d5b9-4e53-9f24-adc931339be1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "16", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "9", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "2", ",", "14"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8302608122248297`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"06f67d65-fa00-41d3-a9ac-a7e92a2a3eb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.830260813592133*^9, 3.830260816604414*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a58db042-47af-4f59-8e36-cf17f3503828"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "16", "7"},
     {"12", "9", "6"},
     {"11", "2", "14"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.83026081693371*^9},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"e406b649-047f-402c-bcb8-\
c66e545d33c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8305893709366903`*^9, 3.8305893736369743`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"58091285-9775-44d4-8a33-3779d4ce577d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 21 May 2021 08:36:16\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "21", ",", "8", ",", "36", ",", 
           "16.635891`7.973621050957808"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.830589376654684*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"eb99d0e4-6fd1-4139-9b3c-2354e3e2b2a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setDeck", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"number", ",", "color", ",", "filling", ",", "shape"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"number", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"color", ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Red", ",", "Purple"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"filling", ",", 
        RowBox[{"{", 
         RowBox[{"empty", ",", "solid", ",", "striped"}], "}"}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"shape", ",", 
        RowBox[{"{", 
         RowBox[{"diamond", ",", "oval", ",", "squiggle"}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "3"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8305904421917677`*^9, 3.830590512119831*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"320afb0d-7619-4d3a-a7d3-e278006e0a99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.83059051338025*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"26eff1b5-8ea8-4be7-ad83-e09adc857ef9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.830877093250827*^9, 3.830877093622079*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"41876f2b-e559-4568-85d3-f9a27400bd8f"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 24 May 2021 16:31:34\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "24", ",", "16", ",", "31", ",", 
           "34.021888`8.28433339043364"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8308770940470457`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a6998f15-b186-48b2-89b3-aa78d0728752"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setDeck", "=", "\[IndentingNewLine]", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"number", ",", "color", ",", "filling", ",", "shape"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"number", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"{", 
           RowBox[{"Green", ",", "Red", ",", "Purple"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"filling", ",", 
          RowBox[{"{", 
           RowBox[{"empty", ",", "solid", ",", "striped"}], "}"}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"shape", ",", 
          RowBox[{"{", 
           RowBox[{"diamond", ",", "oval", ",", "squiggle"}], "}"}]}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", "3"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "    "}]], "Input",
 CellChangeTimes->{
  3.830513837901175*^9, {3.830589535484488*^9, 3.830589613562086*^9}, {
   3.8305904342665787`*^9, 3.830590542054123*^9}, 3.830856618916704*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"54c624ca-403c-43e5-9830-c387640bd207"],

Cell["\<\
Write a function called setCheck[] that takes in three different cards and \
returns whether or not those three cards form a set\
\>", "Text",
 CellChangeTimes->{{3.830856625347357*^9, 
  3.8308566910406933`*^9}},ExpressionUUID->"e55151b9-00b0-44aa-81a6-\
dd166683494f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setCheck", "[", 
   RowBox[{"{", 
    RowBox[{"card1_", ",", "card2_", ",", "card3_"}], "}"}], "]"}], ":=", " ",
   "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "||", " ", 
       RowBox[{"UnsameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ")"}], "&&", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "||", " ", 
       RowBox[{"UnsameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ")"}], "&&", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "||", " ", 
       RowBox[{"UnsameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ")"}], "&&", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "||", " ", 
       RowBox[{"UnsameQ", "[", 
        RowBox[{
         RowBox[{"card1", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"card2", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"card3", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
    "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", " ", "False"}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8308567331434193`*^9, 3.830856771546351*^9}, 
   3.830856858424081*^9, {3.830856906685409*^9, 3.830857121303232*^9}, {
   3.830857351879636*^9, 3.83085740004677*^9}, {3.830857436621752*^9, 
   3.830857471471919*^9}, {3.830857642564563*^9, 3.830857657904056*^9}, {
   3.830857786217208*^9, 3.830857801639021*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"94f23ab4-8cd8-4880-82f3-44a38b5875fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"setDeck", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8308572105575027`*^9, 3.830857220634556*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3140f78a-4531-46c4-aa81-d3bde647e529"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.830857221139336*^9, 3.830877075070236*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"828a61c7-34ba-4886-93e3-82516a5cc20a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setCheck", "[", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"setDeck", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.830857223145563*^9, 3.830857234114533*^9}, {
  3.8308572666727333`*^9, 3.830857288383727*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2fcf6ab5-366c-4f00-ae0c-8b560c911f8b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.83085724219977*^9, 3.830857288781089*^9, 
  3.830857372950822*^9, 3.830857474138092*^9, 3.830857660613956*^9, 
  3.830857803738483*^9, 3.830877076766323*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c9896cae-358c-4882-a3a4-738d4da67a69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"setCheck", "[", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"setDeck", ",", "3"}], "]"}], "]"}], ",", "1000"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.830857491330421*^9, 3.830857543034522*^9}, {
  3.830857911238902*^9, 3.830857913256407*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5c1e29ed-4396-40c7-a507-744311b1037f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"False", ",", "987"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "13"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8308579141841393`*^9, 3.830877078836891*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"57883f3c-4991-4354-bf1d-6dc39378a30d"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s use our setCheck[] function to generate a list of all \
the possible sets in SET\
\>", "Text",
 CellChangeTimes->{{3.830857561152049*^9, 
  3.83085758226891*^9}},ExpressionUUID->"553595e4-f2d4-4da0-a9fc-\
1eb79954b0aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allSets", "=", 
   RowBox[{"Select", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{"setDeck", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "generate", " ", "every", " ", "possible", " ", "triple", " ", "from", 
       " ", "the", " ", "cards", " ", "in", " ", "setDeck"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"setCheck", "[", "#", "]"}], "&"}]}], 
    RowBox[{"(*", 
     RowBox[{
     "check", " ", "those", " ", "triples", " ", "for", " ", 
      "\"\<setness\>\""}], "*)"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8308575838131523`*^9, 3.8308576042105427`*^9}, {
  3.83085766726013*^9, 3.8308577405519953`*^9}, {3.83085781795754*^9, 
  3.8308578284570704`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7b25fdc9-f051-4072-8f6d-aa1c27c1f1b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allSets", "[", 
  RowBox[{"[", "777", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.83085784245443*^9, 3.8308578625948563`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b2d25a51-ab2c-4325-825f-234d88994951"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8308578521330757`*^9, 3.830857862902741*^9}, 
   3.8308770838052683`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"df8987b3-06e4-464c-b64d-cb7fb9509f2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allSets", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.830857987851295*^9, 3.830857996649928*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b0483e08-12fd-446d-bf86-4ab75e298dac"],

Cell[BoxData["1080"], "Output",
 CellChangeTimes->{3.830857996947933*^9, 3.830877085386985*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"fc2c71f1-8812-443b-be17-674f0ca7e13c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"   ", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"allSets", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "Purple", ",", "striped", ",", "squiggle"}], 
         "}"}]}], "]"}], "&"}]}], "]"}], "//", "Length"}]}]], "Input",
 CellChangeTimes->{
  3.830858022360344*^9, {3.8308581399300537`*^9, 3.830858140428185*^9}, {
   3.830859127047552*^9, 3.83085917007232*^9}, {3.830859217831501*^9, 
   3.830859221153678*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e8a4d079-9530-4119-8f8f-31818566906e"],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{{3.830859214273315*^9, 3.8308592215034*^9}, 
   3.83087708741626*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"59027de8-85d8-4224-9a13-66932535587d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.830943154689106*^9, 3.8309431550190687`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"43a092db-03e2-4306-bc24-3070ddf63eba"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 25 May 2021 10:52:35\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "25", ",", "10", ",", "52", ",", 
           "35.305285`8.300414701277218"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.830943155330491*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"92e98663-d79a-419d-b6b4-07b74f9e2604"]
}, Open  ]],

Cell["some counting reminders", "Text",
 CellChangeTimes->{{3.83094315657723*^9, 
  3.830943165378874*^9}},ExpressionUUID->"88dbce3a-2840-4cc5-ad96-\
74baab57c55a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Subsets", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "leah", ",", " ", "weston", ",", " ", "dani", ",", " ", "richard", ",", 
      " ", "pepe", ",", " ", "mason", ",", " ", "jason", ",", " ", 
      "stephanie", ",", " ", "sophie", ",", " ", "henry", ",", " ", "maya", 
      ",", " ", "jack"}], "}"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.830943173400642*^9, 3.8309432486587276`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"56da49c8-2c17-4fd3-b48f-067c814a85c4"],

Cell[BoxData["495"], "Output",
 CellChangeTimes->{
  3.830943193414309*^9, {3.830943233071166*^9, 3.830943248867463*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"3472586d-95cc-4c90-b974-9a1fe6fa83e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"12", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.830943197033805*^9, 3.830943202459092*^9}, {
  3.830943250885933*^9, 3.8309432541511297`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2e297184-cc77-4298-9740-90ef5713261a"],

Cell[BoxData["495"], "Output",
 CellChangeTimes->{
  3.830943202917457*^9, {3.830943251991205*^9, 3.8309432546284227`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"abebca4e-6095-4220-af22-eb2e705a4e84"]
}, Open  ]],

Cell["\<\
why is 12 C 4 = 495?

12!/((12-4)! 4!)
12! is all the possible permutations of 12 people
(12-4)! gets groups of the correct size
4! removes all the permutations of each group of size 4\
\>", "Text",
 CellChangeTimes->{{3.830943256861649*^9, 
  3.830943315047339*^9}},ExpressionUUID->"2936c65b-0131-47a6-b956-\
e7d274daf6e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"White", ",", 
    RowBox[{"EdgeForm", "@", "Thick"}], ",", 
    RowBox[{"RegularPolygon", "[", "8", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.830943334058111*^9, 3.830943346035247*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"db6d6cef-7001-407c-b288-84f30328dfa8"],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[1], EdgeForm[Thickness[Large]], 
   InterpretationBox[
    PolygonBox[
     NCache[{{Sin[Rational[1, 8] Pi], -Cos[Rational[1, 8] Pi]}, {
       Cos[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi]}, {
       Cos[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi]}, {
       Sin[Rational[1, 8] Pi], Cos[Rational[1, 8] Pi]}, {-
        Sin[Rational[1, 8] Pi], Cos[Rational[1, 8] Pi]}, {-
        Cos[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi]}, {-
        Cos[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi]}, {-
        Sin[Rational[1, 8] Pi], -Cos[Rational[1, 8] Pi]}}, {{
      0.3826834323650898, -0.9238795325112867}, {
      0.9238795325112867, -0.3826834323650898}, {0.9238795325112867, 
      0.3826834323650898}, {0.3826834323650898, 
      0.9238795325112867}, {-0.3826834323650898, 
      0.9238795325112867}, {-0.9238795325112867, 
      0.3826834323650898}, {-0.9238795325112867, -0.3826834323650898}, \
{-0.3826834323650898, -0.9238795325112867}}]],
    RegularPolygon[8]]}]], "Output",
 CellChangeTimes->{3.830943346247081*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"3fd0efd0-4c48-4879-9b36-4b1c4d0fabe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"8", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.830943350249078*^9, 3.830943353081287*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"dc46233f-5aa3-47d9-91a3-24a04b872691"],

Cell[BoxData["56"], "Output",
 CellChangeTimes->{3.830943353603323*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"e77f727a-ee75-4d92-8c1f-4967e538fd27"]
}, Open  ]],

Cell["\<\
There are 56 possible triangles you can make inside the polygon with 8 points

COMBINATORICS

Let\[CloseCurlyQuote]s write a function called planeMaker[] that takes in \
three cards (WHICH ARE NOT A SET) and generates the appropriate plane. \
(Recall that a plane is a 3 x 3 arrangement of 9 cards where each row, \
column, and diagonal forms a set.)\
\>", "Text",
 CellChangeTimes->{{3.830943394934003*^9, 3.830943407562977*^9}, {
  3.830943486908782*^9, 3.8309434936628017`*^9}, {3.830945199630828*^9, 
  3.830945242160627*^9}},ExpressionUUID->"141151e4-487c-4a81-a0be-\
e52e07d9643e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"planeMaker", "[", 
   RowBox[{"{", 
    RowBox[{"c1_", ",", "c2_", ",", "c4_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"c1", ",", "\[IndentingNewLine]", "c2", ",", "\[IndentingNewLine]", 
    RowBox[{"setCompleter", "[", 
     RowBox[{"c1", ",", "c2"}], "]"}], ",", "\[IndentingNewLine]", "c4", ",", 
    "\[IndentingNewLine]", "c5", ",", "\[IndentingNewLine]", "c6", ",", 
    "\[IndentingNewLine]", "c7", ",", "\[IndentingNewLine]", "c8", ",", 
    "\[IndentingNewLine]", "c9"}], "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.8309452432996817`*^9, 3.830945258845685*^9}, {
  3.830945322441523*^9, 3.83094532931571*^9}, {3.830945428823867*^9, 
  3.8309454383267317`*^9}, {3.830945514632182*^9, 
  3.830945521955121*^9}},ExpressionUUID->"85afd955-4b8d-4308-969a-\
f6d169191bbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "Purple", ",", "striped", ",", "squiggle"}], "}"}], ",", 
  
  RowBox[{"{", 
   RowBox[{"2", ",", "Purple", ",", "empty", ",", "diamond"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.830945443304071*^9, 
  3.830945462696907*^9}},ExpressionUUID->"ac1c27fa-67f7-4a85-bf78-\
6428126847be"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.831038597625826*^9, 3.831038598007739*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"30d48a09-cf43-4dd7-92ab-524d9d1e5ac9"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 26 May 2021 13:23:18\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "26", ",", "13", ",", "23", ",", 
           "18.580939`8.021642641820513"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.831038598616919*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0a4b83b5-6de2-4a32-bf0a-300a718bf717"]
}, Open  ]],

Cell["\<\
In order to write planeMaker[], we need a function called setCompleter[] that \
takes in two cards and returns the third card that... completes the set.\
\>", "Text",
 CellChangeTimes->{{3.831038602486676*^9, 
  3.831038624545411*^9}},ExpressionUUID->"3798b1aa-3d4c-422f-aa87-\
669ee11c1a7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setCompleter", "[", 
   RowBox[{"{", 
    RowBox[{"card1_", ",", "card2_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"number", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"color", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Purple", ",", "Red"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"filling", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"empty", ",", " ", "striped", ",", " ", "solid"}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"diamond", ",", " ", "oval", ",", " ", "squiggle"}], 
        "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newNumber", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"card1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"card2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"(*", " ", 
         RowBox[{
         "if", " ", "the", " ", "number", " ", "attributes", " ", "are", " ", 
          "the", " ", "same"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"card1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{"return", " ", "that", " ", "atribute"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Complement", "[", 
         RowBox[{"number", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"card1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"card2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{"otherwise", ",", " ", 
         RowBox[{"return", " ", "the", " ", "missing", " ", "one"}]}], "*)"}],
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newColor", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"card1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"card2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"card1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Complement", "[", 
         RowBox[{"color", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"card1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"card2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newFilling", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"card1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"card2", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"card1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Complement", "[", 
         RowBox[{"filling", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"card1", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"card2", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newShape", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"card1", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"card2", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"card1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Complement", "[", 
         RowBox[{"shape", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"card1", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", 
            RowBox[{"card2", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{
       "newNumber", ",", "newColor", ",", "newFilling", ",", "newShape"}], 
       "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8310388397984753`*^9, 3.831038857550733*^9}, {
  3.831038906640723*^9, 3.831038914124707*^9}, {3.8310389478067923`*^9, 
  3.831038977695793*^9}, {3.831039057196539*^9, 3.831039058666913*^9}, {
  3.831039088904745*^9, 3.83103921815946*^9}, {3.831039347580144*^9, 
  3.831039435936819*^9}, {3.8310395159928226`*^9, 3.831039579341835*^9}, {
  3.831040003015081*^9, 3.8310400031027*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8f617d43-13ed-4644-890a-a24f93b3e875"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setCompleter", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "Purple", ",", "striped", ",", "squiggle"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "Red", ",", "striped", ",", "oval"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8310392472166233`*^9, 3.8310392671369333`*^9}, {
  3.8310393348281603`*^9, 3.831039335114841*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d60baeb3-dd29-4739-b39d-85958a3a1b9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", "striped", ",", "diamond"}], "}"}]], "Output",
 CellChangeTimes->{3.831039353456892*^9, 3.83103947247108*^9, 
  3.831039547098483*^9, 3.8310395811112328`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"23a6d20a-23c3-45ef-bb42-4df6aaec1559"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"setDeck", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.831039827107707*^9, 3.831039834399585*^9}, {
  3.831039972735199*^9, 3.831039973477706*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"66c274f1-ab1d-49bf-9505-3d045def18c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "squiggle"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.831039835689268*^9, {3.831039953738769*^9, 3.831040024412526*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"7cc22c04-8d39-4898-a751-4d6f63463b92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setCards", "[", 
  RowBox[{"setCompleter", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.831039882944088*^9, 3.831039886687599*^9}, {
  3.831039941186532*^9, 3.831039943390666*^9}, {3.831039976812747*^9, 
  3.831039978507333*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"a5789041-f4ee-4e72-b6a9-d836bf8ef513"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   {Thickness[0.002], 
    {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
      499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
      301.137}}}]}, 
    {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
     Opacity[1.]}], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4ndRTnYvHPMdyh7MEVxaVOiwLan+pu3pAodl
XG6qpR25DoLHd+3ofVHo8EHMI+BPWobDqoSQIHW2YofKiBWmZ12THWL+Of96
K1nsUKGrKP/lVZLDWWu/ixOFih32PBaRPTk9yWEWh/S8uP9FDgWNLEf77ZMc
ZE8+tV/yuNBhReVxTSu/KIcp7a1Rl08UOJzQtJp0WjrA4XpjsduUqHyHjHuF
XX1TzB06vty+3vg4z+HDycNOa29aOJyu99hf+zDPgWHxJCtGWRuH2Nyj/zbt
z3MIaOH1X99i56C880/7l805Djqpko8iPgc49JUWSvOuyXIAefOmR5RDy7yz
q84vzHBQ9qpu1j+X6OAgnHj4cnyGg8miLeY/UpIcDl/WTpW0ynCYYwwUAPoH
bH97hgNQ9lDKjGSHb2zxM3zWZjmIA4NDIjfDAWh79acjOQ6lTECfeuTC3Rd7
x425QqDQwUe0x+vVlzyHyDaLa0fVCh3ugDzIk+8QzAr0gE2hA3r4AwDMdLm5

      "]]}},
   AspectRatio->Automatic,
   ImageSize->{500., 302.},
   PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
  StripOnInput->False,
  Magnification->0.25 Inherited]], "Output",
 CellChangeTimes->{
  3.8310398870872498`*^9, {3.8310399435504293`*^9, 3.8310400256259117`*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"745442cd-fdea-4fd5-a9a4-779f4ad8a32a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"81", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.831039888884516*^9, 3.831039893318644*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"2a9fa0e7-1766-4466-937d-64cb8347a6d7"],

Cell[BoxData["3240"], "Output",
 CellChangeTimes->{3.83103989385148*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"9ab630bc-0791-4142-b17e-f085a839e464"]
}, Open  ]],

Cell["We\[CloseCurlyQuote]re now ready to write planeMaker[]", "Text",
 CellChangeTimes->{{3.831040048007573*^9, 
  3.831040053165717*^9}},ExpressionUUID->"1700ae73-d37c-495b-9576-\
b631a023b748"],

Cell[BoxData[
 RowBox[{
  RowBox[{"planeMaker", "[", 
   RowBox[{"{", 
    RowBox[{"c1_", ",", "c2_", ",", "c4_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Partition", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "c1", ",", "\[IndentingNewLine]", "c2", ",", "\[IndentingNewLine]", 
      RowBox[{"setCompleter", "[", 
       RowBox[{"{", 
        RowBox[{"c1", ",", "c2"}], "}"}], "]"}], ",", " ", 
      RowBox[{"(*", " ", "c3", " ", "*)"}], "\[IndentingNewLine]", "c4", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"setCompleter", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"setCompleter", "[", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "c2"}], "}"}], "]"}], ",", 
         RowBox[{"setCompleter", "[", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "c4"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"(*", " ", "c5", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"setCompleter", "[", 
       RowBox[{"{", 
        RowBox[{"c4", ",", 
         RowBox[{"setCompleter", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"setCompleter", "[", 
             RowBox[{"{", 
              RowBox[{"c1", ",", "c2"}], "}"}], "]"}], ",", 
            RowBox[{"setCompleter", "[", 
             RowBox[{"{", 
              RowBox[{"c1", ",", "c4"}], "}"}], "]"}]}], "}"}], "]"}]}], 
        "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"setCompleter", "[", 
       RowBox[{"{", 
        RowBox[{"c1", ",", "c4"}], "}"}], "]"}], ",", 
      RowBox[{"(*", " ", "c7", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"setCompleter", "[", 
       RowBox[{"{", 
        RowBox[{"c2", ",", 
         RowBox[{"setCompleter", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"setCompleter", "[", 
             RowBox[{"{", 
              RowBox[{"c1", ",", "c2"}], "}"}], "]"}], ",", 
            RowBox[{"setCompleter", "[", 
             RowBox[{"{", 
              RowBox[{"c1", ",", "c4"}], "}"}], "]"}]}], "}"}], "]"}]}], 
        "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"setCompleter", "[", 
       RowBox[{"{", 
        RowBox[{"c1", ",", 
         RowBox[{"setCompleter", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"setCompleter", "[", 
             RowBox[{"{", 
              RowBox[{"c1", ",", "c2"}], "}"}], "]"}], ",", 
            RowBox[{"setCompleter", "[", 
             RowBox[{"{", 
              RowBox[{"c1", ",", "c4"}], "}"}], "]"}]}], "}"}], "]"}]}], 
        "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", "3"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.831040054343915*^9, 3.831040193005151*^9}, {
  3.831040227312187*^9, 3.831040363094596*^9}, {3.831040642348255*^9, 
  3.831040658934546*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"718bebe4-eb7c-4c9b-8a54-1eb2d9ced767"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planeMaker", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "Red", ",", "striped", ",", "oval"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "Purple", ",", "striped", ",", "squiggle"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "Red", ",", "empty", ",", "diamond"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.831040403893094*^9, 3.831040449754208*^9}, {
  3.8310406230016108`*^9, 3.831040624386362*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"e43744b9-788d-4fc9-9d0d-a9478de519b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0., 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0, 0.5]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0, 0.5],
        Editable->False,
        Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 1, 0],
        Editable->False,
        Selectable->False], ",", "striped", ",", "diamond"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0., 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0, 0.5]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0, 0.5],
        Editable->False,
        Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 1, 0],
        Editable->False,
        Selectable->False], ",", "empty", ",", "squiggle"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0., 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0, 0.5]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0, 0.5],
        Editable->False,
        Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 1, 0],
        Editable->False,
        Selectable->False], ",", "solid", ",", "oval"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.831040445674593*^9, 3.831040449998255*^9}, 
   3.8310405935075703`*^9, 3.8310406610301657`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"aa17e0a5-a7f8-4bfd-a5f5-1e034edd834c"]
}, Open  ]],

Cell["\<\
In order to visualize these as cards, create a function called setToImage[]\
\>", "Text",
 CellChangeTimes->{{3.8310405063571978`*^9, 3.831040519495058*^9}, {
  3.831040663062812*^9, 
  3.831040664161042*^9}},ExpressionUUID->"af074a93-d5d8-477c-b691-\
504389d17d32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setToImage", "[", "set_", "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"setCards", "[", "#", "]"}], "&"}], ",", "set"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831040522661297*^9, 3.831040558639357*^9}, 
   3.8310406660420113`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"17d452fb-01da-4793-ab53-9d8047b8a8d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"setToImage", "[", "#", "]"}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{"planeMaker", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "Red", ",", "striped", ",", "oval"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "Purple", ",", "striped", ",", "squiggle"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "Red", ",", "empty", ",", "diamond"}], "}"}]}], 
      "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.831040547500287*^9, 3.83104057231459*^9}, {
   3.8310407058215*^9, 3.831040707383493*^9}, 3.831495305376719*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"a63d6c29-36dc-449e-872a-7f1c7ea1cc6a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4g9iHgF/CjIctkR+3XnrXZIDjF97YXPk17up
Dt+m353cnpvhsM9gppbE2QyHdduS6m8WZjjwgQT2ZDt8cjyfdrUcKH4jvsz/
XL7D0X7Dct3EbIcbjcVuU7IKHeS/5ITVuuU7PFun+qQ5r9BBRaOuZ+fsQgct
q0mn64sKHWoSjUIN1IodbArOdVy6lu+w5VXxVlHNYgeNt7z7DE5mOzD6tvD6
6xY7CLzcvp75eqrDrmzOnwuAfJAx2SfjHS643PjwRaPY4UfpgzmCT4Md+p58
kr+kWuygB3L4c3cHEZCCSYUOBvzcW5fdNHPI1gZKBOc7FOR/aD0ZYu7A7aZa
ypSW7XBkxRI/h8vmDpkM+Y0slRkO56z9Lk584w6RL8pwsAY5hD3EYUp7a9Tl
nAyHJKCztX5GwsMr7o4bc8XreAf08AQAhZSjZg==
          "]]}, 
        {FaceForm[{RGBColor[0.988, 0.98, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4tePzKQOZOY7JL+LcrI7ku6QcibW+8TNXIc7
1xuL3WB8zxwHQTObvUHH0h3C5q9ee2NnlsM9Js4u+cPpDu5FP/lfmmY5eL1i
MRE8lO7wMRmo4VKmA3v8DB/RE+kO1gXnOi5dyXT4YfhsnWpNhkOZv5xY1vVM
hw+tJ0MOmmQ6PAZaH+2W5fC3/cvt67qZDgkgBUeyHBaANAD5eYsZ97A+yXVo
AypfoZPp8Dsm9+i/xgKHOYuUd/7RznRoKnab8k2wyKFLHugDvUyHzHygyf5F
DiYgBwP5gdmzyudUFjl47K+VtVDOdABpa68uctCbALShKcOB94HuhAW1RQ4q
QOEvl9MdNld/2hAQVARx34F0iLt4ihyAZGMx0H9lhdK8D1wKHWQt0l0yj0P5
NQUOIO+bAcMLPTwBqmOlYQ==
          "]]}, 
        {FaceForm[{RGBColor[0.992, 0.992, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4o+XfJMEwvId3hywVPb6meKQYn3fv/dorkPq
qoSQICA/bpcnD5NpjsNpgeO7dvxOcQDytNuXZDks6Nzw8OX3FIfvwY+XzlbL
ctj48OXUTd9SHCa+rbE3vZLpIFl8XegTe6pD36GvGjFXMx2mtLdGXV6W6qB0
+2dd1rVMB+ZZHNLzLNIc7qiwNU7lzXI4nAK0MCXNYe775ce8Z2Y5vMjS/jY9
Oc1hh1zr68BzuQ6K8l9ywuLTHEDcHY0FDo+A1vEA+WtkolKsZYog7gGqB8rK
taYUOTyzX3J/H9C8E2X75ktVFTnMi9M8LWCYBnFfdZHDLdvKiBWLUx22ff57
paKmyMHsrLXfxf8pDt7mnY4JAUUOmQz5jSxA/z3/vfLjJaEiB2431VKmHykO
9Vl7Sia7FjqsMAVqAIYH2L0VBQ4g7zoCwws9PAGbVag7
          "]]}, 
        {FaceForm[{RGBColor[0.992, 0.988, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4qgU6/v+E/MdAnqn5wlNTXaQBQl0F8D5J8v2
zZfyL3RofR24Q25yssMOOSBLqMjhasVLNcNpyQ7z3i8/5u1f5PDvClBgerJD
84FTC12rihxM43Z58kxIdpg1Ewiqixxq7YEir5McFrlu+/y3psjhR/DjpbPt
khwkWcL4dEOKHBhAQCvJ4a4KW+NU3iKHJIEIyy1APtje2gKH2z/rsvboJTmA
3Xsz1yGm/9BXDSB/1cdLvkk7shweVomsc9dOcvAx73RMMMxyCAEafwSon093
09z3lzMd0tOAwCTJAWi6c/eVTIj8sySHcqD39K9mOthxXV9csDjZ4aIS0Ca3
LIclBbZc14H+v3nue/Djg1kOb4DOaAXyDTnWyETF5EDMm5LsALTt6YVvufDw
Qg9PANp5ne8=
          "]]}, 
        {FaceForm[{RGBColor[0.988, 0.98, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4qgU6/v+2fkOgsd37eg9FOcA5t/OReV75zio
ljLN4jge53DZN0kgYneWg8OS+/v4DsQ5vAncIddqmuUQrL6gc8PeOAcvHibt
9iuZDt+m353cfjHOYcuJsn3zgfzendmcP6USHJbNPqKwAcgv6up78ulqgsOn
S0AD3bIclP5+K31wCso/lOVgHx69cT+M/yjX4eeC9M2vTiY47CmZLMHSWOBw
YsbuaRNgfMEih4J49nOSpxMcEp5eULrtU+TgeuPDFy8gf40M0AdVRQ5n3p08
7HQ8weFH8OOls6uLIPYrJjhUvlQz5Kgtcnj0cuomnrdxDpYgB4cUOch/yQmr
3QV1P2+RQ9eGhy+n7otzAClf41rosH5bUv3Nk3EOhbZc1xfXFkDUw8ILKTwB
94isSQ==
          "]]}, 
        {FaceForm[{RGBColor[0.988, 0.976, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYCYuYKbhWNgnwHT73/in8PBTu0WVw7mnst1yE8
euP+N0D+BP4qs9U2OQ5GoQZaK48HO/TszOb8uSjL4cCbeTY6B4IdQNrrlLIc
LuXHs5/bG+xwSFwtmPVqpoPQ0r0HxT8FO3yWB8oA+Vw/F6RvVgt1WG0HNBnI
5/NfPyU1JMwBbL9MlgPr4klWjDPDIPYtyHI4Jxl4S3pGmIMgyJwruQ43Pnzx
ipwU5sAmJGJ/rLkAYu+EMIemQM+5DbJFDmUP5gguBeqXef3ITCq9yIHRt4XX
f3aYw7E7W1tqqoscUmLvuDGrhDnkLWbcwwrkA303z0Yg1CHq685bXVVFDr9P
vzt5+F+ww65bXX9To4oc7hd29T3ZF+zQoHaobblckQPIuPVA/9b9tio4F1gI
kT8W7HAgWsHxY0uBgzXIwsPBDujhCQDM55o3
          "]]}, 
        {FaceForm[{RGBColor[0.984, 0.973, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYCYvvw6I37Q/IdKrhVNOq+ZTtEnDI6srGoAM4X
eLl9PbN1oYPltaO5JkD+CXbb2aHMRQ5XZj2TXQ7k/+IHKnAscjDQWil8Achn
ed6j8bayyOGQuFow699sB9Xp/yfUVRc5XMqPZz/nnO1gLnUgWqG2yMGdGWhD
W5bDzfgyfzmXIoeendmcPydlOQBlHT+yFjm89ND7rzg5y2HdDaCCqgIHBZAB
U7IcNkxJ7Ui+m+uQsflV8VagfHffk0/yx7IcJlsx+rYA+TEb97+Z55PlIBV4
S7oGyA9hXTzJ6momxD9NWQ5Kf7+VPriS6fDVK7LNwiHb4eMXIAPIh7m/H2jc
JfssB2+g9LXv2RD1B7IcEo1CDbSAfFAwNLjnOAhUma22+5oNsf9cLjy80MMT
ANa/nwY=
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4vmr196ID8l3mLaJp3ANc4zDcU2rSafLChxi
/zn/egvk76+VtUh3LnSQLL4u9IkxxmH7RYZ7TAJFDj7LuNxUWWMcCqV5H+h6
FzmUMs3ikGaLcfAAaagqcviSE1a77l+0Q+7Rf5uqq4sc2qIu73m8JcqhZd7Z
VedrihwyGfIbWWIjHa6FvdHfHVDkIPzJ8XyabqTDjcZityncRQ5e1c36PnqR
Dl3yye+iygsc3hywVPYyjnSoqFqq43ws16EqYoXpWSD/ztaWmgtzsxwmxQAd
DNRf5i8nliWeBTEfyI/zPsFuezXTYdEW8x+HaiIddt3q+psK5JfrKsp/WRLl
0BdcojIdyAfycsLuRjsIvNy+nlkzywGk/Sh7jIOI/bE7W5dlOazfllR/E+hf
96Kf/C9NcxyslIEu/B/t8BlkwNFch4NA51UDwws9PAG0ApfD
          "]]}, 
        {FaceForm[{RGBColor[0.988, 0.984, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4rfzbHSuKGQ5bE+qv2nLGOhQZbbaLjwzF85v
DvSc2+BZ4HDLtjJiBWugA8/klU2B9wod/koUXxf6FeAgJGJ/7A5LkcMHMY+A
Pz8CHAxnaklMDSxyyGTIb2RpDXSoqFqq4+xd5DDHeNEWc48Ah6eJC6+ZuBU5
CJnZ7A2a5udwIFrB8aNRkYNSX2mhtK2Pw8vt65mfny10kNh+keFekI/DmVjv
E+wChQ5xuUf/bar2cUgCan8fWOAQJQ5UEOfj4B3ZZnFNPd9h8ul6j/2xPg4c
5yQDb33Mddig+qR5HpB/KT+e/dzuHIfZ5XMWKUf6OPQ/+SR/qTXbocRtyje2
eB8HT73/in9Dshz8RHu8XqUg+Br83FuXZfo4oIcPACW0go0=
          "]]}, 
        {FaceForm[{RGBColor[0.98, 0.965, 0.988], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYCYufzaVefB+Q7KMl/yQmLznVQK2WaxfEyF86X
8Aj4I9GY42Dgs4zLLTzXIbx23bYkyWwH9g9iHgFxuQ5lQOXSR7IcJsf8c/4V
n+vAlN/IctQwy+Ha8yztb4q5Dk9FZE8+1c1y+JoTVrtuT65DaJD6gk6tLIj5
znkOi7eY/ziUl+Xgrgq0eFOeww2hT47nZbIdZnNIz4tbn+dwztrv4sS0HIe0
VQkhQSvzHGbendzeuiHXwf/ixJh/a/McitZ03874ledwYteOXrZ1eQ7uzBXc
KtYFDrt62T6IAfkzd0+bwP+zwEFmXpzmaSB/xQsPvf/bCiHmAfX/+1b6YM6j
QgeTRUCHrMlzULiUH88uWuTAVwg0+FCeQ9wdN+YKnSKHeM3TAscj8hyYfFt4
/a2KHFYDtatL5TlsmJLakexX5PD77esDlhdzHV4XbxX97VHkMB9oncDUXAex
36ffnXQocjhkqexVbZnroFnXszNboMhh+iaewjWxuQ6b9r+ZZ/Ox0GGiYbmu
IpAPNl+v0EHu5FP7JZG5DkG3pGsSswvg8YEeXwADZ8TX
          "]]}, 
        {FaceForm[{RGBColor[0.973, 0.9490000000000001, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}}}, {{{223.9463, 257.2308}, {238.3343, 
          271.3128}, {262.2853, 271.4728}, {278.0803, 257.2308}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.984, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}}}, {{{222.63959999999997`, 
          45.405100000000004`}, {277.55859999999996`, 45.405100000000004`}, {
          265.5716, 31.154100000000007`}, {240.59359999999998`, 
          30.765100000000004`}, {222.63959999999997`, 
          45.405100000000004`}}}]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited], 
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYCYsNn61SflJc4LONyUy29ZOagvPNP+5feQofb
GQz5jV/MHC5xZijlzMh30Puv+PfbXB+H29cbi938ChxOsNvODm2OdLjIcI+J
s6PAQepAtIJjbZwDzwPdCQt+FDgYgcydmegw7+yq81cTCh02BmTPKv+V7FDk
NuUbG9D8kyEHVyz5k+Jwl4mzS35toUPi4cvaqcxpDkBS8tG+QocnzUCdgukO
7V+ANt4sdMjK/9B6clmGQ+VxTatJWwsd/oAk5LMc8oDCIY6FDl9BDivJdgA5
bwpHoUP5nEXKO6VyHDJA+k4VOGhZTTpdvyvHgcVE0MxmaoHDHnV+7q0puQ7X
48v85Y7lO/iI9ni9mpUPUe9T4AAKDqbvBQ5er4A6JhQ6rEoICVJ3LXTYAbK4
sMRhxt3J7a3fCx1AzitWKHfg3rqs8nh2vsPE0/Ue+y+WOSS/i3KyW5QJCa91
ZQ4Mm6s/bWBLd1jwAxji2mUOe4OmKfbNT3EAefP84VKHa2Fv9HdrJkHct7DU
4QgoICISHUDB21Vf6rAb5N6WBIcUyUcR4umlDmvW3ogvi46HhI9pqYOcWJbv
50/RDrWyFukukaUO7yxc3YvORjiAtC17XQqJL+4wSPiZljkcalsefmpZCMR9
dWUOPJNXNgXaBjvYvri55tehMgelnIqqpScCHUoLpXkfVJc7HBJXC2bd7Q2J
T6dyB4emR8dnNDs7gKIv2ajMIQUUQOa2DiDpsEWlDrt29LJ9YLNwkOIFJgiW
UofLex6LyFaaOaCnNwDzYCVX
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          360.5977, 54.9236}, {334.3687, 54.9236}, {309.34869999999995`, 
          54.8586}, {284.32869999999997`, 54.9656}, {277.3117, 54.9956}, {
          277.73069999999996`, 61.0126}, {275.60669999999993`, 66.2516}, {
          300.90569999999997`, 66.2516}, {325.3327, 66.2196}, {
          349.76169999999996`, 66.2716}, {356.91069999999996`, 66.2866}, {
          357.62469999999996`, 60.620599999999996`}, {360.5977, 
          54.9236}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{343.0059, 77.286}, {320.8129, 77.286}, {299.4219, 
          77.407}, {278.0339, 77.19800000000001}, {272.9379, 77.148}, {
          271.61289999999997`, 79.376}, {271.3759, 83.938}, {271.0679, 
          89.88}, {275.1689, 88.595}, {278.3599, 88.61}, {294.4149, 88.687}, {
          310.48789999999997`, 88.194}, {326.5189, 88.831}, {334.9049, 
          89.164}, {340.2279, 86.669}, {343.0059, 77.286}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.969, 0.965], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4j0lkyVYOEsc1IJZF0+6lu0wPU+o+cDUEoe1
mfcKu4D8uypsjVOVSh2iN+5/M+9CtsPVipdqhutLHXp2ZnP+vJHtkAYCP0sd
zFbbhUffzXaw5bq+uECuzOH9ycNOa9dmO4C0O6uUOcSzn5MMFMp2MI3b5cmj
XeZwS7om0Sg2y8Fyy4myfe9KHYxCDbRWFmc5zH2//Jj3jlIH//VTUjuA/KAd
cq2vN5U4vJ1no3OlKMvh0FeNmP61xQ7PZZe/8ADyjUFgRZEDL0hDSZYDSPpQ
W5HDlVnPZJcD+ff9e6fnxRY5ZAG90xeR5VCUMfFtjVuRg3dkm8W1uVkOvSAP
axc58FcBffA+y6E75/nvlSxFEPf5ZkPMEyly+Cx/KT9+dbYDk3a72E3lIocT
M3ZPm8Cc47BvvpT+3egiB86fC9I3X8p2YACBxiIHGaD20CvZDiDvzWcudmCu
4FbRuJXtcNk3SSCirdhhPtA7s4Dhix7+AOqHr4M=
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, {{{348.92189999999994`, 233.95540000000003`}, {
          326.49189999999993`, 233.95540000000003`}, {304.8508999999999, 
          233.86440000000002`}, {283.2108999999999, 234.01640000000003`}, {
          277.47489999999993`, 234.05740000000003`}, {276.2208999999999, 
          239.30540000000002`}, {272.14789999999994`, 244.6964}, {
          305.22989999999993`, 244.6964}, {314.97389999999996`, 244.6964}, {
          324.74189999999993`, 244.27140000000003`}, {334.45289999999994`, 
          244.83540000000002`}, {341.81389999999993`, 245.26340000000002`}, {
          346.4468999999999, 242.8934}, {348.92189999999994`, 
          233.95540000000003`}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.965, 0.961], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4gJbruuLbxc5TNvEU7jmcoRDzvPfKz/GIvjG
IPCg0IEhv5Hl6PkIh9eBO+Rakwod1m9Lqr95NcJh2+e/VyosCh2eiMiefHo9
wkFknfvDqr8FDkf7Dct1F0Y4dDomPL3AXeiQCTLgaqTDxLc19qaihQ5fcsJq
182LcgDKKt3mKHR4NRVkYbTDtcVAF8UVOlRGrDA9uzraoSgDqCOuyMHsrLXf
xZXRDiDrX8cVO3RtePhy6qpoB5BxcfElcP1A17xU21cCsW9ttEOeUPOBU+tK
HDil58VpZkc5sDVOde7eWuJQuKb7dsaCSIcWkIcOlDiIewT8kUiOcGgXu3nu
e0WJQ/F1oU+O9yMcDpxa6LotpMTh4sSYf863Ihxi+g991bhe7PDoJdDCkxEO
JZMlWMIiix2W3N/HNwcYXujhCQCINqiZ
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.976], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4s5L9x5wu5U4zGtQO9TGnelgfGSjXt6+Eoew
+avX3gDyhUTsj90xK3XIX8y4h5Uv04FhYt1vq/WlDunfnyQu5Mp02MD8vEfj
RqlDplJORRVnpkP1Uh1nGbEyh1KV6f8naGU6bIn8uvMWe5nDzfgyf7lJGQ6/
+F9uX/+v1OFgtILjR/0Mh6lXODOUgPIPHnBPXrko3eGxmdSB6K2lDolA5WJA
PtD2rS1bSxyyfT/3BS9Id5gdCnTY1mKH5kDPuQ1AeeuCcx2XthY53O76m/od
KP/6EdCAnCKHneuBDgPyI04ZHdlYW+TgB9RewpPhsK2l5sLmiiKIO+IzHP6l
Aj1SVOTwwcLVvehkhoPhTC2JqfVFDrUXNkd+5c10WBEONGBfkUNlFdBjPJkO
fPsMZmo5Fjv0abzl3ceR6bCqCeiQw8UOzxIXXjMBhhd6eAIAhLmj/g==
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.976, 0.976], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYCYq1v0+9O/lLkcPYMEGTEOaiUMs3imFDkILrO
/WEVkD/beNEWc+0ih+w9JZMlIuIc7Jbc38d3vNBB/64KW2NhnMMN28qIFUsK
HSa9rbE3rYpz6Njw8OXU6EKHWnvTuF13Yx3KdBXlvyQXOiwpsOW6Lh7vYAQ0
7kdmocPNc9+DH/+Mdzjx1H7JfSDfGAQWJjjkhNWu23Yaat6CBIfof86/3q4o
cmgXA+qYm+BwpN+wXLet2OFXXdaeEqD6zeY/DqUklzhUvlQz5JiX4CBzEmhg
V4kDxxqZqBSgejGPgD8SJ0oceqfnCTUfS3Bg/QAU2VviMGsmEKgnOLyYuomn
cGuJw+GvGjH9afEO9/bxzTHeXeIg3/o6cEdUnENeI8vR/rgSh+6c579XpsY5
rO6+ncHwrNhBNirF+n5xnIOwLNDC3GIHkHK5zDgH9PAEABpDp3U=
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.988, 0.988], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{346.48539999999997`, 177.90949999999998`}, {346.7584, 
          168.93349999999998`}, {342.98339999999996`, 165.9185}, {334.5254, 
          166.40749999999997`}, {322.6454, 167.09449999999998`}, {310.6944, 
          166.45549999999997`}, {298.7804, 166.69549999999998`}, {296.5814, 
          166.7395}, {292.1404, 164.66449999999998`}, {292.61039999999997`, 
          169.4595}, {292.94239999999996`, 172.86049999999997`}, {
          292.04839999999996`, 178.05649999999997`}, {298.58939999999996`, 
          177.97449999999998`}, {314.5444, 177.7755}, {330.5014, 
          177.90949999999998`}, {346.48539999999997`, 
          177.90949999999998`}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          285.64750000000004`, 144.076}, {285.65950000000004`, 
          153.06199999999998`}, {289.30850000000004`, 156.123}, {
          297.88250000000005`, 155.62699999999998`}, {311.33950000000004`, 
          154.84799999999998`}, {324.87550000000005`, 155.42}, {338.5975, 
          155.42}, {338.67050000000006`, 146.254}, {334.6675, 143.392}, {
          325.96250000000003`, 143.879}, {312.5565, 144.629}, {
          299.07750000000004`, 144.076}, {285.64750000000004`, 144.076}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.9570000000000001, 0.9530000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{329.40529999999995`, 255.9349}, {311.32829999999996`, 
          255.9349}, {294.19829999999996`, 255.9199}, {277.06929999999994`, 
          255.9689}, {275.9333, 255.9719}, {274.4643, 255.4989}, {
          273.77529999999996`, 257.0429}, {272.94229999999993`, 258.9129}, {
          274.38629999999995`, 259.9379}, {275.41029999999995`, 261.0079}, {
          276.26629999999994`, 261.9019}, {277.3032999999999, 262.6639}, {
          278.36429999999996`, 263.3159}, {290.50829999999996`, 270.7889}, {
          317.3992999999999, 267.2999}, {329.40529999999995`, 255.9349}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}}}, {{{292.6279, 43.2869}, {
          353.82590000000005`, 43.2869}, {341.1739, 30.873900000000003`}, {
          310.3279, 30.788900000000005`}, {292.6279, 43.2869}}}]}, 
        {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYC4raoy3seL8pwuL+Pb47xIzOHD2IeAX/OJTmI
yJ58as9i7vBWf7c6//Q4h7TNr4q3LvVxSAoJUl/gn+Bw3eS9hWt7pMOxfsNy
3cMJDhpvefcZNMY5HElZlRCyJNHBQTjx8OXZiQ7P7Jfc31eS5GCR7pKZ/yfZ
gVN6Xpzm2SSHgOxZ5XP+pTjcm9zeGsWb7PDi5ppfMaxpDqeeAjUYJDuApBcJ
pzvs7GX7IJaW7PCx9WTIwRUZDqIgd8klOzTPO7vqvGKWQ0cr0AOmSQ41nzYE
ZJdlO0SuMD1rfSTR4d+m6k8bZHIcvuaE1a7zSHTYCLJwT47DZp7CNd13Exyc
7YA2puU6fLt9vbH4U5zDZe1UyUdz8h2+gNT7JDj4XZwY8+97gYNdZcQK08tJ
Du9eH7BUdit0mAJ07uVpGQ53MhjyG38UOnC7qZYyfcl1mHS63mN/br4DiDsr
LNfhFYuJoNmSTIdbtkAD+HMd2kHO50h3eDV1E08hV44DSHntwhSHjQ9fTt1k
le3wBOQh7SSI+75mOVxiuMfEGZXosDoBGOCbshycQO5tS3AouS70ybExy2HX
ra6/qfHxkPCRy3LQdZZ5/ehbtMNSUESmZjn8Tf3+JPFihEPRmu7bGV3ZDtdA
8cUfBg2/HIf7D7gnr1wVAnHf+hwHqQPRCo6OwQ5qQOdzWOY6GMzUkph6JhDi
31V5DvcKu/qeHPKGxKdFnkOV2Wq78G5nB40FnRseiuc4gJx13s3WYe9jYMr5
nuXwGRSOYhaQ+NiT6QDy1u0OMwf09AYAORosXg==
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          230.1943, 54.9852}, {203.9653, 54.9852}, {178.9453, 54.9202}, {
          153.9253, 55.0272}, {146.9083, 55.0572}, {147.3263, 61.0742}, {
          145.20329999999998`, 66.3132}, {170.5023, 66.3132}, {194.9303, 
          66.2812}, {219.35829999999999`, 66.3332}, {226.5073, 66.3482}, {
          227.22129999999999`, 60.682199999999995`}, {230.1943, 
          54.9852}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{212.6021, 77.34750000000001}, {190.4101, 
          77.34750000000001}, {169.0191, 77.46750000000002}, {
          147.63010000000003`, 77.25950000000002}, {142.53410000000002`, 
          77.2095}, {141.2101, 79.43750000000001}, {140.97310000000002`, 
          83.9985}, {140.66410000000002`, 89.94050000000001}, {144.7661, 
          88.65650000000001}, {147.95710000000003`, 88.6705}, {164.0121, 
          88.74750000000002}, {180.0851, 88.25550000000001}, {196.1151, 
          88.89250000000001}, {204.5021, 89.22550000000001}, {
          209.82510000000002`, 86.7305}, {212.6021, 77.34750000000001}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.969, 0.965], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4lnlcxYpH013WJt5r7DrRrZDQDZQ5F6Gg0nD
docmID/5XZST3Y9MB5B036Vsh6Bpin2lgtkOs5/JLn9xK9sBJP1iabbD3oPi
asH3sx2Apu388z7boezBHMGl67MdPm0Amvg72wGk3EMk20E48fBlbc4ch0Sj
UAOt+CyHKd/Y4mdMyHbYmc35c0FplsOT5nlnVylnO1w7mmvSAOQf/bep+pNE
pkPJVtHfp0uyHHQnLPhhyJfukAdyIJDPz711WSVzqsOU1I7k2DKoeQdSHKI3
7n8zD8hPd8nM/5Cb4vDxi1dkW1SWQ19poTSvQ4rDpfx49nPzsxyArkmV5Epx
kAM6T+9jlsP+WlmL9D3JEPf5ZzvwPgDaeCfZocpstV342mwHVZADfyU7+K8H
2siaA+FnpTgAfc+6+Eq2gyLIgq0pDosnWTH6Xst2EDSz2Ru0K9Whq+/JJ/k7
2Q5+oBDYnwYPb/TwBwD4fbm0
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, {{{218.5186, 234.0164}, {196.08859999999999`, 234.0164}, {
          174.4476, 233.9254}, {152.80759999999998`, 234.07840000000002`}, {
          147.07059999999998`, 234.1184}, {145.81759999999997`, 239.3664}, {
          141.74360000000001`, 244.7574}, {174.82659999999998`, 244.7574}, {
          184.56959999999998`, 244.7584}, {194.33859999999999`, 244.3324}, {
          204.0496, 244.8964}, {211.4106, 245.3244}, {216.0436, 242.9544}, {
          218.5186, 234.0164}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.965, 0.961], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4gWr196Iz0p1COPT3TT3eoSDvFiW7+e8FDh/
XoPaobbiZIcDpxa6brsc4TDtCmeGUkWSQ75Q84FTNyMctCWmXuFUSXJYUmDL
df12hENCmb+c2LpEh8kSLGF8SyMcLm6O/LrzVKKDZkz/oa83Ih0ylXIqqu4m
Omw5UbZv/qIohx9PEhdeO5LosOrjJd+kDdEOuRVVS3Xykxw8HlaJrFsf7bCE
cQ+rUEGKwzcNoAFrox1ud/1N/V6Q5uDFw6Tdvi7aYZYW0AGFGXD9u28BFehn
QuwD8ueEzl+9ViDT4STQOqn8KIfTRkc26sllOhhyrJGJWhLp4PQx+UyscabD
9cVAD6RHOJyN9T7BvjTDwRgEHkc4OBy7s7UlJsNh4tsae9N7EQ7/Ur8/SUxM
d1jkuu3z3zMRDoqOQANS0xxSrO/79wLDCz08AXOJpDU=
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.976], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4vNXw97o22c4ZCrlVFTxZjrMWaS8849+poOi
48fkM0D+wwjx7RcVshw26+UtZhTIdNgbNE2xTzDbwWimlsRUnkwHWYt0l8zk
bAeTIxv18rgzHawmna73uJ/t4HDsztYWnUwH1SfN884eynaQff3ITGpKhsOG
gOxZ5RuyHXr+pn5/YpjhkHD4snbqwWyH1U2BnnOXpDsAVa86L5vtsIRxD6sQ
kG8DslAu02H9jfgy/0XpDl9uX28slkt38PvcF1wClDcWNLPZK5fqIC+W5fsZ
KD/lG1v8jJ4UhxagcQ1Afu7Rf5uq16U4TKr7bVXAl+GgCXLgkhSHo0DnLk7M
cHAQTjx8eXqKw+5bXX9TT2c4yCe/i3LalOJwMFrB8SN/JsQ8g1QHFxmgB/gy
HW6u+RWTa5rmcHFz5NedXJkOAkDrg6zSHTYyP+/RAIYXengCAJA8nEk=
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.976, 0.976], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4ksTY/45z0l16NV4y7svJ87BdxmXm+rlFIer
nBlKOUC+lbJXdTNnioO2xNQrnDFxDk0sR/sNHZMd3lu4uheVxjlsNf9xKOVP
kkOQ59wGtbo4BzHZk0/ts5IcbGeHzl/9MNbho5hHwJ+qJIeUM7HeJ6TjHbIY
8htZ2pMcZmoBDfwb78BbuKb7dluSg3Di4cvaixMc7mQAFXglOxRJ8z7QXZTg
YLJoi/kPllSHdJfM/A/zExx6bgMV7E9zuLXmV0wuUH2O9rfpdyszHCLFt19k
WJDgYON3cWLMiQyHFzeBCoDqDXyAHnLOdPh6+3pj8YkEh47WqMt7dDMdqo5r
Wk3STHC49jxL+5tspsPEut9WBVnxEP9qZjoAQ8NgZlycQ+QK07PWBRkOUV93
3urKjHOIvrznsUh9usPdrS01F8rjHJbe38c3pzfNARgaP/lz4xzQwxMAEmKe
SQ==
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.988, 0.988], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{216.08200000000002`, 177.971}, {216.35500000000002`, 
          168.995}, {212.58, 165.98000000000002`}, {204.122, 166.469}, {
          192.24200000000002`, 167.156}, {180.29100000000003`, 166.517}, {
          168.37600000000003`, 166.756}, {166.17800000000003`, 
          166.80100000000002`}, {161.73700000000002`, 164.726}, {
          162.20700000000002`, 169.52100000000002`}, {162.53900000000002`, 
          172.922}, {161.64500000000004`, 178.117}, {168.187, 178.036}, {
          184.14000000000001`, 177.83700000000002`}, {200.098, 177.971}, {
          216.08200000000002`, 177.971}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          155.24409999999997`, 144.1375}, {155.25509999999997`, 
          153.12349999999998`}, {158.90509999999998`, 156.18449999999999`}, {
          167.48009999999996`, 155.68849999999998`}, {180.93609999999998`, 
          154.90949999999998`}, {194.47209999999998`, 155.48149999999998`}, {
          208.19409999999996`, 155.48149999999998`}, {208.26709999999997`, 
          146.3155}, {204.26309999999998`, 143.4535}, {195.55909999999997`, 
          143.9405}, {182.15309999999997`, 144.68949999999998`}, {
          168.67409999999998`, 144.1375}, {155.24409999999997`, 144.1375}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.9570000000000001, 0.9530000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{199.002, 255.9959}, {180.924, 255.9959}, {
          163.79500000000002`, 255.98090000000002`}, {146.666, 256.0299}, {
          145.53, 256.0329}, {144.061, 255.5599}, {143.372, 257.1039}, {
          142.53900000000002`, 258.9739}, {143.983, 259.9989}, {145.007, 
          261.0689}, {145.863, 261.9629}, {146.9, 262.7249}, {147.96, 
          263.3769}, {160.10500000000002`, 270.8499}, {186.997, 267.3619}, {
          199.002, 255.9959}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}}}, {{{162.22459999999998`, 
          43.3484}, {223.4226, 43.3484}, {210.76959999999997`, 
          30.935399999999998`}, {179.92459999999997`, 30.849399999999996`}, {
          162.22459999999998`, 43.3484}}}]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited], 
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4vNXw97ox+c72FZGrDD9a+Zw9N+m6k9vch0O
iasFs572cNDfrc7PPTPH4XmPxlvepiCHs6uAOlyyHWoubI78OjfCAah6Q0B2
lsMpoyMb9ZpiHFYs8XMQnpjp8B8kYZTgIGuR7pK5PcPh2TrVJ80qSQ5g+9oz
IPZMSnKIcrJ7cTMiw+GB7oQFP74nOfyKyT36b1KGQ5T49osMNckOAdmzyuec
ynK4x8TZJd+a4QCS3vQ7xyFV8lGE+MRcB0OQwfr5DryFa7pv+xY6gJy71Szf
weLHoZRVoYUOESBz/PIdTj61X3I/stAhboaPaE9ZvoOyV3WzfmYhxH23oeq/
FjhMaW+NuixX4CD/JSestrXAISEkSH2Bf4HDKhBDtMAh7erzLG2jQoe9QdMU
+8RzHF5N3cRTKFLkEA8ylyXDQRGk8XuRAztI4FOyA0N+I8tR0WKH0IPAkElL
dji+a0cvm06xw3TFvtLCl0kOk2L+Of9iL3aIBfnLNcnh/j6+OcZvCh2ivu68
1VUZ5eB3cWLMv6sFDjO1JKZeiQ1wQI8vAGoOzuE=
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          290.9512, 157.5594}, {210.79119999999998`, 157.5594}, {
          211.56519999999998`, 165.2054}, {214.35519999999997`, 168.8754}, {
          222.6812, 168.6014}, {241.21419999999998`, 167.9924}, {259.7942, 
          167.99540000000002`}, {278.32719999999995`, 168.6004}, {286.6572, 
          168.8724}, {290.5732, 166.00840000000002`}, {290.9512, 
          157.5594}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4qWzjyhs0CtyCPSc26Bmk+SQMfFtjb1mkUNL
zYXNkdKJDnKtrwN3PCl0+NwXXKJyMsHh/fJj3uaJhQ5WBec6Ll1IcJieJ9R8
wKjAwRek4FGCg9vDKpF17HkOixn3sApdS3CYADTOdFW2Q91voA4gv/ylmiGH
R7ZD4sJrJu+B/KYDpxa6XstyeAIS2JvgYHXfv3f6siwHialXODMsEh3OK93+
WdeV5SAnluX7uSHR4VXgDrlW6yyHv6nfnyQeT3Rg0G4Xu5mW5ZChlFNRJZ7k
sMB12+e/PVkQ++OSHJy6c57/fprlcOzO1pYaqySHc9+DHy9Vz3aYHTp/9Vog
f+98Kf27FnkOS3WcZV4D/T9ZgiWMb2kBPDzQwwcAmOOLCQ==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          281.29689999999994`, 179.9647}, {220.63489999999993`, 179.9647}, {
          221.00589999999994`, 188.2877}, {224.63889999999992`, 191.5257}, {
          233.02689999999993`, 191.06969999999998`}, {244.97089999999994`, 
          190.42069999999998`}, {256.97689999999994`, 190.9227}, {
          268.95589999999993`, 190.8987}, {278.22189999999995`, 190.8807}, {
          278.22189999999995`, 190.8577}, {281.29689999999994`, 179.9647}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4gtXw97oF+Y79JUWSvPeiXOw+HEoZZVhAZyf
rf1t+t1VBQ5L/RyEE5/HOcRrnhY4rlzokP+h9WTI1TiHJyKyJ596FDr4A6UP
n49zAGlP6C90cJvyjS3eJ95BFCht313okAnSYBDncLTfsFy3o9ChwWN/rWxM
rMPOXrYPYpWFDqmSjyLElWMczlr7XZyoWegww0e0x0suBmKeboHDG/3d6vz8
MQ4/DZ+tU03Kc/i0ISB7lnCMw5PmeWdXZeY4eL1iMRGUinEAyj5pPpINMV8m
xuGKNtDkZdkQ8aBYh8XKO/+0z8t2CMyeVT5HLs6hBmTQhGwIXRbvUDFnkfJO
vRyI+afjIOpqciDuuxznMBPkropcB5DxFq/jHDi75JPfleRB7AOGF3p4AgCo
UJ4K
          "]]}, 
        {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{272.00980000000004`, 202.17559999999997`}, {
          259.94780000000003`, 202.17559999999997`}, {248.69480000000004`, 
          202.04659999999998`}, {237.44880000000003`, 202.27859999999998`}, {
          235.04580000000004`, 202.32859999999997`}, {230.49780000000004`, 
          200.50859999999997`}, {230.59780000000003`, 204.25959999999998`}, {
          230.68880000000004`, 207.63359999999997`}, {231.39580000000004`, 
          213.17559999999997`}, {236.79580000000004`, 213.39459999999997`}, {
          246.22380000000004`, 213.77759999999998`}, {255.71880000000004`, 
          214.02159999999998`}, {265.1068, 213.29659999999998`}, {
          270.54080000000005`, 212.87659999999997`}, {270.23080000000004`, 
          207.19459999999998`}, {272.00980000000004`, 
          202.17559999999997`}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{227.6201, 101.0623}, {242.81310000000002`, 101.0623}, {
          255.2131, 101.0843}, {267.6121, 101.03829999999999`}, {269.4541, 
          101.03129999999999`}, {272.0321, 100.88029999999999`}, {271.1741, 
          98.21329999999999}, {270.1831, 95.1373}, {269.7851, 
          90.66829999999999}, {265.4741, 90.5043}, {255.7861, 90.1373}, {
          246.0651, 90.13029999999999}, {236.3771, 90.48729999999999}, {
          231.39610000000002`, 90.66929999999999}, {232.35410000000002`, 
          96.0773}, {227.6201, 101.0623}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{251.0117, 51.096500000000006`}, {246.8567, 60.3605}, {
          243.4427, 67.92750000000001}, {240.0797, 75.51650000000001}, {
          239.5767, 76.6525}, {239.3867, 78.5855}, {240.7017, 78.6195}, {
          247.5417, 78.7985}, {254.4047, 78.7765}, {261.2237, 78.3045}, {
          262.28069999999997`, 78.23150000000001}, {261.69669999999996`, 
          75.57650000000001}, {261.0437, 74.0985}, {257.9437, 
          67.06550000000001}, {254.8927, 60.01050000000001}, {251.0117, 
          51.096500000000006`}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          250.7285, 252.931}, {254.8405, 243.35600000000002`}, {257.6605, 
          236.39000000000001`}, {260.8235, 229.58300000000003`}, {262.6185, 
          225.721}, {261.4275, 224.46900000000002`}, {257.5385, 224.514}, {
          251.9155, 224.578}, {246.2925, 224.53}, {239.8215, 224.53}, {
          241.7375, 234.381}, {247.1175, 241.92700000000002`}, {250.7285, 
          252.931}}}]}, 
        {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4ntMnF3yh2Mdirv6nny6b+ZwKuTgiiX3ohwc
jt3Z2rLHw2He2VXnr5pFOKg9aZ53tirI4daaXzG5vaEOe9T5ubdOi3BY4ucg
nHg72EFi+0WGe1UxEPVqQQ6qpUyzOPQTHKqOa1pNKg5waI26vOexQpLDG/3d
6vzCAQ5vDlgqe/UnObzYvp75eY6/A9sHMY+AL0kOJoJmNnu1AhwabtpWRlQk
OzzQnbDgx8wQB5aj/YbljRkOPwyfrVP9EwHh9+Y6bAzInlWeEutw1425gtun
0GHrssrjmkWxDhznJANvBRc6fGg9GXJwQazDzN3TJvBHFDr8bf9y+/rHWAfz
1Xbh0emFDh1AbuPuOAfvyDaLa58LHPpKC6V5G+IdjEMNtFY2FzgkhgSpL1AE
+sMMqEG4wCE3rHbdtmeJDjH/nH+9Fc5xKL4u9MlxdTLEfwwZDo9eTt3EU5jq
sIzLTbX0XbKD+oLODQ/Xpjp8zgFqTEp20FOU/5JzK9XB7Ky138WnSQ6HU1Yl
hExKdfgjATTJKckhXvO0wPGoZIcVQG9YFUU52PhdnBijl+gA9PWT5rAAB/T4
AgDC/c30
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          159.02540000000002`, 157.4451}, {78.86440000000002, 157.4451}, {
          79.63840000000002, 165.09109999999998`}, {82.42940000000002, 
          168.7621}, {90.75540000000002, 168.4881}, {109.28840000000002`, 
          167.8791}, {127.86840000000001`, 167.8821}, {146.40140000000002`, 
          168.4871}, {154.7314, 168.75809999999998`}, {158.64740000000003`, 
          165.8941}, {159.02540000000002`, 157.4451}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4jePzKQO3E92qOBW0aizSHIoPNdx6d6VZIfV
duHRG8UTHVLPxHqf8E52kAq8JV1zNMGh/rdVwTmXJIdEo1ADrbMJDvMFl+49
eD7e4e08G50r9xIcLkgCFYpEOzivzbxXeCnBIRmkLjLMAahKXO1ygoOR1krh
C1NCHTqSY++4AfmhrIsnWW0McQBZ37MzwWG76O/T7wJDHHY4ND06bpLo8GgO
0ALJEId9QO3BtYkOEkDpk9XBDnNB9h5OdHAB2xPswH4OaLFwkkPLo+MzdsuF
OJw67LQ2MyrJ4XiuScP2CyEQ95klOdx3Y67gDgl1OAQ0jtU8yWHftAn8VWXR
DmfenTzsZAlUf2drS82ZBHh4oIcPAA4+iHU=
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          149.3706, 179.85040000000004`}, {88.7096, 179.85040000000004`}, {
          89.0796, 188.17340000000004`}, {92.7136, 191.41140000000004`}, {
          101.10059999999999`, 190.95540000000003`}, {113.0456, 
          190.30740000000003`}, {125.0506, 190.80840000000003`}, {137.0306, 
          190.78440000000003`}, {146.2956, 190.76640000000003`}, {146.2956, 
          190.74340000000004`}, {149.3706, 179.85040000000004`}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lTJRxHiz2MdzoDAlTiHaYp9pYWn4+H8nb1s
H8RuJDh8vOSbJPAgzkGy+LrQp5OJDntKJkuwnItzWJUQEqQukuTQOz1PqPlE
nMPlPY9FZBcmOQBlw/hc4x3aooAiM5Ictn7+e6VCM84hN6x23bZJSQ775kvp
3w2JdQDqXtBZkuSwce775cekYxyAskn1VxMdnlxQuv1TLMZheeVxTatd8Q6W
W06U7WOPcdh+keEe08loB3vTuF2ePDEOQNdK894IdwBZf0AoxqFl3tlV53vD
IOaLxDjEz/AR7QkKczAyBgLvWAfurcsqjzuGOYCs8xaPc9gbBPSxapgD0PT5
UvnxDiBpzaRwiPlH4hzSXTLzP/wNh7jvdJzDNzagiV8jHdrEbp77/jjO4UZj
sduUd9Hw8EIPTwBpZagv
          "]]}, 
        {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{140.0835, 202.0618}, {128.02149999999997`, 202.0618}, {
          116.76849999999999`, 201.93280000000001`}, {105.52249999999998`, 
          202.1648}, {103.11949999999999`, 202.2138}, {98.57149999999999, 
          200.3948}, {98.67249999999999, 204.1458}, {98.76249999999999, 
          207.5198}, {99.46949999999998, 213.0618}, {104.86949999999999`, 
          213.2808}, {114.29749999999999`, 213.6638}, {123.79249999999999`, 
          213.9078}, {133.1805, 213.18280000000001`}, {138.6155, 212.7628}, {
          138.3045, 207.0808}, {140.0835, 202.0618}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{95.6938, 100.94810000000001`}, {110.8878, 
          100.94810000000001`}, {123.2868, 100.97010000000002`}, {135.6868, 
          100.92510000000001`}, {137.52779999999998`, 100.91810000000001`}, {
          140.1058, 100.76710000000001`}, {139.24779999999998`, 98.0991}, {
          138.2578, 95.02310000000001}, {137.8588, 90.5541}, {133.5478, 
          90.39110000000001}, {123.8608, 90.02310000000001}, {114.1398, 
          90.01610000000001}, {104.4508, 90.37310000000001}, {
          99.46979999999999, 90.55610000000001}, {100.42779999999999`, 
          95.96410000000002}, {95.6938, 100.94810000000001`}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{119.08539999999999`, 50.9822}, {114.93039999999999`, 
          60.2462}, {111.5174, 67.8132}, {108.1544, 75.4032}, {107.6514, 
          76.5382}, {107.46039999999999`, 78.4722}, {108.77539999999999`, 
          78.5062}, {115.6154, 78.6842}, {122.4784, 78.6622}, {
          129.29739999999998`, 78.1902}, {130.3544, 78.1182}, {129.7704, 
          75.4622}, {129.11839999999998`, 73.9842}, {126.0174, 66.9512}, {
          122.9664, 59.8962}, {119.08539999999999`, 50.9822}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          118.80269999999999`, 252.8172}, {122.91469999999998`, 
          243.24220000000003`}, {125.73469999999999`, 236.27620000000002`}, {
          128.89669999999998`, 229.4692}, {130.6917, 225.6072}, {129.5017, 
          224.35520000000002`}, {125.61269999999999`, 224.4002}, {
          119.98969999999998`, 224.4642}, {114.36669999999998`, 224.4162}, {
          107.89569999999999`, 224.4162}, {109.81169999999999`, 234.2672}, {
          115.19069999999999`, 241.81220000000002`}, {118.80269999999999`, 
          252.8172}}}]}, 
        {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYCYompVzgz3pU7JAlEWG65YebgLyeW5Wta7mDe
6ZjwdIeHQ0vNhc2R3WUOi1y3ff5bEeQw/f+Eut8PSh0sQPJTIhy4MpRyKkpK
HaZIsITxVcY4tILUs5c6PF46+4iCXoLDb6uCcx2zShycu3Oe/5ZPcgDb11Ti
sOrjJd+kviSHOO8T7LbZJQ5HFDYUZXxOclh3I77Mv6PEwY7r+uKC8mQHEFdu
SanDoa8aMf0NGQ73H3BPXrmnDMLvyXXwnNugduhauUN91p6Syd6FDnz7DGZq
3Sp3SE8DguBCh7tbgT54Wu7wIxjoovBChwSgcWK/yh2mgRyUVuhgf+zO1had
Coh7Phc4HNmol7c4tsJh0tsae9PmAoeJdUAf9FU43Dz3PfixUAHE/wWVDlL6
d1XYhHMcpA5EKzgGV0H89z/dIRDkILNqhxTr+/69b5MdgK6RmBpS7bBx7vvl
xxKTHb4/SVx4Lava4cvfKxUvnyQ5HGpbHn7KrdphlycPk7ZjkoPAy+3rmbWr
HFRu/6zLKohyAFl/TqQSEj8hAQ7o8QUAcVTRLw==
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          422.877, 157.4168}, {342.717, 157.4168}, {343.491, 
          165.06279999999998`}, {346.281, 168.7338}, {354.607, 168.4598}, {
          373.14, 167.8498}, {391.721, 167.8538}, {410.253, 168.4588}, {
          418.583, 168.72979999999998`}, {422.499, 165.8658}, {422.877, 
          157.4168}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYi2rSafrc6sczGz2Bk0zT3J4q79bnT+jyiEz
/0PrSbFEh8XKO/+0K1c53GgsdptyJMHBACjNvaDSQT75XZTTmQQHGd4HuhMK
KxxWn78a9uZugoMGP/fWZU7lDh1fbl9vvJjg4Cva4/VKuMwBpNzuUoKDg3Di
4cuPSh3cpnxjiwfyj/3bVP1pZanDyZCDK5bsSHBQ6istlJ5U6vC3HWiAcaLD
G5B7Wkodaj5tCMiuSXSoOq5pNSmm1CHaye7FzUOJDqwmgmY2RaUOR0HmCCU5
hAKN8WsthdgfmeTwKEJ8+8WNpRD3mSY55Mwqn7PoUqlDg8f+WlmzJIi7ossd
ukAeskhykNh+keHe4wp4eKCHDwCHPI2z
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          413.2227, 179.82210000000003`}, {352.5617, 179.82210000000003`}, {
          352.9317, 188.14510000000004`}, {356.5657, 191.38310000000004`}, {
          364.9527, 190.92710000000002`}, {376.8977, 190.27910000000003`}, {
          388.9027, 190.78010000000003`}, {400.88169999999997`, 
          190.75610000000003`}, {410.1477, 190.73810000000003`}, {410.1477, 
          190.71510000000004`}, {413.2227, 179.82210000000003`}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYCYompVzgzvpc7eOr9V/x7Kc4hQymnoqqgwiE8
euP+N0B++CmjIxtfVjjkmTRsd7gX59AfXKIyPanSwfLa0VyTM3EOIvbH7mxt
r3SQUAtmXXwszkHjLe8+g3OVDgJVZqvtnOMdmPawComcqnQwCjXQWqke5/B1
562uv8cqHawZfVt4g2MdXm5fz/x8e6UDyPpvkjEOf1O/P0nMqHRIAmkQjYGY
l1PhsE309+l3rDEOOs4yrx/llzvsmTaBv4orxuH+A+7JK4vLHEQuuNz4IBDj
sJgRaKFiGcR84RiHaybvLVyFyhzWT0ntSPaMhbiHr8xBKvCWdI1onEMeSAN7
mYPrjQ9fvHLjHYC+X6oTVgYx/1Ccw434Mn+52jKI+07GOdRc2Bz59VeZA3MF
t4rGozgHkHLnSkT4oYcnALd9mRY=
          "]]}, 
        {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{403.93549999999993`, 202.03349999999998`}, {
          391.8734999999999, 202.03349999999998`}, {380.6214999999999, 
          201.90449999999998`}, {369.3734999999999, 202.13649999999998`}, {
          366.97149999999993`, 202.18549999999996`}, {362.42349999999993`, 
          200.36649999999997`}, {362.52449999999993`, 204.11749999999998`}, {
          362.6144999999999, 207.49149999999997`}, {363.32149999999996`, 
          213.03349999999998`}, {368.72149999999993`, 213.25249999999997`}, {
          378.14949999999993`, 213.63549999999998`}, {387.64449999999994`, 
          213.87849999999997`}, {397.03349999999995`, 213.15449999999998`}, {
          402.46649999999994`, 212.73449999999997`}, {402.15649999999994`, 
          207.05249999999998`}, {403.93549999999993`, 
          202.03349999999998`}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{359.5459, 100.91980000000001`}, {374.7389, 
          100.91980000000001`}, {387.13890000000004`, 100.94180000000001`}, {
          399.53790000000004`, 100.89680000000001`}, {401.3809, 100.8888}, {
          403.9579, 100.73880000000001`}, {403.0999, 98.0708}, {402.1089, 
          94.99480000000001}, {401.71090000000004`, 90.5258}, {397.3999, 
          90.36280000000001}, {387.7119, 89.99480000000001}, {377.9909, 
          89.98780000000001}, {368.3029, 90.3448}, {363.3219, 
          90.52780000000001}, {364.2799, 95.93580000000001}, {359.5459, 
          100.91980000000001`}}}]}, 
        {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, {{{382.93749999999994`, 50.9539}, {378.78349999999995`, 
          60.2179}, {375.36949999999996`, 67.7849}, {372.0054999999999, 
          75.3749}, {371.50249999999994`, 76.5099}, {371.31249999999994`, 
          78.4439}, {372.62749999999994`, 78.4779}, {379.4674999999999, 
          78.6559}, {386.33149999999995`, 78.6339}, {393.14949999999993`, 
          78.1619}, {394.20649999999995`, 78.0899}, {393.62249999999995`, 
          75.4339}, {392.9694999999999, 73.9559}, {389.86949999999996`, 
          66.9229}, {386.8184999999999, 59.8679}, {382.93749999999994`, 
          50.9539}}}]}, 
        {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
          382.65430000000003`, 252.7889}, {386.76630000000006`, 
          243.21390000000002`}, {389.58630000000005`, 236.2469}, {
          392.74930000000006`, 229.4409}, {394.5443, 225.5789}, {
          393.35330000000005`, 224.32690000000002`}, {389.4653, 224.3719}, {
          383.84130000000005`, 224.4359}, {378.21830000000006`, 224.3879}, {
          371.74830000000003`, 224.3879}, {373.6643, 234.2389}, {
          379.04330000000004`, 241.78390000000002`}, {382.65430000000003`, 
          252.7889}}}]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited]},
    {
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4sqXaoYch4odGH1beP0rCx12yLW+DnxT4rDn
sYjsyam5DsLNB04t5CxzYPsg5hFQkuGwRiYqxVq93KHfsFxXMTjZIW6XJw+T
dblDH0jBjySH89+DHy81Lne4BDJgaZLDnCMKG4oUyh3aoi7veeyT5CAPNH4H
S5nDkX+bqj9lRDlMc+7Oef6yxOHZOtUnzWYBDu9q7E3jzhU7SCx/4aH339yB
Sbtd7OakYocFk6wYfV0sHV78Xvnx0sRihw3ZnD8XtNs4bCjKmPi2odjhxIzd
0ya8t3OYIsESxldd5BAhvv0iA1+gw8myffOlygsdKo5rWk1KjnJwAVr3u7DA
4aClslf17USI+wMLHLyqm/V9ipIcniydfUTBrsBhE0/hmu7vSRD7UwocTgkc
37VjabJDLdB5u4Dm6SrKf8mpynBQBDmgucih+3YGQ35oLtx9INcrihc6pFrf
9++dXezw5JP8pXzdQocPy495my8vdrhX2NX3xKnQAT38AbbHs2I=
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4n0GM7UkThY7VHKraNT55TvIvH5kJrWmxOGL
/KX8eMtsh4l1v60K2kodgm5J1yR6pDtMXtkU6Jlc5nByxu5pEyKTHYC6p14p
L3PYJvr79LvfSQ7ty8NPGZWUOcjWJBqFbkpyWAVUPjehzEEjmHXxpIgkB5Bx
51pKHZZ0bnj48mKMw5bIrztvrSpxOGKp7FX9PsRB1xnoggvFDglOdi9uqng5
fEw+E+s9pdgh5uCKJX4RXg6LGfewCk0rdqg5rmk16bO3g34eUKQdKv/DB6J/
T5EDS34jy9HNoQ73H3BPXvml0CHo4sSYf+9jHBQcgSZqFzoErJ+S2iGa5HCu
49K9B8KFDlFtFteONic58IEChKHQYVc2588FT5McQMFxQLbQwa+F1399VrLD
Uh2gBd8KHWYBvc9vk+5gf+zO1pZTRQ7TUjuSY4WyHYChwZmxAOiejfvfzHuW
BwmfpcUOi9I3vyr+n+dgfGSjXt7GYgflv99KHwjlO6CHPwBy6rn2
          "]]}, 
        {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4jePzKQO/E9zeF28VfR3dqFDtu/nvuCQTIcJ
huW6itW5Dst0nGVe92U73LKtjFgRmeEQ5Dm3Qe1UrkNy/U3bSotkB7vZofNX
f8x1SAoJUl9wN8lhxv8Jdb8fAfVxuamWdiU5GM3Ukpi6J9chaoXpWWujJAcL
qQPRCq3ZDjmzyucsMo5yUJ0O1OCf6dDn9YrFhDHA4SpnhlKORLrDDtHfp99p
mju01VzYHLkwzcGB0beFN9/C4SS7LdDGNIeAW9I1iZusHaK/7rzVVZvmkMF+
TjJQys5B0fFj8pnCFAeGzdWfNtwIcOj5m/r9SWaSg0LyuygnvSiHJrVDbcvj
ExymtrdGXT6QCHG/bIKD3Mmn9kvCkxyatjs0PXof79AWdXnP4ztJEPtdExzm
xWmeFuhOdvjSF1yikp3kwJjfyHI0PsPhcNvy8FNNKQ7xQOnjVrlw913Kj2c/
x1no4AUMrkOb0hyArrslrVDocCu+zF/uVJrDiRm7p00wLXRAD38A+XGz2g==

          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4p1/2r/c5k138Ipss7hmnO9QWijN++ByhsPR
XJOG7XLZDvEzfER7OrIclDXqenbqpjskv4tysnPKcZj1THb5C7tkh/wPrSdD
snMcOpJj77g9THLwesViIpiS4/Du5GGntdOTHDi75JPf2eQ4/FiQvvmVbZKD
1aTT9R6tWQ5uqqVMs+bEOCzxcxBOvJjhkHb1eZb2rhAHfu6tyypl0x2WVB7X
tNrl6QCy3mtJmsOCH4bP1r31dGiZd3bV+eVpDgf+bar+1OEN1Hz4snY3VL7X
B6L/a4rDMi6gDXWhDr9ico/+S0l2+JITVrtuV4xDnaxFusvlRAfFv99KH/xK
dLi1BqhicaKDzhWgjzKTHC4x3GPirEl06NmZzfnzVJJDD8hD2xMd5C/lx7MH
JDt0fLl9vTEz2QEouyBdMd1htzrQRoFUB6Dvird+z3J4tk71SfOeNAfd/0Ab
TudBwud4mkPxVtHfp5/kOSxSBob4vTSHL6AA/5HngB7+APguvw4=
          "]]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited], 
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYlf3op/80sUOd643FrvdSHIQeLl9PTOQ/6Uv
uERlf7xDhlJORZV8sUNrzYXNkWcjHYCqX26XLHaoqFqq43wnGEKLFDswKP39
Vtrg43Bko17e4soiB5ELLjc+HHF2sD92Z2uLSaGDR3Wzvo+brUN49Mb9b37l
OxiU6yrKlxg7eEW2WVzrzXWwOGvtd/GiicN2h6ZHx32yHdZl3ivsqnNwAMoe
zQ3IdOD6uSB98y1Xh9V2QBOCMxxaeP3XT9nq61DU1ffkk3+GAxfIobOCHU4e
dlqb6ZbhMHllU6Dn0niHNSBz7DIczq06fzXsRqqDVOAt6ZrADIf1qk+a593N
dgBpl4/LcODn3rqs8nG+w4kZu6dNKM52UPYCOjir0EFw6d6D4nH5Dh2tUZf3
pBY6zNSSmHplaqGD8CfH82mJhQ4toHARLHaIn+Ej2rMv30FIBOhjYPjUfNoQ
kH0o26F9efgpI4Vih3dRTnYvTmY4gIJLBhi+2y8y3GO6mOqAHv4ASNy2PQ==

          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYCYn2tlcIXsoscapr1fZadSXI4mmvSsB3Iby52
m/JtUryD7n/Fv98KihxS3kU52fVEOsguf+Ghl1XkUPtpQ0B2W7ADWH9ykYPW
obbl4Ye8HX4sSN/8KqLQYQXjHlahOU4OaQz5jSzf8x323er6m6rv6OD46+3r
A/65Djp1PTuzZ9o7yMl/yQk7neUQMX/12hvubg7vHc+nXf2Z6fCAibNL3j/A
4ciuHb1sxzIdZvqI9nhNC3T4Mv3u5PbNmQ6qO/+0f3ke5FC9bltSPZAv9ShC
fLttiMOWpPqbtkD+isrjmlbP4h1yGlmO9q/PdJjNIT0v7niqg1Ip0yyOrZkO
L7O0v02fne3wFERvz3Swq4xYYeqf5yAxL07ztFm2w23pmkQjowIHS7+LE2Nm
5DqUPZgjuHRSgQPDLKBBd/IdFgK9WfyuwCHEABgAioUONz588YrsLHDg+AkM
gPuFDlVA487K5jtY61yZ9cylyEGq+LrQJ+E8B9vw6I37geG7eIv5j0OPchxW
CF9wuQHknwD5c1a2w6ZXxVtFc4oc/jsDA2pVhkMYUPkboPy+xyKyJ3enOqDH
FwB7itIg
          "]]}, 
        {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYkXHj8lnNqY63LneWOx2I8lhe0vNhc1A/pe+
4BKV/fEO9x9wT165K9WhFSgceTbSoXqpjrPM+lSHiiog406wA8PEut9WS1Id
GJT+fitt8HGY8X9C3e+8FAeRCy43PhxxdhC1P3Zn65NEB4/qZn0fN1uHc+9O
HnZ6G+dgUK6rKF9i7HBYXC2YVTjKweKstd/FiyYOc57JLn8xIdRhXea9wq46
Bwfra0dzTWYEOnD9XJC++Zarw5ss7W/Tbf0dWnj910/Z6uug9CUnrFbP34Er
QymnYlawQ8NN28oIDn+Ie5fGO3wS8wj488LP4dyq81fDbqQ6HOKbY7zIxN9h
veqT5nl3sx1aWI72G6b7O/Bzb11W+TjfYT3I3nuhDspeQAdnFTo4NT06PmNz
rENHa9TlPamFDifZbWeHLk9yEP7keD4tsdBhweq1N+LnpTrEz/AR7dmX77D7
VtffVGD41HzaEJB9KNtB9vUjM6k9qQ7vopzsXpzMcOj+m/r9CTB8t19kuMd0
MdUBPfwBr0LAFQ==
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4sgU6/v+wSkONc36PsvOJDm0vA7cIQfkNxe7
Tfk2Kd4hlE9309zYFIewgyuW+PVEOpjE7fLkCUhxqP20ISC7LdgBrN85xUHr
UNvy8EPeDq+A2lt1kxxWMO5hFZrj5HBIYUNRxtM4h323uv6m6js6VIisc384
LdJBp65nZ/ZMewdjkHl9IQ4R81evveHu5vD4gtLtn6+CHB4wcXbJ+wc41E91
7s5pDnKY6SPa4zUt0OFNjb1pXFyQg+rOP+1fngfB+VKPIsS324Y4xD0FGhAb
5LCi8rim1bN4h/NA4+rCghxmc0jPizue6mDNdX1xQWKQw8ss7W/TZ2c7HPiq
EdOfFuRgVxmxwtQ/z8G00zHhaUqow23pmkQjowKHjD0lkyU0ohzKHswRXDqp
wOFb8OOlszfEOSxM3/yq+F2Bw+ICW67rexMdbnz44hXZWeDAzaTdLmad7FAF
NO6sbL5DUcbEtzWsKQ5SxdeFPgnnOZTtmy+lDwzfxVvMfxx6lOPgbQ60EMg/
sWtHL9usbIdnv1d+vATk/3f+9fb1qgwHvbsqbI1A/r7HIrInd6c6oMcXACSq
ygc=
          "]]}, 
        {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYo/9tbIWsdUOd643FrvdSHIQTjx8WRvI/9IX
XKKyP95BnZ9767LEaofWmgubI89GOpQWSvM+iK52qKhaquN8J9ih+tOGgOyw
agcGpb/fSht8HI5rWk06vbvKQeSCy40PR5wd/m0CqiirdPCobtb3cbN1yJ5V
PmeRfYWDQbmuonyJscOKJX4OwpzlDhZnrf0uXjRxiJvhI9rzotRhXea9wq46
Bwe3Kd/Y4l+VOHD9XJC++Zarg2iP1yuWnBKHFl7/9VO2+jr8MHy2TjULKJ+h
lFMxK9jhxc01v2JSSyDuXRrvME2xr7QwscTh3KrzV8NupDpMWADUAVS/XvVJ
87y72Q4sJoJmNoUlDiBvVj7Od1De+af9y+9SB2UvoIOzCh3A4fOx3KGjNery
ntRChzmLgCquVzoIf3I8n5ZY6ND+5fb1xuBqh3iQu/flQ9wXU+1QAwqXQ9kQ
9ydVO7yLcrJ7cTLDAWhaugswfLdfZLjHdDHVAT38AcExuH8=
          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4naxm+e+r61yqGnW91l2JslBNirF+j6Q31zs
NuXbpHiH1teBO+Q2VzmEHVyxxK8n0qF0sgRL2Joqh9pPGwKy24IdnLtznv9e
WuWgdahtefghb4eA3ul5QrMrHVYw7mEVmuPkAJJeaVvhsO9W199UfUeHypdq
hhyvyhx06np2Zs+0dwDKfry0vNQhYv7qtTfc3SD67UsdHjBxdsn7Bzjs8uRh
0lYtdZjpI9rjNS3QIWiHXOtr6VIH1Z1/2r88D3KYBnIAkC/1KEJ8u22Iw6a5
75cfA/JXVB7XtHoW78CnCxSRLHWYzSE9L+54qsOy2UcUNsiUOrzM0v42fXa2
w6mFrts+y5Y62FVGrDD1z3MA+t6/926pw23pmkQjowKIf/nKHcoezBFcOqnA
IcJyy4kygwqHhembXxW/K3BYIwMMsORKhxsfvnhFdhY4gLj3FascqoDGnZXN
dwBrb69ykCq+LvRJOM9hKsi9wPBdvMX8x6FHOQ4MILCuyuHErh29bLOyHbiu
Ly6wBfL/O/96+3pVhsM694dVIkD+vscisid3pzqgxxcAkuDNlg==
          "]]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited], 
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4jfzbHSuhBU47Fbn5956zMyhhGkWh/S3LIdf
MblH/20yc/h2KGVVQk66wwcxj4A/HT4OpwSO79pRmuFwTjLwlvSUSAezH0AF
LzIc8kwatjtUxTl0bHj4cuquTIcT7LazQycnOrw6YKnsNTnLIW8x4x7WZ8kO
7gF/JIoPZzso5VRULdVId7BQ9qpuPp7tcGFz5NedelkOvyWKrwsFZTqcifU+
wf4xxwGkvTo6w0EPbECew9ptSfU3X6Y7WLq6F/0MzncQ+uR4Pm1phsNvkHsT
Chx8L06M+Ref6WAA8pB4oYPTr7evD6zNcphVPmeRcmihwxlrv4sTNXIcLNJd
MvOTCh1YF0+yYlQvdFj4w/DZupmFDu9OHnZa613sUANykGmeg7JGXc/OhUUO
TjKvH5kZZTgAVfu2JBY52B27s7XlTapDbc/ObM7fhQ6cGUAf7Ut2WJN5r7Br
UqHDuY5L9x4A/Q+WZy90WAcSj4t12HtQXC0YaJ/ZarvwaMsIh3JuFY06ryIH
ueUvPPT2B0PsLyxyUPr7rfSBSrCDUaiB1sqJRQ5VIA3ZQQ77QRG2qcjB8trR
XJMdgQ4g43+mFTu4qZYyzVrh7ZC++VXxVsNih0aWo/2Gx50dToMMVC9yyP/Q
ejKk0dah9MEcwaUrCx3218papB+xgKhXLHRgj5/hI3rGzAE9PQAA0uj3Cw==

          "]]}, 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYCYpYKbhWNuAIHK1f3op/sjg6mi7aY/ziU7XAw
WsHxo7ajg/lZa7+LvJkOLYGecxvW+Tk8fjl1E8/dTIdDK5b4OYhHQtTbZTk8
X6f6pHlTrIOY7Mmn9irZDm6qpUyz/iU4lDPN4pC+lO0wwbBcV9E02SEpJEh9
QWqOwyfH82lXRVMdbP0uToz5leMg4RHwR+JnmoPmgs4ND/fmONQ06/ss+5Ph
sKuX7YNYR45DFkN+I8vxLIcf0+9Obl+a7QB2pl2OA4PLr7eve7Ic5sVpnhaY
m+vw61DKqoQfmQ53MoAawvIcbttWRqzIzHQoWtN9O0MsH8J/mOmwTfT36Xcc
BQ73J7e3RsVnOfCoaNT19BQ43BQCuiwq2+HngvTNr5YVOGx6CPRwTI7DZCtG
35Z1BQ4B66ekdtwscBADaj95rcBhlfAFlxsdRQ4gb/wrzHUwDjXQWvm80OFF
lva36ewZDl/kL+XHLy10OGSp7FV9NtXB8trRXBODQofdO4Ae25LswHFOMvDW
1QKHDSB7uhIdnNdm3isMKXBonXd21fmHMQ4iQOM/1BQ4BGXPKp/jF+5wOT+e
/RzQPK/9tbIWxUEOTz8BLThf6PAoQnz7xSOBDtorgQ76UuhgNel0vQdzoMO/
b6UP5kgWORR8aD0Z4hrg0G4BdMCsIgfxLN/PfdneDruyOX8uqCyCxHe2G8Q/
BwodOpaHnzKKcXbo7nvySd6r0OHV9vXMz1McHQqB1kueLHC40HHp3oPLDg7o
6QcAcSAU/A==
          "]]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited]},
    {
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYCYrGb574HRxY4nF7ouu3zWTMH/97peUK/sxy4
ri8usN1l5uBl3umYUJju8CP48dLZPT4Ocq2vA3dUZTgE7QCypkY6dOU8/73y
bYbDp0u+SQI1cQ7J1vf9e/dnQvRPSXSwM43b5Tkjy2FDUcbEt8+SHWYfUdhQ
dCLbIQWkTjPdoQdoXfOZbAeh5gOnFupnQewPz3Tg09009/3HHAeRde4PqxIy
HApsgSay5TkwareL3XyX7lANkgjJd0gDgVUZDnNA5iYWOIC88Tcl0+Gi0u2f
deKFDtOAxh/YlOUAsm56aKGDAsghujkOIG8/Tip00L+rwtaoWejglPD0gtKs
QoeY/kNfNfyKHfbNl9K/a5bnAPRVhOWSIocWoLfljDMc9pRMlmBJKXJomOrc
nfM21WH5MW/zzr+FDt6gcNqf7HAN6G2uqYUOQF1bTgD9D5bnLHQw4lgjE5UQ
66AFdP45oH27PHmYtK0jIO71KXJYBKIPBDtIsITx6ZYUOSwDBZRasAPIGSpT
ihz+Xal4qZYb5PBSzZBjzZYih70gd+wKdPhZl7WnJLPYwQ/kzjXeDhPf1tib
mhQ7AF3z9MIpZwegK8r2aRY51AOVTe6wdQDG4hGFNYUO54HeX3raAqJepdBB
HBQgl80c0NMDAHaL+Hc=
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYCYtmTT+2XqCc4rFl7I75sv5lDoTTvA90HIQ6v
H5lJHVht5vDOwtW9aKa3w8uba37FtPo4WBWc67i0z9/Bq7pZ32dSpMM3tvgZ
PkcDHF5N3cRTWBHnsGKJn4NwZpBDm8W1o7mTEh2AsqI9UiEOOldmPZN9muwg
sf0iw72qMIcHcwSX7lVPd/gVk3v0X1OYQ9+TT/KXdLMcGjz218rOCHToAgl8
yHEQErE/difU3+HNPBudKyx5DifYbWeH9vs6/CgFmhCc77AWZIBdgEPU1523
uhIKHFR2/mn/sjnQoT+4RGW6WKEDP/fWZZX+IQ4/+V9uXx9S6KDUV1oo7Rru
MP3/hLrfiYUOfhcnxvw7nujAMLHut9XMQocVpmet/QTTHKwYfVt4TfMcem5n
MOTvTXFgAHL9DTMcMhnyG1lsUxz+fAM64HWqg8OS+/v4CpIdTszYPW3C3mSH
eXGapwXmJzn07Mzm/An0P1i+I9FB67TA8V0xsQ77+eYYLzqR6AAMrTXd5hEO
Jou2mP/gS3GYxSE9L25vsIOi/JecsNgUiDnKwQ4GPsu43OamOHybfndyOzBc
D6esSgi5l+Kw1fzHoZRtgQ5PRIAx6J7mYPcCGEFLvB2EPzmeT7ub6lB1XNNq
0mFnhztA5zeeSHZIKPOXE6uyddieVH/T9mySwwbm5z0aey0g6vcmOvx4krjw
2hEzB/T0AABKvfnz
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4jfzbHSuzKtwOL3Qddvns2YOVoy+LbyHSx24
ri8usN1l5mBx7Wiuyb9ihx/Bj5fO7vFxUPz7rfRBU4lD0A651tdTIx2kaxKN
QveUOHy65JskUBPn0JEce8dNFap/SqJD6YM5gksnljpsKMqY+PZZsoOyRl3P
Ts0yhxTr+/69mukOQNm9B7XLHISaD5xaqJ/lUNuzM5vzY4kDn+6mue8/5jiA
tO8tLXEosAWayJbnEBa9cf8bmxKHapF17g9D8h04fy5I3zyrxGHOEYUNRYkF
DsteeOj9/17icFHp9s868UKIe+eVOoCsmx5a6PBMdvkLj5gyh5vnvgc/Tip0
YF08yYoxv9LBKeHpBaVZhQ7vTh52Wju52mHffCn9u2Z5EPe+rHJoeR24Q844
w2ESKIBWVjk0THXuznmbCnGvc5WDt3mnY8L+ZIc1mfcKu25VOghEWG45AfQ/
WN6/0sGIY41MVEKsw96D4mrBQPt2efIwaVtHOJRzq2jUTapyWAQM/r8HgiH2
76xyWDYb6CG1YAejUAOtlTerHP5dqXiplhvksB8UYb+qHPaWTJZg2RXocN7l
xocv66od/JKANq7xdkjf/Kp4a2W1A9A1Ty+ccnY4DTIwv8qhPmtPyeQOW0h8
fKx0OA/0/tLTFhD1mZUO4qAAuWzmgJ4eAJMyBDI=
          "]]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited], 
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
         Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4ndRTnYvHPMdyh7MEVxaVOiwLan+pu3pAodl
XG6qpR25DoLHd+3ofVHo8EHMI+BPWobDqoSQIHW2YofKiBWmZ12THWL+Of96
K1nsUKGrKP/lVZLDWWu/ixOFih32PBaRPTk9yWEWh/S8uP9FDgWNLEf77ZMc
ZE8+tV/yuNBhReVxTSu/KIcp7a1Rl08UOJzQtJp0WjrA4XpjsduUqHyHjHuF
XX1TzB06vty+3vg4z+HDycNOa29aOJyu99hf+zDPgWHxJCtGWRuH2Nyj/zbt
z3MIaOH1X99i56C880/7l805Djqpko8iPgc49JUWSvOuyXIAefOmR5RDy7yz
q84vzHBQ9qpu1j+X6OAgnHj4cnyGg8miLeY/UpIcDl/WTpW0ynCYYwwUAPoH
bH97hgNQ9lDKjGSHb2zxM3zWZjmIA4NDIjfDAWh79acjOQ6lTECfeuTC3Rd7
x425QqDQwUe0x+vVlzyHyDaLa0fVCh3ugDzIk+8QzAr0gE2hA3r4AwDMdLm5

          "]]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited], 
     StyleBox[
      GraphicsBox[
       {Thickness[0.002], 
        {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 
          0.112}, {499.08799999999997`, 0.112}, {499.08799999999997`, 
          301.137}, {0.912, 301.137}}}]}, 
        {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYnfmCm4Vm3IHmdePzKRuJTkILd17UBzIb3p0
fMbuQ/EOasGsiyc5lDsASSvGi5EOJVtFf5+2KndgPycZeOt+sEOV2Wq7cNNy
B4b8Rpaj7T4Ox3JNGrbPKnMQkT351P6Ms8Pfb6UP5oSWOrScDDm4IsTWYV3m
vcIuuRIHA0Ezm71Nxg7LX3jo/X9e5FAgzftA94GJQ9wdN+aK44UO67Yl1d9s
dXBwvfHhi9fJAgcuN9VSpkeuDiIXXG588CpwaIm6vOfxHl8Ha0bfFl7PAoeu
vief5OcFOzyTBZroUgBx78p4h6mpHcmxDgUOfPsMZmrdSnXoByq7BFRf5i8n
lnU/2wHkfY2AAodrJu8tXJ/mOyiBHHyr0OHwZe1UyexCh26QuReKHTT4ubcu
Syt0mA2yYFupw+bqTxsCkgod2iyuHc01KneYv3rtjfgD+RD3AcNnD6uQiP2R
bIj7Hcsd9PIWM+45neFQk2gUagAM37rfVgXnLqU6oIc/AJ0rswI=
          "]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4naxm+e+f8512Cb6+/S720kOslEp1vdBfPMf
h1KOxTu4bvv898qfXAdLIHfVlUiHh1Ui69w/5jrofJt+d/LjYIe3Nfamcc9y
HVqK3aZ86/NxaH0duENuY47DDMW+0sLLzg7VQOUP1bIcJLJ8P/cl2zqEPF46
+8iOdAeGtO9PEicaO3iADPROdeDYwyok8t7EYcuJsn3zuZIdxBIPX9budXBo
OXBqoStfokPRh9aTIS9dHVYc8zbvFExw4Iif4SN6xNchT6j5wCneBId9j0Vk
Ty4MdgBJO7IkOLirljLNWhPvEAyy70e8w4oXHnr/b6c6gLwbzJ/gIFBlttru
YbYD2P/SCQ4F8eznJJ/nOxxR2FCUYZjsIPBy+3rmnEIHPt1Nc99LpzuUqEz/
PyG90EH/rgpb48ssB4aJdb+tkgsdeqcDXfAAGD7XjuaaHMp3UARqnwgMnzAD
rZXCx7IdmkHu/5frcGLG7mkTzmY4fLzkmyTwJddBQi2YdfGVVAf08AcAKdC/
lQ==
          "]]}},
       AspectRatio->Automatic,
       ImageSize->{500., 302.},
       PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
      StripOnInput->False,
      Magnification->0.25 Inherited]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.831040572853875*^9, 3.831040599593862*^9}, 
   3.831040669055193*^9, 3.831040707678589*^9},
 CellLabel->
  "Out[72]//TableForm=",ExpressionUUID->"d0482879-4715-45b6-a055-\
8fe7baf38d06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.83112499491604*^9, 3.831124995281516*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"26fbe861-41a0-4417-ae74-32948e30e261"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 27 May 2021 13:23:15\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "5", ",", "27", ",", "13", ",", "23", ",", 
           "15.533912`7.943855825605041"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.831124995547468*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"0a482665-a820-4c3b-93fd-b584985a4f4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allSets", "[", 
  RowBox[{"[", "423", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8311249969225683`*^9, 3.831125024979109*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"127cd4f5-ebfe-47e1-a8ab-4b31a17b9863"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "diamond"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.831125000194944*^9, 3.831125025346469*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"d249b50b-1002-48e4-be96-b228100d2752"]
}, Open  ]],

Cell["find all the red sets", "Text",
 CellChangeTimes->{{3.831125028490608*^9, 
  3.831125030559458*^9}},ExpressionUUID->"9e3f88a8-bf5d-4a1f-9289-\
c43ceaf4da2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setToImage", "/@", 
   RowBox[{"Select", "[", "\[IndentingNewLine]", 
    RowBox[{"allSets", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "squiggle"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "squiggle"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "squiggle"}]}], "&"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.831125031397217*^9, 3.8311251237775517`*^9}, {
  3.83112525337696*^9, 3.831125273059949*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"6cfc14b0-a142-4e27-a9e6-8b4fa24408fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", "\[IndentingNewLine]", 
  RowBox[{"setDeck", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "striped"}], "&&", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "squiggle"}]}], "&"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.831125274627387*^9, 3.831125293899166*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"a91162ca-d22e-4b67-b8fc-28a4fcc3a737"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "striped", ",", "squiggle"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.831125312287778*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"44362384-91e3-4b04-bb4e-99775866d3da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setCards", "/@", 
  RowBox[{"allSets", "[", 
   RowBox[{"[", "123", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831125381141406*^9, 3.831125399510281*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"6185bea5-1452-4f70-a885-85f48aae4321"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4ndRTnYvHPMdyh7MEVxaVOiwLan+pu3pAodl
XG6qpR25DoLHd+3ofVHo8EHMI+BPWobDqoSQIHW2YofKiBWmZ12THWL+Of96
K1nsUKGrKP/lVZLDWWu/ixOFih32PBaRPTk9yWEWh/S8uP9FDgWNLEf77ZMc
ZE8+tV/yuNBhReVxTSu/KIcp7a1Rl08UOJzQtJp0WjrA4XpjsduUqHyHjHuF
XX1TzB06vty+3vg4z+HDycNOa29aOJyu99hf+zDPgWHxJCtGWRuH2Nyj/zbt
z3MIaOH1X99i56C880/7l805Djqpko8iPgc49JUWSvOuyXIAefOmR5RDy7yz
q84vzHBQ9qpu1j+X6OAgnHj4cnyGg8miLeY/UpIcDl/WTpW0ynCYYwwUAPoH
bH97hgNQ9lDKjGSHb2zxM3zWZjmIA4NDIjfDAWh79acjOQ6lTECfeuTC3Rd7
x425QqDQwUe0x+vVlzyHyDaLa0fVCh3ugDzIk+8QzAr0gE2hA3r4AwDMdLm5

        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4ndRTnYvHPMdyh7MEVxaVOiwLan+pu3pAodl
XG6qpR25DoLHd+3ofVHo8EHMI+BPWobDqoSQIHW2YofKiBWmZ12THWL+Of96
K1nsUKGrKP/lVZLDWWu/ixOFih32PBaRPTk9yWEWh/S8uP9FDgWNLEf77ZMc
ZE8+tV/yuNBhReVxTSu/KIcp7a1Rl08UOJzQtJp0WjrA4XpjsduUqHyHjHuF
XX1TzB06vty+3vg4z+HDycNOa29aOJyu99hf+zDPgWHxJCtGWRuH2Nyj/zbt
z3MIaOH1X99i56C880/7l805Djqpko8iPgc49JUWSvOuyXIAefOmR5RDy7yz
q84vzHBQ9qpu1j+X6OAgnHj4cnyGg8miLeY/UpIcDl/WTpW0ynCYYwwUAPoH
bH97hgNQ9lDKjGSHb2zxM3zWZjmIA4NDIjfDAWh79acjOQ6lTECfeuTC3Rd7
x425QqDQwUe0x+vVlzyHyDaLa0fVCh3ugDzIk+8QzAr0gE2hA3r4AwDMdLm5

        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4ndRTnYvHPMdyh7MEVxaVOiwLan+pu3pAodl
XG6qpR25DoLHd+3ofVHo8EHMI+BPWobDqoSQIHW2YofKiBWmZ12THWL+Of96
K1nsUKGrKP/lVZLDWWu/ixOFih32PBaRPTk9yWEWh/S8uP9FDgWNLEf77ZMc
ZE8+tV/yuNBhReVxTSu/KIcp7a1Rl08UOJzQtJp0WjrA4XpjsduUqHyHjHuF
XX1TzB06vty+3vg4z+HDycNOa29aOJyu99hf+zDPgWHxJCtGWRuH2Nyj/zbt
z3MIaOH1X99i56C880/7l805Djqpko8iPgc49JUWSvOuyXIAefOmR5RDy7yz
q84vzHBQ9qpu1j+X6OAgnHj4cnyGg8miLeY/UpIcDl/WTpW0ynCYYwwUAPoH
bH97hgNQ9lDKjGSHb2zxM3zWZjmIA4NDIjfDAWh79acjOQ6lTECfeuTC3Rd7
x425QqDQwUe0x+vVlzyHyDaLa0fVCh3ugDzIk+8QzAr0gE2hA3r4AwDMdLm5

        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited]}], "}"}]], "Output",
 CellChangeTimes->{3.831125399732636*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"70114eae-a35e-4b39-9eda-eb33ab2d0d4a"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s brute force a counting of all the planes in a set \
deck. A plane is generated by three cards that DO NOt form a set. How many \
such triples are there? (That is, three cards the DON\[CloseCurlyQuote]T form \
a set).\
\>", "Text",
 CellChangeTimes->{{3.831126712894273*^9, 
  3.831126756239457*^9}},ExpressionUUID->"29c6370f-ccea-4b9b-8bec-\
cd2cad84565a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"notSets", " ", "=", " ", 
   RowBox[{"Select", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{"setDeck", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"setCheck", "[", "#", "]"}]}], "&"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8311269117524853`*^9, 3.831126949882128*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"796e96e4-744a-497d-989d-f760e10f2634"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "notSets", "]"}]], "Input",
 CellChangeTimes->{{3.83112694143429*^9, 3.831126944825797*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"58fb1a33-7bd8-443d-9ce7-8b4cbc3c4bf9"],

Cell[BoxData["84240"], "Output",
 CellChangeTimes->{{3.831126946210945*^9, 3.831126952188398*^9}, 
   3.831497714174066*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"0f3e887d-f687-4f5b-9a94-d551019a10dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Binomial", "[", 
   RowBox[{"81", ",", "3"}], "]"}], "-", "1080"}]], "Input",
 CellChangeTimes->{{3.831126953627782*^9, 3.831126959878611*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"431648c2-5935-43d1-94b2-020a2d5bf65d"],

Cell[BoxData["84240"], "Output",
 CellChangeTimes->{3.831126960277274*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"177b19bf-3d36-43f4-976b-5c68f92ce139"]
}, Open  ]],

Cell["\<\
Even though these triples are too numerous, let\[CloseCurlyQuote]s Map[] our \
planMaker[] function across all of them.\
\>", "Text",
 CellChangeTimes->{{3.831127003094993*^9, 
  3.8311270184239807`*^9}},ExpressionUUID->"1b25ba9c-172e-4f48-b24d-\
598305436e84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"planeMaker", "[", "#", "]"}], ",", "1"}], "]"}], "]"}], 
     "&"}], ",", "\[IndentingNewLine]", "notSets"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831127019528253*^9, 3.8311270358917627`*^9}, {
   3.8311271180800543`*^9, 3.831127180698556*^9}, {3.831127216610132*^9, 
   3.831127221265114*^9}, 3.831499485702716*^9, {3.831500002874195*^9, 
   3.831500006357357*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"0410a910-3304-4644-b2f0-239d0a835f8f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "empty", ",", "diamond"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "solid", ",", "diamond"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "solid", ",", "oval"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "solid", ",", "squiggle"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "striped", ",", "diamond"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[0, 1, 0],
                Editable->False,
                Selectable->False], ",", "striped", ",", "squiggle"}], 
              "}"}]}], "}"}], ",", 
           TemplateBox[{"84238"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[1, 0, 0],
                Editable->False,
                Selectable->False], ",", "empty", ",", "diamond"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[1, 0, 0],
                Editable->False,
                Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[1, 0, 0],
                Editable->False,
                Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], 
             ",", 
             TemplateBox[{"4"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[1, 0, 0],
                Editable->False,
                Selectable->False], ",", "striped", ",", "oval"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                   AspectRatio->1,
                   DefaultBaseStyle->"ColorSwatchGraphics",
                   Frame->True,
                   FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                   FrameTicks->None,
                   
                   ImageSize->
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                   PlotRangePadding->None],
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]],
                 Appearance->None,
                 BaseStyle->{},
                 BaselinePosition->Baseline,
                 ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                 DefaultBaseStyle->{},
                 Evaluator->Automatic,
                 Method->"Preemptive"],
                RGBColor[1, 0, 0],
                Editable->False,
                Selectable->False], ",", "striped", ",", "squiggle"}], 
              "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 71, 31679158870579504082, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 71, 31679158870579504082, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 71, 31679158870579504082, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31679158870579504082 === $SessionID, 
   Out[71], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.8311270373713818`*^9, {3.831127110568416*^9, 3.831127127815031*^9}, {
   3.831127167985482*^9, 3.8311271811531973`*^9}, 3.831127758542495*^9, 
   3.831499510817957*^9, 3.8315000897079906`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"0a2cf0c4-3c15-4889-a595-a1530b01bb9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteDuplicates", "[", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"planeMaker", "[", "#", "]"}], ",", "1"}], "]"}], "]"}], 
      "&"}], ",", "\[IndentingNewLine]", "notSets"}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8311272285213547`*^9, 3.831127243368346*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"fae4b3a2-8e0b-4c57-beae-b82c4a1ced4f"],

Cell[BoxData["1170"], "Output",
 CellChangeTimes->{3.831127230056065*^9, 3.83112727021876*^9, 
  3.831127789938788*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"22026932-ebc1-494b-b3a9-8dccf5cc4963"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.831626072867743*^9, 3.831626073143765*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2c1ab945-31ee-42c6-a21f-b1297c875ada"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 2 Jun 2021 08:34:33\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "6", ",", "2", ",", "8", ",", "34", ",", 
           "33.804202`8.281545668365359"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.831626073826288*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a5395299-838b-478d-bc18-ee6fcddcf404"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"attributeCount", "[", "set_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Count", "[", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "counting", " ", "the", " ", "number", " ", "of", " ", "attributes", " ", 
     "that", " ", "are", " ", "different", " ", "in", " ", "a", " ", "given", 
     " ", "set"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"set", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "n", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"set", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "4", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "False"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.831626083154016*^9, 3.8316261463337812`*^9}, {
   3.8316262066232986`*^9, 3.831626219418494*^9}, 3.831626258085499*^9, {
   3.831626457708015*^9, 3.831626464728705*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"ec13f87c-92a4-4442-b61f-3c239d74bc64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allSets", "[", 
  RowBox[{"[", "432", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8316261541545973`*^9, 3.8316261620611353`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a3cbd5a3-f956-46b8-9d29-d8323a2624d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "solid", ",", "diamond"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8316261577023563`*^9, 3.831626162331959*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"41c9f499-1279-4ed6-a3f9-111a15db607a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"attributeCount", "[", 
  RowBox[{"allSets", "[", 
   RowBox[{"[", "432", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.831626163977297*^9, 3.831626174920706*^9}, 
   3.831626508477557*^9},ExpressionUUID->"2c654f84-9b9f-49e2-a3a0-\
479fc0d42218"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8316261755519247`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"751c76e1-3b00-4fd3-9331-4a6c43a82d3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allSets", "[", 
  RowBox[{"[", "111", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.831626266812289*^9, 3.8316262754241533`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"fac85b60-72d1-4d16-ae2e-bdbd4d70add9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "squiggle"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", "empty", ",", "oval"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
         
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 0, 0.5],
      Editable->False,
      Selectable->False], ",", "empty", ",", "diamond"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.831626275929533*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"29751ba7-c0f1-448e-8ee4-93b49311610a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"attributeCount", "[", 
  RowBox[{"allSets", "[", 
   RowBox[{"[", "111", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.831626277159877*^9, 3.8316262836657267`*^9}, 
   3.831626511877236*^9},ExpressionUUID->"9b10954b-c687-4a91-ac22-\
20ea4c9afda5"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.831626284035071*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"cd8b1066-6b13-4625-8779-e415acabb94e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"attributeCount", "[", 
  RowBox[{"allSets", "[", 
   RowBox[{"[", "476", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.831626288425097*^9, 3.8316263018410053`*^9}, 
   3.831626514573704*^9},ExpressionUUID->"652524e2-28fa-419e-839e-\
afe68b3f594f"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8316263020606203`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"89e6d06a-d827-46ff-a991-53b3283e65ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setCards", "/@", 
  RowBox[{"allSets", "[", 
   RowBox[{"[", "476", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8316263039556026`*^9, 3.831626326996594*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"796c74e1-674e-49db-8a99-a96fdd1c6565"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYlf3op/80sUOvxakb351O8lB4OX29cxAvp3f
xYkxx+IdMpRyKqrkix0O8s0xXnQl0gGo+uV2yWKHLTyFa7ofBztUVC3VcRYp
dqhwm/KNrd/H4chGvbzFlUUOPV9uX2+87Oxgf+zO1haTQocSkMJkW4fw6I37
3/zKd3jBPXll00RjB6/INotrvbkOGmJZvp/fmThsd2h6dNwn20Gtr7RQutfB
ASh7NDcg06FJ1iLd5aWrw2o7oAnBGQ5/DJ+tUz3i61DU1ffkk3+Gg9uvt68P
LAx2OHnYaW2mWwbEvWviHdZk3ivssstweFO8VfT37VQHqcBb0jWBGQ5n3wFV
Psx2AGmXj8tw2PIKqOB5vsOJGbunTSjOdtgE9AZjTqGD4NK9B8Xj8h1AzutL
L3SYqSUx9crUQodF10zeWyQXOrTUXNgcKVjsUJtoFGpwKN9BSAToY2D4zAIa
w38s26F9efgpI4ViBx4VjbqesxkOoOCSAYbv1VnPZJdfSXVAD38AqvO7AA==

        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4T2sQiI1JQ671fm5tx4zcwiQE8vyXVDo8Csm
9+i/TWYOSn+/lT7Ylu/wQcwj4E+Hj0P1Uh1nmYQCh3OSgbekp0Q6GM7Ukpg6
s8Ahz6Rhu0NVnMO8BrVDbUyFDifYbWeHTk506P6b+v1JXqFD3mLGPazPkh0s
Xd2LfrIVOSjlVFQt1Uh32KQHlOEscriwOfLrTr0sh8krmwI9zxU4nIn1PsH+
Mcfh285bXX+DChz0wAbkOYC06UgVQMwJzneQBzr3c3mBw2+Qe4HuAnnH/mqB
gwHIQ+KFDuZSB6IVagodZpXPWaQcWujwx6rgXIdlkYNFuktmflKhgzRQ2tGn
1GHhD8Nn62YWOrA879F4W1DuUANykGkexJ5jZQ5OMq8fmRllOKwIP2V0pK3M
we7Yna0tb1Ih7lUoc+DMAPpoX7LDobbl4ae2lzqc67h07wHQ/2B5nVKHdZn3
CrviYh0u33vAPRlon9lqu/BoywiHXo23vPvyyxzklr/w0NsfDLF/Whkk3FWC
IeG3rcyhCqQhO8jhKsii62UOlteO5prsCHR4mrjwmklPuYObainTrBXeDrUg
d4eVOzSyHO03PO7soDr9/4Q6nzKH/A+tJ0MabSHmnSt12F8ra5F+xAKi3q3U
gT1+ho/oGTMH9PQAAMO78mw=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYCYompVzgzmkscrFzdi36yOzoU/eR/uZ2tyOFg
tILjR21Hhw3Mz3s01hQ4tAR6zm1Y5+fAJiRif0y40OHQiiV+DuKRDvp5ixn3
uBQ6PF+n+qR5U6zDYzOpA9HbCx3cVEuZZv1LcPCXE8vy5StymGBYrqtomuwA
soY/osjhk+P5tKuiqQ7GRzbq5S0qcpDwCPgj8TPNQeMt7z6DliKHmmZ9n2V/
MhxM31u4umcWOWQx5DeyHM9yCC5Rmf7/e6HDoi3mPw7Z5TgAXXNna3ahw7w4
zdMCc3MdJtb9tipQLHS4kwHUEJYHse9WgUPRmu7bGWL5Dkx7WIVExAodton+
Pv2Oo8CBBei9tyGFDjwqGnU9PQUODWqH2pZfKnT4uSB986tlBQ4g58wMLnKY
bMXo27KuwGF5+CmjI/9KHMSA2k9eK3AAympJrCtz8Ls4MeZfYa4DyLqXPGUO
L7K0v01nz3DgsJ0dOv9UqcMhS2Wv6rOpDr6f+4JLQksddu/oZfuwJdkhoQwY
Qr9LHDY8fDl1U1eiA8j4jZUlDq3zzq46/zAGEh6LShyCsmeVz/ELdwA5l/d0
qYPX/lpZi+IgB1B0rf9S6vAoQnz7xSOBDqDgaJEsc7CadLregznQARRdd+zK
HAo+tJ4McQ1wALpm9dr9ZQ7iWUCXZHs7nOu4dO/BvDJIfGe7QfzzrNShA+TR
GGcHoOob8fmlDq+2r2d+nuLo0FpzYXPkuxKHCyB9lx0c0NMPAEhGDIA=
        "]]}, 
      {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4lnlcxYp52Y4XK14qWa4w8zBzGZv0LStSQ4i
69wfVi0xcyj8yf9ye3icQ529adyuRh+HHq9XLCamCRD5CZEOPwyfrVNdkeCw
5UTZvvllcQ4gacGqRIfXgTvkWicmOqz5FZN7NCjJYdLbGnvTJ8kOnF3yye+a
kh3ctn3+e0Ut3QEk/a8t2eHL3ysVL3WyHIC2K/YJJjp8WH7M2/x9jkNTsduU
b1IJDkFA414z5znce8A9eWVQvENs/6GvGkH5Dj6iQBelJDjwMGm3iyUUOPBz
b11WKZ/o4Jjw9IKSWKED0DVmNrlJDmtkolKsQwod+koLpXlfJDt4gTQkFjqc
rvfYX8ub5bBp7vvlx2YUOsw7u+r81bA8hwVS+ndVTPIcOEDuZcp1SAMBgwwH
oG+fNDflOCQJRFhueZUKce/WbAddkAF7kh2mfGOLn/Eky+HTJd8kgUmJEPmz
mRD/RcU6gIJXkS/LoQYUnqYRDhsCsmeVh+Q4pFjf9+/dHQyxf1GOQ8ZEYIAp
BkPC71GOw4FTC123pQc5OAgnHr6snOtQn7WnZPKWQAcgTzu1N88BZF3EQm+H
CQuAMaKU58AHctB+Z4cI8e0XGfhyHDpBAVJkCzFPKNvh5rnvwY+3WkDUM2U5
KG4oypi418wBPT0AACVK+F0=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYCYkXHj8lnqjMctE4LHN/F4Ojg97kvuKQp2WHj
w5dTN6k4OgTIiWX5nk1wKLku9MlxuZ/DH6uCcx1zEh12ZXP+XCAcCVH/L9Hh
fmFX35N1sQ76eYsZ9zxOcjjUtjz81J8EhwnBJSrTJyY78Exe2RRonOxQvVTH
WUY1xQGkjFUk1SFs/uq1N3amOEwBSnt+T3NwAjontjbF4ceTxIXXfmU4XL73
gHuye4rDMyDX5GiWg8DL7euZU5MdQM76bJPjIDn1CmeGT5KD1IFoBcfZuQ5C
IvbH7mxPdIg4ZXRkY0iewxeg81Q0Ex3e8e4zmCmSD+EvTHQocZvyjY2jAGKP
XJLDqZCDK5Z0Fzh8AlrvLZXssP0iwz2mZQUOp4HG6MmkOARmzyqfs7bAweHY
na0tRZkOV7RTJR9dLXDIrahaqnMxxwFknV5BrkP9b2AA9WU7pACNOcGa4cAw
se63FVe2g93s0PmrT6c6dP9N/f5EPsvBHOTgzckOmm+BDsvOdACGyutHHYkO
C4DBEZ+R4VCbaBRqcC8GEh47Mxy89P4r/vUKd9hvMFNLgjvbwanp0fEZ+UEO
T8yABsVlO9ySrkk0OhjokA8K1xXZDkDdWiv/BziIAoNj66dsh4zNr4q3OgY4
qIMi5kuOw6upm3gKU7wd+jSADtiUA4nvFDeIfxyzHaIv73ksEurssCIc6LPg
LIdbtpURK2IdHX7xAyMgMNPhAN8c40VnHBzQ0w8APUQP7A==
        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4vNXw97ox+c72FZGrDD9a+Zw9N+m6k9vch0O
iasFs572cNDfrc7PPTPH4XmPxlvepiCHs6uAOlyyHWoubI78OjfCAah6Q0B2
lsMpoyMb9ZpiHFYs8XMQnpjp8B8kYZTgIGuR7pK5PcPh2TrVJ80qSQ5g+9oz
IPZMSnKIcrJ7cTMiw+GB7oQFP74nOfyKyT36b1KGQ5T49osMNckOAdmzyuec
ynK4x8TZJd+a4QCS3vQ7xyFV8lGE+MRcB0OQwfr5DryFa7pv+xY6gJy71Szf
weLHoZRVoYUOESBz/PIdTj61X3I/stAhboaPaE9ZvoOyV3WzfmYhxH23oeq/
FjhMaW+NuixX4CD/JSestrXAISEkSH2Bf4HDKhBDtMAh7erzLG2jQoe9QdMU
+8RzHF5N3cRTKFLkEA8ylyXDQRGk8XuRAztI4FOyA0N+I8tR0WKH0IPAkElL
dji+a0cvm06xw3TFvtLCl0kOk2L+Of9iL3aIBfnLNcnh/j6+OcZvCh2ivu68
1VUZ5eB3cWLMv6sFDjO1JKZeiQ1wQI8vAGoOzuE=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        290.9512, 157.5594}, {210.79119999999998`, 157.5594}, {
        211.56519999999998`, 165.2054}, {214.35519999999997`, 168.8754}, {
        222.6812, 168.6014}, {241.21419999999998`, 167.9924}, {259.7942, 
        167.99540000000002`}, {278.32719999999995`, 168.6004}, {286.6572, 
        168.8724}, {290.5732, 166.00840000000002`}, {290.9512, 
        157.5594}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4qWzjyhs0CtyCPSc26Bmk+SQMfFtjb1mkUNL
zYXNkdKJDnKtrwN3PCl0+NwXXKJyMsHh/fJj3uaJhQ5WBec6Ll1IcJieJ9R8
wKjAwRek4FGCg9vDKpF17HkOixn3sApdS3CYADTOdFW2Q91voA4gv/ylmiGH
R7ZD4sJrJu+B/KYDpxa6XstyeAIS2JvgYHXfv3f6siwHialXODMsEh3OK93+
WdeV5SAnluX7uSHR4VXgDrlW6yyHv6nfnyQeT3Rg0G4Xu5mW5ZChlFNRJZ7k
sMB12+e/PVkQ++OSHJy6c57/fprlcOzO1pYaqySHc9+DHy9Vz3aYHTp/9Vog
f+98Kf27FnkOS3WcZV4D/T9ZgiWMb2kBPDzQwwcAmOOLCQ==
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        281.29689999999994`, 179.9647}, {220.63489999999993`, 179.9647}, {
        221.00589999999994`, 188.2877}, {224.63889999999992`, 191.5257}, {
        233.02689999999993`, 191.06969999999998`}, {244.97089999999994`, 
        190.42069999999998`}, {256.97689999999994`, 190.9227}, {
        268.95589999999993`, 190.8987}, {278.22189999999995`, 190.8807}, {
        278.22189999999995`, 190.8577}, {281.29689999999994`, 179.9647}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4gtXw97oF+Y79JUWSvPeiXOw+HEoZZVhAZyf
rf1t+t1VBQ5L/RyEE5/HOcRrnhY4rlzokP+h9WTI1TiHJyKyJ596FDr4A6UP
n49zAGlP6C90cJvyjS3eJ95BFCht313okAnSYBDncLTfsFy3o9ChwWN/rWxM
rMPOXrYPYpWFDqmSjyLElWMczlr7XZyoWegww0e0x0suBmKeboHDG/3d6vz8
MQ4/DZ+tU03Kc/i0ISB7lnCMw5PmeWdXZeY4eL1iMRGUinEAyj5pPpINMV8m
xuGKNtDkZdkQ8aBYh8XKO/+0z8t2CMyeVT5HLs6hBmTQhGwIXRbvUDFnkfJO
vRyI+afjIOpqciDuuxznMBPkropcB5DxFq/jHDi75JPfleRB7AOGF3p4AgCo
UJ4K
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{272.00980000000004`, 202.17559999999997`}, {
        259.94780000000003`, 202.17559999999997`}, {248.69480000000004`, 
        202.04659999999998`}, {237.44880000000003`, 202.27859999999998`}, {
        235.04580000000004`, 202.32859999999997`}, {230.49780000000004`, 
        200.50859999999997`}, {230.59780000000003`, 204.25959999999998`}, {
        230.68880000000004`, 207.63359999999997`}, {231.39580000000004`, 
        213.17559999999997`}, {236.79580000000004`, 213.39459999999997`}, {
        246.22380000000004`, 213.77759999999998`}, {255.71880000000004`, 
        214.02159999999998`}, {265.1068, 213.29659999999998`}, {
        270.54080000000005`, 212.87659999999997`}, {270.23080000000004`, 
        207.19459999999998`}, {272.00980000000004`, 
        202.17559999999997`}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{227.6201, 101.0623}, {242.81310000000002`, 101.0623}, {
        255.2131, 101.0843}, {267.6121, 101.03829999999999`}, {269.4541, 
        101.03129999999999`}, {272.0321, 100.88029999999999`}, {271.1741, 
        98.21329999999999}, {270.1831, 95.1373}, {269.7851, 
        90.66829999999999}, {265.4741, 90.5043}, {255.7861, 90.1373}, {
        246.0651, 90.13029999999999}, {236.3771, 90.48729999999999}, {
        231.39610000000002`, 90.66929999999999}, {232.35410000000002`, 
        96.0773}, {227.6201, 101.0623}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{251.0117, 51.096500000000006`}, {246.8567, 60.3605}, {
        243.4427, 67.92750000000001}, {240.0797, 75.51650000000001}, {
        239.5767, 76.6525}, {239.3867, 78.5855}, {240.7017, 78.6195}, {
        247.5417, 78.7985}, {254.4047, 78.7765}, {261.2237, 78.3045}, {
        262.28069999999997`, 78.23150000000001}, {261.69669999999996`, 
        75.57650000000001}, {261.0437, 74.0985}, {257.9437, 
        67.06550000000001}, {254.8927, 60.01050000000001}, {251.0117, 
        51.096500000000006`}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        250.7285, 252.931}, {254.8405, 243.35600000000002`}, {257.6605, 
        236.39000000000001`}, {260.8235, 229.58300000000003`}, {262.6185, 
        225.721}, {261.4275, 224.46900000000002`}, {257.5385, 224.514}, {
        251.9155, 224.578}, {246.2925, 224.53}, {239.8215, 224.53}, {241.7375,
         234.381}, {247.1175, 241.92700000000002`}, {250.7285, 252.931}}}]}, 
      {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4ntMnF3yh2Mdirv6nny6b+ZwKuTgiiX3ohwc
jt3Z2rLHw2He2VXnr5pFOKg9aZ53tirI4daaXzG5vaEOe9T5ubdOi3BY4ucg
nHg72EFi+0WGe1UxEPVqQQ6qpUyzOPQTHKqOa1pNKg5waI26vOexQpLDG/3d
6vzCAQ5vDlgqe/UnObzYvp75eY6/A9sHMY+AL0kOJoJmNnu1AhwabtpWRlQk
OzzQnbDgx8wQB5aj/YbljRkOPwyfrVP9EwHh9+Y6bAzInlWeEutw1425gtun
0GHrssrjmkWxDhznJANvBRc6fGg9GXJwQazDzN3TJvBHFDr8bf9y+/rHWAfz
1Xbh0emFDh1AbuPuOAfvyDaLa58LHPpKC6V5G+IdjEMNtFY2FzgkhgSpL1AE
+sMMqEG4wCE3rHbdtmeJDjH/nH+9Fc5xKL4u9MlxdTLEfwwZDo9eTt3EU5jq
sIzLTbX0XbKD+oLODQ/Xpjp8zgFqTEp20FOU/5JzK9XB7Ky138WnSQ6HU1Yl
hExKdfgjATTJKckhXvO0wPGoZIcVQG9YFUU52PhdnBijl+gA9PWT5rAAB/T4
AgDC/c30
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        159.02540000000002`, 157.4451}, {78.86440000000002, 157.4451}, {
        79.63840000000002, 165.09109999999998`}, {82.42940000000002, 
        168.7621}, {90.75540000000002, 168.4881}, {109.28840000000002`, 
        167.8791}, {127.86840000000001`, 167.8821}, {146.40140000000002`, 
        168.4871}, {154.7314, 168.75809999999998`}, {158.64740000000003`, 
        165.8941}, {159.02540000000002`, 157.4451}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4jePzKQO3E92qOBW0aizSHIoPNdx6d6VZIfV
duHRG8UTHVLPxHqf8E52kAq8JV1zNMGh/rdVwTmXJIdEo1ADrbMJDvMFl+49
eD7e4e08G50r9xIcLkgCFYpEOzivzbxXeCnBIRmkLjLMAahKXO1ygoOR1krh
C1NCHTqSY++4AfmhrIsnWW0McQBZ37MzwWG76O/T7wJDHHY4ND06bpLo8GgO
0ALJEId9QO3BtYkOEkDpk9XBDnNB9h5OdHAB2xPswH4OaLFwkkPLo+MzdsuF
OJw67LQ2MyrJ4XiuScP2CyEQ95klOdx3Y67gDgl1OAQ0jtU8yWHftAn8VWXR
DmfenTzsZAlUf2drS82ZBHh4oIcPAA4+iHU=
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        149.3706, 179.85040000000004`}, {88.7096, 179.85040000000004`}, {
        89.0796, 188.17340000000004`}, {92.7136, 191.41140000000004`}, {
        101.10059999999999`, 190.95540000000003`}, {113.0456, 
        190.30740000000003`}, {125.0506, 190.80840000000003`}, {137.0306, 
        190.78440000000003`}, {146.2956, 190.76640000000003`}, {146.2956, 
        190.74340000000004`}, {149.3706, 179.85040000000004`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lTJRxHiz2MdzoDAlTiHaYp9pYWn4+H8nb1s
H8RuJDh8vOSbJPAgzkGy+LrQp5OJDntKJkuwnItzWJUQEqQukuTQOz1PqPlE
nMPlPY9FZBcmOQBlw/hc4x3aooAiM5Ictn7+e6VCM84hN6x23bZJSQ775kvp
3w2JdQDqXtBZkuSwce775cekYxyAskn1VxMdnlxQuv1TLMZheeVxTatd8Q6W
W06U7WOPcdh+keEe08loB3vTuF2ePDEOQNdK894IdwBZf0AoxqFl3tlV53vD
IOaLxDjEz/AR7QkKczAyBgLvWAfurcsqjzuGOYCs8xaPc9gbBPSxapgD0PT5
UvnxDiBpzaRwiPlH4hzSXTLzP/wNh7jvdJzDNzagiV8jHdrEbp77/jjO4UZj
sduUd9Hw8EIPTwBpZagv
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{140.0835, 202.0618}, {128.02149999999997`, 202.0618}, {
        116.76849999999999`, 201.93280000000001`}, {105.52249999999998`, 
        202.1648}, {103.11949999999999`, 202.2138}, {98.57149999999999, 
        200.3948}, {98.67249999999999, 204.1458}, {98.76249999999999, 
        207.5198}, {99.46949999999998, 213.0618}, {104.86949999999999`, 
        213.2808}, {114.29749999999999`, 213.6638}, {123.79249999999999`, 
        213.9078}, {133.1805, 213.18280000000001`}, {138.6155, 212.7628}, {
        138.3045, 207.0808}, {140.0835, 202.0618}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{95.6938, 100.94810000000001`}, {110.8878, 
        100.94810000000001`}, {123.2868, 100.97010000000002`}, {135.6868, 
        100.92510000000001`}, {137.52779999999998`, 100.91810000000001`}, {
        140.1058, 100.76710000000001`}, {139.24779999999998`, 98.0991}, {
        138.2578, 95.02310000000001}, {137.8588, 90.5541}, {133.5478, 
        90.39110000000001}, {123.8608, 90.02310000000001}, {114.1398, 
        90.01610000000001}, {104.4508, 90.37310000000001}, {99.46979999999999,
         90.55610000000001}, {100.42779999999999`, 95.96410000000002}, {
        95.6938, 100.94810000000001`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{119.08539999999999`, 50.9822}, {114.93039999999999`, 
        60.2462}, {111.5174, 67.8132}, {108.1544, 75.4032}, {107.6514, 
        76.5382}, {107.46039999999999`, 78.4722}, {108.77539999999999`, 
        78.5062}, {115.6154, 78.6842}, {122.4784, 78.6622}, {
        129.29739999999998`, 78.1902}, {130.3544, 78.1182}, {129.7704, 
        75.4622}, {129.11839999999998`, 73.9842}, {126.0174, 66.9512}, {
        122.9664, 59.8962}, {119.08539999999999`, 50.9822}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        118.80269999999999`, 252.8172}, {122.91469999999998`, 
        243.24220000000003`}, {125.73469999999999`, 236.27620000000002`}, {
        128.89669999999998`, 229.4692}, {130.6917, 225.6072}, {129.5017, 
        224.35520000000002`}, {125.61269999999999`, 224.4002}, {
        119.98969999999998`, 224.4642}, {114.36669999999998`, 224.4162}, {
        107.89569999999999`, 224.4162}, {109.81169999999999`, 234.2672}, {
        115.19069999999999`, 241.81220000000002`}, {118.80269999999999`, 
        252.8172}}}]}, 
      {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYCYompVzgz3pU7JAlEWG65YebgLyeW5Wta7mDe
6ZjwdIeHQ0vNhc2R3WUOi1y3ff5bEeQw/f+Eut8PSh0sQPJTIhy4MpRyKkpK
HaZIsITxVcY4tILUs5c6PF46+4iCXoLDb6uCcx2zShycu3Oe/5ZPcgDb11Ti
sOrjJd+kviSHOO8T7LbZJQ5HFDYUZXxOclh3I77Mv6PEwY7r+uKC8mQHEFdu
SanDoa8aMf0NGQ73H3BPXrmnDMLvyXXwnNugduhauUN91p6Syd6FDnz7DGZq
3Sp3SE8DguBCh7tbgT54Wu7wIxjoovBChwSgcWK/yh2mgRyUVuhgf+zO1had
Coh7Phc4HNmol7c4tsJh0tsae9PmAoeJdUAf9FU43Dz3PfixUAHE/wWVDlL6
d1XYhHMcpA5EKzgGV0H89z/dIRDkILNqhxTr+/69b5MdgK6RmBpS7bBx7vvl
xxKTHb4/SVx4Lava4cvfKxUvnyQ5HGpbHn7KrdphlycPk7ZjkoPAy+3rmbWr
HFRu/6zLKohyAFl/TqQSEj8hAQ7o8QUAcVTRLw==
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        422.877, 157.4168}, {342.717, 157.4168}, {343.491, 
        165.06279999999998`}, {346.281, 168.7338}, {354.607, 168.4598}, {
        373.14, 167.8498}, {391.721, 167.8538}, {410.253, 168.4588}, {418.583,
         168.72979999999998`}, {422.499, 165.8658}, {422.877, 157.4168}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYi2rSafrc6sczGz2Bk0zT3J4q79bnT+jyiEz
/0PrSbFEh8XKO/+0K1c53GgsdptyJMHBACjNvaDSQT75XZTTmQQHGd4HuhMK
KxxWn78a9uZugoMGP/fWZU7lDh1fbl9vvJjg4Cva4/VKuMwBpNzuUoKDg3Di
4cuPSh3cpnxjiwfyj/3bVP1pZanDyZCDK5bsSHBQ6istlJ5U6vC3HWiAcaLD
G5B7Wkodaj5tCMiuSXSoOq5pNSmm1CHaye7FzUOJDqwmgmY2RaUOR0HmCCU5
hAKN8WsthdgfmeTwKEJ8+8WNpRD3mSY55Mwqn7PoUqlDg8f+WlmzJIi7ossd
ukAeskhykNh+keHe4wp4eKCHDwCHPI2z
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        413.2227, 179.82210000000003`}, {352.5617, 179.82210000000003`}, {
        352.9317, 188.14510000000004`}, {356.5657, 191.38310000000004`}, {
        364.9527, 190.92710000000002`}, {376.8977, 190.27910000000003`}, {
        388.9027, 190.78010000000003`}, {400.88169999999997`, 
        190.75610000000003`}, {410.1477, 190.73810000000003`}, {410.1477, 
        190.71510000000004`}, {413.2227, 179.82210000000003`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYCYompVzgzvpc7eOr9V/x7Kc4hQymnoqqgwiE8
euP+N0B++CmjIxtfVjjkmTRsd7gX59AfXKIyPanSwfLa0VyTM3EOIvbH7mxt
r3SQUAtmXXwszkHjLe8+g3OVDgJVZqvtnOMdmPawComcqnQwCjXQWqke5/B1
562uv8cqHawZfVt4g2MdXm5fz/x8e6UDyPpvkjEOf1O/P0nMqHRIAmkQjYGY
l1PhsE309+l3rDEOOs4yrx/llzvsmTaBv4orxuH+A+7JK4vLHEQuuNz4IBDj
sJgRaKFiGcR84RiHaybvLVyFyhzWT0ntSPaMhbiHr8xBKvCWdI1onEMeSAN7
mYPrjQ9fvHLjHYC+X6oTVgYx/1Ccw434Mn+52jKI+07GOdRc2Bz59VeZA3MF
t4rGozgHkHLnSkT4oYcnALd9mRY=
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{403.93549999999993`, 202.03349999999998`}, {
        391.8734999999999, 202.03349999999998`}, {380.6214999999999, 
        201.90449999999998`}, {369.3734999999999, 202.13649999999998`}, {
        366.97149999999993`, 202.18549999999996`}, {362.42349999999993`, 
        200.36649999999997`}, {362.52449999999993`, 204.11749999999998`}, {
        362.6144999999999, 207.49149999999997`}, {363.32149999999996`, 
        213.03349999999998`}, {368.72149999999993`, 213.25249999999997`}, {
        378.14949999999993`, 213.63549999999998`}, {387.64449999999994`, 
        213.87849999999997`}, {397.03349999999995`, 213.15449999999998`}, {
        402.46649999999994`, 212.73449999999997`}, {402.15649999999994`, 
        207.05249999999998`}, {403.93549999999993`, 
        202.03349999999998`}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{359.5459, 100.91980000000001`}, {374.7389, 
        100.91980000000001`}, {387.13890000000004`, 100.94180000000001`}, {
        399.53790000000004`, 100.89680000000001`}, {401.3809, 100.8888}, {
        403.9579, 100.73880000000001`}, {403.0999, 98.0708}, {402.1089, 
        94.99480000000001}, {401.71090000000004`, 90.5258}, {397.3999, 
        90.36280000000001}, {387.7119, 89.99480000000001}, {377.9909, 
        89.98780000000001}, {368.3029, 90.3448}, {363.3219, 
        90.52780000000001}, {364.2799, 95.93580000000001}, {359.5459, 
        100.91980000000001`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{382.93749999999994`, 50.9539}, {378.78349999999995`, 
        60.2179}, {375.36949999999996`, 67.7849}, {372.0054999999999, 
        75.3749}, {371.50249999999994`, 76.5099}, {371.31249999999994`, 
        78.4439}, {372.62749999999994`, 78.4779}, {379.4674999999999, 
        78.6559}, {386.33149999999995`, 78.6339}, {393.14949999999993`, 
        78.1619}, {394.20649999999995`, 78.0899}, {393.62249999999995`, 
        75.4339}, {392.9694999999999, 73.9559}, {389.86949999999996`, 
        66.9229}, {386.8184999999999, 59.8679}, {382.93749999999994`, 
        50.9539}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        382.65430000000003`, 252.7889}, {386.76630000000006`, 
        243.21390000000002`}, {389.58630000000005`, 236.2469}, {
        392.74930000000006`, 229.4409}, {394.5443, 225.5789}, {
        393.35330000000005`, 224.32690000000002`}, {389.4653, 224.3719}, {
        383.84130000000005`, 224.4359}, {378.21830000000006`, 224.3879}, {
        371.74830000000003`, 224.3879}, {373.6643, 234.2389}, {
        379.04330000000004`, 241.78390000000002`}, {382.65430000000003`, 
        252.7889}}}]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited]}], "}"}]], "Output",
 CellChangeTimes->{{3.831626309694997*^9, 3.831626327319965*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"a4a2c97d-2b58-4121-86d4-5629a5a0595f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"attributeCount", "[", 
  RowBox[{"allSets", "[", 
   RowBox[{"[", "526", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8316263300712147`*^9, 3.831626337361072*^9}, 
   3.831626517439887*^9},ExpressionUUID->"d9499dea-ce5b-4bfd-bee3-\
909d70424d1e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.831626337645364*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"700170a2-cd08-48dc-a68d-82ee4bf4bef3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setCards", "/@", 
  RowBox[{"allSets", "[", 
   RowBox[{"[", "526", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831626345607336*^9, 3.83162634582055*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2240392b-e2ef-4591-a80a-b15ce6f6b98c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4gtXw97oZ+Y7cP1ckL5Zyszh2L9N1Z++5Tp0
/039/iTSw8Fgtzo/9+IchzP1HvtrPYMczq06fzXML9sh6fBl7dTUCAerSafr
PUqzHDaoPmme5xkDUT870+HHoZRVCWIJDnIW6S6ZBzMcIlaYnrXmSHIIf6O/
W31ihsN+vjnGi8qSHKKd7F7cTMpwuGlbGbHidpJDU7HblG9zMhyC1Rd0bohP
drjRCBS4kuVwXeiT4/mMDAegLWdXseZC+CW5Djv/tH+5bZnvcCzXpGG7faGD
M9C4NQ75Dh+/eEW2uRc6RIpvv8gQke/Q9Oj4jN3ehQ7xM3xEexryHRQu5cez
Rxc6LPVzEE58mu9g2rDdoel5gcMNkLnKBQ4yNYlGoeUFDokhQeoLQgocUmLv
uDGzFzikX32epW1e6KDvs4zL7Xe2w6upm3gKJYsg/nuR7pC6KiEk6E+RQyVI
4Gqyg8uvt68PSBU7HNu1o5fNK9mB2021lMmw2IFTel6c5tkkh2tA477xFDuc
TwMarJnkoOxV3az/sdDBT7TH65VDlIPfxYkx/24VOAB5LCaqAQ7o8QUAsVDL
aw==
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        291.2637, 156.6751}, {211.10269999999997`, 156.6751}, {
        211.87669999999997`, 164.32109999999997`}, {214.66769999999997`, 
        167.9911}, {222.9937, 167.7171}, {241.52669999999998`, 
        167.10809999999998`}, {260.1067, 167.1111}, {278.63969999999995`, 
        167.71609999999998`}, {286.9697, 167.98809999999997`}, {
        290.88469999999995`, 165.1241}, {291.2637, 156.6751}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4qWzjyhsMC5y8I5ss7gmn+SQMfFtjb1ekUNd
z85szv8JDokCEZZbXhY6vJ1no3NlTYLD++XHvM3TCh1MGrY7NG1JcJieJ9R8
wLzA4cAboIJjCQ5uD6tE1gnmOYj9Pv3u5M4EhwlA40y3ZDtUcKto1O1KcPj3
HwgCsx2iN+5/Mw/I57i+uMD2QZbDvcKuvicLEhwOfNWI6d+Q5QDkfZKXSXQ4
r3T7Z92ULIeJ/FVmq1MSHQpBDnTNciiIZz8nuTrRocMx4emFgiyHW9I1iUa/
Ex0WuG77/HdalsNcwaV7DzomOTh15zz//T4L4j65JIdz34MfLzXMdpia2pEc
C+TvnS+lf9cpz0FCLZh1sUKSwzWgc7hWFcDDAz18AIQGj/0=
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        281.6084, 179.08040000000003`}, {220.94740000000002`, 
        179.08040000000003`}, {221.31740000000002`, 187.40340000000003`}, {
        224.95140000000004`, 190.64140000000003`}, {233.3394, 
        190.18540000000002`}, {245.28340000000003`, 189.53640000000001`}, {
        257.2894, 190.03840000000002`}, {269.26840000000004`, 
        190.01440000000002`}, {278.53340000000003`, 189.99640000000002`}, {
        278.53340000000003`, 189.97340000000003`}, {281.6084, 
        179.08040000000003`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4vA3+rvVq/MdijMmvq1ZHOdg8eNQyiqzAjg/
W/vb9LvrCxxm5Ak1H1gX5xCveVrguEahQ7JAhOWWOXEO6gs6Nzz0LXQwMQaC
6XEONn4XJ8ZMKXTQbhe7eU443kFU9uRT+wmFDjH9h75q/Ih1ONpvWK7bW+iQ
an3fv1c51uGPRPF1obpCB6BpJ8peRTuctQYaoFfo0JPz/PfKp9EQ84wKHB74
907Puxbt8NPw2TrVnDyHZxeUbv+8Fe3wpHne2VXFOQ52XNcXFzyMdgDKPmk+
lw0x/3G0wxXtVMlHG7Idbp77HvxYMtZBy2rS6foV2Q4u3UALnsY6MHN2ySfP
ynbIB3rvlG28w/9N1Z82WORAzJ8U53CjsdhtSlsOxH2z4hxm+oj2eDXlOuhu
mvt++aY4hwkLfhg+q8uDhxd6eAIAloWqng==
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{272.32129999999995`, 201.2913}, {260.25929999999994`, 
        201.2913}, {249.00729999999996`, 201.16230000000002`}, {
        237.76029999999994`, 201.39430000000002`}, {235.35729999999995`, 
        201.4433}, {230.81029999999996`, 199.6243}, {230.91029999999995`, 
        203.3753}, {231.00029999999995`, 206.7493}, {231.70729999999995`, 
        212.2913}, {237.10829999999996`, 212.5103}, {246.53529999999995`, 
        212.8933}, {256.03129999999993`, 213.1373}, {265.41929999999996`, 
        212.41230000000002`}, {270.85329999999993`, 211.9923}, {
        270.54229999999995`, 206.3103}, {272.32129999999995`, 201.2913}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{227.93210000000002`, 100.1776}, {243.12510000000003`, 
        100.1776}, {255.5251, 100.1996}, {267.92510000000004`, 100.1546}, {
        269.7661, 100.1476}, {272.3441, 99.9966}, {271.4851, 97.3286}, {
        270.4961, 94.2526}, {270.0971, 89.78359999999999}, {
        265.78610000000003`, 89.6206}, {256.0991, 89.2526}, {246.3771, 
        89.2456}, {236.68910000000002`, 89.6026}, {231.70810000000003`, 
        89.7856}, {232.66610000000003`, 95.1936}, {227.93210000000002`, 
        100.1776}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{251.32420000000002`, 50.2117}, {247.16920000000002`, 
        59.4757}, {243.75520000000003`, 67.0427}, {240.39220000000003`, 
        74.6327}, {239.88920000000002`, 75.7687}, {239.69920000000002`, 
        77.7017}, {241.01420000000002`, 77.73570000000001}, {
        247.85320000000002`, 77.9137}, {254.71720000000002`, 77.8917}, {
        261.5362, 77.4207}, {262.5932, 77.3477}, {262.00820000000004`, 
        74.6917}, {261.3562, 73.2137}, {258.25620000000004`, 66.1807}, {
        255.20520000000002`, 59.1257}, {251.32420000000002`, 50.2117}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        251.041, 252.0467}, {255.153, 242.4717}, {257.973, 235.5057}, {
        261.135, 228.69869999999997`}, {262.93, 224.83669999999998`}, {261.74,
         223.5847}, {257.851, 223.62969999999999`}, {252.228, 
        223.69369999999998`}, {246.60399999999998`, 223.64569999999998`}, {
        240.134, 223.64569999999998`}, {242.05, 233.49669999999998`}, {
        247.429, 241.0427}, {251.041, 252.0467}}}]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4iucGUo5R4sdXk3dxFN4x8zBX04sy5en2EFC
LZh18S4Ph5aaC5sjk4ochETsj92pDHIILlGZ/n97ocOK8FNGR6ZGOIC0V3gX
Onzbeavrb2UMRP29Aocp39jiZ+glOPy2KjjXUVjgUP1pQ0C2QpKDxFSgjZEF
DtFOdi9u9iU5SB2IVnB0KnAoLZTmffA5yWHtjfgy//gCh/dRQAXlyQ4grlx1
ocOvmNyj/xoyHGaHzl+9dnIRhN+T6+A5t0Ht0NpihxtCnxzPA93Bu89gptbG
YgfmWRzS84ILHWZqAW3cU+wwpb016nJ4oYPM60dmUheLHd69PmCpnF7oYHfs
ztYW5hKI+s8FDkc26uUtNimBhEdzgYPv577gktQSh1ImoALhAofp/yfU/XYv
dQiapthXKpwDcb9WmcOX29cbixkyHAJBDuItd5izSHnnn7fJDgYgB2iXO7xi
MRE0S0p2+P4kceE1x3IHnVTJRxFPkxwOtS0PPyVb7gAKnlmOSQ78L7evZ2Yq
c2gDhWNhlAMo+C69LoG4KzTAAT2+ALpEyYI=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        356.3154, 157.431}, {276.1544, 157.431}, {276.9284, 165.077}, {
        279.7194, 168.74800000000002`}, {288.0444, 168.47400000000002`}, {
        306.5784, 167.865}, {325.15840000000003`, 167.86800000000002`}, {
        343.6904, 168.473}, {352.0214, 168.744}, {355.9364, 
        165.88000000000002`}, {356.3154, 157.431}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYk2rSafrXcocju/a0ctmkeTwRn+3Or99mUPx
daFPjuKJDouUd/5p/1Xq8Ojl1E08RxMcQNLc5aUOGx4CBc4kOEjzPtCd4FHi
YON3cWLMvQQHoOzWZZLFDpNi/jn/upjg4CPa4/XqVaFDbljtum2XEhwchBMP
X95Z6BDwR6L4OpB/9N+m6k8NhQ6X9zwWkd2Z4KDYV1oonVnowPZBzCPAJBHi
nuhCB97CNd23axIdKo8DXWxc6PDmgKWy1+FEBxYTQTMbz0IHkPFJwkkOIQdX
LPGLKYTYH5nk8DBCfPvFjkKHreY/DqWYJTlkzyqfs2hloUMXyANAvnzyuygn
o2KHKe2tUZeB/geqZri3qwQeHujhAwBQgYsZ
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        346.66020000000003`, 179.83620000000002`}, {285.99920000000003`, 
        179.83620000000002`}, {286.36920000000003`, 188.15920000000003`}, {
        290.00320000000005`, 191.39720000000003`}, {298.39020000000005`, 
        190.9412}, {310.33520000000004`, 190.2932}, {322.3412, 
        190.79420000000002`}, {334.3192, 190.77020000000002`}, {
        343.58520000000004`, 190.75220000000002`}, {343.58520000000004`, 
        190.72920000000002`}, {346.66020000000003`, 
        179.83620000000002`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYCYompVzgzzhU7ZGt/m373cpyDyvT/E+rcS+D8
8FNGRzYeKHFoYjnab3g/zqE/uERlumWpg88yLjfVs3EOIvbH7myNK3XQASqf
fDzOQeMt7z6DpaUOyl7Vzfou8Q5Me1iFRBaWOripljLN0ohz+LrzVtffuaUO
sf+cf70NjnV4uX098/O+UoeAPxLF16ViHHYBpVPtSx1a9IE2iMVAzHMucbgh
9MnxPFuMg46zzOtHbsUO59OuPs/ijnG4/4B78kqvIgezs9Z+FwVjHBLK/OXE
fhRCzBeOcbhm8t7C9WWhw+GUVQkhXrEQ9zwtdLDxuzgxRizOIW8x4x7We4UO
kStMz1rnxTvkVFQt1dEtgph/OM7hRjzQwJAiiPtOxTlYuroX/bxY5ADyDsfj
OAdToPHuAcUQ+4DhhR6eABBjn7Y=
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{337.373, 202.0477}, {325.311, 202.0477}, {
        314.05899999999997`, 201.9187}, {302.812, 202.1507}, {300.409, 
        202.19969999999998`}, {295.861, 200.3807}, {295.962, 204.1317}, {
        296.052, 207.5057}, {296.759, 213.0477}, {302.159, 213.2667}, {
        311.587, 213.6497}, {321.08299999999997`, 213.8937}, {330.471, 
        213.1687}, {335.904, 212.74869999999999`}, {335.594, 207.0667}, {
        337.373, 202.0477}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{292.98339999999996`, 100.93440000000001`}, {
        308.17639999999994`, 100.93440000000001`}, {320.57739999999995`, 
        100.95640000000002`}, {332.97639999999996`, 100.91040000000001`}, {
        334.81839999999994`, 100.9034}, {337.39539999999994`, 
        100.75240000000001`}, {336.53739999999993`, 98.0854}, {
        335.54639999999995`, 95.00940000000001}, {335.1484, 90.5404}, {
        330.83739999999995`, 90.37640000000002}, {321.14939999999996`, 
        90.00940000000001}, {311.4294, 90.00140000000002}, {
        301.74139999999994`, 90.35940000000001}, {296.75939999999997`, 
        90.54140000000001}, {297.71739999999994`, 95.94940000000001}, {
        292.98339999999996`, 100.93440000000001`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{316.375, 50.9686}, {312.221, 60.232600000000005`}, {308.807, 
        67.79860000000001}, {305.444, 75.3886}, {304.941, 76.5246}, {304.75, 
        78.4576}, {306.065, 78.4916}, {312.905, 78.6696}, {319.769, 
        78.6486}, {326.587, 78.17660000000001}, {327.644, 78.1036}, {327.06, 
        75.4486}, {326.407, 73.9706}, {323.307, 66.9376}, {320.257, 
        59.881600000000006`}, {316.375, 50.9686}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        316.0928, 252.803}, {320.20480000000003`, 243.228}, {323.0238, 
        236.262}, {326.1868, 229.45499999999998`}, {327.9818, 225.593}, {
        326.7918, 224.341}, {322.9028, 224.386}, {317.2798, 224.45}, {
        311.6558, 224.402}, {305.18580000000003`, 224.402}, {307.1018, 
        234.253}, {312.4808, 241.798}, {316.0928, 252.803}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4h6vVywmvOkOTxMXXjPZb+bQVOw25dusVIcf
hs/Wqa7xcHijv1ud3z3FgWkWh/S8oiCHLvnkd1Gfkhxm3J3c3toX4fCNLX6G
j2SSw5ecsNp1RTEQ9faJDiIXXG580EpwuLXmV0xuaoJDyVbR36dlkhyEEw9f
1jYFikvXJBp1JzmIb7/IcI8tweGrV2SbxYckBxCXyTHBId+kYbtDSbLDFJAF
FUkOn+Uv5cfXZjhIPooQ374yxaHKbLVdeGeuQ2mhNO+Du2kO0/9PqPvtWehQ
MWeR8s4naQ71v60KzgUWOoiCPPgnzSGkRGX6/9BCB6Bq3Qkq6Q7rbsSX+acW
OoCck9qZ7nCobXn4qY8FDk+a551d9TrdYVVToOfcxgKHOlmLdBffDAfT9xau
7oIFEP8LZTkAXcN+jj8H4v5r2RD//Ul3+Lep+tOGObkOU1M7kmNfJTu4ZOZ/
aL2Z6/Do+Izd0+KSHUDBLciW56CqUdez82GSA9A1C37szXV4XQw0wDbJoebT
hoDstmyHFn2fZVxZUQ6RIAuiMh0Op6xKCPELcECPLwBeMsv2
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        224.38920000000002`, 157.3172}, {144.22820000000002`, 157.3172}, {
        145.00220000000002`, 164.9632}, {147.7932, 168.63420000000002`}, {
        156.11920000000003`, 168.36020000000002`}, {174.65220000000002`, 
        167.7502}, {193.2322, 167.75420000000003`}, {211.76520000000002`, 
        168.35920000000002`}, {220.0952, 168.6302}, {224.01120000000003`, 
        165.76620000000003`}, {224.38920000000002`, 157.3172}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYh/zTscE7hyHNBAwSXK4qHT7Zx1DjsNMEBBO
dLDjur64oDzbgWONTFTKwQSHCMstJ8oKshz8e6fnCZ1McNC/q8LWKJzhANSV
tedWgoPHwyqRdVtTHXbItb4OPJfgMOltjb1pRLLDZAmWML7zCQ6VL9UMOb4l
OZTtmy+lD+S3HDi10LUlyQGkvWRrgoPNfaDJIUkOupvmvl9ukAhxj0WSgzEI
VCY6vAkEmvwy0aE75/nvlfsTHZi028VuiiQ51Nqbxu3iT3JY5Lrt81+rJIj9
YUkOe0qANk9JgrjPKAnivqtJDhuKMia+BfItgN5/+izVYZcnD5O2aZKDuiHQ
pz8y4OGBHj4AvDeD0Q==
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        214.7344, 179.7225}, {154.0724, 179.7225}, {154.4434, 188.0455}, {
        158.0774, 191.2835}, {166.46439999999998`, 190.8275}, {178.4094, 
        190.1795}, {190.4144, 190.6805}, {202.39339999999999`, 190.6565}, {
        211.6594, 190.6385}, {211.6594, 190.6155}, {214.7344, 179.7225}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4vNXw97oy6c7rGoK9Jx7Js7hxc01v2IEMxx2
rGd+3gPkg6R3M2c6nO+4dO/B9TiHvUHTFPu+ZjrM0pKYeuVonMNxTatJp+2z
HCqrluo4H4hz+NB6MuTgmSyHwnNADTbxDouUd/5pP5LlMHkl0ALFOIdO+eR3
UfuyHOaEzl+91ifWoVCa94HugiyH/uASlenCMQ6zyucsUmbMcjjUtjz8FF8M
xDyODAfxLN/Pff+jHX4YPlunKpDmIPv6kZkUS4zDk+Z5Z1eJpziUqkz/P4Er
xiFuho9oT1EyxD88MQ5AnterkGQHgZfb1zM7x0Lc45PsUA10rgx/nEP1pw0B
2XbJDsuA3Ndp8Q4g63feSYaYvyfOISAb6CKtFIj7Dsc5gIz3Ukt1KP7J/3L7
7TgHji6gh5TS4OGHHp4Au12hjw==
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{205.4473, 201.9339}, {193.3853, 201.9339}, {
        182.13230000000001`, 201.8049}, {170.8863, 202.0369}, {168.4833, 
        202.08589999999998`}, {163.9353, 200.2669}, {164.0363, 204.0179}, {
        164.12630000000001`, 207.3919}, {164.8333, 212.9329}, {170.2333, 
        213.1529}, {179.6613, 213.5359}, {189.15630000000002`, 213.7789}, {
        198.54430000000002`, 213.0549}, {203.97930000000002`, 212.6349}, {
        203.66830000000002`, 206.9529}, {205.4473, 201.9339}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{161.0576, 100.8201}, {176.2516, 100.8201}, {188.6506, 
        100.8421}, {201.0506, 100.7961}, {202.8916, 100.78909999999999`}, {
        205.4696, 100.6391}, {204.6116, 97.97109999999999}, {
        203.62060000000002`, 94.8951}, {203.2226, 90.42609999999999}, {
        198.9116, 90.2631}, {189.2236, 89.8951}, {179.5036, 89.8881}, {
        169.8146, 90.2451}, {164.83360000000002`, 90.4281}, {
        165.79160000000002`, 95.8361}, {161.0576, 100.8201}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{184.4492, 50.854299999999995`}, {180.2942, 
        60.11829999999999}, {176.88119999999998`, 67.6853}, {
        173.51819999999998`, 75.27529999999999}, {173.0152, 
        76.41029999999999}, {172.8242, 78.34429999999999}, {174.1392, 
        78.3783}, {180.9792, 78.5563}, {187.8422, 78.5343}, {
        194.66119999999998`, 78.0623}, {195.7182, 77.9893}, {195.1342, 
        75.33429999999998}, {194.48219999999998`, 73.85629999999999}, {
        191.38119999999998`, 66.82329999999999}, {188.3302, 
        59.768299999999996`}, {184.4492, 50.854299999999995`}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        184.16649999999998`, 252.6893}, {188.27849999999998`, 
        243.11430000000001`}, {191.0975, 236.1473}, {194.26049999999998`, 
        229.3413}, {196.0555, 225.4793}, {194.8655, 224.2273}, {190.9765, 
        224.2723}, {185.3535, 224.3363}, {179.72949999999997`, 224.2883}, {
        173.25949999999997`, 224.2883}, {175.1755, 234.1393}, {180.5545, 
        241.6843}, {184.16649999999998`, 252.6893}}}]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4vNXw97ox+c72FZGrDD9a+Zw9N+m6k9vch0O
iasFs572cNDfrc7PPTPH4XmPxlvepiCHs6uAOlyyHWoubI78OjfCAah6Q0B2
lsMpoyMb9ZpiHFYs8XMQnpjp8B8kYZTgIGuR7pK5PcPh2TrVJ80qSQ5g+9oz
IPZMSnKIcrJ7cTMiw+GB7oQFP74nOfyKyT36b1KGQ5T49osMNckOAdmzyuec
ynK4x8TZJd+a4QCS3vQ7xyFV8lGE+MRcB0OQwfr5DryFa7pv+xY6gJy71Szf
weLHoZRVoYUOESBz/PIdTj61X3I/stAhboaPaE9ZvoOyV3WzfmYhxH23oeq/
FjhMaW+NuixX4CD/JSestrXAISEkSH2Bf4HDKhBDtMAh7erzLG2jQoe9QdMU
+8RzHF5N3cRTKFLkEA8ylyXDQRGk8XuRAztI4FOyA0N+I8tR0WKH0IPAkElL
dji+a0cvm06xw3TFvtLCl0kOk2L+Of9iL3aIBfnLNcnh/j6+OcZvCh2ivu68
1VUZ5eB3cWLMv6sFDjO1JKZeiQ1wQI8vAGoOzuE=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        290.9512, 157.5594}, {210.79119999999998`, 157.5594}, {
        211.56519999999998`, 165.2054}, {214.35519999999997`, 168.8754}, {
        222.6812, 168.6014}, {241.21419999999998`, 167.9924}, {259.7942, 
        167.99540000000002`}, {278.32719999999995`, 168.6004}, {286.6572, 
        168.8724}, {290.5732, 166.00840000000002`}, {290.9512, 
        157.5594}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4qWzjyhs0CtyCPSc26Bmk+SQMfFtjb1mkUNL
zYXNkdKJDnKtrwN3PCl0+NwXXKJyMsHh/fJj3uaJhQ5WBec6Ll1IcJieJ9R8
wKjAwRek4FGCg9vDKpF17HkOixn3sApdS3CYADTOdFW2Q91voA4gv/ylmiGH
R7ZD4sJrJu+B/KYDpxa6XstyeAIS2JvgYHXfv3f6siwHialXODMsEh3OK93+
WdeV5SAnluX7uSHR4VXgDrlW6yyHv6nfnyQeT3Rg0G4Xu5mW5ZChlFNRJZ7k
sMB12+e/PVkQ++OSHJy6c57/fprlcOzO1pYaqySHc9+DHy9Vz3aYHTp/9Vog
f+98Kf27FnkOS3WcZV4D/T9ZgiWMb2kBPDzQwwcAmOOLCQ==
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        281.29689999999994`, 179.9647}, {220.63489999999993`, 179.9647}, {
        221.00589999999994`, 188.2877}, {224.63889999999992`, 191.5257}, {
        233.02689999999993`, 191.06969999999998`}, {244.97089999999994`, 
        190.42069999999998`}, {256.97689999999994`, 190.9227}, {
        268.95589999999993`, 190.8987}, {278.22189999999995`, 190.8807}, {
        278.22189999999995`, 190.8577}, {281.29689999999994`, 179.9647}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4gtXw97oF+Y79JUWSvPeiXOw+HEoZZVhAZyf
rf1t+t1VBQ5L/RyEE5/HOcRrnhY4rlzokP+h9WTI1TiHJyKyJ596FDr4A6UP
n49zAGlP6C90cJvyjS3eJ95BFCht313okAnSYBDncLTfsFy3o9ChwWN/rWxM
rMPOXrYPYpWFDqmSjyLElWMczlr7XZyoWegww0e0x0suBmKeboHDG/3d6vz8
MQ4/DZ+tU03Kc/i0ISB7lnCMw5PmeWdXZeY4eL1iMRGUinEAyj5pPpINMV8m
xuGKNtDkZdkQ8aBYh8XKO/+0z8t2CMyeVT5HLs6hBmTQhGwIXRbvUDFnkfJO
vRyI+afjIOpqciDuuxznMBPkropcB5DxFq/jHDi75JPfleRB7AOGF3p4AgCo
UJ4K
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{272.00980000000004`, 202.17559999999997`}, {
        259.94780000000003`, 202.17559999999997`}, {248.69480000000004`, 
        202.04659999999998`}, {237.44880000000003`, 202.27859999999998`}, {
        235.04580000000004`, 202.32859999999997`}, {230.49780000000004`, 
        200.50859999999997`}, {230.59780000000003`, 204.25959999999998`}, {
        230.68880000000004`, 207.63359999999997`}, {231.39580000000004`, 
        213.17559999999997`}, {236.79580000000004`, 213.39459999999997`}, {
        246.22380000000004`, 213.77759999999998`}, {255.71880000000004`, 
        214.02159999999998`}, {265.1068, 213.29659999999998`}, {
        270.54080000000005`, 212.87659999999997`}, {270.23080000000004`, 
        207.19459999999998`}, {272.00980000000004`, 
        202.17559999999997`}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{227.6201, 101.0623}, {242.81310000000002`, 101.0623}, {
        255.2131, 101.0843}, {267.6121, 101.03829999999999`}, {269.4541, 
        101.03129999999999`}, {272.0321, 100.88029999999999`}, {271.1741, 
        98.21329999999999}, {270.1831, 95.1373}, {269.7851, 
        90.66829999999999}, {265.4741, 90.5043}, {255.7861, 90.1373}, {
        246.0651, 90.13029999999999}, {236.3771, 90.48729999999999}, {
        231.39610000000002`, 90.66929999999999}, {232.35410000000002`, 
        96.0773}, {227.6201, 101.0623}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{251.0117, 51.096500000000006`}, {246.8567, 60.3605}, {
        243.4427, 67.92750000000001}, {240.0797, 75.51650000000001}, {
        239.5767, 76.6525}, {239.3867, 78.5855}, {240.7017, 78.6195}, {
        247.5417, 78.7985}, {254.4047, 78.7765}, {261.2237, 78.3045}, {
        262.28069999999997`, 78.23150000000001}, {261.69669999999996`, 
        75.57650000000001}, {261.0437, 74.0985}, {257.9437, 
        67.06550000000001}, {254.8927, 60.01050000000001}, {251.0117, 
        51.096500000000006`}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        250.7285, 252.931}, {254.8405, 243.35600000000002`}, {257.6605, 
        236.39000000000001`}, {260.8235, 229.58300000000003`}, {262.6185, 
        225.721}, {261.4275, 224.46900000000002`}, {257.5385, 224.514}, {
        251.9155, 224.578}, {246.2925, 224.53}, {239.8215, 224.53}, {241.7375,
         234.381}, {247.1175, 241.92700000000002`}, {250.7285, 252.931}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4ntMnF3yh2Mdirv6nny6b+ZwKuTgiiX3ohwc
jt3Z2rLHw2He2VXnr5pFOKg9aZ53tirI4daaXzG5vaEOe9T5ubdOi3BY4ucg
nHg72EFi+0WGe1UxEPVqQQ6qpUyzOPQTHKqOa1pNKg5waI26vOexQpLDG/3d
6vzCAQ5vDlgqe/UnObzYvp75eY6/A9sHMY+AL0kOJoJmNnu1AhwabtpWRlQk
OzzQnbDgx8wQB5aj/YbljRkOPwyfrVP9EwHh9+Y6bAzInlWeEutw1425gtun
0GHrssrjmkWxDhznJANvBRc6fGg9GXJwQazDzN3TJvBHFDr8bf9y+/rHWAfz
1Xbh0emFDh1AbuPuOAfvyDaLa58LHPpKC6V5G+IdjEMNtFY2FzgkhgSpL1AE
+sMMqEG4wCE3rHbdtmeJDjH/nH+9Fc5xKL4u9MlxdTLEfwwZDo9eTt3EU5jq
sIzLTbX0XbKD+oLODQ/Xpjp8zgFqTEp20FOU/5JzK9XB7Ky138WnSQ6HU1Yl
hExKdfgjATTJKckhXvO0wPGoZIcVQG9YFUU52PhdnBijl+gA9PWT5rAAB/T4
AgDC/c30
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        159.02540000000002`, 157.4451}, {78.86440000000002, 157.4451}, {
        79.63840000000002, 165.09109999999998`}, {82.42940000000002, 
        168.7621}, {90.75540000000002, 168.4881}, {109.28840000000002`, 
        167.8791}, {127.86840000000001`, 167.8821}, {146.40140000000002`, 
        168.4871}, {154.7314, 168.75809999999998`}, {158.64740000000003`, 
        165.8941}, {159.02540000000002`, 157.4451}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4jePzKQO3E92qOBW0aizSHIoPNdx6d6VZIfV
duHRG8UTHVLPxHqf8E52kAq8JV1zNMGh/rdVwTmXJIdEo1ADrbMJDvMFl+49
eD7e4e08G50r9xIcLkgCFYpEOzivzbxXeCnBIRmkLjLMAahKXO1ygoOR1krh
C1NCHTqSY++4AfmhrIsnWW0McQBZ37MzwWG76O/T7wJDHHY4ND06bpLo8GgO
0ALJEId9QO3BtYkOEkDpk9XBDnNB9h5OdHAB2xPswH4OaLFwkkPLo+MzdsuF
OJw67LQ2MyrJ4XiuScP2CyEQ95klOdx3Y67gDgl1OAQ0jtU8yWHftAn8VWXR
DmfenTzsZAlUf2drS82ZBHh4oIcPAA4+iHU=
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        149.3706, 179.85040000000004`}, {88.7096, 179.85040000000004`}, {
        89.0796, 188.17340000000004`}, {92.7136, 191.41140000000004`}, {
        101.10059999999999`, 190.95540000000003`}, {113.0456, 
        190.30740000000003`}, {125.0506, 190.80840000000003`}, {137.0306, 
        190.78440000000003`}, {146.2956, 190.76640000000003`}, {146.2956, 
        190.74340000000004`}, {149.3706, 179.85040000000004`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4lTJRxHiz2MdzoDAlTiHaYp9pYWn4+H8nb1s
H8RuJDh8vOSbJPAgzkGy+LrQp5OJDntKJkuwnItzWJUQEqQukuTQOz1PqPlE
nMPlPY9FZBcmOQBlw/hc4x3aooAiM5Ictn7+e6VCM84hN6x23bZJSQ775kvp
3w2JdQDqXtBZkuSwce775cekYxyAskn1VxMdnlxQuv1TLMZheeVxTatd8Q6W
W06U7WOPcdh+keEe08loB3vTuF2ePDEOQNdK894IdwBZf0AoxqFl3tlV53vD
IOaLxDjEz/AR7QkKczAyBgLvWAfurcsqjzuGOYCs8xaPc9gbBPSxapgD0PT5
UvnxDiBpzaRwiPlH4hzSXTLzP/wNh7jvdJzDNzagiV8jHdrEbp77/jjO4UZj
sduUd9Hw8EIPTwBpZagv
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{140.0835, 202.0618}, {128.02149999999997`, 202.0618}, {
        116.76849999999999`, 201.93280000000001`}, {105.52249999999998`, 
        202.1648}, {103.11949999999999`, 202.2138}, {98.57149999999999, 
        200.3948}, {98.67249999999999, 204.1458}, {98.76249999999999, 
        207.5198}, {99.46949999999998, 213.0618}, {104.86949999999999`, 
        213.2808}, {114.29749999999999`, 213.6638}, {123.79249999999999`, 
        213.9078}, {133.1805, 213.18280000000001`}, {138.6155, 212.7628}, {
        138.3045, 207.0808}, {140.0835, 202.0618}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{95.6938, 100.94810000000001`}, {110.8878, 
        100.94810000000001`}, {123.2868, 100.97010000000002`}, {135.6868, 
        100.92510000000001`}, {137.52779999999998`, 100.91810000000001`}, {
        140.1058, 100.76710000000001`}, {139.24779999999998`, 98.0991}, {
        138.2578, 95.02310000000001}, {137.8588, 90.5541}, {133.5478, 
        90.39110000000001}, {123.8608, 90.02310000000001}, {114.1398, 
        90.01610000000001}, {104.4508, 90.37310000000001}, {99.46979999999999,
         90.55610000000001}, {100.42779999999999`, 95.96410000000002}, {
        95.6938, 100.94810000000001`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{119.08539999999999`, 50.9822}, {114.93039999999999`, 
        60.2462}, {111.5174, 67.8132}, {108.1544, 75.4032}, {107.6514, 
        76.5382}, {107.46039999999999`, 78.4722}, {108.77539999999999`, 
        78.5062}, {115.6154, 78.6842}, {122.4784, 78.6622}, {
        129.29739999999998`, 78.1902}, {130.3544, 78.1182}, {129.7704, 
        75.4622}, {129.11839999999998`, 73.9842}, {126.0174, 66.9512}, {
        122.9664, 59.8962}, {119.08539999999999`, 50.9822}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        118.80269999999999`, 252.8172}, {122.91469999999998`, 
        243.24220000000003`}, {125.73469999999999`, 236.27620000000002`}, {
        128.89669999999998`, 229.4692}, {130.6917, 225.6072}, {129.5017, 
        224.35520000000002`}, {125.61269999999999`, 224.4002}, {
        119.98969999999998`, 224.4642}, {114.36669999999998`, 224.4162}, {
        107.89569999999999`, 224.4162}, {109.81169999999999`, 234.2672}, {
        115.19069999999999`, 241.81220000000002`}, {118.80269999999999`, 
        252.8172}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYCYompVzgz3pU7JAlEWG65YebgLyeW5Wta7mDe
6ZjwdIeHQ0vNhc2R3WUOi1y3ff5bEeQw/f+Eut8PSh0sQPJTIhy4MpRyKkpK
HaZIsITxVcY4tILUs5c6PF46+4iCXoLDb6uCcx2zShycu3Oe/5ZPcgDb11Ti
sOrjJd+kviSHOO8T7LbZJQ5HFDYUZXxOclh3I77Mv6PEwY7r+uKC8mQHEFdu
SanDoa8aMf0NGQ73H3BPXrmnDMLvyXXwnNugduhauUN91p6Syd6FDnz7DGZq
3Sp3SE8DguBCh7tbgT54Wu7wIxjoovBChwSgcWK/yh2mgRyUVuhgf+zO1had
Coh7Phc4HNmol7c4tsJh0tsae9PmAoeJdUAf9FU43Dz3PfixUAHE/wWVDlL6
d1XYhHMcpA5EKzgGV0H89z/dIRDkILNqhxTr+/69b5MdgK6RmBpS7bBx7vvl
xxKTHb4/SVx4Lava4cvfKxUvnyQ5HGpbHn7KrdphlycPk7ZjkoPAy+3rmbWr
HFRu/6zLKohyAFl/TqQSEj8hAQ7o8QUAcVTRLw==
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.984, 0.984], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        422.877, 157.4168}, {342.717, 157.4168}, {343.491, 
        165.06279999999998`}, {346.281, 168.7338}, {354.607, 168.4598}, {
        373.14, 167.8498}, {391.721, 167.8538}, {410.253, 168.4588}, {418.583,
         168.72979999999998`}, {422.499, 165.8658}, {422.877, 157.4168}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYi2rSafrc6sczGz2Bk0zT3J4q79bnT+jyiEz
/0PrSbFEh8XKO/+0K1c53GgsdptyJMHBACjNvaDSQT75XZTTmQQHGd4HuhMK
KxxWn78a9uZugoMGP/fWZU7lDh1fbl9vvJjg4Cva4/VKuMwBpNzuUoKDg3Di
4cuPSh3cpnxjiwfyj/3bVP1pZanDyZCDK5bsSHBQ6istlJ5U6vC3HWiAcaLD
G5B7Wkodaj5tCMiuSXSoOq5pNSmm1CHaye7FzUOJDqwmgmY2RaUOR0HmCCU5
hAKN8WsthdgfmeTwKEJ8+8WNpRD3mSY55Mwqn7PoUqlDg8f+WlmzJIi7ossd
ukAeskhykNh+keHe4wp4eKCHDwCHPI2z
        "]], 
       FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        413.2227, 179.82210000000003`}, {352.5617, 179.82210000000003`}, {
        352.9317, 188.14510000000004`}, {356.5657, 191.38310000000004`}, {
        364.9527, 190.92710000000002`}, {376.8977, 190.27910000000003`}, {
        388.9027, 190.78010000000003`}, {400.88169999999997`, 
        190.75610000000003`}, {410.1477, 190.73810000000003`}, {410.1477, 
        190.71510000000004`}, {413.2227, 179.82210000000003`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.973, 0.969], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYCYompVzgzvpc7eOr9V/x7Kc4hQymnoqqgwiE8
euP+N0B++CmjIxtfVjjkmTRsd7gX59AfXKIyPanSwfLa0VyTM3EOIvbH7mxt
r3SQUAtmXXwszkHjLe8+g3OVDgJVZqvtnOMdmPawComcqnQwCjXQWqke5/B1
562uv8cqHawZfVt4g2MdXm5fz/x8e6UDyPpvkjEOf1O/P0nMqHRIAmkQjYGY
l1PhsE309+l3rDEOOs4yrx/llzvsmTaBv4orxuH+A+7JK4vLHEQuuNz4IBDj
sJgRaKFiGcR84RiHaybvLVyFyhzWT0ntSPaMhbiHr8xBKvCWdI1onEMeSAN7
mYPrjQ9fvHLjHYC+X6oTVgYx/1Ccw434Mn+52jKI+07GOdRc2Bz59VeZA3MF
t4rGozgHkHLnSkT4oYcnALd9mRY=
        "]]}, 
      {FaceForm[{RGBColor[0.992, 0.976, 0.973], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{403.93549999999993`, 202.03349999999998`}, {
        391.8734999999999, 202.03349999999998`}, {380.6214999999999, 
        201.90449999999998`}, {369.3734999999999, 202.13649999999998`}, {
        366.97149999999993`, 202.18549999999996`}, {362.42349999999993`, 
        200.36649999999997`}, {362.52449999999993`, 204.11749999999998`}, {
        362.6144999999999, 207.49149999999997`}, {363.32149999999996`, 
        213.03349999999998`}, {368.72149999999993`, 213.25249999999997`}, {
        378.14949999999993`, 213.63549999999998`}, {387.64449999999994`, 
        213.87849999999997`}, {397.03349999999995`, 213.15449999999998`}, {
        402.46649999999994`, 212.73449999999997`}, {402.15649999999994`, 
        207.05249999999998`}, {403.93549999999993`, 
        202.03349999999998`}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.992, 0.992], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{359.5459, 100.91980000000001`}, {374.7389, 
        100.91980000000001`}, {387.13890000000004`, 100.94180000000001`}, {
        399.53790000000004`, 100.89680000000001`}, {401.3809, 100.8888}, {
        403.9579, 100.73880000000001`}, {403.0999, 98.0708}, {402.1089, 
        94.99480000000001}, {401.71090000000004`, 90.5258}, {397.3999, 
        90.36280000000001}, {387.7119, 89.99480000000001}, {377.9909, 
        89.98780000000001}, {368.3029, 90.3448}, {363.3219, 
        90.52780000000001}, {364.2799, 95.93580000000001}, {359.5459, 
        100.91980000000001`}}}]}, 
      {FaceForm[{RGBColor[0.992, 0.965, 0.965], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {{{382.93749999999994`, 50.9539}, {378.78349999999995`, 
        60.2179}, {375.36949999999996`, 67.7849}, {372.0054999999999, 
        75.3749}, {371.50249999999994`, 76.5099}, {371.31249999999994`, 
        78.4439}, {372.62749999999994`, 78.4779}, {379.4674999999999, 
        78.6559}, {386.33149999999995`, 78.6339}, {393.14949999999993`, 
        78.1619}, {394.20649999999995`, 78.0899}, {393.62249999999995`, 
        75.4339}, {392.9694999999999, 73.9559}, {389.86949999999996`, 
        66.9229}, {386.8184999999999, 59.8679}, {382.93749999999994`, 
        50.9539}}}]}, 
      {FaceForm[{RGBColor[0.996, 0.98, 0.98], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
        382.65430000000003`, 252.7889}, {386.76630000000006`, 
        243.21390000000002`}, {389.58630000000005`, 236.2469}, {
        392.74930000000006`, 229.4409}, {394.5443, 225.5789}, {
        393.35330000000005`, 224.32690000000002`}, {389.4653, 224.3719}, {
        383.84130000000005`, 224.4359}, {378.21830000000006`, 224.3879}, {
        371.74830000000003`, 224.3879}, {373.6643, 234.2389}, {
        379.04330000000004`, 241.78390000000002`}, {382.65430000000003`, 
        252.7889}}}]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited]}], "}"}]], "Output",
 CellChangeTimes->{3.831626346137195*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"0af6d462-1a25-4970-bb67-dd044579e83b"]
}, Open  ]],

Cell["Since attributeCount[] returns a number, what\[CloseCurlyQuote]s this \
doing?", "Text",
 CellChangeTimes->{{3.831626565039894*^9, 
  3.8316265778477573`*^9}},ExpressionUUID->"c42d62a7-c8b6-404f-90d1-\
d42084ae5e10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "\[IndentingNewLine]", 
   RowBox[{"allSets", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"attributeCount", "[", "#", "]"}], "\[Equal]", "1"}], "&"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8316265792510757`*^9, 3.831626592371758*^9}, 
   3.8316266290315447`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"871c9eaf-1874-4211-8fb7-1b16b71ee9e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setCards", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False], ",", "empty", ",", "diamond"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", "empty", ",", "diamond"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8316266588991623`*^9, 3.831626676349259*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"77b21e1c-48b4-4dbc-b2f8-46986801cf22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4sqXaoYch4odGH1beP0rCx12yLW+DnxT4rDn
sYjsyam5DsLNB04t5CxzYPsg5hFQkuGwRiYqxVq93KHfsFxXMTjZIW6XJw+T
dblDH0jBjySH89+DHy81Lne4BDJgaZLDnCMKG4oUyh3aoi7veeyT5CAPNH4H
S5nDkX+bqj9lRDlMc+7Oef6yxOHZOtUnzWYBDu9q7E3jzhU7SCx/4aH339yB
Sbtd7OakYocFk6wYfV0sHV78Xvnx0sRihw3ZnD8XtNs4bCjKmPi2odjhxIzd
0ya8t3OYIsESxldd5BAhvv0iA1+gw8myffOlygsdKo5rWk1KjnJwAVr3u7DA
4aClslf17USI+wMLHLyqm/V9ipIcniydfUTBrsBhE0/hmu7vSRD7UwocTgkc
37VjabJDLdB5u4Dm6SrKf8mpynBQBDmgucih+3YGQ35oLtx9INcrihc6pFrf
9++dXezw5JP8pXzdQocPy495my8vdrhX2NX3xKnQAT38AbbHs2I=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4n0GM7UkThY7VHKraNT55TvIvH5kJrWmxOGL
/KX8eMtsh4l1v60K2kodgm5J1yR6pDtMXtkU6Jlc5nByxu5pEyKTHYC6p14p
L3PYJvr79LvfSQ7ty8NPGZWUOcjWJBqFbkpyWAVUPjehzEEjmHXxpIgkB5Bx
51pKHZZ0bnj48mKMw5bIrztvrSpxOGKp7FX9PsRB1xnoggvFDglOdi9uqng5
fEw+E+s9pdgh5uCKJX4RXg6LGfewCk0rdqg5rmk16bO3g34eUKQdKv/DB6J/
T5EDS34jy9HNoQ73H3BPXvml0CHo4sSYf+9jHBQcgSZqFzoErJ+S2iGa5HCu
49K9B8KFDlFtFteONic58IEChKHQYVc2588FT5McQMFxQLbQwa+F1399VrLD
Uh2gBd8KHWYBvc9vk+5gf+zO1pZTRQ7TUjuSY4WyHYChwZmxAOiejfvfzHuW
BwmfpcUOi9I3vyr+n+dgfGSjXt7GYgflv99KHwjlO6CHPwBy6rn2
        "]]}, 
      {FaceForm[{RGBColor[0.345, 0.584, 0.302], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4jePzKQO/E9zeF28VfR3dqFDtu/nvuCQTIcJ
huW6itW5Dst0nGVe92U73LKtjFgRmeEQ5Dm3Qe1UrkNy/U3bSotkB7vZofNX
f8x1SAoJUl9wN8lhxv8Jdb8fAfVxuamWdiU5GM3Ukpi6J9chaoXpWWujJAcL
qQPRCq3ZDjmzyucsMo5yUJ0O1OCf6dDn9YrFhDHA4SpnhlKORLrDDtHfp99p
mju01VzYHLkwzcGB0beFN9/C4SS7LdDGNIeAW9I1iZusHaK/7rzVVZvmkMF+
TjJQys5B0fFj8pnCFAeGzdWfNtwIcOj5m/r9SWaSg0LyuygnvSiHJrVDbcvj
ExymtrdGXT6QCHG/bIKD3Mmn9kvCkxyatjs0PXof79AWdXnP4ztJEPtdExzm
xWmeFuhOdvjSF1yikp3kwJjfyHI0PsPhcNvy8FNNKQ7xQOnjVrlw913Kj2c/
x1no4AUMrkOb0hyArrslrVDocCu+zF/uVJrDiRm7p00wLXRAD38A+XGz2g==

        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4p1/2r/c5k138Ipss7hmnO9QWijN++ByhsPR
XJOG7XLZDvEzfER7OrIclDXqenbqpjskv4tysnPKcZj1THb5C7tkh/wPrSdD
snMcOpJj77g9THLwesViIpiS4/Du5GGntdOTHDi75JPf2eQ4/FiQvvmVbZKD
1aTT9R6tWQ5uqqVMs+bEOCzxcxBOvJjhkHb1eZb2rhAHfu6tyypl0x2WVB7X
tNrl6QCy3mtJmsOCH4bP1r31dGiZd3bV+eVpDgf+bar+1OEN1Hz4snY3VL7X
B6L/a4rDMi6gDXWhDr9ico/+S0l2+JITVrtuV4xDnaxFusvlRAfFv99KH/xK
dLi1BqhicaKDzhWgjzKTHC4x3GPirEl06NmZzfnzVJJDD8hD2xMd5C/lx7MH
JDt0fLl9vTEz2QEouyBdMd1htzrQRoFUB6Dvird+z3J4tk71SfOeNAfd/0Ab
TudBwud4mkPxVtHfp5/kOSxSBob4vTSHL6AA/5HngB7+APguvw4=
        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4sqXaoYch4odGH1beP0rCx12yLW+DnxT4rDn
sYjsyam5DsLNB04t5CxzYPsg5hFQkuGwRiYqxVq93KHfsFxXMTjZIW6XJw+T
dblDH0jBjySH89+DHy81Lne4BDJgaZLDnCMKG4oUyh3aoi7veeyT5CAPNH4H
S5nDkX+bqj9lRDlMc+7Oef6yxOHZOtUnzWYBDu9q7E3jzhU7SCx/4aH339yB
Sbtd7OakYocFk6wYfV0sHV78Xvnx0sRihw3ZnD8XtNs4bCjKmPi2odjhxIzd
0ya8t3OYIsESxldd5BAhvv0iA1+gw8myffOlygsdKo5rWk1KjnJwAVr3u7DA
4aClslf17USI+wMLHLyqm/V9ipIcniydfUTBrsBhE0/hmu7vSRD7UwocTgkc
37VjabJDLdB5u4Dm6SrKf8mpynBQBDmgucih+3YGQ35oLtx9INcrihc6pFrf
9++dXezw5JP8pXzdQocPy495my8vdrhX2NX3xKnQAT38AbbHs2I=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4n0GM7UkThY7VHKraNT55TvIvH5kJrWmxOGL
/KX8eMtsh4l1v60K2kodgm5J1yR6pDtMXtkU6Jlc5nByxu5pEyKTHYC6p14p
L3PYJvr79LvfSQ7ty8NPGZWUOcjWJBqFbkpyWAVUPjehzEEjmHXxpIgkB5Bx
51pKHZZ0bnj48mKMw5bIrztvrSpxOGKp7FX9PsRB1xnoggvFDglOdi9uqng5
fEw+E+s9pdgh5uCKJX4RXg6LGfewCk0rdqg5rmk16bO3g34eUKQdKv/DB6J/
T5EDS34jy9HNoQ73H3BPXvml0CHo4sSYf+9jHBQcgSZqFzoErJ+S2iGa5HCu
49K9B8KFDlFtFteONic58IEChKHQYVc2588FT5McQMFxQLbQwa+F1399VrLD
Uh2gBd8KHWYBvc9vk+5gf+zO1pZTRQ7TUjuSY4WyHYChwZmxAOiejfvfzHuW
BwmfpcUOi9I3vyr+n+dgfGSjXt7GYgflv99KHwjlO6CHPwBy6rn2
        "]]}, 
      {FaceForm[{RGBColor[0.62, 0.21600000000000003`, 0.8160000000000001], 
       Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4jePzKQO/E9zeF28VfR3dqFDtu/nvuCQTIcJ
huW6itW5Dst0nGVe92U73LKtjFgRmeEQ5Dm3Qe1UrkNy/U3bSotkB7vZofNX
f8x1SAoJUl9wN8lhxv8Jdb8fAfVxuamWdiU5GM3Ukpi6J9chaoXpWWujJAcL
qQPRCq3ZDjmzyucsMo5yUJ0O1OCf6dDn9YrFhDHA4SpnhlKORLrDDtHfp99p
mju01VzYHLkwzcGB0beFN9/C4SS7LdDGNIeAW9I1iZusHaK/7rzVVZvmkMF+
TjJQys5B0fFj8pnCFAeGzdWfNtwIcOj5m/r9SWaSg0LyuygnvSiHJrVDbcvj
ExymtrdGXT6QCHG/bIKD3Mmn9kvCkxyatjs0PXof79AWdXnP4ztJEPtdExzm
xWmeFuhOdvjSF1yikp3kwJjfyHI0PsPhcNvy8FNNKQ7xQOnjVrlw913Kj2c/
x1no4AUMrkOb0hyArrslrVDocCu+zF/uVJrDiRm7p00wLXRAD38A+XGz2g==

        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4p1/2r/c5k138Ipss7hmnO9QWijN++ByhsPR
XJOG7XLZDvEzfER7OrIclDXqenbqpjskv4tysnPKcZj1THb5C7tkh/wPrSdD
snMcOpJj77g9THLwesViIpiS4/Du5GGntdOTHDi75JPf2eQ4/FiQvvmVbZKD
1aTT9R6tWQ5uqqVMs+bEOCzxcxBOvJjhkHb1eZb2rhAHfu6tyypl0x2WVB7X
tNrl6QCy3mtJmsOCH4bP1r31dGiZd3bV+eVpDgf+bar+1OEN1Hz4snY3VL7X
B6L/a4rDMi6gDXWhDr9ico/+S0l2+JITVrtuV4xDnaxFusvlRAfFv99KH/xK
dLi1BqhicaKDzhWgjzKTHC4x3GPirEl06NmZzfnzVJJDD8hD2xMd5C/lx7MH
JDt0fLl9vTEz2QEouyBdMd1htzrQRoFUB6Dvird+z3J4tk71SfOeNAfd/0Ab
TudBwud4mkPxVtHfp5/kOSxSBob4vTSHL6AA/5HngB7+APguvw4=
        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited], ",", 
   StyleBox[
    GraphicsBox[
     {Thickness[0.002], 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.912, 0.112}, {
        499.08799999999997`, 0.112}, {499.08799999999997`, 301.137}, {0.912, 
        301.137}}}]}, 
      {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4sqXaoYch4odGH1beP0rCx12yLW+DnxT4rDn
sYjsyam5DsLNB04t5CxzYPsg5hFQkuGwRiYqxVq93KHfsFxXMTjZIW6XJw+T
dblDH0jBjySH89+DHy81Lne4BDJgaZLDnCMKG4oUyh3aoi7veeyT5CAPNH4H
S5nDkX+bqj9lRDlMc+7Oef6yxOHZOtUnzWYBDu9q7E3jzhU7SCx/4aH339yB
Sbtd7OakYocFk6wYfV0sHV78Xvnx0sRihw3ZnD8XtNs4bCjKmPi2odjhxIzd
0ya8t3OYIsESxldd5BAhvv0iA1+gw8myffOlygsdKo5rWk1KjnJwAVr3u7DA
4aClslf17USI+wMLHLyqm/V9ipIcniydfUTBrsBhE0/hmu7vSRD7UwocTgkc
37VjabJDLdB5u4Dm6SrKf8mpynBQBDmgucih+3YGQ35oLtx9INcrihc6pFrf
9++dXezw5JP8pXzdQocPy495my8vdrhX2NX3xKnQAT38AbbHs2I=
        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4n0GM7UkThY7VHKraNT55TvIvH5kJrWmxOGL
/KX8eMtsh4l1v60K2kodgm5J1yR6pDtMXtkU6Jlc5nByxu5pEyKTHYC6p14p
L3PYJvr79LvfSQ7ty8NPGZWUOcjWJBqFbkpyWAVUPjehzEEjmHXxpIgkB5Bx
51pKHZZ0bnj48mKMw5bIrztvrSpxOGKp7FX9PsRB1xnoggvFDglOdi9uqng5
fEw+E+s9pdgh5uCKJX4RXg6LGfewCk0rdqg5rmk16bO3g34eUKQdKv/DB6J/
T5EDS34jy9HNoQ73H3BPXvml0CHo4sSYf+9jHBQcgSZqFzoErJ+S2iGa5HCu
49K9B8KFDlFtFteONic58IEChKHQYVc2588FT5McQMFxQLbQwa+F1399VrLD
Uh2gBd8KHWYBvc9vk+5gf+zO1pZTRQ7TUjuSY4WyHYChwZmxAOiejfvfzHuW
BwmfpcUOi9I3vyr+n+dgfGSjXt7GYgflv99KHwjlO6CHPwBy6rn2
        "]]}, 
      {FaceForm[{RGBColor[0.918, 0.2, 0.137], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4jePzKQO/E9zeF28VfR3dqFDtu/nvuCQTIcJ
huW6itW5Dst0nGVe92U73LKtjFgRmeEQ5Dm3Qe1UrkNy/U3bSotkB7vZofNX
f8x1SAoJUl9wN8lhxv8Jdb8fAfVxuamWdiU5GM3Ukpi6J9chaoXpWWujJAcL
qQPRCq3ZDjmzyucsMo5yUJ0O1OCf6dDn9YrFhDHA4SpnhlKORLrDDtHfp99p
mju01VzYHLkwzcGB0beFN9/C4SS7LdDGNIeAW9I1iZusHaK/7rzVVZvmkMF+
TjJQys5B0fFj8pnCFAeGzdWfNtwIcOj5m/r9SWaSg0LyuygnvSiHJrVDbcvj
ExymtrdGXT6QCHG/bIKD3Mmn9kvCkxyatjs0PXof79AWdXnP4ztJEPtdExzm
xWmeFuhOdvjSF1yikp3kwJjfyHI0PsPhcNvy8FNNKQ7xQOnjVrlw913Kj2c/
x1no4AUMrkOb0hyArrslrVDocCu+zF/uVJrDiRm7p00wLXRAD38A+XGz2g==

        "]]}, 
      {FaceForm[{RGBColor[0.996, 0.996, 0.996], Opacity[1.]}], 
       FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4p1/2r/c5k138Ipss7hmnO9QWijN++ByhsPR
XJOG7XLZDvEzfER7OrIclDXqenbqpjskv4tysnPKcZj1THb5C7tkh/wPrSdD
snMcOpJj77g9THLwesViIpiS4/Du5GGntdOTHDi75JPf2eQ4/FiQvvmVbZKD
1aTT9R6tWQ5uqqVMs+bEOCzxcxBOvJjhkHb1eZb2rhAHfu6tyypl0x2WVB7X
tNrl6QCy3mtJmsOCH4bP1r31dGiZd3bV+eVpDgf+bar+1OEN1Hz4snY3VL7X
B6L/a4rDMi6gDXWhDr9ico/+S0l2+JITVrtuV4xDnaxFusvlRAfFv99KH/xK
dLi1BqhicaKDzhWgjzKTHC4x3GPirEl06NmZzfnzVJJDD8hD2xMd5C/lx7MH
JDt0fLl9vTEz2QEouyBdMd1htzrQRoFUB6Dvird+z3J4tk71SfOeNAfd/0Ab
TudBwud4mkPxVtHfp5/kOSxSBob4vTSHL6AA/5HngB7+APguvw4=
        "]]}},
     AspectRatio->Automatic,
     ImageSize->{500., 302.},
     PlotRange->{{0., 500.}, {0., 301.13599999999997`}}],
    StripOnInput->False,
    Magnification->0.25 Inherited]}], "}"}]], "Output",
 CellChangeTimes->{{3.831626665050909*^9, 3.8316266773916073`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"24e1651f-e7f9-41c4-8533-349e30b58da8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", "\[IndentingNewLine]", 
     RowBox[{"allSets", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"attributeCount", "[", "#", "]"}], "\[Equal]", 
        "numberDifferent"}], "&"}]}], "\[IndentingNewLine]", "]"}], "//", 
    "Length"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"numberDifferent", ",", "1", ",", "4", ",", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.831626748197823*^9, 3.83162680897313*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"0c6cc429-592a-4a36-8839-3ff308a8f149"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"108", ",", "324", ",", "432", ",", "216"}], "}"}]], "Output",
 CellChangeTimes->{{3.8316268026572647`*^9, 3.831626809254807*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"662a6655-d110-401e-98d4-328cb2121f59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.831806954326692*^9, 3.831806954653246*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"4436af38-afa1-4324-b459-a3aa89e086df"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 4 Jun 2021 10:49:14\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "6", ",", "4", ",", "10", ",", "49", ",", 
           "14.843912`7.924123356373338"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.83180695485749*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"8df6de3d-f3da-46b5-95fd-562c1d047a9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"setDeck", ",", "3"}], "]"}], ",", "10000"}], "]"}], ",", " ", 
    
    RowBox[{"(*", " ", 
     RowBox[{"10000", " ", "=", " ", 
      RowBox[{"how", " ", "many", " ", "times", " ", "it", " ", "runs"}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"setCheck", "[", "#", "]"}], "&"}]}], "\[IndentingNewLine]", 
   "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.831807446051956*^9, 3.831807456425535*^9}, {
  3.8318075404596663`*^9, 3.831807600766356*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"6b2d3156-a7c8-4695-9ad7-e122afeb9cad"],

Cell[BoxData["115"], "Output",
 CellChangeTimes->{
  3.831807456850103*^9, {3.831807560160734*^9, 3.831807614498664*^9}, {
   3.831807756343814*^9, 3.831807776294726*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"3a87c2c0-36cb-4f4f-95a8-78a1e1d34ce5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"115", "/", "10000"}], ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.831807646568465*^9, 3.8318076520657873`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"aa490481-f897-468d-97b5-47bc6e550ba5"],

Cell[BoxData["0.0115`8."], "Output",
 CellChangeTimes->{3.831807654684264*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e8cdf0e7-285f-4379-b57e-c6f2c0be9230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"1", "/", "79"}], ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.831807657501548*^9, 3.8318076605836487`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"77fb714b-2701-47f7-9f2f-0daf0473350c"],

Cell[BoxData["0.01265822784810126582278481012658227848`8."], "Output",
 CellChangeTimes->{3.8318076614535427`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"1b5729e0-6f1e-4b1c-8542-3d1adb46658d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tally", "[", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Subsets", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"RandomSample", "[", 
             RowBox[{"setDeck", ",", "12"}], "]"}], ",", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "checks", " ", "for", " ", "sets", " ", "in", " ", "group", " ", 
              "of", " ", "12", " ", "cards"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"{", "3", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"setCheck", "[", "#", "]"}], "&"}]}], 
         "\[IndentingNewLine]", "]"}], "//", "Length"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"amount", " ", "of", " ", "sets"}], " ", "*)"}], 
       "\[IndentingNewLine]", "1000"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "gives", " ", "number", " ", "of", " ", "sets", " ", "1000", " ", 
        "times"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "\[IndentingNewLine]", "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.8318078591073523`*^9, 3.8318079163759613`*^9}, {
   3.8318079975370207`*^9, 3.8318080139969482`*^9}, {3.8318083540918007`*^9, 
   3.831808370937028*^9}, 3.831808553619165*^9, {3.83180859421686*^9, 
   3.8318086281234217`*^9}, {3.831808671625877*^9, 
   3.831808674060182*^9}},ExpressionUUID->"a968bc0f-3e8d-472f-a273-\
cc1019a9268d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "29"},
    {"1", "148"},
    {"2", "272"},
    {"3", "290"},
    {"4", "161"},
    {"5", "77"},
    {"6", "22"},
    {"7", "1"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.831808629864317*^9, 3.831808652022505*^9}},
 CellLabel->
  "Out[36]//TableForm=",ExpressionUUID->"fd85d7ec-b930-4a49-8a2a-\
fb66df8881a4"]
}, Open  ]]
},
WindowSize->{717, 748},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9d1bc26d-b900-42ed-9745-50840aa19c15"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 204, 4, 30, "Input",ExpressionUUID->"6d7cfeb9-0265-4d83-8d5b-6474f93e82ee"],
Cell[CellGroupData[{
Cell[787, 28, 172, 2, 30, "Input",ExpressionUUID->"fc59e670-00ca-4ffe-aa2c-431bfd188179"],
Cell[962, 32, 734, 19, 42, "Output",ExpressionUUID->"7091e677-8720-4cf6-b556-d4baab2eb702"]
}, Open  ]],
Cell[1711, 54, 258, 6, 58, "Text",ExpressionUUID->"637efe06-cde7-4cb0-8b19-5ab151e881f0"],
Cell[CellGroupData[{
Cell[1994, 64, 694, 16, 115, "Input",ExpressionUUID->"4d9c7975-9b62-4e90-a703-ff8bd010ea66"],
Cell[2691, 82, 19667, 337, 449, "Output",ExpressionUUID->"4a57d21a-34e4-4e61-8318-738b4ea3b0bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22395, 424, 464, 11, 94, "Input",ExpressionUUID->"393b68f2-b7ba-45cd-8497-44ea1591f357"],
Cell[22862, 437, 583, 19, 55, "Output",ExpressionUUID->"a953b77f-75e3-4eb8-909d-fb84389878de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23482, 461, 876, 26, 154, "Input",ExpressionUUID->"695c2289-5114-415b-844c-545a7daa0ac4"],
Cell[24361, 489, 17895, 315, 377, "Output",ExpressionUUID->"1fcd29cd-f014-416f-afca-0ee7ab7970fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42293, 809, 739, 17, 157, "Input",ExpressionUUID->"d0eb29e0-b1fa-46d7-8d9b-6d4a166d4c71"],
Cell[43035, 828, 318, 7, 377, "Output",ExpressionUUID->"2a82fcd9-d2e2-4ca8-8c98-50876285ae6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43390, 840, 175, 2, 30, "Input",ExpressionUUID->"8cddc374-4472-4650-a9e3-18fad3f35813"],
Cell[43568, 844, 731, 19, 42, "Output",ExpressionUUID->"2bf0edd7-3514-4f2e-830a-ce2fc85a9be0"]
}, Open  ]],
Cell[44314, 866, 346, 8, 35, "Text",ExpressionUUID->"aec3614f-8b9e-4e1a-aad9-12e304675856"],
Cell[44663, 876, 391, 9, 136, "Input",ExpressionUUID->"821ffb0a-0b0a-437a-be7a-97df41d6893f"],
Cell[CellGroupData[{
Cell[45079, 889, 175, 2, 30, "Input",ExpressionUUID->"8080a522-bc56-454d-98d7-8f8f50b185b8"],
Cell[45257, 893, 735, 19, 42, "Output",ExpressionUUID->"f2f98d45-259b-4f6b-95a0-ab0e74c7eff9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46029, 917, 2108, 56, 325, "Input",ExpressionUUID->"14feeca7-93db-4b4e-929c-4c95b22c5b66"],
Cell[48140, 975, 661, 14, 308, "Output",ExpressionUUID->"aef59944-a541-4e73-91ba-6dad728559ab"]
}, Open  ]],
Cell[48816, 992, 309, 7, 35, "Text",ExpressionUUID->"8de2294d-df72-4e45-ae11-4aa9d28a0336"],
Cell[CellGroupData[{
Cell[49150, 1003, 1391, 34, 283, "Input",ExpressionUUID->"78dc75b0-e6af-4320-a929-db84f764507a"],
Cell[50544, 1039, 1579, 33, 373, "Output",ExpressionUUID->"db0f66cb-3865-4b9a-9ba6-52dbfb6c50f7"]
}, Open  ]],
Cell[52138, 1075, 275, 6, 58, "Text",ExpressionUUID->"c402c173-c4dd-40b5-adcd-4ca440e25e53"],
Cell[52416, 1083, 1624, 40, 241, "Input",ExpressionUUID->"da475827-d494-4923-8a69-56e3fbcb137c"],
Cell[CellGroupData[{
Cell[54065, 1127, 488, 8, 30, "Input",ExpressionUUID->"0c303397-d754-4e26-bb24-6385218f1f5c"],
Cell[54556, 1137, 2652, 61, 376, "Output",ExpressionUUID->"32b0b568-ce15-49a6-99d0-a2ea401b5119"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57245, 1203, 173, 2, 30, "Input",ExpressionUUID->"acaa1312-3551-475b-b3d8-53732c2fbf50"],
Cell[57421, 1207, 737, 19, 42, "Output",ExpressionUUID->"e780d607-729e-4fbb-a53e-f7775d242c98"]
}, Open  ]],
Cell[58173, 1229, 285, 8, 104, "Text",ExpressionUUID->"2dfd7190-a0b0-4f20-922d-165bc04334ba"],
Cell[CellGroupData[{
Cell[58483, 1241, 581, 16, 94, "Input",ExpressionUUID->"05da17e1-691f-419c-be5e-e8ca8bd9999b"],
Cell[59067, 1259, 852, 27, 51, "Output",ExpressionUUID->"ddf423d2-7cd5-48d1-bd71-fe5b8ce796bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59956, 1291, 951, 29, 127, "Input",ExpressionUUID->"585d0ad2-5940-4c72-8279-243547ee04f4"],
Cell[60910, 1322, 12771, 230, 240, "Output",ExpressionUUID->"95f2864f-7269-44ca-b3c3-820340945a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73718, 1557, 581, 16, 94, "Input",ExpressionUUID->"4d85c2ac-45b4-452d-9c28-601cf5518fc7"],
Cell[74302, 1575, 880, 29, 51, "Output",ExpressionUUID->"01a77111-9d19-43be-a033-156388da480b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75219, 1609, 1059, 32, 127, "Input",ExpressionUUID->"141b789d-784c-4d84-b4cc-6106a5e7c9ee"],
Cell[76281, 1643, 8473, 162, 240, "Output",ExpressionUUID->"93f2de33-61d8-4688-ae3e-3417187344aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84791, 1810, 1522, 40, 262, "Input",ExpressionUUID->"f62a2088-035a-4c44-b773-9cefa1579bd0"],
Cell[86316, 1852, 1236, 42, 90, "Output",ExpressionUUID->"6c531f7a-7739-4e48-8df1-b0a221963456"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87589, 1899, 3228, 94, 356, "Input",ExpressionUUID->"d763c970-e7d4-4c69-9d61-eaef61f3a929"],
Cell[90820, 1995, 69908, 1180, 377, 19309, 350, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"deca1173-ec0e-41a9-aa61-51ecbf255604"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160765, 3180, 173, 2, 30, "Input",ExpressionUUID->"238bf795-b729-42fc-92e5-e6f292afd768"],
Cell[160941, 3184, 734, 19, 42, "Output",ExpressionUUID->"6fa75068-7e6f-4c96-a55b-7df6b60d35b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161712, 3208, 801, 24, 115, "Input",ExpressionUUID->"b206b095-7ca7-426c-9cd9-b9392d2f6856"],
Cell[162516, 3234, 11494, 205, 449, "Output",ExpressionUUID->"872e8a0e-52d8-4050-a42e-568261631b55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174047, 3444, 172, 2, 30, "Input",ExpressionUUID->"c3aee596-f814-4d8c-90e8-74bc3967eb13"],
Cell[174222, 3448, 735, 19, 42, "Output",ExpressionUUID->"58d7c8e2-c2b9-411d-95de-26e1d7c21dd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174994, 3472, 2658, 63, 304, "Input",ExpressionUUID->"00ca7bf4-44c8-40d5-9f39-ec2f79bfea3e"],
Cell[177655, 3537, 2931, 56, 521, "Output",ExpressionUUID->"5430ecf6-2ed8-4982-bfe7-ca3e4eb3f9ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180623, 3598, 173, 2, 30, "Input",ExpressionUUID->"99f3fcf8-d497-442b-a16a-272af8526060"],
Cell[180799, 3602, 732, 19, 42, "Output",ExpressionUUID->"a5906023-b4dd-4967-9148-2b12ec58b424"]
}, Open  ]],
Cell[181546, 3624, 183, 3, 35, "Text",ExpressionUUID->"068d2c01-920b-4233-89d6-c33926245fdd"],
Cell[CellGroupData[{
Cell[181754, 3631, 874, 20, 115, "Input",ExpressionUUID->"58780760-d99d-4222-91b3-aa59660f8a85"],
Cell[182631, 3653, 3485, 115, 203, "Output",ExpressionUUID->"c349f793-eaf4-4e67-8f4b-60be15b61e89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186153, 3773, 1014, 20, 199, "Input",ExpressionUUID->"e3bafeee-200d-4abc-bc54-9973f78e69f9"],
Cell[187170, 3795, 31096, 546, 377, "Output",ExpressionUUID->"f6a197f0-7110-48b8-a7ee-d90c82348951"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218303, 4346, 172, 2, 30, "Input",ExpressionUUID->"2cccbef4-f5ca-4c2f-884e-973dffca0c36"],
Cell[218478, 4350, 735, 19, 42, "Output",ExpressionUUID->"889a574a-ac9b-483e-9899-484afd1561e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219250, 4374, 680, 18, 94, "Input",ExpressionUUID->"1869dbb7-3cc7-42cc-a073-4c2a8372b7bd"],
Cell[219933, 4394, 2365, 81, 616, "Output",ExpressionUUID->"671c556e-31fa-4676-acb9-0d080c68829b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222335, 4480, 4725, 120, 472, "Input",ExpressionUUID->"e97fc047-7fc1-4683-bec2-78ef0b403a63"],
Cell[227063, 4602, 3886, 74, 521, "Output",ExpressionUUID->"20f1f8f7-f82a-47db-9c99-66f1ecc1ffe9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230986, 4681, 174, 2, 30, "Input",ExpressionUUID->"edb9238e-ec58-488d-9e98-4a379bc6b7bd"],
Cell[231163, 4685, 734, 19, 42, "Output",ExpressionUUID->"005d423c-81eb-44f2-90dd-b715716374ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231934, 4709, 1417, 32, 178, "Input",ExpressionUUID->"820b1770-841e-46e6-9fbc-cdaf461d90c8"],
Cell[233354, 4743, 26976, 455, 377, "Output",ExpressionUUID->"894dbeba-3199-49dc-8607-3867c69f8c22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260367, 5203, 173, 2, 30, "Input",ExpressionUUID->"4cb5827a-c7f6-46bb-8c1f-6f5d4b4b95c2"],
Cell[260543, 5207, 732, 19, 42, "Output",ExpressionUUID->"e592c3f0-080d-4272-8cb0-6dc866f6d93b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261312, 5231, 7606, 177, 1018, "Input",ExpressionUUID->"b6fd5a50-cfd4-4f71-92b0-696ecd341c8a"],
Cell[268921, 5410, 3964, 76, 361, "Output",ExpressionUUID->"fa33f627-9703-4aad-a7bb-b114a0808bcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272922, 5491, 173, 2, 30, "Input",ExpressionUUID->"bd258423-ef56-491c-bd6c-21619405e46a"],
Cell[273098, 5495, 732, 19, 42, "Output",ExpressionUUID->"d28fa7de-cf4a-45c0-9f1a-dafaacddf5f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273867, 5519, 2750, 65, 430, "Input",ExpressionUUID->"9e3d1ce0-5cca-419c-8004-152be457320a"],
Cell[276620, 5586, 2436, 50, 521, "Output",ExpressionUUID->"9a6978f3-d2f1-4f42-91df-b576172089be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279093, 5641, 2495, 54, 409, "Input",ExpressionUUID->"523f2950-b643-4578-84b2-d84849d66a95"],
Cell[281591, 5697, 2071157, 35668, 570, "Output",ExpressionUUID->"97aef095-161f-4267-bf83-eb70fe9c6da8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2352785, 41370, 630, 17, 94, "Input",ExpressionUUID->"341b7ec0-614c-4965-be56-771d27633b55"],
Cell[2353418, 41389, 3277, 108, 207, "Output",ExpressionUUID->"c691e877-0e21-4e3b-b923-2cd5d92d82bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2356732, 41502, 175, 2, 30, "Input",ExpressionUUID->"8504e7b6-728d-40b6-a264-5269b1a62ae2"],
Cell[2356910, 41506, 735, 19, 42, "Output",ExpressionUUID->"2a963701-5ccc-450b-84df-7f101dce8766"]
}, Open  ]],
Cell[2357660, 41528, 166, 3, 35, "Text",ExpressionUUID->"8f974afe-1f35-4136-a707-7ab871cf0f3f"],
Cell[CellGroupData[{
Cell[2357851, 41535, 1259, 29, 283, "Input",ExpressionUUID->"9503d58a-839c-4828-bd9c-38c519b23629"],
Cell[2359113, 41566, 446412, 7609, 584, "Output",ExpressionUUID->"151e67b0-7ec2-402b-867b-bdfc56b7b693"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2805562, 49180, 173, 2, 30, "Input",ExpressionUUID->"4f8e188a-34b5-4140-92f7-338bff653f95"],
Cell[2805738, 49184, 734, 19, 42, "Output",ExpressionUUID->"23275e6a-268d-4079-9a02-c25bc4248be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2806509, 49208, 689, 16, 157, "Input",ExpressionUUID->"0ec1b322-14e3-48a1-9e12-c00346a7fa62"],
Cell[2807201, 49226, 452, 12, 34, "Output",ExpressionUUID->"93fa8634-bc58-41ae-b53d-5e348266e05a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2807690, 49243, 209, 3, 30, "Input",ExpressionUUID->"e8af8655-d64d-4e0a-a74c-59ce90e52c3c"],
Cell[2807902, 49248, 712, 22, 76, "Output",ExpressionUUID->"c1876b91-1b9b-4690-b4a8-f123c5cf97a4"]
}, Open  ]],
Cell[2808629, 49273, 322, 5, 73, "Input",ExpressionUUID->"ded3e2fa-04c0-4e43-8f1b-cc110fe3cc5a"],
Cell[CellGroupData[{
Cell[2808976, 49282, 626, 15, 115, "Input",ExpressionUUID->"2696d336-abe8-4b76-9db0-727ef790dd2d"],
Cell[2809605, 49299, 430, 12, 34, "Output",ExpressionUUID->"8ab3f1d0-5f1a-4966-ae63-b1ff1d96f6fb"]
}, Open  ]],
Cell[2810050, 49314, 406, 12, 52, "Input",ExpressionUUID->"0fa84165-6b96-472c-8be1-50a76eee8486"],
Cell[CellGroupData[{
Cell[2810481, 49330, 632, 14, 157, "Input",ExpressionUUID->"90ffd944-b313-4cd9-a355-bea3a79cda98"],
Cell[2811116, 49346, 619, 20, 51, "Output",ExpressionUUID->"f50187af-248f-45fb-9a31-7a1a52d0661a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2811772, 49371, 207, 3, 30, "Input",ExpressionUUID->"b39c579d-4919-4823-8730-1e997698e67b"],
Cell[2811982, 49376, 451, 12, 34, "Output",ExpressionUUID->"a937cf04-d941-48cc-b7b3-46e09b4d744b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2812470, 49393, 966, 31, 48, "Input",ExpressionUUID->"cbfc1f3f-662b-45cd-a06b-1a7b4bb9ee9b"],
Cell[2813439, 49426, 381, 10, 34, "Output",ExpressionUUID->"863da332-8423-498a-9155-9b8aad1a24a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2813857, 49441, 205, 3, 30, "Input",ExpressionUUID->"8b6092cb-57da-4554-a63d-c3748d1ee339"],
Cell[2814065, 49446, 654, 20, 76, "Output",ExpressionUUID->"3da89170-3d64-4294-8155-9398501aee0f"]
}, Open  ]],
Cell[2814734, 49469, 419, 11, 30, "Input",ExpressionUUID->"1fda0fba-ae3a-4912-b326-37d07671a0a0"],
Cell[CellGroupData[{
Cell[2815178, 49484, 252, 4, 30, "Input",ExpressionUUID->"12633abb-0390-4569-92fc-51ed5927f086"],
Cell[2815433, 49490, 3924, 95, 366, "Output",ExpressionUUID->"578f494c-fcdc-48b7-83b1-9213ff026855"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2819394, 49590, 232, 4, 30, "Input",ExpressionUUID->"e56bc560-7f88-4c2b-8b42-14561fdded82"],
Cell[2819629, 49596, 30206, 640, 526, "Output",ExpressionUUID->"8e8beced-7871-43af-ae72-d9247be2de86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2849872, 50241, 263, 5, 30, "Input",ExpressionUUID->"42ddac25-9b8d-45ab-8da4-786e7e4f06b4"],
Cell[2850138, 50248, 2868, 57, 366, "Output",ExpressionUUID->"d1cf5f80-2bed-42ce-9d70-727798ef27ef"]
}, Open  ]],
Cell[2853021, 50308, 165, 3, 35, "Text",ExpressionUUID->"0b0502cb-d7e9-459b-ae9a-9702a2d9d7c8"],
Cell[CellGroupData[{
Cell[2853211, 50315, 246, 4, 30, "Input",ExpressionUUID->"85227841-1eca-4160-bc05-2f4ba4892f89"],
Cell[2853460, 50321, 2866, 57, 366, "Output",ExpressionUUID->"7574a553-eefb-4ad1-9408-e5872670853a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2856363, 50383, 175, 2, 30, "Input",ExpressionUUID->"bfa6df21-cd3a-41a5-b84e-a771eaa7ebca"],
Cell[2856541, 50387, 734, 19, 42, "Output",ExpressionUUID->"95670e06-fd06-40ab-ab6f-f67a530f5858"]
}, Open  ]],
Cell[2857290, 50409, 222, 5, 35, "Text",ExpressionUUID->"e3e2f9c0-df69-4a1b-9ea6-c3be09e73a5f"],
Cell[2857515, 50416, 218, 6, 58, "Text",ExpressionUUID->"681fe3ba-c232-4236-9677-40230b733457"],
Cell[CellGroupData[{
Cell[2857758, 50426, 704, 17, 157, "Input",ExpressionUUID->"97a40b6b-5731-4a8c-809d-5bd25a1de6ce"],
Cell[2858465, 50445, 478, 12, 34, "Output",ExpressionUUID->"44b58277-f016-431a-9845-9e2a6de84718"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2858980, 50462, 1037, 28, 157, "Input",ExpressionUUID->"dfaf4797-361a-4af4-9e63-1fc1119a9288"],
Cell[2860020, 50492, 7731, 147, 239, "Output",ExpressionUUID->"5a85ef47-c1cf-4c4a-ad78-978048beb892"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2867788, 50644, 175, 2, 30, "Input",ExpressionUUID->"a889932e-35d7-4659-a0b8-5b25a4983114"],
Cell[2867966, 50648, 731, 19, 42, "Output",ExpressionUUID->"7c1071bc-c849-4a69-bcea-422536e3a5fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2868734, 50672, 664, 18, 94, "Input",ExpressionUUID->"0c4f629f-ed39-48b9-8f38-df551adf9097"],
Cell[2869401, 50692, 270, 5, 376, "Output",ExpressionUUID->"dd50ce3f-14e6-4dcf-a08a-94b3f5432d1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2869708, 50702, 479, 13, 30, "Input",ExpressionUUID->"7f2159c8-29c6-4366-9d8a-a9a459cf6c59"],
Cell[2870190, 50717, 149, 2, 34, "Output",ExpressionUUID->"5c3679a1-06c8-41d8-bf82-65160b051e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2870376, 50724, 353, 9, 30, "Input",ExpressionUUID->"7ee0bb35-47d0-45f2-94da-90e9224757f4"],
Cell[2870732, 50735, 643, 19, 60, "Output",ExpressionUUID->"46d095f6-374c-4008-bda7-71aad553aa75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2871412, 50759, 344, 9, 30, "Input",ExpressionUUID->"642ea0dc-e978-4992-a7ad-341403685c94"],
Cell[2871759, 50770, 149, 2, 34, "Output",ExpressionUUID->"279c46cd-7ac1-4425-8af1-ed03314834ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2871945, 50777, 639, 14, 115, "Input",ExpressionUUID->"2d6986d9-4e50-47aa-93a8-9c549103eae7"],
Cell[2872587, 50793, 669, 22, 34, "Output",ExpressionUUID->"7d1087c9-b9c3-407e-be0c-b2fe2ecb4854"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2873293, 50820, 403, 9, 30, "Input",ExpressionUUID->"1bb533e2-192e-4e63-b4e3-ebfff11c93d1"],
Cell[2873699, 50831, 1680, 49, 49, "Output",ExpressionUUID->"05c6289f-2507-433e-b86e-2bb350bf110f"]
}, Open  ]],
Cell[2875394, 50883, 571, 13, 115, "Input",ExpressionUUID->"914bf128-ac72-42db-b359-e4db0e718845"],
Cell[2875968, 50898, 498, 10, 115, "Input",ExpressionUUID->"d414c3a0-8ae4-4f44-b80d-aee3d47b291a"],
Cell[CellGroupData[{
Cell[2876491, 50912, 263, 5, 30, "Input",ExpressionUUID->"3f1699e5-fab3-491a-95cc-89c92008bcff"],
Cell[2876757, 50919, 642, 19, 60, "Output",ExpressionUUID->"f90ccad2-a23a-404f-934f-38a50f99d8af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2877436, 50943, 235, 4, 30, "Input",ExpressionUUID->"e7f8b476-6a3e-4dce-aace-561e89da8aa0"],
Cell[2877674, 50949, 166, 3, 34, "Output",ExpressionUUID->"29f19918-1461-488a-bc64-a521bc8d9e02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2877877, 50957, 175, 2, 30, "Input",ExpressionUUID->"55eb0f81-91c1-40b3-be99-f67426a5b906"],
Cell[2878055, 50961, 734, 19, 42, "Output",ExpressionUUID->"6e958c8a-efad-455b-8c9c-4e368e3d347a"]
}, Open  ]],
Cell[2878804, 50983, 209, 3, 30, "Input",ExpressionUUID->"88b8d59b-a9fc-4b04-884d-262c5e069a0c"],
Cell[CellGroupData[{
Cell[2879038, 50990, 446, 12, 52, "Input",ExpressionUUID->"6519a0c8-c016-40b1-8c69-606af7b69ed8"],
Cell[2879487, 51004, 485, 15, 34, "Output",ExpressionUUID->"ef307da0-d5cf-46fd-9339-d7830fc0c5d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2880009, 51024, 392, 8, 73, "Input",ExpressionUUID->"0570c899-8df6-480f-ae2a-51d66d8ee5ae"],
Cell[2880404, 51034, 383, 8, 316, "Output",ExpressionUUID->"d1d3ae0c-ecb1-4c8c-8b87-d37404880b65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2880824, 51047, 382, 9, 52, "Input",ExpressionUUID->"9cb0c85b-fc44-470f-a69a-509c91a2d0a5"],
Cell[2881209, 51058, 149, 2, 34, "Output",ExpressionUUID->"7b1bf177-8e9e-440f-a44b-b63180d86cd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2881395, 51065, 552, 16, 30, "Input",ExpressionUUID->"f5507410-03ae-4382-9ac2-b5b92b3fd657"],
Cell[2881950, 51083, 166, 3, 34, "Output",ExpressionUUID->"7480b67f-119b-4086-b6f5-e3a78897c6b2"]
}, Open  ]],
Cell[2882131, 51089, 334, 8, 30, "Input",ExpressionUUID->"370a9243-09a8-44b7-8f7a-da80db57c256"],
Cell[CellGroupData[{
Cell[2882490, 51101, 405, 12, 30, "Input",ExpressionUUID->"75510601-b2e5-493c-906d-82c7400a23bc"],
Cell[2882898, 51115, 258, 6, 34, "Output",ExpressionUUID->"b113939d-2f35-4aac-a2fa-4408769f435d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2883193, 51126, 445, 11, 30, "Input",ExpressionUUID->"5d732d4f-c5f8-443a-9019-f6e9f7d2ccfc"],
Cell[2883641, 51139, 428, 10, 34, "Output",ExpressionUUID->"3e7851fe-0171-4e08-8dd9-8239e47cc55d"]
}, Open  ]],
Cell[2884084, 51152, 204, 6, 58, "Text",ExpressionUUID->"31a01a51-a44b-4a1c-8756-29fa41559fac"],
Cell[CellGroupData[{
Cell[2884313, 51162, 402, 10, 30, "Input",ExpressionUUID->"a7a58c97-7292-4d51-b24a-0b19cc4555e8"],
Cell[2884718, 51174, 13953, 299, 854, "Output",ExpressionUUID->"efb47737-ebb5-4b30-a818-2e931c4f71c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2898708, 51478, 238, 4, 30, "Input",ExpressionUUID->"aab4a54a-eac2-44c4-b03a-47c623cf68f4"],
Cell[2898949, 51484, 252, 5, 34, "Output",ExpressionUUID->"298cd311-bc26-4391-b829-72239e0d8870"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2899238, 51494, 483, 12, 73, "Input",ExpressionUUID->"e672719f-05ca-4339-8e16-1ab84f242c2e"],
Cell[2899724, 51508, 2101, 29, 560, "Output",ExpressionUUID->"61ef920b-1eb8-44f9-94b3-25324930405e"]
}, Open  ]],
Cell[2901840, 51540, 195, 3, 35, "Text",ExpressionUUID->"952aa609-1c95-436c-95dc-37faba553ff0"],
Cell[CellGroupData[{
Cell[2902060, 51547, 890, 21, 157, "Input",ExpressionUUID->"883da22e-ad0c-4e8d-ab61-2d0934f0dd0b"],
Cell[2902953, 51570, 443, 8, 319, "Output",ExpressionUUID->"a68294cd-d0e4-4aff-aebb-89cad10fdf6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2903433, 51583, 173, 2, 30, "Input",ExpressionUUID->"66dc04bc-f093-4f6b-a74a-f51310a1a3d3"],
Cell[2903609, 51587, 736, 19, 42, "Output",ExpressionUUID->"11c7a853-9e0a-4c8d-98fd-dee2d3c0831f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2904382, 51611, 692, 21, 30, "Input",ExpressionUUID->"db5231c7-ff14-441c-92b8-f50243f73409"],
Cell[2905077, 51634, 665, 21, 34, "Output",ExpressionUUID->"1ca28b74-e5d8-4897-bd25-ab082e2f6959"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2905779, 51660, 323, 7, 73, "Input",ExpressionUUID->"af5c12c5-f84c-4e94-a977-95af7ae83e51"],
Cell[2906105, 51669, 258, 6, 376, "Output",ExpressionUUID->"1d412f23-ca52-40b5-b9ab-dd8f9ad90877"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2906400, 51680, 175, 2, 30, "Input",ExpressionUUID->"00db3748-50f3-4e07-b76c-455bb8327143"],
Cell[2906578, 51684, 733, 19, 42, "Output",ExpressionUUID->"b7e3e182-20ed-47cb-bb57-2b66f89cedb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2907348, 51708, 1053, 25, 115, "Input",ExpressionUUID->"2226d4c5-7f9b-490d-b260-56a899e8aeb0"],
Cell[2908404, 51735, 542, 10, 376, "Output",ExpressionUUID->"9ac1a49f-9d94-42c3-a345-25e19306841d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2908983, 51750, 738, 22, 30, "Input",ExpressionUUID->"d5793b40-f820-4f73-9f85-5c3ba5e41414"],
Cell[2909724, 51774, 417, 12, 34, "Output",ExpressionUUID->"88d5e3dd-7eab-41dc-aa9a-cb8cc4582964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2910178, 51791, 203, 3, 30, "Input",ExpressionUUID->"762fef5f-06ba-4b01-aca6-873ad0d31e46"],
Cell[2910384, 51796, 684, 22, 76, "Output",ExpressionUUID->"5b0124e1-f212-4642-9410-bab16ab358c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2911105, 51823, 462, 13, 30, "Input",ExpressionUUID->"510f936f-af36-45b0-b999-3eff01a1a5fd"],
Cell[2911570, 51838, 275, 6, 34, "Output",ExpressionUUID->"05306ab4-cbfd-41fa-9a24-e4d4e373d65a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2911882, 51849, 198, 3, 30, "Input",ExpressionUUID->"557f3d6d-b876-4fbf-b694-c3671394779c"],
Cell[2912083, 51854, 150, 2, 34, "Output",ExpressionUUID->"c79bbc27-984c-4f4f-be86-cd1900d1e134"]
}, Open  ]],
Cell[2912248, 51859, 1708, 44, 283, "Input",ExpressionUUID->"ce2ee754-df43-40d6-a207-beaf6e60adef"],
Cell[CellGroupData[{
Cell[2913981, 51907, 468, 13, 30, "Input",ExpressionUUID->"b06fe8dd-7f53-49a2-bc86-cd6f00fd952e"],
Cell[2914452, 51922, 176, 2, 34, "Output",ExpressionUUID->"07134d84-e6d5-4e8c-901e-c3fd0d6a2d43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2914665, 51929, 241, 4, 30, "Input",ExpressionUUID->"9353885d-1018-45d3-90e3-c2b5f1374f05"],
Cell[2914909, 51935, 150, 2, 34, "Output",ExpressionUUID->"1d1e1182-e01f-4c10-8d20-7422fff48df5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2915096, 51942, 198, 3, 30, "Input",ExpressionUUID->"c3c92a73-0415-4c19-a584-be411a110c8f"],
Cell[2915297, 51947, 150, 2, 34, "Output",ExpressionUUID->"824fda70-3edb-4822-9e40-7850f86a8b04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2915484, 51954, 349, 9, 30, "Input",ExpressionUUID->"14183407-c269-4701-9929-2a3f7c8ed1b1"],
Cell[2915836, 51965, 150, 2, 34, "Output",ExpressionUUID->"3994ca20-76a8-4d0d-9ff5-a7095775b9e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2916023, 51972, 177, 2, 30, "Input",ExpressionUUID->"d6ddfb4a-66a2-4969-8be7-fbb50cf67e8b"],
Cell[2916203, 51976, 737, 19, 42, "Output",ExpressionUUID->"a92f3b6e-2665-477e-9363-ad01377658cc"]
}, Open  ]],
Cell[2916955, 51998, 154, 3, 35, "Text",ExpressionUUID->"d98e3b36-2234-427f-b7a3-7532edbe4a9b"],
Cell[CellGroupData[{
Cell[2917134, 52005, 1146, 25, 241, "Input",ExpressionUUID->"2567dcd5-b8f8-419c-ad8a-96e0491ea2c7"],
Cell[2918283, 52032, 867, 26, 34, "Output",ExpressionUUID->"76dbefdc-d855-4626-a640-464d0557a2e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2919187, 52063, 1099, 24, 283, "Input",ExpressionUUID->"8d943cbd-105a-45e7-baac-3440af780412"],
Cell[2920289, 52089, 1342, 37, 247, "Output",ExpressionUUID->"7ef94864-b852-4c91-81a2-52e3f1b4d9f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2921668, 52131, 1491, 35, 283, "Input",ExpressionUUID->"12dd5fec-0d15-45a2-81ab-a0156e4d2ae3"],
Cell[2923162, 52168, 3169, 71, 161, "Output",ExpressionUUID->"b0221ded-1d44-4735-b4f7-1e4f36a69cdd"]
}, Open  ]],
Cell[2926346, 52242, 257, 6, 35, "Text",ExpressionUUID->"0361e9a1-3403-425f-a65c-78fd27addff4"],
Cell[CellGroupData[{
Cell[2926628, 52252, 173, 2, 30, "Input",ExpressionUUID->"3c51271c-8b53-4c2d-8efd-0f1e313fc1f6"],
Cell[2926804, 52256, 734, 19, 42, "Output",ExpressionUUID->"897adf7a-f123-41f7-9640-fece853c705f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2927575, 52280, 581, 12, 157, "Input",ExpressionUUID->"3de2a615-c3eb-4982-b309-f5912abf9a3a"],
Cell[2928159, 52294, 427, 10, 34, "Output",ExpressionUUID->"7a4957d8-c4c1-455d-9843-34775addcc78"]
}, Open  ]],
Cell[2928601, 52307, 630, 17, 94, "Input",ExpressionUUID->"11240638-0fdc-46ec-905a-e2c8a89f3473"],
Cell[CellGroupData[{
Cell[2929256, 52328, 203, 3, 30, "Input",ExpressionUUID->"26b20bbb-8ac3-43b4-981e-7345349c15fd"],
Cell[2929462, 52333, 151, 2, 34, "Output",ExpressionUUID->"2b8551da-8b00-4d07-ac38-aa7a43956680"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2929650, 52340, 173, 2, 30, "Input",ExpressionUUID->"f4d4d20f-d720-43a1-a93f-8c739f96d8c8"],
Cell[2929826, 52344, 735, 19, 42, "Output",ExpressionUUID->"5a6bdd27-539f-452f-8108-d523bec8ee42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2930598, 52368, 900, 25, 52, "Input",ExpressionUUID->"e6364b07-0de7-4770-bb88-720b01797e1c"],
Cell[2931501, 52395, 594, 17, 34, "Output",ExpressionUUID->"52169bc5-3137-41dc-90ad-84b56627bdff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2932132, 52417, 202, 3, 30, "Input",ExpressionUUID->"b373f40c-90d9-4b3f-9691-eb7e804912a5"],
Cell[2932337, 52422, 853, 27, 76, "Output",ExpressionUUID->"c1711f94-5d1b-4d1b-a2de-73dda14afd86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2933227, 52454, 235, 4, 30, "Input",ExpressionUUID->"d9505df3-e3e7-425b-b2a9-a7d707e9dd67"],
Cell[2933465, 52460, 205, 3, 34, "Output",ExpressionUUID->"f6014e5e-1cdf-447e-ba18-5c3fa1c90f4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2933707, 52468, 484, 13, 30, "Input",ExpressionUUID->"1def4507-93d7-45fc-86dc-020c572842c1"],
Cell[2934194, 52483, 173, 2, 34, "Output",ExpressionUUID->"f68b8067-df51-4bd3-9a83-08a9953472c8"]
}, Open  ]],
Cell[2934382, 52488, 286, 6, 58, "Text",ExpressionUUID->"e99e8c28-cf89-4218-8512-cb2794efda39"],
Cell[CellGroupData[{
Cell[2934693, 52498, 448, 8, 136, "Input",ExpressionUUID->"8b19b65d-f3b4-4ed5-9122-6608b3bca685"],
Cell[2935144, 52508, 406, 10, 34, "Output",ExpressionUUID->"05398f2f-a83a-42f5-87a9-6c654f1c951f"]
}, Open  ]],
Cell[2935565, 52521, 194, 3, 30, "Input",ExpressionUUID->"0d23ea6f-7e73-4dc0-b212-89f267777b24"],
Cell[2935762, 52526, 151, 2, 30, "Input",ExpressionUUID->"512c10ef-62b4-46f7-ae0e-093d3a827623"],
Cell[2935916, 52530, 215, 4, 35, "Text",ExpressionUUID->"713a7a79-f7a3-4960-b2aa-d9cdc6fba30e"],
Cell[CellGroupData[{
Cell[2936156, 52538, 188, 3, 30, "Input",ExpressionUUID->"e0c85329-dc0f-48d9-af61-6bc568e64ebe"],
Cell[2936347, 52543, 153, 2, 34, "Output",ExpressionUUID->"29eb417b-9703-4838-ac99-d4d0fa35f2a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2936537, 52550, 241, 4, 30, "Input",ExpressionUUID->"9cf8206e-ed01-4fb0-b004-5cf7e13ed066"],
Cell[2936781, 52556, 2093, 52, 98, "Output",ExpressionUUID->"2f6d63ae-360d-4165-bfbe-b243f9c08cb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2938911, 52613, 198, 3, 30, "Input",ExpressionUUID->"a8ad082e-1e19-4088-bc5d-c12ccdcf559c"],
Cell[2939112, 52618, 151, 2, 34, "Output",ExpressionUUID->"fe3f3337-3076-428c-aa42-222874b937e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2939300, 52625, 191, 3, 30, "Input",ExpressionUUID->"f517d450-46d3-44ef-bc4c-9c4d1622a421"],
Cell[2939494, 52630, 150, 2, 34, "Output",ExpressionUUID->"c7f658cf-05ea-4da7-9174-ceb3bdbd29a5"]
}, Open  ]],
Cell[2939659, 52635, 605, 13, 115, "Input",ExpressionUUID->"f2d47204-28ae-4c8e-8b7e-675cc1c737af"],
Cell[CellGroupData[{
Cell[2940289, 52652, 374, 11, 30, "Input",ExpressionUUID->"af007f62-916c-4fa0-b799-ec98f73746d0"],
Cell[2940666, 52665, 379, 10, 34, "Output",ExpressionUUID->"3102ce7d-c36d-4a37-a5bd-6f8bf44e3699"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2941082, 52680, 203, 3, 30, "Input",ExpressionUUID->"cc3d16db-3749-4f91-98e5-80f71372a710"],
Cell[2941288, 52685, 170, 3, 34, "Output",ExpressionUUID->"5b9a44fe-954c-45c4-82df-ebffcc6a8897"]
}, Open  ]],
Cell[2941473, 52691, 410, 15, 265, "Text",ExpressionUUID->"2df5d117-db5e-413a-adab-78af4dca3ce2"],
Cell[CellGroupData[{
Cell[2941908, 52710, 176, 2, 30, "Input",ExpressionUUID->"a344945d-0415-49b5-ba8a-55153c2f2e7f"],
Cell[2942087, 52714, 731, 19, 42, "Output",ExpressionUUID->"a030bafb-19b1-4d87-a5c5-468adfd289fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2942855, 52738, 547, 14, 30, "Input",ExpressionUUID->"efea6e38-f125-425b-a7fb-e20f6350a2cb"],
Cell[2943405, 52754, 697, 20, 76, "Output",ExpressionUUID->"6c748470-7c22-4485-bc18-31a66b4cf033"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2944139, 52779, 780, 20, 61, "Input",ExpressionUUID->"9bc0ac9a-6913-48fe-a6ed-0ec4e82cfe3d"],
Cell[2944922, 52801, 600, 15, 34, "Output",ExpressionUUID->"6e267e1c-b4d4-4813-aef3-647d9c5d0e34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2945559, 52821, 203, 3, 30, "Input",ExpressionUUID->"405ae651-64e6-4ca1-965e-771970656d11"],
Cell[2945765, 52826, 809, 25, 76, "Output",ExpressionUUID->"4b943af4-3cad-445e-9478-87584a13a6ac"]
}, Open  ]],
Cell[2946589, 52854, 445, 11, 30, "Input",ExpressionUUID->"34db185a-e4fc-4a12-a319-50dfe7753a60"],
Cell[CellGroupData[{
Cell[2947059, 52869, 1050, 32, 61, "Input",ExpressionUUID->"ecd5bcb4-ca53-45e7-b6b1-c68c5411dee8"],
Cell[2948112, 52903, 407, 10, 34, "Output",ExpressionUUID->"addf03b9-6e96-4c15-8044-7f0ae5ff17ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2948556, 52918, 707, 19, 61, "Input",ExpressionUUID->"c7de6337-4424-41e7-82ac-91754ba7622c"],
Cell[2949266, 52939, 488, 15, 34, "Output",ExpressionUUID->"3ee18e99-756d-4352-bd94-c10744f6bb7c"]
}, Open  ]],
Cell[2949769, 52957, 638, 12, 73, "Input",ExpressionUUID->"9121a63b-39cb-4f9e-8277-4ef459b2bcf9"],
Cell[CellGroupData[{
Cell[2950432, 52973, 173, 2, 30, "Input",ExpressionUUID->"58e13c61-d8ce-4bf0-b1f9-d99faeac5671"],
Cell[2950608, 52977, 757, 19, 42, "Output",ExpressionUUID->"a8914b1d-d854-4e58-b8c5-c6cc7f604ad9"]
}, Open  ]],
Cell[2951380, 52999, 466, 11, 30, "Input",ExpressionUUID->"b5724b6d-9967-4cae-920a-b3de8e61d6e7"],
Cell[CellGroupData[{
Cell[2951871, 53014, 208, 3, 30, "Input",ExpressionUUID->"134848df-0a7d-495e-adeb-17fef912dd7a"],
Cell[2952082, 53019, 177, 2, 34, "Output",ExpressionUUID->"d2af6f98-e27b-4374-9078-179e41f76010"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2952296, 53026, 187, 3, 30, "Input",ExpressionUUID->"c6dddb7a-784c-4eb2-9575-ca8eec18888f"],
Cell[2952486, 53031, 153, 2, 34, "Output",ExpressionUUID->"ccd35492-c134-4284-afe2-0694bd0b5a37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2952676, 53038, 233, 4, 30, "Input",ExpressionUUID->"2130dd9a-d31b-435f-9c36-3cdb0d0b8bfa"],
Cell[2952912, 53044, 380, 10, 34, "Output",ExpressionUUID->"945fc0a5-b0df-4b17-906e-cb655e3cccf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2953329, 53059, 208, 3, 30, "Input",ExpressionUUID->"cb292b7d-4fcc-44b5-ab63-e2986d416d61"],
Cell[2953540, 53064, 685, 22, 51, "Output",ExpressionUUID->"95c06bd6-99b0-42dd-a621-7092c899618b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2954262, 53091, 436, 11, 30, "Input",ExpressionUUID->"b7553135-2a3f-4c98-9f89-0f9b6deebaa6"],
Cell[2954701, 53104, 167, 3, 34, "Output",ExpressionUUID->"6ca60649-ea89-4123-8a3f-05a6eab12968"]
}, Open  ]],
Cell[2954883, 53110, 248, 6, 35, "Text",ExpressionUUID->"f2d548f3-825b-451f-a74a-ff59fdb5fa67"],
Cell[CellGroupData[{
Cell[2955156, 53120, 426, 9, 94, "Input",ExpressionUUID->"48aca538-d39a-4a21-921f-ce32ae6fc2ce"],
Cell[2955585, 53131, 686, 13, 24, "Message",ExpressionUUID->"f38aaee0-be3f-48b5-b5ed-ea55237a658c"],
Cell[2956274, 53146, 686, 13, 24, "Message",ExpressionUUID->"9b8af655-5e73-4097-8cf5-6520109b4e33"],
Cell[2956963, 53161, 686, 13, 24, "Message",ExpressionUUID->"3adb4e83-2e03-4234-83f5-1ea43b053f0a"],
Cell[2957652, 53176, 451, 10, 24, "Message",ExpressionUUID->"459e0b39-c4a1-481b-8050-835552194fa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2958140, 53191, 579, 11, 94, "Input",ExpressionUUID->"20cdb9a5-8341-4484-b253-4c0e9750df62"],
Cell[2958722, 53204, 11664, 307, 205, "Output",ExpressionUUID->"47135561-77ff-4536-b92a-385e9f67334c"]
}, Open  ]],
Cell[2970401, 53514, 272, 6, 35, "Text",ExpressionUUID->"4abbe2ea-5149-47be-8650-5c6394c4d6ab"],
Cell[CellGroupData[{
Cell[2970698, 53524, 175, 2, 30, "Input",ExpressionUUID->"b5e94f1d-7571-483c-aa32-b20233c5d598"],
Cell[2970876, 53528, 734, 19, 42, "Output",ExpressionUUID->"01a2d421-a529-4156-aebc-c19fc77142fa"]
}, Open  ]],
Cell[2971625, 53550, 466, 11, 30, "Input",ExpressionUUID->"ad68a260-5573-47c5-8db9-23bafc380522"],
Cell[2972094, 53563, 541, 13, 150, "Text",ExpressionUUID->"2ea12ba5-4d2c-46fa-a9b7-4c3223f870d6"],
Cell[CellGroupData[{
Cell[2972660, 53580, 2445, 63, 157, "Input",ExpressionUUID->"4719cf57-6992-4ebf-ad44-12fb823973df"],
Cell[2975108, 53645, 2314, 70, 98, "Output",ExpressionUUID->"ed8e72c6-8505-46d1-86f9-5daa77515385"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2977459, 53720, 203, 3, 30, "Input",ExpressionUUID->"58e86323-69d4-4459-b269-f7efcb1edfe5"],
Cell[2977665, 53725, 4397, 132, 65, "Output",ExpressionUUID->"e30fbc6c-1436-48f8-a26b-07a261b9c208"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2982099, 53862, 276, 6, 30, "Input",ExpressionUUID->"6598fafa-8aeb-452d-b456-489e9bd6ba8a"],
Cell[2982378, 53870, 375, 9, 34, "Output",ExpressionUUID->"2525ebde-36e8-4e90-8dc6-8428f2f25ea7"]
}, Open  ]],
Cell[2982768, 53882, 226, 5, 35, "Text",ExpressionUUID->"d4690580-0022-4e52-abc0-25defe8b410b"],
Cell[2982997, 53889, 2251, 60, 136, "Input",ExpressionUUID->"ef9e99d3-9026-4293-aa46-c3ccdd6b312d"],
Cell[CellGroupData[{
Cell[2985273, 53953, 495, 12, 30, "Input",ExpressionUUID->"36326917-2f67-4cb2-8bf2-f8783986c97e"],
Cell[2985771, 53967, 179, 2, 34, "Output",ExpressionUUID->"6ef5dabd-c727-4898-9537-86ed05df1d3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2985987, 53974, 446, 11, 30, "Input",ExpressionUUID->"4cb946d1-8d1e-435f-9603-35bc337012a0"],
Cell[2986436, 53987, 154, 2, 34, "Output",ExpressionUUID->"78e19d89-b10d-465c-959e-d391cf5bc625"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2986627, 53994, 360, 7, 94, "Input",ExpressionUUID->"ed6437a0-8b41-45a0-b69d-dce26207055b"],
Cell[2986990, 54003, 2264, 68, 98, "Output",ExpressionUUID->"b7eaa5f4-9d56-4490-b084-dac84443e1c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2989291, 54076, 175, 2, 30, "Input",ExpressionUUID->"b881f92a-508d-44ef-9c95-93dcfee64224"],
Cell[2989469, 54080, 734, 19, 42, "Output",ExpressionUUID->"45379dc8-6e20-4182-8579-ceece11270bd"]
}, Open  ]],
Cell[2990218, 54102, 919, 25, 136, "Input",ExpressionUUID->"957d26de-cd88-4242-ab55-df2a24abdcee"],
Cell[CellGroupData[{
Cell[2991162, 54131, 265, 5, 30, "Input",ExpressionUUID->"7047f4f9-e19c-4a67-9c9b-0c23df41c1f8"],
Cell[2991430, 54138, 465, 14, 34, "Output",ExpressionUUID->"fbcb8b49-921a-4c64-968d-bdecf74609e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2991932, 54157, 204, 3, 30, "Input",ExpressionUUID->"1b97dcda-27c3-4c79-bfd4-e245c87062a2"],
Cell[2992139, 54162, 742, 24, 76, "Output",ExpressionUUID->"960d617e-31eb-40bc-82bd-938845abc195"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2992918, 54191, 236, 4, 30, "Input",ExpressionUUID->"c51077c1-da5b-4172-a057-7f0151abecdc"],
Cell[2993157, 54197, 176, 2, 34, "Output",ExpressionUUID->"84507231-4018-4c7c-b78c-bb0aa2bd743b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2993370, 54204, 268, 5, 30, "Input",ExpressionUUID->"f7d1e789-2b70-471f-8538-48d57e6f6854"],
Cell[2993641, 54211, 462, 12, 34, "Output",ExpressionUUID->"39db7efc-35bb-48e6-aa61-8230b1fd74d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2994140, 54228, 203, 3, 30, "Input",ExpressionUUID->"b3af180c-9096-4e51-896c-e08b61f437bd"],
Cell[2994346, 54233, 751, 22, 76, "Output",ExpressionUUID->"54617198-8ccc-4e31-9c65-070f4488c53c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2995134, 54260, 206, 3, 30, "Input",ExpressionUUID->"b91a1cfe-6bb6-426f-9fa7-3458e27862f9"],
Cell[2995343, 54265, 176, 2, 34, "Output",ExpressionUUID->"6e13ff42-e720-4e8d-993f-17d58dfaa727"]
}, Open  ]],
Cell[2995534, 54270, 378, 7, 58, "Text",ExpressionUUID->"8eff699f-78e1-404b-a4f1-fe9730c1b5f9"],
Cell[CellGroupData[{
Cell[2995937, 54281, 1767, 43, 283, "Input",ExpressionUUID->"c5c72d12-f076-4103-995f-7cc9efe7c720"],
Cell[2997707, 54326, 2808, 80, 119, "Output",ExpressionUUID->"ddf837f9-1c6d-4099-a37a-cfc63ab5b98c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3000552, 54411, 266, 5, 30, "Input",ExpressionUUID->"a0842a10-8f18-44b4-85dc-97adeb22d180"],
Cell[3000821, 54418, 380, 10, 34, "Output",ExpressionUUID->"650f6bbc-95c2-4cb3-9233-19cfb98ca0f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3001238, 54433, 268, 5, 30, "Input",ExpressionUUID->"d189df9b-9371-4889-92b0-ee97324df5eb"],
Cell[3001509, 54440, 384, 10, 34, "Output",ExpressionUUID->"0749a4ec-7b9f-4759-8c3e-183a797d64cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3001930, 54455, 410, 9, 94, "Input",ExpressionUUID->"e2cdf6ba-9cae-41ca-8e82-4da68cb4bd20"],
Cell[3002343, 54466, 20379, 612, 413, "Output",ExpressionUUID->"1569b22e-f6c0-43eb-85fb-0909de937f62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3022759, 55083, 399, 9, 94, "Input",ExpressionUUID->"f7827b36-b7e0-427a-a74a-57387dfd8a63"],
Cell[3023161, 55094, 1373, 42, 77, "Output",ExpressionUUID->"cc0acff1-97f7-4d01-9f92-eacea1036973"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3024571, 55141, 175, 2, 30, "Input",ExpressionUUID->"409ac648-5f3d-488b-9ea4-6e405a7c90a8"],
Cell[3024749, 55145, 734, 19, 42, "Output",ExpressionUUID->"7d55d3c3-5abb-4109-b286-71c1ac4d63bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3025520, 55169, 265, 5, 30, "Input",ExpressionUUID->"8478072a-d5b9-4e53-9f24-adc931339be1"],
Cell[3025788, 55176, 386, 10, 34, "Output",ExpressionUUID->"06f67d65-fa00-41d3-a9ac-a7e92a2a3eb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3026211, 55191, 202, 3, 30, "Input",ExpressionUUID->"a58db042-47af-4f59-8e36-cf17f3503828"],
Cell[3026416, 55196, 654, 20, 76, "Output",ExpressionUUID->"e406b649-047f-402c-bcb8-c66e545d33c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3027107, 55221, 177, 2, 30, "Input",ExpressionUUID->"58091285-9775-44d4-8a33-3779d4ce577d"],
Cell[3027287, 55225, 734, 19, 42, "Output",ExpressionUUID->"eb99d0e4-6fd1-4139-9b3c-2354e3e2b2a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3028058, 55249, 1228, 29, 241, "Input",ExpressionUUID->"320afb0d-7619-4d3a-a7d3-e278006e0a99"],
Cell[3029289, 55280, 145516, 3785, 581, "Output",ExpressionUUID->"26eff1b5-8ea8-4be7-ad83-e09adc857ef9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3174842, 59070, 174, 2, 30, "Input",ExpressionUUID->"41876f2b-e559-4568-85d3-f9a27400bd8f"],
Cell[3175019, 59074, 737, 19, 42, "Output",ExpressionUUID->"a6998f15-b186-48b2-89b3-aa78d0728752"]
}, Open  ]],
Cell[3175771, 59096, 1287, 32, 157, "Input",ExpressionUUID->"54c624ca-403c-43e5-9830-c387640bd207"],
Cell[3177061, 59130, 280, 6, 58, "Text",ExpressionUUID->"e55151b9-00b0-44aa-81a6-dd166683494f"],
Cell[3177344, 59138, 3447, 91, 283, "Input",ExpressionUUID->"94f23ab4-8cd8-4880-82f3-44a38b5875fb"],
Cell[CellGroupData[{
Cell[3180816, 59233, 240, 4, 30, "Input",ExpressionUUID->"3140f78a-4531-46c4-aa81-d3bde647e529"],
Cell[3181059, 59239, 5528, 142, 34, "Output",ExpressionUUID->"828a61c7-34ba-4886-93e3-82516a5cc20a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3186624, 59386, 325, 6, 30, "Input",ExpressionUUID->"2fcf6ab5-366c-4f00-ae0c-8b560c911f8b"],
Cell[3186952, 59394, 289, 4, 34, "Output",ExpressionUUID->"c9896cae-358c-4882-a3a4-738d4da67a69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3187278, 59403, 425, 10, 30, "Input",ExpressionUUID->"5c1e29ed-4396-40c7-a507-744311b1037f"],
Cell[3187706, 59415, 325, 8, 34, "Output",ExpressionUUID->"57883f3c-4991-4354-bf1d-6dc39378a30d"]
}, Open  ]],
Cell[3188046, 59426, 252, 6, 35, "Text",ExpressionUUID->"553595e4-f2d4-4da0-a9fc-1eb79954b0aa"],
Cell[3188301, 59434, 932, 23, 94, "Input",ExpressionUUID->"7b25fdc9-f051-4072-8f6d-aa1c27c1f1b9"],
Cell[CellGroupData[{
Cell[3189258, 59461, 230, 4, 30, "Input",ExpressionUUID->"b2d25a51-ab2c-4325-825f-234d88994951"],
Cell[3189491, 59467, 5565, 143, 34, "Output",ExpressionUUID->"df8987b3-06e4-464c-b64d-cb7fb9509f2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3195093, 59615, 205, 3, 30, "Input",ExpressionUUID->"b0483e08-12fd-446d-bf86-4ab75e298dac"],
Cell[3195301, 59620, 173, 2, 34, "Output",ExpressionUUID->"fc2c71f1-8812-443b-be17-674f0ca7e13c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3195511, 59627, 627, 15, 52, "Input",ExpressionUUID->"e8a4d079-9530-4119-8f8f-31818566906e"],
Cell[3196141, 59644, 196, 3, 34, "Output",ExpressionUUID->"59027de8-85d8-4224-9a13-66932535587d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3196374, 59652, 175, 2, 30, "Input",ExpressionUUID->"43a092db-03e2-4306-bc24-3070ddf63eba"],
Cell[3196552, 59656, 735, 19, 42, "Output",ExpressionUUID->"92e98663-d79a-419d-b6b4-07b74f9e2604"]
}, Open  ]],
Cell[3197302, 59678, 164, 3, 35, "Text",ExpressionUUID->"88dbce3a-2840-4cc5-ad96-74baab57c55a"],
Cell[CellGroupData[{
Cell[3197491, 59685, 568, 12, 52, "Input",ExpressionUUID->"56da49c8-2c17-4fd3-b48f-067c814a85c4"],
Cell[3198062, 59699, 199, 3, 34, "Output",ExpressionUUID->"3472586d-95cc-4c90-b974-9a1fe6fa83e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3198298, 59707, 280, 5, 30, "Input",ExpressionUUID->"2e297184-cc77-4298-9740-90ef5713261a"],
Cell[3198581, 59714, 201, 3, 34, "Output",ExpressionUUID->"abebca4e-6095-4220-af22-eb2e705a4e84"]
}, Open  ]],
Cell[3198797, 59720, 334, 10, 150, "Text",ExpressionUUID->"2936c65b-0131-47a6-b956-e7d274daf6e9"],
Cell[CellGroupData[{
Cell[3199156, 59734, 345, 7, 30, "Input",ExpressionUUID->"db6d6cef-7001-407c-b288-84f30328dfa8"],
Cell[3199504, 59743, 1142, 22, 376, "Output",ExpressionUUID->"3fd0efd0-4c48-4879-9b36-4b1c4d0fabe9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3200683, 59770, 228, 4, 30, "Input",ExpressionUUID->"dc46233f-5aa3-47d9-91a3-24a04b872691"],
Cell[3200914, 59776, 149, 2, 34, "Output",ExpressionUUID->"e77f727a-ee75-4d92-8c1f-4967e538fd27"]
}, Open  ]],
Cell[3201078, 59781, 597, 13, 173, "Text",ExpressionUUID->"141151e4-487c-4a81-a0be-e52e07d9643e"],
Cell[3201678, 59796, 890, 17, 262, "Input",ExpressionUUID->"85afd955-4b8d-4308-969a-f6d169191bbc"],
Cell[3202571, 59815, 349, 10, 30, "Input",ExpressionUUID->"ac1c27fa-67f7-4a85-bf78-6428126847be"],
Cell[CellGroupData[{
Cell[3202945, 59829, 173, 2, 30, "Input",ExpressionUUID->"30d48a09-cf43-4dd7-92ab-524d9d1e5ac9"],
Cell[3203121, 59833, 735, 19, 42, "Output",ExpressionUUID->"0a4b83b5-6de2-4a32-bf0a-300a718bf717"]
}, Open  ]],
Cell[3203871, 59855, 302, 6, 58, "Text",ExpressionUUID->"3798b1aa-3d4c-422f-aa87-669ee11c1a7e"],
Cell[3204176, 59863, 5453, 130, 724, "Input",ExpressionUUID->"8f617d43-13ed-4644-890a-a24f93b3e875"],
Cell[CellGroupData[{
Cell[3209654, 59997, 491, 12, 30, "Input",ExpressionUUID->"d60baeb3-dd29-4739-b39d-85958a3a1b9e"],
Cell[3210148, 60011, 1880, 48, 34, "Output",ExpressionUUID->"23a6d20a-23c3-45ef-bb42-4df6aaec1559"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3212065, 60064, 288, 5, 30, "Input",ExpressionUUID->"66c274f1-ab1d-49bf-9505-3d045def18c6"],
Cell[3212356, 60071, 3742, 96, 34, "Output",ExpressionUUID->"7cc22c04-8d39-4898-a751-4d6f63463b92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3216135, 60172, 343, 6, 30, "Input",ExpressionUUID->"a5789041-f4ee-4e72-b6a9-d836bf8ef513"],
Cell[3216481, 60180, 1449, 30, 93, "Output",ExpressionUUID->"745442cd-fdea-4fd5-a9a4-779f4ad8a32a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3217967, 60215, 230, 4, 30, "Input",ExpressionUUID->"2a9fa0e7-1766-4466-937d-64cb8347a6d7"],
Cell[3218200, 60221, 151, 2, 34, "Output",ExpressionUUID->"9ab630bc-0791-4142-b17e-f085a839e464"]
}, Open  ]],
Cell[3218366, 60226, 196, 3, 35, "Text",ExpressionUUID->"1700ae73-d37c-495b-9576-b631a023b748"],
Cell[3218565, 60231, 2965, 73, 388, "Input",ExpressionUUID->"718bebe4-eb7c-4c9b-8a54-1eb2d9ced767"],
Cell[CellGroupData[{
Cell[3221555, 60308, 578, 14, 52, "Input",ExpressionUUID->"e43744b9-788d-4fc9-9d0d-a9478de519b7"],
Cell[3222136, 60324, 17454, 446, 77, "Output",ExpressionUUID->"aa17e0a5-a7f8-4bfd-a5f5-1e034edd834c"]
}, Open  ]],
Cell[3239605, 60773, 276, 6, 35, "Text",ExpressionUUID->"af074a93-d5d8-477c-b691-504389d17d32"],
Cell[3239884, 60781, 381, 10, 30, "Input",ExpressionUUID->"17d452fb-01da-4793-ab53-9d8047b8a8d3"],
Cell[CellGroupData[{
Cell[3240290, 60795, 847, 20, 115, "Input",ExpressionUUID->"a63d6c29-36dc-449e-872a-7f1c7ea1cc6a"],
Cell[3241140, 60817, 63359, 1081, 268, "Output",ExpressionUUID->"d0482879-4715-45b6-a055-8fe7baf38d06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3304536, 61903, 172, 2, 30, "Input",ExpressionUUID->"26fbe861-41a0-4417-ae74-32948e30e261"],
Cell[3304711, 61907, 735, 19, 42, "Output",ExpressionUUID->"0a482665-a820-4c3b-93fd-b584985a4f4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3305483, 61931, 232, 4, 30, "Input",ExpressionUUID->"127cd4f5-ebfe-47e1-a8ab-4b31a17b9863"],
Cell[3305718, 61937, 5536, 142, 34, "Output",ExpressionUUID->"d249b50b-1002-48e4-be96-b228100d2752"]
}, Open  ]],
Cell[3311269, 62082, 163, 3, 35, "Text",ExpressionUUID->"9e3f88a8-bf5d-4a1f-9289-c43ceaf4da2f"],
Cell[3311435, 62087, 987, 25, 94, "Input",ExpressionUUID->"6cfc14b0-a142-4e27-a9e6-8b4fa24408fb"],
Cell[CellGroupData[{
Cell[3312447, 62116, 549, 13, 94, "Input",ExpressionUUID->"a91162ca-d22e-4b67-b8fc-28a4fcc3a737"],
Cell[3312999, 62131, 16209, 416, 119, "Output",ExpressionUUID->"44362384-91e3-4b04-bb4e-99775866d3da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3329245, 62552, 262, 5, 30, "Input",ExpressionUUID->"6185bea5-1452-4f70-a885-85f48aae4321"],
Cell[3329510, 62559, 3969, 83, 95, "Output",ExpressionUUID->"70114eae-a35e-4b39-9eda-eb33ab2d0d4a"]
}, Open  ]],
Cell[3333494, 62645, 389, 8, 58, "Text",ExpressionUUID->"29c6370f-ccea-4b9b-8bec-cd2cad84565a"],
Cell[3333886, 62655, 544, 13, 94, "Input",ExpressionUUID->"796e96e4-744a-497d-989d-f760e10f2634"],
Cell[CellGroupData[{
Cell[3334455, 62672, 209, 3, 30, "Input",ExpressionUUID->"58fb1a33-7bd8-443d-9ce7-8b4cbc3c4bf9"],
Cell[3334667, 62677, 203, 3, 34, "Output",ExpressionUUID->"0f3e887d-f687-4f5b-9a94-d551019a10dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3334907, 62685, 257, 5, 30, "Input",ExpressionUUID->"431648c2-5935-43d1-94b2-020a2d5bf65d"],
Cell[3335167, 62692, 153, 2, 34, "Output",ExpressionUUID->"177b19bf-3d36-43f4-976b-5c68f92ce139"]
}, Open  ]],
Cell[3335335, 62697, 271, 6, 58, "Text",ExpressionUUID->"1b25ba9c-172e-4f48-b24d-598305436e84"],
Cell[CellGroupData[{
Cell[3335631, 62707, 685, 15, 115, "Input",ExpressionUUID->"0410a910-3304-4644-b2f0-239d0a835f8f"],
Cell[3336319, 62724, 41032, 932, 207, "Output",ExpressionUUID->"0a2cf0c4-3c15-4889-a595-a1530b01bb9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3377388, 63661, 602, 13, 136, "Input",ExpressionUUID->"fae4b3a2-8e0b-4c57-beae-b82c4a1ced4f"],
Cell[3377993, 63676, 198, 3, 34, "Output",ExpressionUUID->"22026932-ebc1-494b-b3a9-8dccf5cc4963"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3378228, 63684, 173, 2, 30, "Input",ExpressionUUID->"2c1ab945-31ee-42c6-a21f-b1297c875ada"],
Cell[3378404, 63688, 732, 19, 42, "Output",ExpressionUUID->"a5395299-838b-478d-bc18-ee6fcddcf404"]
}, Open  ]],
Cell[3379151, 63710, 1303, 30, 199, "Input",ExpressionUUID->"ec13f87c-92a4-4442-b61f-3c239d74bc64"],
Cell[CellGroupData[{
Cell[3380479, 63744, 234, 4, 30, "Input",ExpressionUUID->"a3cbd5a3-f956-46b8-9d29-d8323a2624d3"],
Cell[3380716, 63750, 5586, 145, 34, "Output",ExpressionUUID->"41c9f499-1279-4ed6-a3f9-111a15db607a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3386339, 63900, 276, 6, 30, "Input",ExpressionUUID->"2c654f84-9b9f-49e2-a3a0-479fc0d42218"],
Cell[3386618, 63908, 151, 2, 34, "Output",ExpressionUUID->"751c76e1-3b00-4fd3-9331-4a6c43a82d3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3386806, 63915, 232, 4, 30, "Input",ExpressionUUID->"fac85b60-72d1-4d16-ae2e-bdbd4d70add9"],
Cell[3387041, 63921, 5558, 145, 34, "Output",ExpressionUUID->"29751ba7-c0f1-448e-8ee4-93b49311610a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3392636, 64071, 278, 6, 30, "Input",ExpressionUUID->"9b10954b-c687-4a91-ac22-20ea4c9afda5"],
Cell[3392917, 64079, 149, 2, 34, "Output",ExpressionUUID->"cd8b1066-6b13-4625-8779-e415acabb94e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3393103, 64086, 278, 6, 30, "Input",ExpressionUUID->"652524e2-28fa-419e-839e-afe68b3f594f"],
Cell[3393384, 64094, 151, 2, 34, "Output",ExpressionUUID->"89e6d06a-d827-46ff-a991-53b3283e65ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3393572, 64101, 264, 5, 30, "Input",ExpressionUUID->"796c74e1-674e-49db-8a99-a96fdd1c6565"],
Cell[3393839, 64108, 24427, 407, 95, "Output",ExpressionUUID->"a4a2c97d-2b58-4121-86d4-5629a5a0595f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3418303, 64520, 278, 6, 30, "Input",ExpressionUUID->"d9499dea-ce5b-4bfd-bee3-909d70424d1e"],
Cell[3418584, 64528, 149, 2, 34, "Output",ExpressionUUID->"700170a2-cd08-48dc-a68d-82ee4bf4bef3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3418770, 64535, 261, 5, 30, "Input",ExpressionUUID->"2240392b-e2ef-4591-a80a-b15ce6f6b98c"],
Cell[3419034, 64542, 37041, 599, 95, "Output",ExpressionUUID->"0af6d462-1a25-4970-bb67-dd044579e83b"]
}, Open  ]],
Cell[3456090, 65144, 222, 4, 35, "Text",ExpressionUUID->"c42d62a7-c8b6-404f-90d1-d42084ae5e10"],
Cell[3456315, 65150, 453, 10, 94, "Input",ExpressionUUID->"871c9eaf-1874-4211-8fb7-1b16b71ee9e3"],
Cell[CellGroupData[{
Cell[3456793, 65164, 5793, 149, 52, "Input",ExpressionUUID->"77b21e1c-48b4-4dbc-b2f8-46986801cf22"],
Cell[3462589, 65315, 10886, 201, 95, "Output",ExpressionUUID->"24e1651f-e7f9-41c4-8533-349e30b58da8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3473512, 65521, 678, 15, 157, "Input",ExpressionUUID->"0c6cc429-592a-4a36-8839-3ff308a8f149"],
Cell[3474193, 65538, 248, 4, 34, "Output",ExpressionUUID->"662a6655-d110-401e-98d4-328cb2121f59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3474478, 65547, 174, 2, 30, "Input",ExpressionUUID->"4436af38-afa1-4324-b459-a3aa89e086df"],
Cell[3474655, 65551, 733, 19, 42, "Output",ExpressionUUID->"8df6de3d-f3da-46b5-95fd-562c1d047a9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3475425, 65575, 743, 18, 115, "Input",ExpressionUUID->"6b2d3156-a7c8-4695-9ad7-e122afeb9cad"],
Cell[3476171, 65595, 250, 4, 34, "Output",ExpressionUUID->"3a87c2c0-36cb-4f4f-95a8-78a1e1d34ce5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3476458, 65604, 254, 5, 30, "Input",ExpressionUUID->"aa490481-f897-468d-97b5-47bc6e550ba5"],
Cell[3476715, 65611, 157, 2, 34, "Output",ExpressionUUID->"e8cdf0e7-285f-4379-b57e-c6f2c0be9230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3476909, 65618, 249, 5, 30, "Input",ExpressionUUID->"77fb714b-2701-47f7-9f2f-0daf0473350c"],
Cell[3477161, 65625, 193, 2, 34, "Output",ExpressionUUID->"1b5729e0-6f1e-4b1c-8542-3d1adb46658d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3477391, 65632, 1842, 41, 346, "Input",ExpressionUUID->"a968bc0f-3e8d-472f-a273-cc1019a9268d"],
Cell[3479236, 65675, 701, 24, 162, "Output",ExpressionUUID->"fd85d7ec-b930-4a49-8a2a-fb66df8881a4"]
}, Open  ]]
}
]
*)

