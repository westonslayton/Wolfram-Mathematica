(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    250969,       5004]
NotebookOptionsPosition[    243387,       4865]
NotebookOutlinePosition[    243820,       4882]
CellTagsIndexPosition[    243777,       4879]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["SENIOR YEAR SEMESTER 1 NOTES - BC CALCULUS", "Text",
 CellChangeTimes->{{3.8433097223378963`*^9, 
  3.8433097323026457`*^9}},ExpressionUUID->"4cc981ba-38c3-47b4-ac0a-\
607fac420d0a"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.840973223040415*^9, 3.840973223379835*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c2385dd1-4b1f-4952-a43b-6a0d906457d3"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sat 18 Sep 2021 13:00:23\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "9", ",", "18", ",", "13", ",", "0", ",", 
           "23.666788`8.126714303404164"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.840973223672903*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"5c731204-ee23-49de-b7e7-6f094eda632e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcSin", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Sqrt", "[", "33", "]"}]}], ")"}], "/", "8."}], "]"}]], "Input",
 CellChangeTimes->{{3.840879983795288*^9, 3.84088000834123*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"984a38e8-db61-4e6a-b03a-3c42ba5f3ac5"],

Cell[BoxData["0.6348668711335707`"], "Output",
 CellChangeTimes->{{3.840880006231328*^9, 3.840880008527856*^9}, 
   3.8409732270964193`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9f9cd849-5c0f-4ce1-98fb-a6913c98812c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ourList", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"Flatten", " ", "@", " ", 
   RowBox[{"Values", "[", "\[IndentingNewLine]", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", "x"}], "]"}], "-", 
           RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}], "\[Equal]", 
        "0"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], "Pi"}], "\[LessEqual]", "x", "\[LessEqual]", " ", 
        RowBox[{"6", "Pi"}]}]}], ",", "\[IndentingNewLine]", "x"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.840880052296111*^9, 3.840880159967957*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d33a7bc0-17ef-4cdc-a77c-2c46d0c97d18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "17.846588967672506`"}], ",", 
   RowBox[{"-", "16.710930221815218`"}], ",", 
   RowBox[{"-", "15.073096396815396`"}], ",", 
   RowBox[{"-", "13.201237485492744`"}], ",", 
   RowBox[{"-", "11.56340366049292`"}], ",", 
   RowBox[{"-", "10.427744914635632`"}], ",", 
   RowBox[{"-", "8.78991108963581`"}], ",", 
   RowBox[{"-", "6.918052178313157`"}], ",", 
   RowBox[{"-", "5.280218353313334`"}], ",", 
   RowBox[{"-", "4.144559607456046`"}], ",", 
   RowBox[{"-", "2.506725782456223`"}], ",", 
   RowBox[{"-", "0.6348668711335707`"}], ",", "1.0029669538662527`", ",", 
   "2.1386256997235407`", ",", "3.776459524723364`", ",", 
   "5.648318436046016`", ",", "7.28615226104584`", ",", "8.421811006903127`", 
   ",", "10.05964483190295`", ",", "11.931503743225603`", ",", 
   "13.569337568225425`", ",", "14.704996314082713`", ",", 
   "16.342830139082537`", ",", "18.214689050405187`"}], "}"}]], "Output",
 CellChangeTimes->{{3.840880113251567*^9, 3.840880160882119*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"46ab67ec-174b-4208-8e67-1c598262a66b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "5.648318436046016"}], "]"}], "-", 
  RowBox[{"Cos", "[", "5.64832", "]"}]}]], "Input",
 CellChangeTimes->{{3.840880637439095*^9, 3.840880656347148*^9}, {
  3.840972416804092*^9, 3.840972417800482*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3b8e4cb3-c233-4301-b35b-e5faf10339b4"],

Cell[BoxData[
 RowBox[{"-", "1.760173520579809`"}]], "Output",
 CellChangeTimes->{3.8408806569683313`*^9, 3.8409724199684677`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"22766656-8199-4058-8241-30aeb482107f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "3.776459524723364"}], "]"}], " ", "-", " ", 
  RowBox[{"Cos", "[", "3.7764595247233", "]"}]}]], "Input",
 CellChangeTimes->{{3.840880659032299*^9, 3.840880673434366*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"03f33b46-996f-4f4a-a98a-947c6afb0919"],

Cell[BoxData["1.760172593046125`"], "Output",
 CellChangeTimes->{3.840880673935742*^9, 3.8409724224317627`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"8c79a2c9-905e-4426-8798-1ecc412c88cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", "x"}], "]"}], "-", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "6"}], "Pi"}], ",", 
     RowBox[{"6", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PointSize", " ", "@", " ", "0.02"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Point", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ourList", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"2", "x"}], "]"}], "-", 
             RowBox[{"Cos", "[", "x", "]"}]}], "/.", 
            RowBox[{"x", "\[Rule]", 
             RowBox[{"ourList", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}]}]}], "}"}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", 
          RowBox[{"Length", "[", "ourList", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.840880225263071*^9, 3.8408802999693117`*^9}, {
  3.8408803541458406`*^9, 3.8408803564108477`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"2ae47081-dc52-46f9-968b-4d301134558c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
z5YvvnLsQHZ14uS2qmlkON3kf7i8A7UtfojKkZ9Bmt+ndO/wEpGBgILU0+gZ
9M7cf9L+KhEV6uf+clmbQbEM8dKb6UQk56FqYWAzixw9vY+aDxFRyssfU6IV
s2iK9XivMzcJsZVo3duSmUP2FnS6JjokdH+slLf32RyKCGw7wHyVhFZYDb4U
Ls8haD8Z//UuCTkfrtV/afUXub9xMD0bRUI9tqY9N0v/It1bR02piSQkpT+p
nsE5jziOv+AsTSYhO0u5By8N5tHQkNCD/HgSSnT3aLrvt42/eDw9F05CbcHZ
+72y5pG7sfbq/dskxPzy3zW7/nlkbcCXF2FFQgYfD+aacvxD6cSPQaLqJBT0
y5eqefwfsiB78NqxkFBhy/cTcnf+ofnc/KArPUS0MLoeve/TP/Stw26nftr2
+slH+5j6/iHZ01eOS9oTkQNroMwK2wJSSt61S5p/mw9R8BnRW0Dlz6VsXBs6
EEmNDlpvLSC9YzP39vp1IIGsA7supS8gJ6t7CkHiHche5Ij5YMcC2rti3e5c
245m9twY+XtoES0sj+yUYGxHyvfCFW47LCLbh7PCh5Pa0K2V9FubMYuoy3pZ
W1ehDdEM/tnJsriI+J9SDOp0WtHx8+tnXoguIWNj5anI8hb0pI7rFb/5EtLP
mScTj22f44KTCrK5S+isiXDUY+VmJB3+48yJ68vo1DteH5nyOuRB05HYmLKM
LpgJUo6F1aI83/nhc43LaFaum6vZsGZ730rdclBYQfu2pK3i86uQmerLxHvT
K4ju1XEx/tOlyK//xnCx0xqKuGDi8exIBiqxiJDXi1tDTQ3h37jOvEH0tRm+
tVVr6DZ9QSWpOhZFfutj6pJYR3oSfwsTZ01xWtgp+ZXhdVRRt7VHSOkDHt90
8r3LSUa/bphO/GP7guV97pfQb/dNa0KGfrCciwtsisw408iI6hdsE1P2Hdce
lPYl2FHQtT/nPOpCS/Hej3ol359RkN6hg+x9E2XYQtCWCWEKSs8sWLXQr8B9
O2MTTASp2+cl0JZ7pgov/NlR4tpLRS6Hl2Njl+vw4bNCTAt7NhAn90ZBgFQD
DqjWMPM7uoF0bbT0ZMwbMePXm0OPEzdQWRxnzynDZswf2s/43nIT3VL3/Vds
0Yr7Si35pSM2EVBSjVyIrTiN0qL0CW+iO9p6FB/zNnxN9aS+4uIm2vO+/MrX
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
0jLIcA==
       "]]},
     Annotation[#, "Charting`Private`Tag$4793#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.02], {
     PointBox[{-17.846588967672506`, 0.36900872982819055`}], 
     PointBox[{-16.710930221815218`, -0.36900872982819055`}], 
     PointBox[{-15.073096396815396`, 1.7601725930460868`}], 
     PointBox[{-13.201237485492744`, -1.7601725930460868`}], 
     PointBox[{-11.56340366049292, 0.36900872982819044`}], 
     PointBox[{-10.427744914635632`, -0.36900872982819044`}], 
     PointBox[{-8.78991108963581, 1.760172593046087}], 
     PointBox[{-6.918052178313157, -1.760172593046087}], 
     PointBox[{-5.280218353313334, 0.36900872982819044`}], 
     PointBox[{-4.144559607456046, -0.36900872982819044`}], 
     PointBox[{-2.506725782456223, 1.7601725930460868`}], 
     PointBox[{-0.6348668711335707, -1.7601725930460868`}], 
     PointBox[{1.0029669538662527`, 0.36900872982819044`}], 
     PointBox[{2.1386256997235407`, -0.36900872982819055`}], 
     PointBox[{3.776459524723364, 1.7601725930460868`}], 
     PointBox[{5.648318436046016, -1.760172593046087}], 
     PointBox[{7.28615226104584, 0.36900872982819044`}], 
     PointBox[{8.421811006903127, -0.36900872982819044`}], 
     PointBox[{10.05964483190295, 1.7601725930460868`}], 
     PointBox[{11.931503743225603`, -1.760172593046087}], 
     PointBox[{13.569337568225425`, 0.36900872982819055`}], 
     PointBox[{14.704996314082713`, -0.36900872982819044`}], 
     PointBox[{16.342830139082537`, 1.760172593046087}], 
     PointBox[{18.214689050405187`, -1.7601725930460868`}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-6) Pi, 6 Pi}, {-1.7601716547107031`, 
     1.7601508568244082`}}, {{-18.84955592153876, 
    18.84955592153876}, {-1.7601716547107031`, 1.7601508568244082`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.840880300404152*^9, 3.840880356740587*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6dddcb93-ad66-4bc1-a061-03c7178b42bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.842358758624917*^9, 3.842358758866391*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"498f623f-84cf-40ee-91b6-0748e5298593"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 4 Oct 2021 13:52:39\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "10", ",", "4", ",", "13", ",", "52", ",", 
           "39.164275`8.34546506991663"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8423587591756887`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"af284897-4bd5-4ed1-8d20-7da1efd53002"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"x", "^", "5"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.842358657086091*^9, 3.842358663537253*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"96ad1ff4-bb96-4d3a-a309-95df88451bbc"],

Cell[BoxData[
 RowBox[{"60", " ", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.842358664217345*^9, 3.8423587622467737`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"afb35b55-0140-4ac6-b264-9476a92e9154"]
}, Open  ]],

Cell["Gives the third derivative of x^5", "Text",
 CellChangeTimes->{{3.842358674059092*^9, 
  3.842358681210436*^9}},ExpressionUUID->"7c23168f-e7e0-4b86-aef0-\
8fb1f8a04e50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"n", ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"E", "^", "x"}], " ", 
          RowBox[{"Log", "[", "x", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "n"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "1"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10", ",", "1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.842358569669833*^9, 3.842358644927322*^9}, {
   3.842358685241455*^9, 3.842358686849976*^9}, 3.842358733535088*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"ea669792-0cca-49a8-938d-4cf0fe783787"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "\[ExponentialE]"},
    {"2", "\[ExponentialE]"},
    {"3", 
     RowBox[{"2", " ", "\[ExponentialE]"}]},
    {"4", "0"},
    {"5", 
     RowBox[{"9", " ", "\[ExponentialE]"}]},
    {"6", 
     RowBox[{
      RowBox[{"-", "35"}], " ", "\[ExponentialE]"}]},
    {"7", 
     RowBox[{"230", " ", "\[ExponentialE]"}]},
    {"8", 
     RowBox[{
      RowBox[{"-", "1624"}], " ", "\[ExponentialE]"}]},
    {"9", 
     RowBox[{"13209", " ", "\[ExponentialE]"}]},
    {"10", 
     RowBox[{
      RowBox[{"-", "120287"}], " ", "\[ExponentialE]"}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.842358652802734*^9, 3.842358687084956*^9, 
  3.842358763195822*^9},
 CellLabel->
  "Out[6]//TableForm=",ExpressionUUID->"3e5a134d-3cd6-4465-8065-6c34a952b5a8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"others", " ", "=", " ", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "^", "3"}], ",", 
       RowBox[{"x", "^", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.842359503526113*^9, 3.842359614371612*^9}, {
  3.842359670242627*^9, 3.84235972936974*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a16bf1ac-aad8-4ac5-804d-e4a2edb5576f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dotted", " ", "=", " ", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"White", ",", " ", "Thin"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Mesh", "\[Rule]", "75"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"PointSize", "@", "0.0075"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MeshFunctions", "\[Rule]", 
      RowBox[{"{", "\"\<ArcLength\>\"", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.842359583999262*^9, 3.8423595977658157`*^9}, 
   3.842359634341749*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"ae5f685c-727a-40b0-9d7f-a2e87a971f98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dotted", ",", "others"}], "]"}]], "Input",
 CellChangeTimes->{{3.842359618103612*^9, 3.8423596227674217`*^9}, {
  3.8423596594306726`*^9, 3.842359665606142*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"4eb09704-2153-4ccc-b1c3-133f0a047934"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, {}, 
       TagBox[
        {GrayLevel[1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwl1HdYVmUYwGESFBAEWUmgiKQIkTIUcJMoakZCUBFoWVSmWVBWVlaOHGU5
2qVWlu29S23aXmqOhu3SNG2Ytpd1v5d/3Pyecz6u831nvKdbc2tdywERERHH
+xO6hXu4hLFUcrQP+mitttEUTSWNSNsHaifSibJ9kGbQ1pypnelCO9tZ2pVo
c7Z2I8acowcTa+6uPWhvztWexJnzNF7z9RA6mAv0UBLMvTRRe2tHLdQkLdJk
LdYU/Zh7mc44Guwfpn1J5RPuY0a4LgznGP9Tqt/yNAs4naNI41PuZyYnUEUZ
O3mGhUym0XHqwjXjMx5gFuMZQTm7WMkizqCeTnzOg1zKiYxkLy9xA+eGe+b4
/fQ7VrGYM8M9JJ0veIjZnMQofmYNN3Ie/fme1VxFC//yDreHa8HvvMYyLiQ8
POvkznD/+ZKHmUOkzzZoM3/zFsuJtv99PZxfeJl4+27StrpJO+pU/Y+1JNi+
Q2P1Q03SAeE+6A/6LHHmqzVKN2qituo+3qWD7RUaox/osfzB69xMO/s367Rw
Wub1ehcZfMUjzOVk/uFtbmM0v/IKSzifgfzIc1zDWTTwJ29wCxeRydc8yjxO
4Qh+41WWcgGD2M3zjPPbrtWzOY7ObOUxLuNUqhnMT7zAdUyhkS5s43EuZ0I4
jmMeqUPI4hueYD6nMYYK6sI61u08yRVMpIbDqPd5tpaENa59NEf7hnWupdpd
y8Ja1/Lw3JJr7h/WvA7QgeSF89bB5IffphXhHRC+S4dSYK4M6zi8D8zDtYpe
5hE6klH0Ds+bjqYwXGOtDudMUTg/raHYvCNi/3vxKb2SSdSG5yV8p+7hRa7n
HJrsb9K/eJNbuZg29r+nd9Pe/JEma4n+D3N/kwM=
          "]]},
        Annotation[#, "Charting`Private`Tag$9214#1"]& ]}, {
       {GrayLevel[0], PointSize[0.0075], Thickness[Tiny], Opacity[1.], 
        PointBox[{275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 
         287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300,
          301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 
         314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327,
          328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 
         341, 342, 343, 344, 345, 346, 347, 348, 349}]}, {}}}], {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
//ZpzG2rl2SI//k84n8+j/g/zXo9Qw==
        "]]},
      Annotation[#, "Charting`Private`Tag$9312#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$9312#2"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 8.999999265306139}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.842359623273048*^9, 3.8423596811909637`*^9}, 
   3.842359732922352*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"6f5e98f5-976f-4e5d-82bb-0ad92568add3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.842448225282867*^9, 3.842448226050457*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f5627874-6df4-4d09-ba52-2753b07e44be"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 5 Oct 2021 14:43:46\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "10", ",", "5", ",", "14", ",", "43", ",", 
           "46.562953`8.420615491874937"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.842448226587578*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"ff6d76d7-ce8a-4f54-b542-af827bb26deb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "@", 
  RowBox[{"Values", "@", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "^", "2"}]}], "\[Equal]", "0"}], "&&", 
      RowBox[{"0", "\[LessEqual]", " ", "t", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}]}], ",", "t"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.842448471985977*^9, 3.8424485223294067`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"fdbbca42-0631-4e5f-a8fb-ff47d09ea2e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[Pi]", "3"], ",", "\[Pi]", ",", "\[Pi]", ",", 
   FractionBox[
    RowBox[{"5", " ", "\[Pi]"}], "3"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8424485096562347`*^9, 3.842448522682251*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"18ee955b-58f3-44f6-b328-e8b7c16bde20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolarPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "@", "0.02"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "#", "]"}]}], ")"}], 
            RowBox[{"Cos", "[", "#", "]"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "#", "]"}]}], ")"}], 
            RowBox[{"Sin", "[", "#", "]"}]}]}], "}"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Pi", "/", "3"}]}], ",", 
         RowBox[{"4", 
          RowBox[{"Pi", "/", "3"}]}], ",", "0"}], "}"}]}], ",", 
      "\[IndentingNewLine]", "Blue", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "#", "]"}]}], ")"}], 
            RowBox[{"Cos", "[", "#", "]"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", "#", "]"}]}], ")"}], 
            RowBox[{"Sin", "[", "#", "]"}]}]}], "}"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "3"}], ",", 
         RowBox[{"5", 
          RowBox[{"Pi", "/", "3"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "blue", " ", "points", " ", "are", " ", "when", " ", "slope"}], " ", 
        "=", " ", "0"}], ",", " ", 
       RowBox[{
       "red", " ", "when", " ", "slope", " ", "is", " ", "infinite", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"don", "'"}], "t", " ", "include", " ", "the", " ", "cusp", 
          " ", "point"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", "}"}]}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.84244822792371*^9, 3.842448360485862*^9}, {
  3.842448444516542*^9, 3.842448446662326*^9}, {3.8424485522864733`*^9, 
  3.8424486307193727`*^9}},ExpressionUUID->"2351b22b-3a9d-4197-94fd-\
124add0070d1"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$3610#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    PointSize[0.02], {
     PointBox[
      NCache[{
        Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {-0.25, 
       0.4330127018922193}]], 
     PointBox[
      NCache[{
        Rational[-1, 4], Rational[-1, 4] 
        3^Rational[1, 2]}, {-0.25, -0.4330127018922193}]], 
     PointBox[{2, 0}]}, 
    RGBColor[0, 0, 1], {
     PointBox[
      NCache[{
        Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {0.75, 
       1.299038105676658}]], 
     PointBox[
      NCache[{
        Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
       0.75, -1.299038105676658}]]}, Null},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.842448311354267*^9, 3.8424483289344*^9}, 
   3.8424483628212547`*^9, {3.842448582876535*^9, 3.842448587977524*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"11e66999-b6e1-4558-bbf7-eebf169a9282"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8425997256874933`*^9, 3.842599725963262*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f46f5fc8-f233-4fa9-bfeb-75f4e421f867"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 7 Oct 2021 08:48:46\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "10", ",", "7", ",", "8", ",", "48", ",", 
           "46.192269`8.41714427226486"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8425997262210827`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7b096fea-6585-45c0-94e7-68eafbbbdccf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list", " ", "=", " ", "\[IndentingNewLine]", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"Values", "[", "\[IndentingNewLine]", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"5", 
                RowBox[{"x", "/", "2"}]}], "]"}]}], ",", "x"}], "]"}], 
           "\[Equal]", "0"}], "&&", 
          RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", " ", 
           RowBox[{"4", "Pi"}]}]}], ",", "\[IndentingNewLine]", "x"}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PolarPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"5", 
       RowBox[{"t", "/", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"4", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PointSize", "@", "0.02"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Point", "[", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], 
              RowBox[{"Cos", "[", 
               RowBox[{"5", 
                RowBox[{
                 RowBox[{"(", " ", 
                  RowBox[{"list", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], ")"}], "/", "2"}]}], 
               "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], 
              RowBox[{"Cos", "[", 
               RowBox[{"5", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"list", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], ")"}], "/", "2"}]}], 
               "]"}]}]}], "}"}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "ourList", "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.84259972765796*^9, 3.8425997414785643`*^9}, {
  3.842599868038834*^9, 3.842599870210088*^9}, {3.842600235603147*^9, 
  3.8426002573212757`*^9}, {3.8426006739010143`*^9, 3.842600698033948*^9}, {
  3.8426009257549143`*^9, 3.842600961885977*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e9d3acf4-7371-4198-822a-f8dd3ac16961"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Cs3ffzOvxTGQXbn9RD91BDZ8ElStes9AWF73a3vYCNQJNd/SC2AgVeYTmaIz
Ah3Psx/0PmbgyYZQbkgnwZ66Tyu991n+oH7RHDIlgSOjM/H3DQZ++eDoy8dF
gh57VeFqLVa8nl018LMhguqh831mRxh4EB62tgsSgTvkRKDEHgaeKQm81dw0
DP6P6gxF2RhYvDP+z/c9w+Dp+8zvEnMGh9vmeJR6h4B78cyxYuIMsl+3u6Th
MQTUNyK9C7kzuOivWNA4MggCr0I1miNn0KzVlWTkNwhnL2/b1+I1gzWV/tdL
lAchNMltXPv8DD7r8g0/FjIA6V1cL2pVZ/C1lcoVcxiAu1n9ajbirHqLyw14
PNcPlrK6PMrT0yh0ZNut9zr9cGLl0zm6/TTepXA+EPrdCzqPUxtqjKax5Ixu
hlVaLxhmO53vODSN7CMXDnRc7AX3zY4MF8YUCs9m5q/N64GSZ2Wn9l6ZQhfR
KvSz6YbEikzvUIUpJPs9UFAT7AYdtpJ9KlxTaMpBHTjQ1AXHRakj+0sn8Z1o
fO/03i64t5ot0MwziZ/PxTZGdbSDvX71zTnKBLpfKGhXP9IO8d/Z2K8UTuDr
cdctqZFt8L4j9gLX1Qksi+bPWrIhwPG/YdZrouiYvWyz+eL2Fgj+rW/80oaO
S3UfOcXdm4GY/ujxVWU6Bla+eL083wR3nv7zY++mYZBcT8ZIWyO8eCZ+99Eq
FfM3CYwFfKgH+YpgQmEDFa05GZJvN9dD5AD50KUA1nwU4d/a710H/wovU8pE
qbhCGBI0f1wLU/s1SrWVKLg94a21gl01/PRLrMj9Scb85stGH8YQ8trj1Xwr
yfjZauRVP60KZmjFZn5aZExTf8sbu1IBVzwi+DaGjCHvpzcSY9qlIHcDNu/d
Noa/Q3p2t1iUwN8YAs/x4FE8os25dq9HMehzD7Pd9x/BBErTKfPWQkh2rDU+
40JEAqednfzrzzB5X7WyZGEYI0uzZBeq88AtU3ijlvUwHpZ1ePjsTy44yF67
V3d+CI+ZPx835MiB2R+K77/uGsArrtp5bU7pUN5yfqXrXT+mPZUpuS6VBp3D
dU8XOftRQefcGpnxFNA9cFNu02Qv9pSFrXy2SYLjO1d2bLvYi3sJpr0hxxIh
NlLDz66uB8klW/UWdyTALeLvQY3YbhSyUHNpbP4IIl70uAqubtTyaL96KC8G
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
Vtj7J0/jFZm004yJaiDOlUVPtE3jApdzrrN3NbSkStY5zk2j9e93Wz2lq6Ep
9uXiWSUmivW93yhgVQUzK5y3uxky8Zk5a2PUmiq43ehwc5bT5/Ybvm2tjq+E
F9ZGaRblTNTbQ9vEGKwAlkzw2gh5FuqktP87alYOvYuy9Z1XWHitt8KlyL8M
jHfINp2wZOG9Czb8awpLwe1lrmMUh1eY7R14pr6yBG7c6RL/nM9CLokTJ67s
LQbh7rj1dS0sbOD6V/FAowj+Hn/EnbDAwjbLgh8rXAoga+vZS/rr2bhl+o16
fNg3eK2Tqq8ozsYE86IvYTn5UPLVMsRBk40pU/djS0ZzwVrq0Pmem2z0Ts4J
X/cjB1omr9cbPGCj2HFt2Z+8OSCv8c1t1JONKzc5xPfsz4KLa2jvhoLYqLRL
MmvkcQYEyjnT/sWw0Ve54VvX+zSQmhcR0cpgI3vPHrfk+BQwmdgWV1DExrct
/FfeliVBfaTn2gs1bGxM2fAsoDsBkC1PW9nGxiz8Zkqf/AoGOSW9I31sLAnJ
+vxtKRZOK9g/Hxlho+G5DTmi62Lg0QUf1xUTbJQ8+ivytWIk+EwufT07zcbO
N126PrrhQL/vF5c1y0YTwWChBNsQiHnAOKM8z8bg056uwr4fYLPmeyPGIhs3
qDyMun7RF6wlGmqK/7Dx7o7CoCsvPeBEYs/t9L9sfCG4QfzRDSfoPlwlXPWP
gz9A+qrFXXOor31NXeDINT66YjyZ2vgnbLTqKkdOydmyI/WzHWYK+Ra1LLOR
QV/wXxHtimdDhQYsfrPxq36oL8nGCynFkwoHFtg4qO5vzo4KQKK61i/+H2ws
mhjXl/MMwq0Jd9Q3sNkYReoy/PkwFHXFD1xWoLPx5Fm9KtqlL5j60una6zE2
lkV7Pb8nHI3Tt1aEMglsDDSZUozmjcXXMsctnLvY2B4Uy373Iw6Tas13yDZy
4iWS9/cXKR7VHiRtXodsvEaLG2xoTkTtlJ7cNXls1HsIq/vzkjHyrXjZ089s
7M7qY293Tcd1a9LFKb5svL2JeYjXNBPpVSxJRxc2iiwW3teOzcKkZzMW2+6y
8VVlfcFulxx8/9uWtlebjb/23JjxsMzFJZfdXgYqbCw9Mdz4TDcPdw1RBDWE
2fgt0sC/Yt83nLss9WpxJRvrBfXVf6wvwPjYxa1EJuc+SO48aPO9AC8mPpeT
rGThON8xvt/5RdiVX+4WmMzCoV2LTyaDinGOP8JPOpCFshJHlvqelKDY9Ivm
n0YcHn76iZ6TRBnqXZyQ7zvNwmEnt90HBMqRxXpiU7ebhcoZSmOHf5Rj3NeP
q4YoTCxX/d01f6sC7/fJXl1VzUTnM+uMy5sq8MIC6ZpaDBPdjDW5VytWIv/G
zEGeW0wU3NXivbC+Cs+tHEnwU2Bi3LZo6fcOVbhYsqZcdiMTr1gTDZ8NV+GL
wtmuweppjG3dwZBLqEYN8VyhRrFpdL9nS5DfXYv7VnBZmM9N4czalZYeL2vR
iRa262j9FBo0hSqM9dRiyL0cfm2rKUy9dM8kyqUOA+jJLxJVplCATOJiddZh
s39ik6zAFLYOrL4mubseJ1kl0zNpDDyxanDkaGk9PjuVrinpxMDkXouLP3ga
UO/gjoDQcwyUdrDtd77UgHWHt5uokOn4xzx8S0tvA3qWC5U8TaNjDs/GlS5C
jbjmlXzUdwc6ChC+vCFcb0TH9wd4WtbQkSV04uSjpkZ0LV8RKt1FQ0Hj3xXB
nH7YUKhsYDiMhqJqQq+1FJpw/bYIk7G7NKyrG3dyfdCEzafeDynvo6FTXemQ
QmgT6ib/ZLGnJ/Fp6aWZe7VNuHgv9dLf7EnMC9548B+7CQe/nB49rjSJr1Sv
RFirNOPr/ww/P1iewPgHO5zl7zYjEmby/+EEhgi79lx73Yxryn1XcblNoFNE
YF91RDMqvtcwsVKfQHB/MOZS2IyaBe55Z1dNYMfzF85uHc0YNsAmBXF44bvN
TP268WY81Kjcr/tmHBc1GBc1F5qx1JHXJ0B9HHcmzuot87XgVdvkRY2V4+js
uC95YksL1m0V2fWsgopCN2M+LIu1oMC7ylUHnanok5kVpCLZghpGF3LunqSi
wshB/diDLci/7KkotkDBXX8y8vZJt2BwzYk0szwKPtSlJzRyxrsn5yWVbCho
5d1j8IYzf93W+bpIKQq2aixIXt/ZgpFEekbIxBi2RcT7ym9twcuDvTwSMWNY
u/GoisTqFnybSZ2/eGsMRwUPCu7i4C+uVsneuHUMufYGrN/D8S+0hWDu0EZG
3zgeC6n2ZhQ4bHTV+S0ZlZf/uSl8a8Y4SUqi9GkyOnn8pKmGN6Nr51DSmwUS
rut5d+OCEydewptFbuWT8OSRFRPpt5pRwmc9YeoJCfdnHPC2PtGMarV0vxOH
Sdj2IK/n/ZZmZJoGN/r2jOKh/dxOq5hNGGlot/HQxVE8+FHlRn9VE+r9Erim
Wz2Ccrlmt7lDmvDWboPzhlnDOBGvFGoi14QayRNN6pLDqEHueBTyrxF3Nzwi
NH0eQp5VZ0p3NjRiPnfIzVYPIia7/PKXu9qINffn1yjrDqJHRZzhffUGLA+c
OFLYOIA7Ph+7dGGxHt8tdT/+pzyAVTlhlLdp9eiUeHULz55+9CZNKaxdW49G
yo31Hswe/Gv7PEYvqRYfLp4OnLvTg6c9D80Ja9Wi+FZvYb2ubsxWKKIpTtbg
ZBsKixR0ITGyRD9RpAY3b7gTucu1A+MNag/ZmVVht/BfscLJdqwMTXVzmq3E
s39yf9i2tmFdfaniwgtOPhHv1BgNa0HtDKMCA88KDJwRPlV6vAG72qgLKn9L
sfaUd9bLXfU4K3657RyrBDP+Mpp719QhU8ad126wGKvN5784jVRjvZUJ40xM
IQ44t45aiSN+2aI50/srF7v+EJ4Wc+z853zLsakyB+3HY/SGh4vx3K8jXyTe
ZqOqTRHfXMw3ZKilHbNZnYE05cdaAm/T8JcgLXA6MA5tN/n6fxJ6DReeTWt2
Bz4Di5vXVh5JCIDIMLs8jc/vIPRJdkj/sTCoExIzYTV8AKkx8/OrBeMh7oyz
fsOPKJBcZeewsyMHdtB+ttb7pMP6Fw7GC/15UHvXWHfWLQs2JX8fDiJ+A1L2
mYO26jlQd8nPva63GOyDHib8bc8Hn3uyjSytSjg/bM69ZmsZ5O+/safzZBU0
lygGLLLK4cC68EFNqWpgCpD/E71fAefX7CLVr6wFZzu9M3vPVcFk5zfHAx8b
QJn+e/UesTqQa8ltPn6sHW5n2tnV8rWBhD3vGsPFdnidD46Dazi/b1zkbrrd
AcKyi+sf8XbA5QepYR/EOsHq9eWKAv5O6Hm8qWCDTxf07khRqhXuhi0rhAfD
KF1QWFNL7PzcDdI/zgqGnOiG2ZBDkrt39cDEJNGHQOqGYzbxLXYHemHDB16v
q6K9ULZc+n7vqX5w7H728oB5L+R/r+j/VN0Pu/L03xln9QLPfLP+f1oD8L4z
N4uh0geEEDPTY9cHYY3HNm65M/3Q8eyux5wFEbb/le8ccesHmdWfgiTYRJi5
+KdsuLwfrMxOXj76dAiWjf+r7z46ADw8He3Fr4bh8A796nfcgxye1Xh+0HcU
BJ4sxY8cG4T5Y6SUW3wk2LMrxvXD3UFoH/54PvIsCbQP9W/bXDAIpJcqEYH1
JLC2lHg3OjoIuVvwx0k+MlwRmrm5ho8A3tnjR9I1ydCXafDS/goBOul5if01
ZIhLbDpZaEuAmP0BH725x+BjsuZR/Y8EoH1pqvylOgbTFyL8CtoJYFv7Xu/H
/9+7oF0VdpgiwEFjpdevfo+B1q004WAeIgzITT/IU6RAk4170S85ImB0tvDO
HApoWKnKqJwnQo2yRM5FFgV+SK5qnDD6fxwyv4kcpEJGnlrCz8dEiC+zFvYy
o8KidzyX5WsicMsvNgZGU6HCbkbynD8R3MTf1B8jUiFQZ+qV3xci+H1ev95i
6zj8KNV6DUlEqBT2+HxUexwSHwSWG+YQYXFy7pnXu3HOvv4bmSwmwgqv+NRH
leMg+tgqYqySCFeKtTWIi+Pw1PFI8+V6InTdVrrefnQCmif/XT7czNHfY/5d
02ICgjb07XVvJcKbyUIliJ6A2Nomo/8//8xn/nc5v28Ctnb83BnMGf9dnaiT
sG4SQuUuJOhy5u+cabfboDYJFpbPTodw7LOvvx5jOkxCh2Oxjm4VEUx0zvWe
Sp2EeWbljbASInR8cXnHQQrXelz7jHOJsKbJ8tShTTS45bHOISeZCGofzKBW
gwbrbSzovpFEsKhaHqxxoEF9+8PF+UAiNIyImxxIosGXG25uM+5EmLc9rTAz
QAOz+qCnr54Sgbb+Ub7QGjpQg1u6ok048Zp01wpXpEPOI8tco6tEkJe5dM/R
nA4VNeFQoEKEtpXRDhnBdMi/fzI3az8R9v97s0qpmg4Z3HmGlzYR4fYbvcBt
M3SgjcpPvCITYO5AyljNWQYoa42WbasngFJYTr+vLQPW6x0vNk0lwLOlf9LR
XxiADw93idkQgE3QzvrEYoDGdYsn/38eej8x7rKj0BT8DN+u3HSEALneOw6H
qUyB8IT1Zk/GIAgcNmF+8JqCqabw/VvqBmHHlyOu5hlTMJvd+dw2ehDOB94u
t+uaAinNQP+sq4Pw6oba34PbpqEpmJ8Qun8Q9JX0/nSemIYQm1nLe38H4Pip
pvAkg2mQ+Xtqa2rCACwRs7cOh01D4INHledfDsBNz2p52W/TsHC2VI/r6gAc
+T2Q3to5DScfJ+iU/uoHS63F6UZeJtzhtrzW1NgPLWkHGPt3MYE9c9ppObwf
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
rXxgUYuLbk4rNHOr4PTPcxcn3GrwuJXJutpqDh8yTdv5IaMKa3cx76V0IYiH
7qs50V2GT/hbiur9CyHhbjS3HyEVD5xLv3zEOh5cHn5XSSpNxJv6nyfNRGJh
0n5TuuynOFwj8qpnMiYCTlYQvPytQhCyD1w9kxoAXc5zti+c3sKeKsrT78TX
SCv4vZXbIgj+u1H6Wmm9L6q7R+9N3hUBnq6qpa98grBmsDG6Wz8RPpl2jboc
iUbF2uVUv095kFKjm3HZJxXV32+pDh74BuPbXXbqn89ApSsHmxdEiuDGnvl0
AZcsTNvhq/8kuQzqPtrbKuzJxeQJHy0V62qwHyCLVUgVYukN1umBkBpYFP2l
rXu3CCt2Gs6pVNRC+axaoKV/Mdo/WP+/jus8HurEj+O4c9Uvan/WGbUiJGRK
GxGflpSMsaLaNr9y7T5E5VYpmkx0EklYR7aUUo6Us+RDw1zfETk2atzGNcxX
MrVIdh6/z7/v/z+P17NgmzoHIsvrCycEtagoyRZGsfhgoL5RQTurHv9hdPi0
9TXDqp+cNPTVG7C0RsHj0twbcDK3vVCQ1ICmhnaLw+mtUDH0aY/66de4Qvcw
zYXfBld/Xkq3M21E18767Prf2qH94Zbj7TcbkRE2WWE12g66X9iiFkkjzukd
eKAq1wnpXormkoompMr20oe2vQOfOOepBg02/lrQReUw30EeTTHkyDE2Ftdp
hTPcuyBij0OeZxUb/QLllvsGdgNTe0OBK42DwZvXZJ6VdIPvKj19tzQOpkBP
nWfceyDNbTIednFQ19NNyyLzA4TSVW18f+PixYCMUCMDARi47DJquM1FNU3L
InaxAKZ4UVfOtHCxuzTSdKahB+6dqikW2/Dw7vWi/FBqLxzM5+4pOcHD+6nv
jl3s6IUbSXWK7GweXlts8nEX9sGSPENHaYaHCRUhJH1bPwy6BfpStAmEyat6
mmf7AW86PKy0I7D6uorO8Vf90FHDscn2JjBt9xHraJkBOHNxR2KftBP/dpTt
sHccgMo0100J2QTuK2ui1iQMgM7sQmdSBYENdt1LQqmjOD2XDi/wCXSNFnm8
Xj4Iqf84VbQMELhyNfUxVeoq7clkWZVZApMMFILpUlfJHfozpkKej3nTi8u8
pK46QPFMIL7no/wa7fEPKkPgTN+Ts0+HjySNRl+iDUFtUqS/iwEf9bpYwJT+
zcZIozvVG/io4qBwb33zEFSubqHkmfLx6N1PeuuUh2FlrkBP1oyPWm9X2Va6
DMM34xtpAyZ8NLwQGz5wZRhMd7LbHA35mKqxgfYXaxhi6AMOpmv5yA7p3T8t
LwRFVsyJbDU+MgJDNFt2CiFxiPYlYxkf1zixjGxihWD1UvR4/TyBAd3faVvU
CCFrMCvYaZzA2tuFV57MCiGlXnPvt04CX3pmqBVbjIC/ubePZz2BzyS7fDYH
jcBgetSc8yMCHd+++WHb/RGIfWJ2ZiiJwFzhD4LqnhHQTR49ahxG4OEPrUFV
GqOQlXPETduDwDzixSmLX0ZhfaWXYh2FwOT9/vOMulHYaqhy2HKUh8+Xbz5T
tjAKLjLnq+1e8DDF5s8BM+sxYLrOPr94jYfOZOymmYgx4LVp1ihLXfCeEun9
rWQMnO9U+fTr89D8FBnrNj4G8xxqyHciLj6/eSKnT9oVoaWRHZeecjHaN3Ff
za1xiBJU/1RlycVlNW22X3njoBpnOXz6IwdDA8qbI2UnYD5c7FpexEH7Apxf
OD4Bwdc2RjB1OHh+B9Va8a8JODn40ehRCxu/ysb7bW+fgLc53hfM4thYKiqx
1JJ2l+rquertPSz0mMptfRUgAntnMXZeZuHcdMzu+AwRUDyGX1hRWHhBk7ou
aFYEyVtXBEWdbUI7Lf+O+HWT8MZN4fc/dJvwvkRmsZI2CUcTnASOtY2oFOfB
PZQv7UTnpl2fJUxMLsrRbORPwn9+to7vS2ZiQXoXxV4yCdP28n0DxkxM3buU
c9BxCsQxlO4jHq9Rr/+PuYH2KbClm/WdSK3HxLn5sUTJFFTGaa09tLYeb6fn
ZlhpiGGp2ik6eB/iwUTl3IT9Ykjs9uuVCX+F4VumuIbhYvDKf9aucL4W3UWb
/fCGGDKym390v/wS5QRuqt2N0p2esHNtag1urd0bdLBXDD3vy+3bblVj/kf1
EvZnMUxG4JDFrSq0sdy4Mm49CesgS8f1egUOW+i/Y20nwfPqNzm7+HIsMzsp
XKCRYMIFqx3nnuN9ug7TIoKE4v/SUwj/Mgy73FVsFk+CSLlULvnAUyyMqlJT
TyOBfbaz7Mb1Eqx6cnzD2D0SSk95S3QDi1Cg32D84CkJmSHfN391fIyqvz/0
pr4ioSnkbx8/3Ud47pmt6XsOCVwtKxnGzANsCWj75N5OgsvOFT+msPLRhbFE
KRWQ8MbP2qMh8y4y/O8cmx0mwXB3a2Za2x0sxK5NepMkjGrEVGBoFn6sNTPa
MkMC47wm86RyOpY5hC+ZfCEh55bSs2UFN3HxdF+00gIJVgrFxpJz13B/mLI/
b5GEKZaJiVdhHO5V+ZwevkRCldZIq8XjMJT5/02D0v/ULI0KGmr/BauHr/Y=

        "]]},
      Annotation[#, 
       "Charting`Private`Tag$6270#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.02], {
     PointBox[{0.6238116051159813, 0.22009753996909068`}], 
     PointBox[{-0.2651583689992401, -0.9579037659783753}], 
     PointBox[{-0.658336740224506, 0.6533257922974903}], 
     PointBox[{-3.061616997868383*^-16, 3.7493994566546446`*^-32}], 
     PointBox[{0.6583367402245062, 0.6533257922974904}], 
     PointBox[{0.2651583689992401, -0.9579037659783755}], 
     PointBox[{-0.6238116051159821, 0.2200975399690908}], 
     PointBox[{-0.6238116051159803, -0.22009753996909046`}], 
     PointBox[{0.26515836899923967`, 0.9579037659783753}], 
     PointBox[{0.6583367402245072, -0.6533257922974908}], 
     PointBox[{2.6948419387607653`*^-15, -9.900688663534256*^-31}], 
     PointBox[{-0.6583367402245051, -0.65332579229749}], 
     PointBox[{-0.26515836899923984`, 0.9579037659783753}], 
     PointBox[{0.6238116051159819, -0.22009753996909023`}]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.842599742049246*^9, 3.842599870668914*^9, {3.8426002436931543`*^9, 
   3.8426002579203*^9}, 3.8426003913716784`*^9, 3.8426007057246857`*^9, 
   3.84260092695255*^9, 3.842600970579956*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"16e4d330-2ce1-4ab7-8614-0610221f3d75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8426894835674458`*^9, 3.842689483768136*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e185f9ea-358d-4e8d-822b-6124b1bac155"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 8 Oct 2021 09:44:44\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "10", ",", "8", ",", "9", ",", "44", ",", 
           "44.069703`8.396715100827448"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.842689484083721*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"44239200-b2a6-4616-bc0c-e734e3e5c8cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "4"}], "-", 
        RowBox[{"4", 
         RowBox[{"x", "^", "2"}]}]}], ",", 
       RowBox[{
        RowBox[{"12", 
         RowBox[{"x", "^", "2"}]}], "-", "8"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thin"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2.2"}], ",", "2.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4.2"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"InfiniteLine", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "^", "4"}], "-", 
              RowBox[{"4", 
               RowBox[{"x", "^", "2"}]}]}], "/.", 
             RowBox[{"x", "\[Rule]", "a"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"4", 
               RowBox[{"x", "^", "3"}]}], "-", 
              RowBox[{"8", "x"}]}], "/.", 
             RowBox[{"x", "\[Rule]", "a"}]}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PointSize", "@", "0.02"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", "4"}], "-", 
             RowBox[{"4", 
              RowBox[{"x", "^", "2"}]}]}], "/.", 
            RowBox[{"x", "\[Rule]", "a"}]}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "3"}], "]"}]}], "}"}], ",", 
     RowBox[{"-", "2.2"}], ",", "2.2"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8426893767317247`*^9, 3.8426894707447367`*^9}, {
  3.8426895246656322`*^9, 3.8426895409886007`*^9}, {3.842689596390565*^9, 
  3.842689671545288*^9}, {3.842689769097637*^9, 3.842689773815352*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a88606ea-8fd4-423d-ac75-f58926f13687"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = Rational[2, 3]^Rational[1, 2], 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], Rational[2, 3]^Rational[1, 2]}, -2.2, 2.2}}, 
    Typeset`size$$ = {360., {110., 114.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = Rational[2, 3]^Rational[1, 2]}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`x^4 - 4 $CellContext`x^2, 12 $CellContext`x^2 - 
         8}, {$CellContext`x, -2, 2}, 
        PlotStyle -> {{Blue, Thick}, {Red, Thin}}, 
        PlotRange -> {{-2.2, 2.2}, {-4.2, 5}}, Epilog -> {
          InfiniteLine[{$CellContext`a$$, 
            
            ReplaceAll[$CellContext`x^4 - 
             4 $CellContext`x^2, $CellContext`x -> $CellContext`a$$]}, {1, 
            ReplaceAll[
            4 $CellContext`x^3 - 
             8 $CellContext`x, $CellContext`x -> $CellContext`a$$]}], 
          PointSize[0.02], 
          Point[{$CellContext`a$$, 
            
            ReplaceAll[$CellContext`x^4 - 
             4 $CellContext`x^2, $CellContext`x -> $CellContext`a$$]}]}], 
      "Specifications" :> {{{$CellContext`a$$, Rational[2, 3]^
          Rational[1, 2]}, -2.2, 2.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {155., 161.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8426894026914473`*^9, 3.842689415741282*^9}, {
   3.842689471052464*^9, 3.842689486083273*^9}, 3.842689541633203*^9, {
   3.8426896208289633`*^9, 3.84268967180871*^9}, {3.842689767312806*^9, 
   3.842689774150139*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"69265f7b-4c40-4786-8014-6cae9927dbbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.843309748431862*^9, 3.8433097487842073`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ee0f2856-f231-44e0-b6ce-9d3bdc763550"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 15 Oct 2021 14:02:29\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "10", ",", "15", ",", "14", ",", "2", ",", 
           "29.182113`8.217691716066515"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.843309749193344*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6d302482-d297-4c89-9433-1110b82045fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"n", ",", "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"E", "^", "x"}], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "n"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"E", "^", "x"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "n"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "0"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "15"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.843309761478421*^9, 3.843309890717361*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a35f1485-8acc-406a-901f-58a85b15c8d7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "0"},
    {"1", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "1"},
    {"2", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "2"},
    {"3", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "2"},
    {"4", 
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "0"},
    {"5", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], 
     RowBox[{"-", "4"}]},
    {"6", 
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], 
     RowBox[{"-", "8"}]},
    {"7", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], 
     RowBox[{"-", "8"}]},
    {"8", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "0"},
    {"9", 
     RowBox[{
      RowBox[{"16", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "16"},
    {"10", 
     RowBox[{"32", " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "32"},
    {"11", 
     RowBox[{
      RowBox[{"32", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"32", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "32"},
    {"12", 
     RowBox[{
      RowBox[{"-", "64"}], " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "0"},
    {"13", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "64"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"64", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], 
     RowBox[{"-", "64"}]},
    {"14", 
     RowBox[{
      RowBox[{"-", "128"}], " ", 
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], 
     RowBox[{"-", "128"}]},
    {"15", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "128"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"128", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], 
     RowBox[{"-", "128"}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.843309858662322*^9, 3.84330989307659*^9}},
 CellLabel->
  "Out[4]//TableForm=",ExpressionUUID->"850f391b-9aa4-44b7-aeed-24f95e66fb7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.843570661661757*^9, 3.843570661948636*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"22ec70a6-5b02-44bf-a581-9fca82960a0e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 18 Oct 2021 14:31:02\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "10", ",", "18", ",", "14", ",", "31", ",", 
           "2.239044`7.102637616704174"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8435706622556*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"925e523c-cf18-4c6e-bdc7-799ec9c1b66d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"n", ",", "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "n"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"x", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "n"}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "0"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.843570668532716*^9, 3.8435706784021387`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"16e81b81-0c11-4365-a6e0-21b105bd201e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "0"},
    {"1", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}], "0"},
    {"2", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "2"},
    {"3", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "0"},
    {"4", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], 
     RowBox[{"-", "4"}]},
    {"5", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "0"},
    {"6", 
     RowBox[{
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "6"},
    {"7", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"7", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "0"},
    {"8", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], 
     RowBox[{"-", "8"}]},
    {"9", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"9", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "0"},
    {"10", 
     RowBox[{
      RowBox[{"10", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "-", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "10"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.843570675891473*^9, 3.8435706786913557`*^9}},
 CellLabel->
  "Out[3]//TableForm=",ExpressionUUID->"98c63073-6cb0-43c9-8437-5eb2b5d6f06f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843571118694416*^9, 3.843571153246928*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e3092adf-1bec-42bd-8fc2-09e5bc99eb96"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox[
    SuperscriptBox["x", "2"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "120"], "-", 
   FractionBox[
    SuperscriptBox["x", "6"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "362880"], "-", 
   FractionBox[
    SuperscriptBox["x", "10"], "39916800"], "+", 
   FractionBox[
    SuperscriptBox["x", "12"], "6227020800"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "13"],
    SeriesData[$CellContext`x, 0, {}, 0, 13, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 6], 0, 
    Rational[1, 120], 0, 
    Rational[-1, 5040], 0, 
    Rational[1, 362880], 0, 
    Rational[-1, 39916800], 0, 
    Rational[1, 6227020800]}, 0, 13, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.843571151272161*^9, 3.843571153445073*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"d871a2bf-6128-4d3d-9cf1-31b5ccb31360"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"n", "+", "1"}], ")"}]}], " ", 
           RowBox[{
            RowBox[{"x", "^", 
             RowBox[{"(", 
              RowBox[{"2", "n"}], ")"}]}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "n"}], "-", "1"}], ")"}], "!"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "a", ",", "1"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"-", "3"}], "Pi"}], ",", 
        RowBox[{"3", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "Pi"}], ",", 
           RowBox[{"3", "Pi"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "9"}], "}"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "12", ",", "1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.843571568144788*^9, 3.8435716579860497`*^9}, {
  3.8435717320406322`*^9, 3.8435717945048037`*^9}, {3.843571846239382*^9, 
  3.8435718534013243`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"76fa4511-2740-4cd4-b923-2a481c4a752f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 12, 1}}, Typeset`size$$ = {
    360., {109., 114.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`x Sin[$CellContext`x], 
         Sum[(-1)^($CellContext`n + 1) ($CellContext`x^(2 $CellContext`n)/
           Factorial[2 $CellContext`n - 1]), {$CellContext`n, 
           1, $CellContext`a$$, 1}]}, {$CellContext`x, (-3) Pi, 3 Pi}, 
        PlotRange -> {{(-3) Pi, 3 Pi}, {-5, 9}}], 
      "Specifications" :> {{$CellContext`a$$, 1, 12, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {154., 160.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8435715765037947`*^9, 3.843571596166424*^9}, {
  3.8435716455090923`*^9, 3.843571658243618*^9}, {3.8435717762661953`*^9, 
  3.843571819024379*^9}, {3.8435718509903717`*^9, 3.843571853679365*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"017b884b-3b94-48ab-b56a-fb1ebb05c306"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8435711450671253`*^9, 
  3.8435711458212442`*^9}},ExpressionUUID->"76a2bc4a-646d-47e1-8cf3-\
a20b2a3ecd97"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8453853647578583`*^9, 3.845385365043285*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"dd1ea29f-a4db-4f1a-88dd-7bfd0bd8997c"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 8 Nov 2021 13:36:05\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "11", ",", "8", ",", "13", ",", "36", ",", 
           "5.35929`7.481682245864644"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8453853653744307`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"aa749a75-a4bc-4eb9-a701-37820844e350"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", ".1"}], ",", "6.3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Red", ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Pi", ",", 
          RowBox[{"2", "/", "Pi"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
      "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.845385531559103*^9, 3.845385590103277*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f139d6e6-979a-441f-9cb9-55edccbd4adf"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
q3SSxGEKR16+yCcQ50mzWcAUibesvst9XUCg2MO53hs5JM5XFPfufEqgIJuZ
bze4JD6stPP+n2ICbQpfrqQ5TeLlype6GKUEWrXcVrmJ8o014xbzlQS6SvO0
/DVDYlMV9YhF1QQ6nDx92m2WxHMqHtUSLwgE7XTrb5TLVTPG5TCVn4q4nh1z
JD65tmO90ksCJTgdWFtEWWWdxBH1VwS6MbdLVWyeytM683SdRgIl8Tj9OEI5
SS38s1ETgd4yj+woobxrfbXozrcEEvRzPMqlvFh9wnTPewKNeamA3gKJ69Q1
Lh5oJpBYQ/X745QDNTzL3Fuo+clbIpZKWUszk3m8lZoHJxEhTHlA89sa/3YC
DZgXlnynfG8DzTX0C4H8BUakRygf0LJIiuog0EGTdxtmKRMbIz7GdhLIsnfL
PPV+gd9trBFK+06ghiHD8BnKEdpso5xuAumGdVSzKG/bpBnwpIc637jw407K
E5u8isp/E0ilumtXDeWCzVn9+C/Vv9N78pMoe+h0rnr7j0CKXwOqjlKW1yUc
2voJlN3qGEa9X+Cvupa3vw8SSOK04Ow4df9rI3pudzEItPimyYNCykEtZ2M7
mQT6rdtif4jyu+WL476RBBp/Ui1Bva/hFUfT4zpGCRSuKd9e+P9+lGrFfx0n
UPXI0gxzypinMf4Lm0C5a3N8f1D9O3yHmdDOpepdpr1piOp36b9LiW0zBCpx
9lrtQVlQWzqpdY5AEQrVst+ofOS9M0pu4aUjCz8bpYdUnqal25M/8tORq06X
Li9lS3evlGZBOqrwW2lnR+WPNRNz570wHalkBRb8ofKKdiqnvltCR4tSh/tX
Uo5NqEx9u5SOHml80tjDJvFmjd9pTTQ6SlxS2plJ5T0y6Fz6azodDRgpoOox
Enc0Ct9tlKKjie72Zx+p+Tjvqp3xSo6OumbnK7qpefqQ/zqjfjkd2cCYVSeL
xCunDmS+XElHCWeUWR+o+auLicjCq+noBdfWPp2a10UvP9+vXkdHPddzGr9T
8+6w9Fh21Xo6mgy0bkj+R82P41z2cw06uuQd0WrZS2KbsTUPKjbSkfrcH9n0
39R8KwXklmyho6OinCPd36l5PbUkr9iAjvxPhf92pPaPXk1m3jNDOgoK9zz1
8RuJu+zePCoyps53p6ku8wuJFSLlCh6b05Ga1Yb//n4k8Zm2JwX5lnRkL1u9
X4Haf6/ktz95ZE1Hmx4zQva9J7FnhXdh7h6qnhpCS/OaqHwNVD/NdqSjKaMV
OixMYn1L17K0Y1T95BWUFqh9m5Y9N9foQ0d73KTP3aD28fxMutnICTpqumoS
KpFP4oaC7x2mZ+goO0kTz+aQeLeY4zTzPB2N7rTj80wl8dHWvYBu0BFzXG1H
cASJ368bv+p9i069XX8LOhdGYs3wuE8Jt+loa1uur8dFKv/arYcGE+goTNas
dF0AtZ8SbC7H3aXq32GRaeJN4pT95m97C+nIbX/23xc2JJ4pGqCJP6OjcCeh
LiVL6v9jcdSBLSVUfbPVHoTtoPbr89eMmxV0NC8890IekfjpMlMxvTo6Ev5p
LsvUovZht9Hea610pCNhd7xdgsRc983dGhN0ZG07JtDyloUrVfdrbpqkox+t
Hxa7N7JwICMoVJ9DR0cCNmqTdSzMOYNXm8zS0f0OlWmygvIlC08HAUk0HkYL
jX9AOdONDJeUROnPRj3cQ1l46vsN3m+bJdFcXY3DBg0WLs8ssu3WlUSnRpSO
vlNlYX/3tuw/+pJIYsG60UWRhSeHZMyY2yRR3W7/kydkKHPvR/P9J4nkX9hn
a/FSlnlO19gnieiWVR072pmYvfffmvBzksjxwonPr3yZ+LUSHRcHSCLj0l8b
/3ozcco4cvgbJInWNRjUcqnnq63x6dGmIZJo0JHtI2rPxGFte0mhq5JIKW+l
/ZstTCy6p77yeook0lglb5K+MIwVbTItE6slUYYJe+rV5WG8e6ejbx6vFDoQ
0iSYfI6Bq9z/tH3kl0Ie3vs31R5n4DWhPpvZglKIu7XMr9udgafLLk4Zi0gh
GalVhgK2DJyjdP/id0IK7bZbojGuwcCc+aFrYspSyJ7vebtD7xC+VxZ8389M
Cu3U8BCytxzCY4pZ7ei6FIqsn0wq4xvELZ9f2qctkUaq/NcW393Th0WuP/zR
lCSNFgeZ+4Ty/sVhsp4R5bIyyA3PyFRr9WDDGxwkkyKDiitlWDP837CjgA2v
haIsqmarunnda8FP94b8McqWRYmp+Qd8UjGOl8koCXkgi6Ks1i1cX4Kx//cX
l2tzZVHShtS2+8G1eJv7nIpRgSyqM5SpLnF9gd+eCfYxLJNFRvORl70Uq/Gf
2PMTBk2yKOxBTZxRXjmW/OQvtIUhi9wvzLe3uDzGU/FJHYFMWeS09qaTlVE+
7tpfnldJyiKbdpxUJ/8IZ/WwLfQnZJHGzsb42J6HWIP0i9Gbk0UWSxtSe9zu
YzOxs7K64nLIa6yKOdkQh9e1xQ2eo8mhu8qulQZXbmPRpOKqMroc6iv2jJ+M
voHbV44568jKobnNzhu/X4/Abhq+9zavlkPDnhL6B77uxCajt8/4KVHe0W3S
G7sfVMqempSukUMlugMyAU0nYHjbyL9NanKIPfO7QcY3DFp4JCrOqsuh/A6e
wicjl6G4YUNUiaYcUhwX5Ww7fQ2SonY5jmvJIfld/3QbyJsQZHVKbdMmOVRb
qbOQpRcL/wN5Id7w
       "]]},
     Annotation[#, "Charting`Private`Tag$3286#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.1, 6.3}, {-0.9999999966959278, 0.9999997190768769}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Prolog->{
    RGBColor[1, 0, 0], 
    RectangleBox[{0, 0}, 
     NCache[{Pi, 2/Pi}, {3.141592653589793, 0.6366197723675814}]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.845385545680601*^9, {3.845385583522571*^9, 3.845385590457011*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"4527e200-abdd-4ea5-a84c-196bcb14b6b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.845476176162136*^9, 3.845476178280802*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f53e2dd9-bd36-4078-89de-ea8ad018af26"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 9 Nov 2021 14:49:38\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "11", ",", "9", ",", "14", ",", "49", ",", 
           "38.580228`8.338939768688206"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.845476178598936*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"91904f4d-471f-412a-a11d-4a14de009235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xValues", " ", "=", " ", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Values", "@", 
    RowBox[{"NSolve", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"7", "x"}], "]"}], "/", "7"}]}], ",", "x"}], "]"}], 
       "\[Equal]", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "x", "]"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"7", "x"}], "]"}], "/", "7"}]}], "/.", 
            RowBox[{"x", "\[Rule]", "2.8"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "x", "]"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"7", "x"}], "]"}], "/", "7"}]}], "/.", 
            RowBox[{"x", "\[Rule]", "0.05"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2.8", "-", "0.05"}], ")"}]}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{"0.05", "\[LessEqual]", "x", "\[LessEqual]", "2.8"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.845476380764407*^9, 3.845476535559466*^9}, {
  3.8454766392066307`*^9, 3.845476673624321*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d9a8defe-6121-43ed-b872-4915397bfc01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3690409988881266`", ",", "0.8350207829787499`", ",", 
   "1.1171065593058171`", ",", "1.6392020854909157`", ",", 
   "1.8989491728557226`", ",", "2.4011384549273855`", ",", 
   "2.7221384388934244`"}], "}"}]], "Output",
 CellChangeTimes->{{3.845476517531814*^9, 3.845476535731268*^9}, {
  3.845476651113309*^9, 3.845476674379107*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"831abbb1-897f-4647-ad84-1964c237544c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"7", "x"}], "]"}], "/", "7"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".1"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.05", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "x", "]"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"7", "x"}], "]"}], "/", "7"}]}], "/.", 
            RowBox[{"x", "\[Rule]", "0.05"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"2.8", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", "x", "]"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"7", "x"}], "]"}], "/", "7"}]}], "/.", 
            RowBox[{"x", "\[Rule]", "2.8"}]}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], ",", 
      "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"InfiniteLine", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"7", "x"}], "]"}], "/", "7"}]}], "/.", 
              RowBox[{"x", "\[Rule]", "#"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", "x", "]"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"3", "x"}], "]"}], "/", "3"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"5", "x"}], "]"}], "/", "5"}], "+", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{"7", "x"}], "]"}], "/", "7"}]}], ",", "x"}], "]"}],
               "/.", 
              RowBox[{"x", "\[Rule]", "#"}]}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
        "xValues"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.845476179262867*^9, 3.845476317082041*^9}, 
   3.845476619695547*^9, {3.845476682990676*^9, 3.845476717529955*^9}, {
   3.8454767488937407`*^9, 3.8454768407353277`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8e9c1836-9431-4fe8-9bd1-764e1ff8a773"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
06/e5PnAzn3Pjf9tFETvOt3+//3y/wEB3/+L
       "]]},
     Annotation[#, "Charting`Private`Tag$5789#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[0, 1, 0], 
    Thickness[Large], 
    Dashing[{Small, Small}], 
    LineBox[{{0.05, 0.19825807301118048`}, {2.8, 0.9153992982864205}}], 
    RGBColor[1, 0, 0], {
     TagBox[
      ConicHullRegionBox[{0.3690409988881266, 
       0.9270554032573433}, {{1, 0.2607786273728141}}], "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[{0.8350207829787499, 
       0.707031437204138}, {{1, 0.2607786273728149}}], "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[{1.1171065593058171`, 
       0.8437277567125925}, {{1, 0.26077862737281465`}}], "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[{1.6392020854909157`, 
       0.7329475797158482}, {{1, 0.2607786273728163}}], "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[{1.8989491728557226`, 
       0.8430887893777648}, {{1, 0.2607786273728142}}], "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[{2.4011384549273855`, 
       0.7062023633040074}, {{1, 0.2607786273728163}}], "InfiniteLine"], 
     TagBox[
      ConicHullRegionBox[{2.7221384388934244`, 
       0.9265137270847753}, {{1, 0.2607786273728141}}], "InfiniteLine"]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {-0.1, 1.1}}, {{0, 3.141592653589793}, {-0.1, 1.1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.845476295478525*^9, 3.845476317359222*^9}, 
   3.845476841419446*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"6c22d98b-bca2-4ae8-834f-286df62d5498"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.846596139087454*^9, 3.846596139497218*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4cc00154-e052-4357-ab75-fe885053e463"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 22 Nov 2021 13:55:39\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2021", ",", "11", ",", "22", ",", "13", ",", "55", ",", 
           "39.745998`8.351868384873189"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.846596139762364*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"823665a5-9510-4028-9d53-88b485686314"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "x"}], "/", "d"}], ")"}]}], 
          RowBox[{"Cos", "[", 
           RowBox[{"c", " ", "x"}], "]"}]}], ",", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "x"}], "/", "d"}], ")"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "x"}], "/", "d"}], ")"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "12"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Filling", "\[Rule]", "Axis"}]}], "\[IndentingNewLine]", "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "/", "d"}], ")"}]}], 
        RowBox[{"Cos", "[", 
         RowBox[{"c", " ", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "12"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "7"}], "}"}], ",", "1", ",", "10", ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "2"}], "}"}], ",", "1", ",", "10", ",", "1"}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8465961411136312`*^9, 3.846596152354536*^9}, {
   3.846596198801071*^9, 3.846596263599972*^9}, {3.846596409774724*^9, 
   3.84659644463103*^9}, 
   3.8465978459479*^9},ExpressionUUID->"274c5212-7de0-4abf-b6e7-a3823d9e863c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 7, $CellContext`d$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`c$$], 7}, 1, 10, 1}, {{
       Hold[$CellContext`d$$], 2}, 1, 10, 1}}, Typeset`size$$ = {
    360., {130., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c$$ = 7, $CellContext`d$$ = 2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Labeled[
        Plot[{
         E^((-$CellContext`x)/$CellContext`d$$) 
          Cos[$CellContext`c$$ $CellContext`x], 
          E^((-$CellContext`x)/$CellContext`d$$), -
          E^((-$CellContext`x)/$CellContext`d$$)}, {$CellContext`x, -1, 12}, 
         Filling -> Axis], 
        NIntegrate[
        E^((-$CellContext`x)/$CellContext`d$$) 
         Cos[$CellContext`c$$ $CellContext`x], {$CellContext`x, -1, 12}]], 
      "Specifications" :> {{{$CellContext`c$$, 7}, 1, 10, 
         1}, {{$CellContext`d$$, 2}, 1, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {180., 186.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8465962638528023`*^9, {3.846596416388159*^9, 3.846596438047037*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"a3231cfb-9b19-4494-ac35-f8acb854343c"]
}, Open  ]]
},
WindowSize->{808, 692},
WindowMargins->{{236, Automatic}, {Automatic, 4}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"81d41167-21e3-4a95-a15f-106b82c15ba3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 188, 3, 35, "Text",ExpressionUUID->"4cc981ba-38c3-47b4-ac0a-607fac420d0a"],
Cell[CellGroupData[{
Cell[771, 27, 173, 2, 30, "Input",ExpressionUUID->"c2385dd1-4b1f-4952-a43b-6a0d906457d3"],
Cell[947, 31, 734, 19, 42, "Output",ExpressionUUID->"5c731204-ee23-49de-b7e7-6f094eda632e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1718, 55, 331, 8, 30, "Input",ExpressionUUID->"984a38e8-db61-4e6a-b03a-3c42ba5f3ac5"],
Cell[2052, 65, 218, 3, 34, "Output",ExpressionUUID->"9f9cd849-5c0f-4ce1-98fb-a6913c98812c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2307, 73, 879, 22, 136, "Input",ExpressionUUID->"d33a7bc0-17ef-4cdc-a77c-2c46d0c97d18"],
Cell[3189, 97, 1104, 21, 77, "Output",ExpressionUUID->"46ab67ec-174b-4208-8e67-1c598262a66b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4330, 123, 348, 7, 30, "Input",ExpressionUUID->"3b8e4cb3-c233-4301-b35b-e5faf10339b4"],
Cell[4681, 132, 208, 3, 34, "Output",ExpressionUUID->"22766656-8199-4058-8241-30aeb482107f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4926, 140, 317, 6, 30, "Input",ExpressionUUID->"03f33b46-996f-4f4a-a98a-947c6afb0919"],
Cell[5246, 148, 189, 2, 34, "Output",ExpressionUUID->"8c79a2c9-905e-4426-8798-1ecc412c88cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5472, 155, 1614, 40, 283, "Input",ExpressionUUID->"2ae47081-dc52-46f9-968b-4d301134558c"],
Cell[7089, 197, 41023, 694, 240, "Output",ExpressionUUID->"6dddcb93-ad66-4bc1-a061-03c7178b42bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48149, 896, 173, 2, 30, "Input",ExpressionUUID->"498f623f-84cf-40ee-91b6-0748e5298593"],
Cell[48325, 900, 735, 19, 42, "Output",ExpressionUUID->"af284897-4bd5-4ed1-8d20-7da1efd53002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49097, 924, 294, 7, 30, "Input",ExpressionUUID->"96ad1ff4-bb96-4d3a-a309-95df88451bbc"],
Cell[49394, 933, 219, 4, 34, "Output",ExpressionUUID->"afb35b55-0140-4ac6-b264-9476a92e9154"]
}, Open  ]],
Cell[49628, 940, 175, 3, 35, "Text",ExpressionUUID->"7c23168f-e7e0-4b86-aef0-8fb1f8a04e50"],
Cell[CellGroupData[{
Cell[49828, 947, 888, 21, 157, "Input",ExpressionUUID->"ea669792-0cca-49a8-938d-4cf0fe783787"],
Cell[50719, 970, 1132, 36, 196, "Output",ExpressionUUID->"3e5a134d-3cd6-4465-8065-6c34a952b5a8"]
}, Open  ]],
Cell[51866, 1009, 738, 18, 115, "Input",ExpressionUUID->"a16bf1ac-aad8-4ac5-804d-e4a2edb5576f"],
Cell[52607, 1029, 1018, 24, 178, "Input",ExpressionUUID->"ae5f685c-727a-40b0-9d7f-a2e87a971f98"],
Cell[CellGroupData[{
Cell[53650, 1057, 288, 5, 30, "Input",ExpressionUUID->"4eb09704-2153-4ccc-b1c3-133f0a047934"],
Cell[53941, 1064, 33244, 566, 245, "Output",ExpressionUUID->"6f5e98f5-976f-4e5d-82bb-0ad92568add3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87222, 1635, 173, 2, 30, "Input",ExpressionUUID->"f5627874-6df4-4d09-ba52-2753b07e44be"],
Cell[87398, 1639, 734, 19, 42, "Output",ExpressionUUID->"ff6d76d7-ce8a-4f54-b542-af827bb26deb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88169, 1663, 647, 16, 30, "Input",ExpressionUUID->"fdbbca42-0631-4e5f-a8fb-ff47d09ea2e0"],
Cell[88819, 1681, 324, 7, 51, "Output",ExpressionUUID->"18ee955b-58f3-44f6-b328-e8b7c16bde20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89180, 1693, 2623, 70, 262, "Input",ExpressionUUID->"2351b22b-3a9d-4197-94fd-124add0070d1"],
Cell[91806, 1765, 25985, 474, 432, "Output",ExpressionUUID->"11e66999-b6e1-4558-bbf7-eebf169a9282"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117828, 2244, 175, 2, 30, "Input",ExpressionUUID->"f46f5fc8-f233-4fa9-bfeb-75f4e421f867"],
Cell[118006, 2248, 734, 19, 42, "Output",ExpressionUUID->"7b096fea-6585-45c0-94e7-68eafbbbdccf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118777, 2272, 3151, 73, 493, "Input",ExpressionUUID->"e9d3acf4-7371-4198-822a-f8dd3ac16961"],
Cell[121931, 2347, 49591, 853, 366, "Output",ExpressionUUID->"16e4d330-2ce1-4ab7-8614-0610221f3d75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171559, 3205, 175, 2, 30, "Input",ExpressionUUID->"e185f9ea-358d-4e8d-822b-6124b1bac155"],
Cell[171737, 3209, 733, 19, 42, "Output",ExpressionUUID->"44239200-b2a6-4616-bc0c-e734e3e5c8cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172507, 3233, 2934, 82, 325, "Input",ExpressionUUID->"a88606ea-8fd4-423d-ac75-f58926f13687"],
Cell[175444, 3317, 2591, 53, 335, "Output",ExpressionUUID->"69265f7b-4c40-4786-8014-6cae9927dbbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178072, 3375, 175, 2, 30, "Input",ExpressionUUID->"ee0f2856-f231-44e0-b6ce-9d3bdc763550"],
Cell[178250, 3379, 735, 19, 42, "Output",ExpressionUUID->"6d302482-d297-4c89-9433-1110b82045fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179022, 3403, 1107, 28, 220, "Input",ExpressionUUID->"a35f1485-8acc-406a-901f-58a85b15c8d7"],
Cell[180132, 3433, 4143, 125, 330, "Output",ExpressionUUID->"850f391b-9aa4-44b7-aeed-24f95e66fb7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184312, 3563, 173, 2, 30, "Input",ExpressionUUID->"22ec70a6-5b02-44bf-a581-9fca82960a0e"],
Cell[184488, 3567, 733, 19, 42, "Output",ExpressionUUID->"925e523c-cf18-4c6e-bdc7-799ec9c1b66d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185258, 3591, 1048, 26, 220, "Input",ExpressionUUID->"16e81b81-0c11-4365-a6e0-21b105bd201e"],
Cell[186309, 3619, 2461, 83, 224, "Output",ExpressionUUID->"98c63073-6cb0-43c9-8437-5eb2b5d6f06f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188807, 3707, 342, 8, 30, "Input",ExpressionUUID->"e3092adf-1bec-42bd-8fc2-09e5bc99eb96"],
Cell[189152, 3717, 983, 29, 54, "Output",ExpressionUUID->"d871a2bf-6128-4d3d-9cf1-31b5ccb31360"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190172, 3751, 1953, 52, 262, "Input",ExpressionUUID->"76fa4511-2740-4cd4-b923-2a481c4a752f"],
Cell[192128, 3805, 2012, 39, 333, "Output",ExpressionUUID->"017b884b-3b94-48ab-b56a-fb1ebb05c306"]
}, Open  ]],
Cell[194155, 3847, 156, 3, 30, "Input",ExpressionUUID->"76a2bc4a-646d-47e1-8cf3-a20b2a3ecd97"],
Cell[CellGroupData[{
Cell[194336, 3854, 175, 2, 30, "Input",ExpressionUUID->"dd1ea29f-a4db-4f1a-88dd-7bfd0bd8997c"],
Cell[194514, 3858, 734, 19, 42, "Output",ExpressionUUID->"aa749a75-a4bc-4eb9-a701-37820844e350"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195285, 3882, 822, 19, 178, "Input",ExpressionUUID->"f139d6e6-979a-441f-9cb9-55edccbd4adf"],
Cell[196110, 3903, 10801, 198, 234, "Output",ExpressionUUID->"4527e200-abdd-4ea5-a84c-196bcb14b6b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206948, 4106, 173, 2, 30, "Input",ExpressionUUID->"f53e2dd9-bd36-4078-89de-ea8ad018af26"],
Cell[207124, 4110, 734, 19, 42, "Output",ExpressionUUID->"91904f4d-471f-412a-a11d-4a14de009235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207895, 4134, 2225, 58, 136, "Input",ExpressionUUID->"d9a8defe-6121-43ed-b872-4915397bfc01"],
Cell[210123, 4194, 457, 9, 34, "Output",ExpressionUUID->"831abbb1-897f-4647-ad84-1964c237544c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210617, 4208, 4306, 109, 472, "Input",ExpressionUUID->"8e9c1836-9431-4fe8-9bd1-764e1ff8a773"],
Cell[214926, 4319, 23241, 406, 230, "Output",ExpressionUUID->"6c22d98b-bca2-4ae8-834f-286df62d5498"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238204, 4730, 173, 2, 30, "Input",ExpressionUUID->"4cc00154-e052-4357-ab75-fe885053e463"],
Cell[238380, 4734, 736, 19, 42, "Output",ExpressionUUID->"823665a5-9510-4028-9d53-88b485686314"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239153, 4758, 2060, 57, 262, "Input",ExpressionUUID->"274c5212-7de0-4abf-b6e7-a3823d9e863c"],
Cell[241216, 4817, 2155, 45, 385, "Output",ExpressionUUID->"a3231cfb-9b19-4494-ac35-f8acb854343c"]
}, Open  ]]
}
]
*)

